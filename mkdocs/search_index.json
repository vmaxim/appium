{
    "docs": [
        {
            "location": "/README/",
            "text": "docs\n\n\ndoc site\n\n\nFormatted doc is \nhere\n.\n\n\ndoc translation\n\n\nAt the moment we are focusing on improving the english documentation. When it \nis done we are planning to setup proper i18n l10n processes so that it is \neasier for people to help in translating the documentation.",
            "title": "README"
        },
        {
            "location": "/README/#docs",
            "text": "",
            "title": "docs"
        },
        {
            "location": "/README/#doc-site",
            "text": "Formatted doc is  here .",
            "title": "doc site"
        },
        {
            "location": "/README/#doc-translation",
            "text": "At the moment we are focusing on improving the english documentation. When it \nis done we are planning to setup proper i18n l10n processes so that it is \neasier for people to help in translating the documentation.",
            "title": "doc translation"
        },
        {
            "location": "/cn/README/",
            "text": "The latest doc in Chinese, maintained by \nTesterHome Appium \u4e2d\u6587\u6587\u6863\u5c0f\u7ec4\n.",
            "title": "README"
        },
        {
            "location": "/cn/about-appium/appium-clients/",
            "text": "\u652f\u6301 Appium \u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\u5217\u8868\n\n\n\u8fd9\u4e9b\u5e93\u5c01\u88c5\u4e86\u6807\u51c6\u7684 Selenium \u5ba2\u6237\u7aef\uff0c\u63d0\u4f9b\u4e86\u6240\u6709 \nJSON Wire protocol\n \u6307\u5b9a\u7684\u5e38\u89c4 selenium \u547d\u4ee4\uff0c\u989d\u5916\u6dfb\u52a0\u64cd\u63a7\u79fb\u52a8\u8bbe\u5907\u76f8\u5173\u7684\u547d\u4ee4\uff0c\u4f8b\u5982 \n\u591a\u70b9\u89e6\u63a7\u624b\u52bf\n \u548c \n\u5c4f\u5e55\u65b9\u5411\n\u3002\n\n\nAppium \u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\u5b9e\u73b0\u4e86 \nMobile JSON Wire Protocol\n\uff08\u4e00\u4e2a\u57fa\u4e8e\u6807\u51c6\u5b98\u65b9\u534f\u8bae\u7684\u6269\u5c55\u8349\u6848\uff09\u548c \nW3C Webdriver \u89c4\u683c\n\uff08\u4e00\u4e2a\u65e0\u5173\u4f20\u8f93\u7684\u81ea\u52a8\u5316\u89c4\u683c\uff1b\u5b9a\u4e49 MultiAction API \u7684\u5730\u65b9\uff09\u4e2d\u7684\u5143\u7d20\u3002\n\n\nAppium \u670d\u52a1\u7aef\u81ea\u5b9a\u4e49\u4e86\u57fa\u4e8e\u5b98\u65b9\u534f\u8bae\u7684\u6269\u5c55\uff0c\u5e2e\u52a9 Appium \u7528\u6237\u4f7f\u7528\u5404\u79cd\u8bbe\u5907\u64cd\u4f5c\uff08\u4f8b\u5982\u5728\u6d4b\u8bd5\u4f1a\u8bdd\u8fc7\u7a0b\u4e2d\u5b89\u88c5/\u5378\u8f7d\u5e94\u7528\uff09\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981 Appium \u7279\u5b9a\u7684\u5ba2\u6237\u7aef\uff0c\u800c\u4e0d\u53ea\u662f\u201c\u539f\u5473\u201d\u7684 Selenium \u5ba2\u6237\u7aef\u3002\u5f53\u7136\uff0cAppium \u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\u53ea\u589e\u52a0\u529f\u80fd\uff08\u5176\u5b9e\u5b83\u4eec\u53ea\u662f\u6269\u5c55\u4e86\u6807\u51c6 Selenium \u5ba2\u6237\u7aef\uff09\uff0c\u6240\u4ee5\u5b83\u4eec\u4ecd\u7136\u9002\u7528\u4e8e\u5e38\u89c4\u7684 Selenium \u4f1a\u8bdd\u3002\n\n\n\n\n\n\n\n\n\u8bed\u8a00/\u6846\u67b6\n\n\nGithub \u4ed3\u5e93\u548c\u5b89\u88c5\u6307\u5357\n\n\n\n\n\n\n\n\n\n\nRuby\n\n\nhttps://github.com/appium/ruby_lib\n\n\n\n\n\n\nPython\n\n\nhttps://github.com/appium/python-client\n\n\n\n\n\n\nJava\n\n\nhttps://github.com/appium/java-client\n\n\n\n\n\n\nJavaScript (Node.js)\n\n\nhttps://github.com/admc/wd\n\n\n\n\n\n\nObjective C\n\n\nhttps://github.com/appium/selenium-objective-c\n\n\n\n\n\n\nPHP\n\n\nhttps://github.com/appium/php-client\n\n\n\n\n\n\nC# (.NET)\n\n\nhttps://github.com/appium/appium-dotnet-driver\n\n\n\n\n\n\nRobotFramework\n\n\nhttps://github.com/jollychang/robotframework-appiumlibrary\n\n\n\n\n\n\n\n\n\u7531 @\u9ed1\u6c34 \u7ffb\u8bd1\uff0cTesterHome \u793e\u533a id\uff1asanlengjingvv\n\n\n@lihuazhang \u6821\u9a8c",
            "title": "Appium clients"
        },
        {
            "location": "/cn/about-appium/appium-clients/#appium",
            "text": "\u8fd9\u4e9b\u5e93\u5c01\u88c5\u4e86\u6807\u51c6\u7684 Selenium \u5ba2\u6237\u7aef\uff0c\u63d0\u4f9b\u4e86\u6240\u6709  JSON Wire protocol  \u6307\u5b9a\u7684\u5e38\u89c4 selenium \u547d\u4ee4\uff0c\u989d\u5916\u6dfb\u52a0\u64cd\u63a7\u79fb\u52a8\u8bbe\u5907\u76f8\u5173\u7684\u547d\u4ee4\uff0c\u4f8b\u5982  \u591a\u70b9\u89e6\u63a7\u624b\u52bf  \u548c  \u5c4f\u5e55\u65b9\u5411 \u3002  Appium \u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\u5b9e\u73b0\u4e86  Mobile JSON Wire Protocol \uff08\u4e00\u4e2a\u57fa\u4e8e\u6807\u51c6\u5b98\u65b9\u534f\u8bae\u7684\u6269\u5c55\u8349\u6848\uff09\u548c  W3C Webdriver \u89c4\u683c \uff08\u4e00\u4e2a\u65e0\u5173\u4f20\u8f93\u7684\u81ea\u52a8\u5316\u89c4\u683c\uff1b\u5b9a\u4e49 MultiAction API \u7684\u5730\u65b9\uff09\u4e2d\u7684\u5143\u7d20\u3002  Appium \u670d\u52a1\u7aef\u81ea\u5b9a\u4e49\u4e86\u57fa\u4e8e\u5b98\u65b9\u534f\u8bae\u7684\u6269\u5c55\uff0c\u5e2e\u52a9 Appium \u7528\u6237\u4f7f\u7528\u5404\u79cd\u8bbe\u5907\u64cd\u4f5c\uff08\u4f8b\u5982\u5728\u6d4b\u8bd5\u4f1a\u8bdd\u8fc7\u7a0b\u4e2d\u5b89\u88c5/\u5378\u8f7d\u5e94\u7528\uff09\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u9700\u8981 Appium \u7279\u5b9a\u7684\u5ba2\u6237\u7aef\uff0c\u800c\u4e0d\u53ea\u662f\u201c\u539f\u5473\u201d\u7684 Selenium \u5ba2\u6237\u7aef\u3002\u5f53\u7136\uff0cAppium \u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\u53ea\u589e\u52a0\u529f\u80fd\uff08\u5176\u5b9e\u5b83\u4eec\u53ea\u662f\u6269\u5c55\u4e86\u6807\u51c6 Selenium \u5ba2\u6237\u7aef\uff09\uff0c\u6240\u4ee5\u5b83\u4eec\u4ecd\u7136\u9002\u7528\u4e8e\u5e38\u89c4\u7684 Selenium \u4f1a\u8bdd\u3002     \u8bed\u8a00/\u6846\u67b6  Github \u4ed3\u5e93\u548c\u5b89\u88c5\u6307\u5357      Ruby  https://github.com/appium/ruby_lib    Python  https://github.com/appium/python-client    Java  https://github.com/appium/java-client    JavaScript (Node.js)  https://github.com/admc/wd    Objective C  https://github.com/appium/selenium-objective-c    PHP  https://github.com/appium/php-client    C# (.NET)  https://github.com/appium/appium-dotnet-driver    RobotFramework  https://github.com/jollychang/robotframework-appiumlibrary     \u7531 @\u9ed1\u6c34 \u7ffb\u8bd1\uff0cTesterHome \u793e\u533a id\uff1asanlengjingvv  @lihuazhang \u6821\u9a8c",
            "title": "\u652f\u6301 Appium \u670d\u52a1\u5668\u7684\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\u5217\u8868"
        },
        {
            "location": "/cn/about-appium/intro/",
            "text": "Appium \u4ecb\u7ecd\n\n\nAppium \u662f\u4e00\u4e2a\u5f00\u6e90\u5de5\u5177\uff0c\u7528\u4e8e\u81ea\u52a8\u5316 iOS \u624b\u673a \u3001 Android \u624b\u673a\u548c Windows \u684c\u9762\u5e73\u53f0\u4e0a\u7684\u539f\u751f\u3001\u79fb\u52a8 Web \u548c\u6df7\u5408\u5e94\u7528\u3002\u201c\u539f\u751f\u5e94\u7528\u201d\u6307\u90a3\u4e9b\u7528 iOS \u3001 Android \u6216\u8005 Windows SDK \u7f16\u5199\u7684\u5e94\u7528\u3002\u201c\u79fb\u52a8 web \u5e94\u7528\u201d\u662f\u7528\u79fb\u52a8\u7aef\u6d4f\u89c8\u5668\u8bbf\u95ee\u7684\u5e94\u7528\uff08Appium \u652f\u6301 iOS \u4e0a\u7684 Safari \u3001Chrome \u548c Android \u4e0a\u7684\u5185\u7f6e\u6d4f\u89c8\u5668\uff09\u3002\u201c\u6df7\u5408\u5e94\u7528\u201d\u5e26\u6709\u4e00\u4e2a \"webview\" \u7684\u5305\u88c5\u5668\u2014\u2014\u7528\u6765\u548c Web \u5185\u5bb9\u4ea4\u4e92\u7684\u539f\u751f\u63a7\u4ef6\u3002\u7c7b\u4f3c \nPhonegap\n \u7684\u9879\u76ee\uff0c\u8ba9\u7528 Web \u6280\u672f\u5f00\u53d1\u7136\u540e\u6253\u5305\u8fdb\u539f\u751f\u5305\u88c5\u5668\u521b\u5efa\u4e00\u4e2a\u6df7\u5408\u5e94\u7528\u53d8\u5f97\u5bb9\u6613\u4e86\u3002\n\n\n\u91cd\u8981\u7684\u662f\uff0cAppium \u662f\u8de8\u5e73\u53f0\u7684\uff1a\u5b83\u5141\u8bb8\u4f60\u7528\u540c\u6837\u7684 API \u5bf9\u591a\u5e73\u53f0\u5199\u6d4b\u8bd5\uff0c\u505a\u5230\u5728 iOS \u3001Android \u548c Windows \u6d4b\u8bd5\u5957\u4ef6\u4e4b\u95f4\u590d\u7528\u4ee3\u7801\u3002\n\n\n\u4e86\u89e3 Appium \u201c\u652f\u6301\u201d\u8fd9\u4e9b\u5e73\u53f0\u610f\u5473\u7740\u4ec0\u4e48\u3001\u6709\u54ea\u4e9b\u81ea\u52a8\u5316\u65b9\u5f0f\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1\n Appium \u652f\u6301\u7684\u5e73\u53f0\n\u3002\n\n\nAppium \u7684\u7406\u5ff5\n\n\nAppium \u65e8\u5728\u6ee1\u8db3\u79fb\u52a8\u7aef\u81ea\u52a8\u5316\u9700\u6c42\u7684\u7406\u5ff5\uff0c\u6982\u8ff0\u4e3a\u4ee5\u4e0b\u56db\u4e2a\u539f\u5219\uff1a\n\n1. \u4f60\u6ca1\u6709\u5fc5\u8981\u4e3a\u4e86\u81ea\u52a8\u5316\u800c\u91cd\u65b0\u7f16\u8bd1\u4f60\u7684\u5e94\u7528\u6216\u8005\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4fee\u6539\u5b83\u3002\n2. \u4f60\u4e0d\u5e94\u8be5\u88ab\u9650\u5236\u5728\u7279\u5b9a\u7684\u8bed\u8a00\u6216\u6846\u67b6\u4e0a\u6765\u7f16\u5199\u8fd0\u884c\u6d4b\u8bd5\u3002\n3. \u79fb\u52a8\u7aef\u81ea\u52a8\u5316\u6846\u67b6\u5728\u81ea\u52a8\u5316\u63a5\u53e3\u65b9\u9762\u4e0d\u5e94\u8be5\u91cd\u9020\u8f6e\u5b50\u3002\n4. \u79fb\u52a8\u7aef\u81ea\u52a8\u5316\u6846\u67b6\u5e94\u8be5\u5f00\u6e90\uff0c\u4e0d\u4f46\u5728\u540d\u4e49\u4e0a\u800c\u4e14\u5728\u7cbe\u795e\u548c\u5b9e\u8df5\u4e0a\u90fd\u8981\u5b9e\u81f3\u540d\u5f52\u3002\n\n\nAppium \u7684\u8bbe\u8ba1\n\n\n\u90a3\u4e48 Appium \u9879\u76ee\u7684\u67b6\u6784\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u7406\u5ff5\u5462\uff1f\u4e3a\u4e86\u5b9e\u73b0\u7b2c\u4e00\u70b9\u8981\u6c42\uff0c\u6211\u4eec\u5176\u5b9e\u4f7f\u7528\u4e86\u7cfb\u7edf\u81ea\u5e26\u7684\u81ea\u52a8\u5316\u6846\u67b6\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u628a Appium \u7279\u5b9a\u7684\u6216\u8005\u7b2c\u4e09\u65b9\u7684\u4ee3\u7801\u7f16\u8bd1\u8fdb\u4f60\u7684\u5e94\u7528\u3002\u8fd9\u610f\u5473\u7740\u4f60\u6d4b\u8bd5\u4f7f\u7528\u7684\u5e94\u7528\u4e0e\u6700\u7ec8\u53d1\u5e03\u7684\u5e94\u7528\u5e76\u65e0\u4e8c\u81f4\u3002\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u7cfb\u7edf\u81ea\u5e26\u7684\u81ea\u52a8\u5316\u6846\u67b6\uff1a\n\n\n\n\niOS 9.3 \u53ca\u4ee5\u4e0a\uff1a\u82f9\u679c\u7684 \nXCUITest\n\n\niOS 9.3 \u53ca\u4ee5\u4e0b\uff1a\u82f9\u679c\u7684 \nUIAutomation\n\n\nAndroid 4.2+: \u8c37\u6b4c\u7684 \nUiAutomator\n\n\nAndroid 2.3+: \u8c37\u6b4c\u7684 \nInstrumentation\n\uff08\u901a\u8fc7\u7ed1\u5b9a\u53e6\u5916\u7684\u9879\u76ee\u2014\u2014\n Selendroid \n\u63d0\u4f9b Instrumentation \u7684\u652f\u6301\uff09\n\n\nWindows: \u5fae\u8f6f\u7684 \nWinAppDriver\n\n\n\n\n\u4e3a\u4e86\u5b9e\u73b0\u7b2c\u4e8c\u70b9\u8981\u6c42\uff0c\u6211\u4eec\u628a\u8fd9\u4e9b\uff08\u7cfb\u7edf\u672c\u8eab\u7684\uff09\u4f9b\u5e94\u5546\u63d0\u4f9b\u7684\u6846\u67b6\u5305\u88c5\u8fdb\u4e00\u5957 API \u2014\u2014 \nWebDriver\n API \u4e2d\u3002WebDriver\uff08\u4e5f\u53eb \"Selenium WebDriver\"\uff09\u89c4\u5b9a\u4e86\u4e00\u4e2a\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u534f\u8bae\uff08\u79f0\u4e3a \nJSON Wire Protocol\n\uff09\uff0c\u6309\u7167\u8fd9\u79cd\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u67b6\u6784\uff0c\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u8bed\u8a00\u7f16\u5199\u7684\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u9001\u9002\u5f53\u7684 HTTP \u8bf7\u6c42\u3002\u5df2\u7ecf\u6709\n\u5404\u4e2a\u6d41\u884c\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u7684\u5ba2\u6237\u7aef\n\u4e86\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u81ea\u7531\u4f7f\u7528\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u6d4b\u8bd5\u8fd0\u884c\u5668\u548c\u6d4b\u8bd5\u6846\u67b6\uff1b\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\u4e0d\u8fc7\u662f HTTP \u5ba2\u6237\u7aef\uff0c\u53ef\u4ee5\u4ee5\u4efb\u4f55\u4f60\u559c\u6b22\u7684\u65b9\u5f0f\u6df7\u5165\u4f60\u7684\u4ee3\u7801\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cAppium \u548c WebDriver \u5ba2\u6237\u7aef\u4e0d\u662f\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u201c\u6d4b\u8bd5\u6846\u67b6\u201d\uff0c\u800c\u662f\u201c\u81ea\u52a8\u5316\u7a0b\u5e8f\u5e93\u201d\u3002\u4f60\u53ef\u4ee5\u4ee5\u4efb\u4f55\u4f60\u559c\u6b22\u7684\u65b9\u5f0f\u7ba1\u7406\u4f60\u7684\u6d4b\u8bd5\u73af\u5883\uff01\n\n\n\u6211\u4eec\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u5b9e\u73b0\u7b2c\u4e09\u70b9\u8981\u6c42\uff1aWebDriver \u5df2\u7ecf\u6210\u4e3a Web \u6d4f\u89c8\u5668\u81ea\u52a8\u5316\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\uff0c\u5e76\u4e14\u662f\u4e00\u4e2a\n W3C \u5de5\u4f5c\u8349\u6848\n\u3002\u4f55\u5fc5\u5728\u79fb\u52a8\u7aef\u505a\u5b8c\u5168\u4e0d\u540c\u7684\u5c1d\u8bd5\uff1f\u6211\u4eec\u901a\u8fc7\u9644\u52a0\u53ef\u7528\u4e8e\u79fb\u52a8\u7aef\u81ea\u52a8\u5316\u7684 API \u65b9\u6cd5\n\u6269\u5c55\u4e86\u534f\u8bae\n\u3002\n\n\n\u663e\u7136\u7b2c 4 \u70b9\u662f\u4f60\u5728\u9605\u8bfb\u7684\u524d\u63d0\u2014\u2014\n Appium \u662f\u5f00\u6e90\u7684\n\n\nAppium \u6982\u5ff5\n\n\n\u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u67b6\u6784\n\nAppium \u7684\u6838\u5fc3\u662f\u66b4\u9732 REST API \u7684\u7f51\u7edc\u670d\u52a1\u5668\u3002\u5b83\u63a5\u53d7\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\uff0c\u76d1\u542c\u547d\u4ee4\u5e76\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u6267\u884c\uff0c\u7b54\u590d\u8868\u793a\u6267\u884c\u7ed3\u679c\u7684 HTTP \u54cd\u5e94\u3002\u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u67b6\u6784\u5b9e\u9645\u7ed9\u4e88\u4e86\u8bb8\u591a\u53ef\u80fd\u6027\uff1a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u6709 http \u5ba2\u6237\u7aef API \u7684\u8bed\u8a00\u7f16\u5199\u6211\u4eec\u7684\u6d4b\u8bd5\u4ee3\u7801\uff0c\u4e0d\u8fc7\u9009\u4e00\u4e2a\n Appium \u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\n\n\u7528\u66f4\u5bb9\u6613\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u670d\u52a1\u5668\u653e\u5728\u53e6\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u800c\u4e0d\u662f\u6267\u884c\u6d4b\u8bd5\u7684\u673a\u5668\u3002\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801\uff0c\u5e76\u4f9d\u9760\u7c7b\u4f3c \nSauce Labs\n \u7684\u4e91\u670d\u52a1\u63a5\u6536\u548c\u89e3\u91ca\u547d\u4ee4\u3002\n\n\n\u4f1a\u8bdd(session)\n\n\u81ea\u52a8\u5316\u59cb\u7ec8\u5728\u4e00\u4e2a\u4f1a\u8bdd\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\uff0c\u8fd9\u4e9b\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\u4ee5\u5404\u81ea\u7684\u65b9\u5f0f\u53d1\u8d77\u4e0e\u670d\u52a1\u5668\u7684\u4f1a\u8bdd\uff0c\u4f46\u90fd\u4ee5\u53d1\u7ed9\u670d\u52a1\u5668\u4e00\u4e2a \nPOST /session\n \u8bf7\u6c42\u7ed3\u675f\uff0c\u8bf7\u6c42\u4e2d\u5305\u542b\u4e00\u4e2a\u88ab\u79f0\u4f5c 'desired capabilities' \u7684 JSON \u5bf9\u8c61\u3002\u8fd9\u65f6\u670d\u52a1\u5668\u5c31\u4f1a\u5f00\u542f\u8fd9\u4e2a\u81ea\u52a8\u5316\u4f1a\u8bdd\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u7528\u4e8e\u53d1\u9001\u540e\u7eed\u547d\u4ee4\u7684\u4f1a\u8bdd ID\u3002\n\n\nDesired Capabilities\n\nDesired capabilities \u662f\u4e00\u4e9b\u53d1\u9001\u7ed9 Appium \u670d\u52a1\u5668\u7684\u952e\u503c\u5bf9\u96c6\u5408 (\u6bd4\u5982 map \u6216 hash\uff09\uff0c\u544a\u8bc9\u670d\u52a1\u5668\u6211\u4eec\u60f3\u8981\u542f\u52a8\u4ec0\u4e48\u7c7b\u578b\u7684\u81ea\u52a8\u5316\u4f1a\u8bdd\u3002\u4e5f\u6709\u5404\u79cd\u53ef\u4ee5\u5728\u81ea\u52a8\u5316\u8fd0\u884c\u65f6\u4fee\u6539\u670d\u52a1\u5668\u884c\u4e3a\u7684 capabilities\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u628a \nplatformName\n capability \u8bbe\u7f6e\u4e3a \niOS\n\uff0c\u544a\u8bc9 Appium \u6211\u4eec\u60f3\u8981 iOS \u4f1a\u8bdd\uff0c\u800c\u4e0d\u662f Android \u6216\u8005 Windows \u4f1a\u8bdd\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bbe\u7f6e \nsafariAllowPopups\n capability \u4e3a \ntrue\n \uff0c\u786e\u4fdd\u6211\u4eec\u5728 Safari \u81ea\u52a8\u5316\u4f1a\u8bdd\u4e2d\u53ef\u4ee5\u4f7f\u7528 javascript \u6253\u5f00\u65b0\u7a97\u53e3\u3002\u6709\u5173 Appium capabilities \u7684\u5b8c\u6574\u5217\u8868\uff0c\u8bf7\u53c2\u9605 \ncapabilities doc\n \u3002\n\n\nAppium \u670d\u52a1\u5668\n\nAppium \u662f\u7528 Node.js \u5199\u7684\u670d\u52a1\u5668\u3002\u5b83\u53ef\u4ee5\u4ece\n\u6e90\u7801\n\u6784\u5efa\u5b89\u88c5\u6216\u8005\u4ece NPM \u76f4\u63a5\u5b89\u88c5\uff1a\n\n\n$ npm install -g appium\n$ appium\n\n\n\n\nAppium \u5ba2\u6237\u7aef\n\n\u6709\u591a\u4e2a\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\uff08Java\u3001Ruby\u3001Python\u3001PHP,\u3001JavaScript \u548c C# \u7684\uff09\u652f\u6301 Appium \u5bf9 WebDriver \u534f\u8bae\u7684\u6269\u5c55\uff0c\u4f60\u9700\u8981\u7528\u8fd9\u4e9b\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\u4ee3\u66ff\u901a\u5e38\u7684 WebDriver \u5ba2\u6237\u7aef\u3002\u5728\n\u8fd9\u91cc\n\u6d4f\u89c8\u6240\u6709\u7a0b\u5e8f\u5e93\u7684\u5217\u8868\u3002\n\n\nAppium.app\n, \nAppium.exe\n\n\u6709 Appium \u670d\u52a1\u5668\u7684\u56fe\u5f62\u754c\u9762\u5305\u88c5\u5668\u53ef\u4ee5\u4e0b\u8f7d\u3002\u5b83\u4eec\u6253\u5305\u4e86 Appium \u670d\u52a1\u5668\u8fd0\u884c\u9700\u8981\u7684\u6240\u6709\u4e1c\u897f\uff0c\u6240\u4ee5\u4f60\u4e0d\u9700\u8981\u4e3a Node \u800c\u70e6\u607c\u3002\u5b83\u4eec\u8fd8\u63d0\u4f9b\u4e00\u4e2a Inspector \u4f7f\u4f60\u53ef\u4ee5\u67e5\u770b\u4f60\u5e94\u7528\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u8fd9\u5728\u5199\u6d4b\u8bd5\u65f6\u5f88\u65b9\u4fbf\u3002\n\n\n\u5165\u95e8\u6307\u5357\n\n\n\u606d\u559c\uff01\u4f60\u73b0\u5728\u6709\u8db3\u591f\u7684\u77e5\u8bc6\u6765\u4f7f\u7528 Appium \u4e86\u3002 \u4e3a\u4ec0\u4e48\u4e0d\u524d\u5f80 \n\u5165\u95e8\u6307\u5357\n \u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u7684\u8981\u6c42\u548c\u6307\u5357\u5462\uff1f\n\n\n\u7531 @\u9ed1\u6c34 \u7ffb\u8bd1\uff0cTesterHome \u793e\u533a id\uff1asanlengjingvv\n\n\n@lihuazhang \u6821\u9a8c",
            "title": "Intro"
        },
        {
            "location": "/cn/about-appium/intro/#appium",
            "text": "Appium \u662f\u4e00\u4e2a\u5f00\u6e90\u5de5\u5177\uff0c\u7528\u4e8e\u81ea\u52a8\u5316 iOS \u624b\u673a \u3001 Android \u624b\u673a\u548c Windows \u684c\u9762\u5e73\u53f0\u4e0a\u7684\u539f\u751f\u3001\u79fb\u52a8 Web \u548c\u6df7\u5408\u5e94\u7528\u3002\u201c\u539f\u751f\u5e94\u7528\u201d\u6307\u90a3\u4e9b\u7528 iOS \u3001 Android \u6216\u8005 Windows SDK \u7f16\u5199\u7684\u5e94\u7528\u3002\u201c\u79fb\u52a8 web \u5e94\u7528\u201d\u662f\u7528\u79fb\u52a8\u7aef\u6d4f\u89c8\u5668\u8bbf\u95ee\u7684\u5e94\u7528\uff08Appium \u652f\u6301 iOS \u4e0a\u7684 Safari \u3001Chrome \u548c Android \u4e0a\u7684\u5185\u7f6e\u6d4f\u89c8\u5668\uff09\u3002\u201c\u6df7\u5408\u5e94\u7528\u201d\u5e26\u6709\u4e00\u4e2a \"webview\" \u7684\u5305\u88c5\u5668\u2014\u2014\u7528\u6765\u548c Web \u5185\u5bb9\u4ea4\u4e92\u7684\u539f\u751f\u63a7\u4ef6\u3002\u7c7b\u4f3c  Phonegap  \u7684\u9879\u76ee\uff0c\u8ba9\u7528 Web \u6280\u672f\u5f00\u53d1\u7136\u540e\u6253\u5305\u8fdb\u539f\u751f\u5305\u88c5\u5668\u521b\u5efa\u4e00\u4e2a\u6df7\u5408\u5e94\u7528\u53d8\u5f97\u5bb9\u6613\u4e86\u3002  \u91cd\u8981\u7684\u662f\uff0cAppium \u662f\u8de8\u5e73\u53f0\u7684\uff1a\u5b83\u5141\u8bb8\u4f60\u7528\u540c\u6837\u7684 API \u5bf9\u591a\u5e73\u53f0\u5199\u6d4b\u8bd5\uff0c\u505a\u5230\u5728 iOS \u3001Android \u548c Windows \u6d4b\u8bd5\u5957\u4ef6\u4e4b\u95f4\u590d\u7528\u4ee3\u7801\u3002  \u4e86\u89e3 Appium \u201c\u652f\u6301\u201d\u8fd9\u4e9b\u5e73\u53f0\u610f\u5473\u7740\u4ec0\u4e48\u3001\u6709\u54ea\u4e9b\u81ea\u52a8\u5316\u65b9\u5f0f\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u89c1  Appium \u652f\u6301\u7684\u5e73\u53f0 \u3002",
            "title": "Appium \u4ecb\u7ecd"
        },
        {
            "location": "/cn/about-appium/intro/#appium_1",
            "text": "Appium \u65e8\u5728\u6ee1\u8db3\u79fb\u52a8\u7aef\u81ea\u52a8\u5316\u9700\u6c42\u7684\u7406\u5ff5\uff0c\u6982\u8ff0\u4e3a\u4ee5\u4e0b\u56db\u4e2a\u539f\u5219\uff1a \n1. \u4f60\u6ca1\u6709\u5fc5\u8981\u4e3a\u4e86\u81ea\u52a8\u5316\u800c\u91cd\u65b0\u7f16\u8bd1\u4f60\u7684\u5e94\u7528\u6216\u8005\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4fee\u6539\u5b83\u3002\n2. \u4f60\u4e0d\u5e94\u8be5\u88ab\u9650\u5236\u5728\u7279\u5b9a\u7684\u8bed\u8a00\u6216\u6846\u67b6\u4e0a\u6765\u7f16\u5199\u8fd0\u884c\u6d4b\u8bd5\u3002\n3. \u79fb\u52a8\u7aef\u81ea\u52a8\u5316\u6846\u67b6\u5728\u81ea\u52a8\u5316\u63a5\u53e3\u65b9\u9762\u4e0d\u5e94\u8be5\u91cd\u9020\u8f6e\u5b50\u3002\n4. \u79fb\u52a8\u7aef\u81ea\u52a8\u5316\u6846\u67b6\u5e94\u8be5\u5f00\u6e90\uff0c\u4e0d\u4f46\u5728\u540d\u4e49\u4e0a\u800c\u4e14\u5728\u7cbe\u795e\u548c\u5b9e\u8df5\u4e0a\u90fd\u8981\u5b9e\u81f3\u540d\u5f52\u3002",
            "title": "Appium \u7684\u7406\u5ff5"
        },
        {
            "location": "/cn/about-appium/intro/#appium_2",
            "text": "\u90a3\u4e48 Appium \u9879\u76ee\u7684\u67b6\u6784\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e00\u7406\u5ff5\u5462\uff1f\u4e3a\u4e86\u5b9e\u73b0\u7b2c\u4e00\u70b9\u8981\u6c42\uff0c\u6211\u4eec\u5176\u5b9e\u4f7f\u7528\u4e86\u7cfb\u7edf\u81ea\u5e26\u7684\u81ea\u52a8\u5316\u6846\u67b6\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u628a Appium \u7279\u5b9a\u7684\u6216\u8005\u7b2c\u4e09\u65b9\u7684\u4ee3\u7801\u7f16\u8bd1\u8fdb\u4f60\u7684\u5e94\u7528\u3002\u8fd9\u610f\u5473\u7740\u4f60\u6d4b\u8bd5\u4f7f\u7528\u7684\u5e94\u7528\u4e0e\u6700\u7ec8\u53d1\u5e03\u7684\u5e94\u7528\u5e76\u65e0\u4e8c\u81f4\u3002\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0b\u7cfb\u7edf\u81ea\u5e26\u7684\u81ea\u52a8\u5316\u6846\u67b6\uff1a   iOS 9.3 \u53ca\u4ee5\u4e0a\uff1a\u82f9\u679c\u7684  XCUITest  iOS 9.3 \u53ca\u4ee5\u4e0b\uff1a\u82f9\u679c\u7684  UIAutomation  Android 4.2+: \u8c37\u6b4c\u7684  UiAutomator  Android 2.3+: \u8c37\u6b4c\u7684  Instrumentation \uff08\u901a\u8fc7\u7ed1\u5b9a\u53e6\u5916\u7684\u9879\u76ee\u2014\u2014  Selendroid  \u63d0\u4f9b Instrumentation \u7684\u652f\u6301\uff09  Windows: \u5fae\u8f6f\u7684  WinAppDriver   \u4e3a\u4e86\u5b9e\u73b0\u7b2c\u4e8c\u70b9\u8981\u6c42\uff0c\u6211\u4eec\u628a\u8fd9\u4e9b\uff08\u7cfb\u7edf\u672c\u8eab\u7684\uff09\u4f9b\u5e94\u5546\u63d0\u4f9b\u7684\u6846\u67b6\u5305\u88c5\u8fdb\u4e00\u5957 API \u2014\u2014  WebDriver  API \u4e2d\u3002WebDriver\uff08\u4e5f\u53eb \"Selenium WebDriver\"\uff09\u89c4\u5b9a\u4e86\u4e00\u4e2a\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u534f\u8bae\uff08\u79f0\u4e3a  JSON Wire Protocol \uff09\uff0c\u6309\u7167\u8fd9\u79cd\u5ba2\u6237\u7aef-\u670d\u52a1\u5668\u67b6\u6784\uff0c\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u8bed\u8a00\u7f16\u5199\u7684\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u9001\u9002\u5f53\u7684 HTTP \u8bf7\u6c42\u3002\u5df2\u7ecf\u6709 \u5404\u4e2a\u6d41\u884c\u7f16\u7a0b\u8bed\u8a00\u7f16\u5199\u7684\u5ba2\u6237\u7aef \u4e86\u3002\u8fd9\u4e5f\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u81ea\u7531\u4f7f\u7528\u4efb\u4f55\u4f60\u60f3\u8981\u7684\u6d4b\u8bd5\u8fd0\u884c\u5668\u548c\u6d4b\u8bd5\u6846\u67b6\uff1b\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\u4e0d\u8fc7\u662f HTTP \u5ba2\u6237\u7aef\uff0c\u53ef\u4ee5\u4ee5\u4efb\u4f55\u4f60\u559c\u6b22\u7684\u65b9\u5f0f\u6df7\u5165\u4f60\u7684\u4ee3\u7801\u3002\u6362\u53e5\u8bdd\u8bf4\uff0cAppium \u548c WebDriver \u5ba2\u6237\u7aef\u4e0d\u662f\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u201c\u6d4b\u8bd5\u6846\u67b6\u201d\uff0c\u800c\u662f\u201c\u81ea\u52a8\u5316\u7a0b\u5e8f\u5e93\u201d\u3002\u4f60\u53ef\u4ee5\u4ee5\u4efb\u4f55\u4f60\u559c\u6b22\u7684\u65b9\u5f0f\u7ba1\u7406\u4f60\u7684\u6d4b\u8bd5\u73af\u5883\uff01  \u6211\u4eec\u4ee5\u540c\u6837\u7684\u65b9\u5f0f\u5b9e\u73b0\u7b2c\u4e09\u70b9\u8981\u6c42\uff1aWebDriver \u5df2\u7ecf\u6210\u4e3a Web \u6d4f\u89c8\u5668\u81ea\u52a8\u5316\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\uff0c\u5e76\u4e14\u662f\u4e00\u4e2a  W3C \u5de5\u4f5c\u8349\u6848 \u3002\u4f55\u5fc5\u5728\u79fb\u52a8\u7aef\u505a\u5b8c\u5168\u4e0d\u540c\u7684\u5c1d\u8bd5\uff1f\u6211\u4eec\u901a\u8fc7\u9644\u52a0\u53ef\u7528\u4e8e\u79fb\u52a8\u7aef\u81ea\u52a8\u5316\u7684 API \u65b9\u6cd5 \u6269\u5c55\u4e86\u534f\u8bae \u3002  \u663e\u7136\u7b2c 4 \u70b9\u662f\u4f60\u5728\u9605\u8bfb\u7684\u524d\u63d0\u2014\u2014  Appium \u662f\u5f00\u6e90\u7684",
            "title": "Appium \u7684\u8bbe\u8ba1"
        },
        {
            "location": "/cn/about-appium/intro/#appium_3",
            "text": "\u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u67b6\u6784 \nAppium \u7684\u6838\u5fc3\u662f\u66b4\u9732 REST API \u7684\u7f51\u7edc\u670d\u52a1\u5668\u3002\u5b83\u63a5\u53d7\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\uff0c\u76d1\u542c\u547d\u4ee4\u5e76\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u6267\u884c\uff0c\u7b54\u590d\u8868\u793a\u6267\u884c\u7ed3\u679c\u7684 HTTP \u54cd\u5e94\u3002\u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u67b6\u6784\u5b9e\u9645\u7ed9\u4e88\u4e86\u8bb8\u591a\u53ef\u80fd\u6027\uff1a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u6709 http \u5ba2\u6237\u7aef API \u7684\u8bed\u8a00\u7f16\u5199\u6211\u4eec\u7684\u6d4b\u8bd5\u4ee3\u7801\uff0c\u4e0d\u8fc7\u9009\u4e00\u4e2a  Appium \u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93 \u7528\u66f4\u5bb9\u6613\u3002\u6211\u4eec\u53ef\u4ee5\u628a\u670d\u52a1\u5668\u653e\u5728\u53e6\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u800c\u4e0d\u662f\u6267\u884c\u6d4b\u8bd5\u7684\u673a\u5668\u3002\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u6d4b\u8bd5\u4ee3\u7801\uff0c\u5e76\u4f9d\u9760\u7c7b\u4f3c  Sauce Labs  \u7684\u4e91\u670d\u52a1\u63a5\u6536\u548c\u89e3\u91ca\u547d\u4ee4\u3002  \u4f1a\u8bdd(session) \n\u81ea\u52a8\u5316\u59cb\u7ec8\u5728\u4e00\u4e2a\u4f1a\u8bdd\u7684\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\uff0c\u8fd9\u4e9b\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\u4ee5\u5404\u81ea\u7684\u65b9\u5f0f\u53d1\u8d77\u4e0e\u670d\u52a1\u5668\u7684\u4f1a\u8bdd\uff0c\u4f46\u90fd\u4ee5\u53d1\u7ed9\u670d\u52a1\u5668\u4e00\u4e2a  POST /session  \u8bf7\u6c42\u7ed3\u675f\uff0c\u8bf7\u6c42\u4e2d\u5305\u542b\u4e00\u4e2a\u88ab\u79f0\u4f5c 'desired capabilities' \u7684 JSON \u5bf9\u8c61\u3002\u8fd9\u65f6\u670d\u52a1\u5668\u5c31\u4f1a\u5f00\u542f\u8fd9\u4e2a\u81ea\u52a8\u5316\u4f1a\u8bdd\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u7528\u4e8e\u53d1\u9001\u540e\u7eed\u547d\u4ee4\u7684\u4f1a\u8bdd ID\u3002  Desired Capabilities \nDesired capabilities \u662f\u4e00\u4e9b\u53d1\u9001\u7ed9 Appium \u670d\u52a1\u5668\u7684\u952e\u503c\u5bf9\u96c6\u5408 (\u6bd4\u5982 map \u6216 hash\uff09\uff0c\u544a\u8bc9\u670d\u52a1\u5668\u6211\u4eec\u60f3\u8981\u542f\u52a8\u4ec0\u4e48\u7c7b\u578b\u7684\u81ea\u52a8\u5316\u4f1a\u8bdd\u3002\u4e5f\u6709\u5404\u79cd\u53ef\u4ee5\u5728\u81ea\u52a8\u5316\u8fd0\u884c\u65f6\u4fee\u6539\u670d\u52a1\u5668\u884c\u4e3a\u7684 capabilities\u3002\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u628a  platformName  capability \u8bbe\u7f6e\u4e3a  iOS \uff0c\u544a\u8bc9 Appium \u6211\u4eec\u60f3\u8981 iOS \u4f1a\u8bdd\uff0c\u800c\u4e0d\u662f Android \u6216\u8005 Windows \u4f1a\u8bdd\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u8bbe\u7f6e  safariAllowPopups  capability \u4e3a  true  \uff0c\u786e\u4fdd\u6211\u4eec\u5728 Safari \u81ea\u52a8\u5316\u4f1a\u8bdd\u4e2d\u53ef\u4ee5\u4f7f\u7528 javascript \u6253\u5f00\u65b0\u7a97\u53e3\u3002\u6709\u5173 Appium capabilities \u7684\u5b8c\u6574\u5217\u8868\uff0c\u8bf7\u53c2\u9605  capabilities doc  \u3002  Appium \u670d\u52a1\u5668 \nAppium \u662f\u7528 Node.js \u5199\u7684\u670d\u52a1\u5668\u3002\u5b83\u53ef\u4ee5\u4ece \u6e90\u7801 \u6784\u5efa\u5b89\u88c5\u6216\u8005\u4ece NPM \u76f4\u63a5\u5b89\u88c5\uff1a  $ npm install -g appium\n$ appium  Appium \u5ba2\u6237\u7aef \n\u6709\u591a\u4e2a\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\uff08Java\u3001Ruby\u3001Python\u3001PHP,\u3001JavaScript \u548c C# \u7684\uff09\u652f\u6301 Appium \u5bf9 WebDriver \u534f\u8bae\u7684\u6269\u5c55\uff0c\u4f60\u9700\u8981\u7528\u8fd9\u4e9b\u5ba2\u6237\u7aef\u7a0b\u5e8f\u5e93\u4ee3\u66ff\u901a\u5e38\u7684 WebDriver \u5ba2\u6237\u7aef\u3002\u5728 \u8fd9\u91cc \u6d4f\u89c8\u6240\u6709\u7a0b\u5e8f\u5e93\u7684\u5217\u8868\u3002  Appium.app ,  Appium.exe \n\u6709 Appium \u670d\u52a1\u5668\u7684\u56fe\u5f62\u754c\u9762\u5305\u88c5\u5668\u53ef\u4ee5\u4e0b\u8f7d\u3002\u5b83\u4eec\u6253\u5305\u4e86 Appium \u670d\u52a1\u5668\u8fd0\u884c\u9700\u8981\u7684\u6240\u6709\u4e1c\u897f\uff0c\u6240\u4ee5\u4f60\u4e0d\u9700\u8981\u4e3a Node \u800c\u70e6\u607c\u3002\u5b83\u4eec\u8fd8\u63d0\u4f9b\u4e00\u4e2a Inspector \u4f7f\u4f60\u53ef\u4ee5\u67e5\u770b\u4f60\u5e94\u7528\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u8fd9\u5728\u5199\u6d4b\u8bd5\u65f6\u5f88\u65b9\u4fbf\u3002",
            "title": "Appium \u6982\u5ff5"
        },
        {
            "location": "/cn/about-appium/intro/#_1",
            "text": "\u606d\u559c\uff01\u4f60\u73b0\u5728\u6709\u8db3\u591f\u7684\u77e5\u8bc6\u6765\u4f7f\u7528 Appium \u4e86\u3002 \u4e3a\u4ec0\u4e48\u4e0d\u524d\u5f80  \u5165\u95e8\u6307\u5357  \u4e86\u89e3\u66f4\u591a\u8be6\u7ec6\u7684\u8981\u6c42\u548c\u6307\u5357\u5462\uff1f  \u7531 @\u9ed1\u6c34 \u7ffb\u8bd1\uff0cTesterHome \u793e\u533a id\uff1asanlengjingvv  @lihuazhang \u6821\u9a8c",
            "title": "\u5165\u95e8\u6307\u5357"
        },
        {
            "location": "/cn/advanced-concepts/chromedriver/",
            "text": "Chromedriver\n\n\nAppium \u652f\u6301\u5bf9\u57fa\u4e8e Chrome \u5185\u6838\u7684 H5 \u5e94\u7528\uff08\u6df7\u5408\u5e94\u7528\uff09\u6216\u8005\u7f51\u9875\uff08Chrome \u4e2d\u7684\u7f51\u9875\u6216\u8005\u5185\u5efa\u7684\u6d4f\u89c8\u5668\u4e2d\u7684\u7f51\u9875\uff09\u8fdb\u884c\u81ea\u52a8\u5316\u3002Appium \u7ba1\u7406\u7ef4\u62a4\u7740\u4e00\u4e2a \nChromedriver\n \u5b9e\u4f8b\uff0c\u5f53\u9700\u8981\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\uff0c\u5c06\u547d\u4ee4\u4f20\u9012\u7ed9\u8fd9\u4e2a\u5b9e\u4f8b\u3002\u8fd9\u548c\n\u6700\u65b0\u7248\u672c\u7684 Chromedriver\n\u662f\u7ed1\u5b9a\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 npm \u5305\u6765\u5b89\u88c5\nappium-chromedriver\n\u3002(Github: \nappium-chromedriver\n)\n\n\n\u4e0d\u5e78\u7684\u662f\uff0c\u6bcf\u6b21 Chromedriver \u5347\u7ea7\uff0c\u652f\u6301\u7684 Chrome \u7684\u6700\u5c0f\u7248\u672c\u90fd\u4f1a\u5347\u7ea7\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u8001\u8bbe\u5907\u4e0a\u7ecf\u5e38\u65e0\u6cd5\u5728\u7ed1\u5b9a\u7684\u7248\u672c\u4e0a\u81ea\u52a8\u5316\u3002\u5728 Appium \u7684\u670d\u52a1\u7aef\u5c31\u4f1a\u6709\u8fd9\u6837\u7684\u9519\u8bef\u65e5\u5fd7\uff1a\n\n\nAn unknown server-side error occurred while processing the command.\nOriginal error: unknown error: Chrome version must be >= 55.0.2883.0\n\n\n\n\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cAppium \u53ef\u4ee5\u6307\u5b9a\u7279\u5b9a\u7684 Chromedriver \u7248\u672c\u3002\u6216\u8005\u5728\u5b89\u88c5\u7684\u65f6\u5019\u6307\u5b9a\u7248\u672c\uff0c\u6bd4\u5982 \nnpm install appium --chromedriver_version=\"2.16\"\n \n\u6216\u8005 \nCHROMEDRIVER_VERSION=2.20 npm install appium\n\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 \nLATEST\n \u4f5c\u4e3a \nCHROMEDRIVER_VERSION\n \u7684\u7248\u672c\u53f7\uff0c\u8868\u793a\u4f7f\u7528\u6700\u65b0\u7684 Chromedriver\u3002\u6216\u8005\u53ef\u4ee5\u5728 Appium \u8fd0\u884c\u7684\u65f6\u5019\u6307\u5b9a \n--chromedriver-executable\n \u4e3a\u4f60\u81ea\u5df1\u4e0b\u8f7d\u7684\u7248\u672c\u7684\u8def\u5f84\uff0c\u6bd4\u5982 \nappium --chromedriver-executable /path/to/my/chromedriver\n\u3002\n\n\n\u4ee5\u4e0b\u5c31\u662f Chromedriver \u7248\u672c\u548c\u652f\u6301\u7684 Chrome \u7684\u6700\u5c0f\u7248\u672c\u7684\u4fe1\u606f\uff1a\n\n\n\n\n\n\n\n\nVersion\n\n\nMinimum Chrome Version\n\n\nLink to Chromedriver\n\n\n\n\n\n\n\n\n\n\n2.29\n\n\n57.0.2987.0\n\n\nlink\n\n\n\n\n\n\n2.28\n\n\n55.0.2883.0\n\n\nlink\n\n\n\n\n\n\n2.27\n\n\n54.0.2840.0\n\n\nlink\n\n\n\n\n\n\n2.26\n\n\n53.0.2785.0\n\n\nlink\n\n\n\n\n\n\n2.25\n\n\n53.0.2785.0\n\n\nlink\n\n\n\n\n\n\n2.24\n\n\n52.0.2743.0\n\n\nlink\n\n\n\n\n\n\n2.23\n\n\n51.0.2704.0\n\n\nlink\n\n\n\n\n\n\n2.22\n\n\n49.0.2623.0\n\n\nlink\n\n\n\n\n\n\n2.21\n\n\n46.0.2490.0\n\n\nlink\n\n\n\n\n\n\n2.20\n\n\n43.0.2357.0\n\n\nlink\n\n\n\n\n\n\n2.19\n\n\n43.0.2357.0\n\n\nlink\n\n\n\n\n\n\n2.18\n\n\n43.0.2357.0\n\n\nlink\n\n\n\n\n\n\n2.17\n\n\n42.0.2311.0\n\n\nlink\n\n\n\n\n\n\n2.16\n\n\n42.0.2311.0\n\n\nlink\n\n\n\n\n\n\n2.15\n\n\n40.0.2214.0\n\n\nlink\n\n\n\n\n\n\n2.14\n\n\n39.0.2171.0\n\n\nlink\n\n\n\n\n\n\n2.13\n\n\n38.0.2125.0\n\n\nlink\n\n\n\n\n\n\n2.12\n\n\n36.0.1985.0\n\n\nlink\n\n\n\n\n\n\n2.11\n\n\n36.0.1985.0\n\n\nlink\n\n\n\n\n\n\n2.10\n\n\n33.0.1751.0\n\n\nlink\n\n\n\n\n\n\n2.9\n\n\n31.0.1650.59\n\n\nlink\n\n\n\n\n\n\n2.8\n\n\n30.0.1573.2\n\n\nlink\n\n\n\n\n\n\n2.7\n\n\n30.0.1573.2\n\n\nlink\n\n\n\n\n\n\n2.6\n\n\n\n\nlink\n\n\n\n\n\n\n2.5\n\n\n\n\nlink\n\n\n\n\n\n\n2.4\n\n\n29.0.1545.0\n\n\nlink\n\n\n\n\n\n\n2.3\n\n\n28.0.1500.0\n\n\nlink\n\n\n\n\n\n\n2.2\n\n\n27.0.1453.0\n\n\nlink\n\n\n\n\n\n\n2.1\n\n\n27.0.1453.0\n\n\nlink\n\n\n\n\n\n\n2.0\n\n\n27.0.1453.0\n\n\nlink\n\n\n\n\n\n\n\n\n\u6211\u4eec\u53ef\u4ee5\u5728\n\u8fd9\u91cc\n \u53ef\u4ee5\u627e\u5230\u5b8c\u6574\u7684 Chromedriver release \u5217\u8868\u3002\u4efb\u4f55\u4e00\u4e2a Chromedriver \u652f\u6301\u7684 Chrome \u6700\u5c0f\u7248\u672c\u90fd\u53ef\u4ee5\u5728  \nChromium\n \u9879\u76ee\u7684\n\u6e90\u7801\n\u4e2d\u627e\u5230\u3002\u628a\u53d1\u5e03\u90a3\u4e2a\u63d0\u4ea4\u7ed9\u62c9\u51fa\u6765\uff0c\u7136\u540e\u5728 \nsrc/chrome/test/chromedriver/chrome/version.cc\n \u91cc\u627e\u5230 \nkMinimumSupportedChromeVersion\n \u8fd9\u4e2a\u53d8\u91cf\u3002\n\n\n\u5b89\u88c5\u9047\u5230\u7684\u7f51\u7edc\u95ee\u9898\n\n\nAppium \u5b89\u88c5\u7684\u65f6\u5019\u9700\u8981\u4e0b\u8f7d Chromedriver\uff0c\u6240\u4ee5\u7ecf\u5e38\u4f1a\u9047\u5230\u7f51\u7edc\u95ee\u9898\uff0c\u5c24\u5176\u5728\u6709\u957f\u57ce\u9632\u706b\u5899\u7684\u4e2d\u56fd\u3002\n\n\nChromedriver \u9ed8\u8ba4\u662f\u4ece \nhttps://chromedriver.storage.googleapis.com/\n \u4e0b\u8f7d\u3002\u5982\u679c\u8981\u4f7f\u7528\u955c\u50cf\u7684\u8bdd\uff0c\u9700\u8981\u914d\u7f6enpm\u7684\u53c2\u6570 \nchromedriver_cdnurl\n\n\nnpm install appium-chromedriver --chromedriver_cdnurl=http://npm.taobao.org/mirrors/chromedriver\n\n\n\n\n\u6216\u8005\u628a\u8fd9\u4e2a\u53c2\u6570\u52a0\u5230\u4f60\u7684 \n.npmrc\n \u6587\u4ef6\u4e2d\u53bb.\n\n\nchromedriver_cdnurl=http://npm.taobao.org/mirrors/chromedriver\n\n\n\n\n\u4e5f\u53ef\u4ee5\u4f7f\u7528\u73af\u5883\u53d8\u91cf \nCHROMEDRIVER_CDNURL\n.\n\n\nCHROMEDRIVER_CDNURL=http://npm.taobao.org/mirrors/chromedriver npm install appium-chromedriver\n\n\n\n\n\u5f53\u7136\u6700\u597d\u5f00\u7740\u4ee3\u7406\u6216\u8005vpn\u6765\u4e0b\u8f7d\u66f4\u597d\u3002\n\n\n\u672c\u6587\u7531 \nlihuazhang\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Chromedriver"
        },
        {
            "location": "/cn/advanced-concepts/chromedriver/#chromedriver",
            "text": "Appium \u652f\u6301\u5bf9\u57fa\u4e8e Chrome \u5185\u6838\u7684 H5 \u5e94\u7528\uff08\u6df7\u5408\u5e94\u7528\uff09\u6216\u8005\u7f51\u9875\uff08Chrome \u4e2d\u7684\u7f51\u9875\u6216\u8005\u5185\u5efa\u7684\u6d4f\u89c8\u5668\u4e2d\u7684\u7f51\u9875\uff09\u8fdb\u884c\u81ea\u52a8\u5316\u3002Appium \u7ba1\u7406\u7ef4\u62a4\u7740\u4e00\u4e2a  Chromedriver  \u5b9e\u4f8b\uff0c\u5f53\u9700\u8981\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u4ee3\u7406\u6a21\u5f0f\uff0c\u5c06\u547d\u4ee4\u4f20\u9012\u7ed9\u8fd9\u4e2a\u5b9e\u4f8b\u3002\u8fd9\u548c \u6700\u65b0\u7248\u672c\u7684 Chromedriver \u662f\u7ed1\u5b9a\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 npm \u5305\u6765\u5b89\u88c5 appium-chromedriver \u3002(Github:  appium-chromedriver )  \u4e0d\u5e78\u7684\u662f\uff0c\u6bcf\u6b21 Chromedriver \u5347\u7ea7\uff0c\u652f\u6301\u7684 Chrome \u7684\u6700\u5c0f\u7248\u672c\u90fd\u4f1a\u5347\u7ea7\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u8001\u8bbe\u5907\u4e0a\u7ecf\u5e38\u65e0\u6cd5\u5728\u7ed1\u5b9a\u7684\u7248\u672c\u4e0a\u81ea\u52a8\u5316\u3002\u5728 Appium \u7684\u670d\u52a1\u7aef\u5c31\u4f1a\u6709\u8fd9\u6837\u7684\u9519\u8bef\u65e5\u5fd7\uff1a  An unknown server-side error occurred while processing the command.\nOriginal error: unknown error: Chrome version must be >= 55.0.2883.0  \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cAppium \u53ef\u4ee5\u6307\u5b9a\u7279\u5b9a\u7684 Chromedriver \u7248\u672c\u3002\u6216\u8005\u5728\u5b89\u88c5\u7684\u65f6\u5019\u6307\u5b9a\u7248\u672c\uff0c\u6bd4\u5982  npm install appium --chromedriver_version=\"2.16\"  \n\u6216\u8005  CHROMEDRIVER_VERSION=2.20 npm install appium \uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528  LATEST  \u4f5c\u4e3a  CHROMEDRIVER_VERSION  \u7684\u7248\u672c\u53f7\uff0c\u8868\u793a\u4f7f\u7528\u6700\u65b0\u7684 Chromedriver\u3002\u6216\u8005\u53ef\u4ee5\u5728 Appium \u8fd0\u884c\u7684\u65f6\u5019\u6307\u5b9a  --chromedriver-executable  \u4e3a\u4f60\u81ea\u5df1\u4e0b\u8f7d\u7684\u7248\u672c\u7684\u8def\u5f84\uff0c\u6bd4\u5982  appium --chromedriver-executable /path/to/my/chromedriver \u3002  \u4ee5\u4e0b\u5c31\u662f Chromedriver \u7248\u672c\u548c\u652f\u6301\u7684 Chrome \u7684\u6700\u5c0f\u7248\u672c\u7684\u4fe1\u606f\uff1a     Version  Minimum Chrome Version  Link to Chromedriver      2.29  57.0.2987.0  link    2.28  55.0.2883.0  link    2.27  54.0.2840.0  link    2.26  53.0.2785.0  link    2.25  53.0.2785.0  link    2.24  52.0.2743.0  link    2.23  51.0.2704.0  link    2.22  49.0.2623.0  link    2.21  46.0.2490.0  link    2.20  43.0.2357.0  link    2.19  43.0.2357.0  link    2.18  43.0.2357.0  link    2.17  42.0.2311.0  link    2.16  42.0.2311.0  link    2.15  40.0.2214.0  link    2.14  39.0.2171.0  link    2.13  38.0.2125.0  link    2.12  36.0.1985.0  link    2.11  36.0.1985.0  link    2.10  33.0.1751.0  link    2.9  31.0.1650.59  link    2.8  30.0.1573.2  link    2.7  30.0.1573.2  link    2.6   link    2.5   link    2.4  29.0.1545.0  link    2.3  28.0.1500.0  link    2.2  27.0.1453.0  link    2.1  27.0.1453.0  link    2.0  27.0.1453.0  link     \u6211\u4eec\u53ef\u4ee5\u5728 \u8fd9\u91cc  \u53ef\u4ee5\u627e\u5230\u5b8c\u6574\u7684 Chromedriver release \u5217\u8868\u3002\u4efb\u4f55\u4e00\u4e2a Chromedriver \u652f\u6301\u7684 Chrome \u6700\u5c0f\u7248\u672c\u90fd\u53ef\u4ee5\u5728   Chromium  \u9879\u76ee\u7684 \u6e90\u7801 \u4e2d\u627e\u5230\u3002\u628a\u53d1\u5e03\u90a3\u4e2a\u63d0\u4ea4\u7ed9\u62c9\u51fa\u6765\uff0c\u7136\u540e\u5728  src/chrome/test/chromedriver/chrome/version.cc  \u91cc\u627e\u5230  kMinimumSupportedChromeVersion  \u8fd9\u4e2a\u53d8\u91cf\u3002",
            "title": "Chromedriver"
        },
        {
            "location": "/cn/advanced-concepts/chromedriver/#_1",
            "text": "Appium \u5b89\u88c5\u7684\u65f6\u5019\u9700\u8981\u4e0b\u8f7d Chromedriver\uff0c\u6240\u4ee5\u7ecf\u5e38\u4f1a\u9047\u5230\u7f51\u7edc\u95ee\u9898\uff0c\u5c24\u5176\u5728\u6709\u957f\u57ce\u9632\u706b\u5899\u7684\u4e2d\u56fd\u3002  Chromedriver \u9ed8\u8ba4\u662f\u4ece  https://chromedriver.storage.googleapis.com/  \u4e0b\u8f7d\u3002\u5982\u679c\u8981\u4f7f\u7528\u955c\u50cf\u7684\u8bdd\uff0c\u9700\u8981\u914d\u7f6enpm\u7684\u53c2\u6570  chromedriver_cdnurl  npm install appium-chromedriver --chromedriver_cdnurl=http://npm.taobao.org/mirrors/chromedriver  \u6216\u8005\u628a\u8fd9\u4e2a\u53c2\u6570\u52a0\u5230\u4f60\u7684  .npmrc  \u6587\u4ef6\u4e2d\u53bb.  chromedriver_cdnurl=http://npm.taobao.org/mirrors/chromedriver  \u4e5f\u53ef\u4ee5\u4f7f\u7528\u73af\u5883\u53d8\u91cf  CHROMEDRIVER_CDNURL .  CHROMEDRIVER_CDNURL=http://npm.taobao.org/mirrors/chromedriver npm install appium-chromedriver  \u5f53\u7136\u6700\u597d\u5f00\u7740\u4ee3\u7406\u6216\u8005vpn\u6765\u4e0b\u8f7d\u66f4\u597d\u3002  \u672c\u6587\u7531  lihuazhang  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u5b89\u88c5\u9047\u5230\u7684\u7f51\u7edc\u95ee\u9898"
        },
        {
            "location": "/cn/advanced-concepts/cross-domain-iframes/",
            "text": "\u8de8\u57df iFrame \u7684\u81ea\u52a8\u5316\n\n\n\u540c\u6e90\u7b56\u7565\n \u4f1a\u963b\u6b62 Appium \u5bf9\u548c\u7236\u9875\u9762\u4e0d\u540c\u57df\u7684 iFrame \u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002\n\n\n\u5b50\u57df\u540d\u7684\u89e3\u51b3\u65b9\u6848\n\n\n\u5982\u679c\u7236\u9875\u9762\u548c iFrame \u4f7f\u7528\u540c\u4e00\u4e2a domain (\u6bd4\u5982 \nsite.com\n \u548c \nshop.site.com\n)\uff0c\u4f60\u53ef\u4ee5\u5728\u7236\u9875\u9762\u548c iFrame \u91cc\u5c06 \ndocument.domain\n \u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5171\u540c\u7684domain\u3002\u8fd9\u5c31\u89e3\u51b3\u4e86\u540c\u6e90\u95ee\u9898\u3002\n\n\n\u7236\u9875\u9762:\n\n\n<html>\n  <head>\n    <script>\n      document.domain = 'site.com';\n    </script>\n  </head>\n  <body>\n    <iframe src=\"http://shop.site.com\" width=\"200\" height=\"200\"></iframe>\n  </body>\n</html>\n\n\n\n\n\u5b50 iFrame:\n\n\n<html>\n  <head>\n    <script>\n      document.domain = 'site.com';\n    </script>\n  </head>\n  <body>\n    <p>This is an iFrame!</p>\n  </body>\n</html>\n\n\n\n\n\u672c\u6587\u7531 \nlihuazhang\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Cross domain iframes"
        },
        {
            "location": "/cn/advanced-concepts/cross-domain-iframes/#iframe",
            "text": "\u540c\u6e90\u7b56\u7565  \u4f1a\u963b\u6b62 Appium \u5bf9\u548c\u7236\u9875\u9762\u4e0d\u540c\u57df\u7684 iFrame \u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002",
            "title": "\u8de8\u57df iFrame \u7684\u81ea\u52a8\u5316"
        },
        {
            "location": "/cn/advanced-concepts/cross-domain-iframes/#_1",
            "text": "\u5982\u679c\u7236\u9875\u9762\u548c iFrame \u4f7f\u7528\u540c\u4e00\u4e2a domain (\u6bd4\u5982  site.com  \u548c  shop.site.com )\uff0c\u4f60\u53ef\u4ee5\u5728\u7236\u9875\u9762\u548c iFrame \u91cc\u5c06  document.domain  \u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u5171\u540c\u7684domain\u3002\u8fd9\u5c31\u89e3\u51b3\u4e86\u540c\u6e90\u95ee\u9898\u3002  \u7236\u9875\u9762:  <html>\n  <head>\n    <script>\n      document.domain = 'site.com';\n    </script>\n  </head>\n  <body>\n    <iframe src=\"http://shop.site.com\" width=\"200\" height=\"200\"></iframe>\n  </body>\n</html>  \u5b50 iFrame:  <html>\n  <head>\n    <script>\n      document.domain = 'site.com';\n    </script>\n  </head>\n  <body>\n    <p>This is an iFrame!</p>\n  </body>\n</html>  \u672c\u6587\u7531  lihuazhang  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u5b50\u57df\u540d\u7684\u89e3\u51b3\u65b9\u6848"
        },
        {
            "location": "/cn/advanced-concepts/event-timings/",
            "text": "Appium \u4e8b\u4ef6\u8ba1\u65f6\n\n\nAppium \u63d0\u4f9b\u4e86\u4e00\u4e2a\u80fd\u529b\uff0c\u53ef\u4ee5\u83b7\u53d6\u5173\u4e8e\u542f\u52a8\u4fe1\u606f\u548c\u547d\u4ee4\u6267\u884c\u65f6\u95f4\u7684\u8ba1\u65f6\u4fe1\u606f\u3002\u8fd9\u662f\u7531 \neventTimings\n \u8fd9\u4e2a\u521d\u59cb\u5316\u53c2\u6570\u63a7\u5236\u7684\u9ad8\u7ea7\u529f\u80fd\uff08\u628a\u8fd9\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e3a \ntrue\n \u6765\u8bb0\u5f55\u4e8b\u4ef6\u7684\u8ba1\u65f6\u4fe1\u606f\uff09\n\n\n\u6253\u5f00\u8fd9\u4e2a\u53c2\u6570\uff0c\nGET /session/:id\n \u8fd9\u4e2a\u63a5\u53e3\u7684\u54cd\u5e94\u7ed3\u679c\uff08\u4e5f\u5c31\u662f\uff0c\ndriver.getSessionDetails()\n \u7684\u54cd\u5e94\u7ed3\u679c\uff0c\u6216\u8005\u7c7b\u4f3c\u7684\uff0c\u53d6\u51b3\u4e8e\u5ba2\u6237\u7aef\u5b9e\u73b0\uff09\u4e2d\u4f1a\u5305\u542b \nevents\n \u5c5e\u6027\u3002\u4e0b\u9762\u662f \nevents\n \u5c5e\u6027\u7684\u7ed3\u6784\n\n\n{\n    \"<event_type>\": [<occurence_timestamp_1>, ...],\n    \"commands\": [\n        {\n            \"cmd\": \"<command_name>\",\n            \"startTime\": <js_timestamp>,\n            \"endTime\": <js_timestamp>\n        },\n        ...\n    ]\n}\n\n\n\n\n\u6362\u53e5\u8bdd\u8bf4\uff0c\nevents\n \u5c5e\u6027\u5305\u542b\u4e24\u79cd\u7c7b\u522b\u7684\u5c5e\u6027\u3002\n\n\n\n\n\u4e8b\u4ef6\u7c7b\u578b\u7684\u540d\u5b57\u5c5e\u6027\n\n\ncommands\n \u5c5e\u6027\n\n\n\n\n\u4e8b\u4ef6\u7c7b\u578b\u7684\u540d\u5b57\u5c5e\u6027\u5bf9\u5e94\u7684\u662f\u4e8b\u4ef6\u53d1\u751f\u65f6\u7684\u65f6\u95f4\u6233\u5217\u8868\u3002\u56e0\u4e3a\u5728\u4e00\u4e2a\u4f1a\u8bdd\u5468\u671f\u5185\uff0c\u4e8b\u4ef6\u53ef\u80fd\u53d1\u751f\u591a\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u6233\u662f\u4e2a\u5217\u8868\u3002\u4e8b\u4ef6\u7684\u7c7b\u578b\u5305\u542b\uff1a\n\n\n\n\nnewSessionRequested\n\n\nnewSessionStarted\n\n\n\n\n\uff08\u4e2a\u522b driver \u4f1a\u5b9a\u4e49\u5c5e\u4e8e\u5b83\u4eec\u81ea\u5df1\u7684\u4e8b\u4ef6\u7c7b\u578b\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u6211\u4eec\u6ca1\u6cd5\u5217\u51fa\u4e00\u4e2a\u5b8c\u6574\u7684\u4e8b\u4ef6\u5217\u8868\u3002\u6700\u597d\u662f\u4ece\u4e00\u4e2a\u4f1a\u8bdd\u5f97\u5230\u54cd\u5e94\u7ed3\u679c\u4e4b\u540e\u53bb\u68c0\u67e5\u5404\u79cd\u53ef\u80fd\u7684\u4e8b\u4ef6\u7c7b\u578b\u3002\uff09\n\n\ncommands\n \u5c5e\u6027\u662f\u4e00\u4e2a\u5bf9\u8c61\u5217\u8868\u3002\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u5305\u62ec\u4e00\u4e2a appium \u7684\u5185\u90e8\u547d\u4ee4\u7684\u540d\u5b57\uff08\u4f8b\u5982 \nclick\n\uff09\uff0c\u4e5f\u5305\u62ec\u8fd9\u4e2a\u547d\u4ee4\u6267\u884c\u7684\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u3002\n\n\n\u901a\u8fc7\u8fd9\u4e9b\u6570\u636e\uff0c\u4f60\u53ef\u4ee5\u8ba1\u7b97\u51fa\u65f6\u95f4\u4e4b\u95f4\u7684\u95f4\u9694\uff0c\u6216\u8005\u4e8b\u4ef6\u7684\u7cbe\u786e\u65f6\u95f4\u8f74\uff0c\u6216\u8005\u67d0\u4e2a\u4e8b\u4ef6\u7684\u5e73\u5747\u65f6\u95f4\u7684\u7edf\u8ba1\u4fe1\u606f\u7b49\u7b49\u3002\n\n\n\u4f60\u53ea\u80fd\u83b7\u5f97\u8c03\u7528 \n/session/:id\n \u8fd9\u4e2a\u63a5\u53e3\u671f\u95f4\u53d1\u751f\u7684\u4e8b\u4ef6\u6570\u636e\uff0c\u6240\u4ee5\u83b7\u53d6\u4f1a\u8bdd\u5468\u671f\u6570\u636e\u7684\u6700\u4f73\u65f6\u95f4\u662f\u5728\u4f60\u6b63\u597d\u8981\u9000\u51fa\u4f1a\u8bdd\u4e4b\u524d\u3002\n\n\nAppium\u56e2\u961f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u8ba1\u65f6\u89e3\u6790\u5de5\u5177\uff0c\u8fd9\u4e2a\u5de5\u5177\u53ef\u4ee5\u89e3\u6790\u4e8b\u4ef6\u8ba1\u65f6\u7684\u8f93\u51fa\uff0c\u7136\u540e\u751f\u6210\u5404\u79cd\u62a5\u544a\uff1a\n\nappium/appium-event-parser\n.\n\n\n\u672c\u6587\u7531 yanqiang@douban.com \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Event timings"
        },
        {
            "location": "/cn/advanced-concepts/event-timings/#appium",
            "text": "Appium \u63d0\u4f9b\u4e86\u4e00\u4e2a\u80fd\u529b\uff0c\u53ef\u4ee5\u83b7\u53d6\u5173\u4e8e\u542f\u52a8\u4fe1\u606f\u548c\u547d\u4ee4\u6267\u884c\u65f6\u95f4\u7684\u8ba1\u65f6\u4fe1\u606f\u3002\u8fd9\u662f\u7531  eventTimings  \u8fd9\u4e2a\u521d\u59cb\u5316\u53c2\u6570\u63a7\u5236\u7684\u9ad8\u7ea7\u529f\u80fd\uff08\u628a\u8fd9\u4e2a\u53c2\u6570\u8bbe\u7f6e\u4e3a  true  \u6765\u8bb0\u5f55\u4e8b\u4ef6\u7684\u8ba1\u65f6\u4fe1\u606f\uff09  \u6253\u5f00\u8fd9\u4e2a\u53c2\u6570\uff0c GET /session/:id  \u8fd9\u4e2a\u63a5\u53e3\u7684\u54cd\u5e94\u7ed3\u679c\uff08\u4e5f\u5c31\u662f\uff0c driver.getSessionDetails()  \u7684\u54cd\u5e94\u7ed3\u679c\uff0c\u6216\u8005\u7c7b\u4f3c\u7684\uff0c\u53d6\u51b3\u4e8e\u5ba2\u6237\u7aef\u5b9e\u73b0\uff09\u4e2d\u4f1a\u5305\u542b  events  \u5c5e\u6027\u3002\u4e0b\u9762\u662f  events  \u5c5e\u6027\u7684\u7ed3\u6784  {\n    \"<event_type>\": [<occurence_timestamp_1>, ...],\n    \"commands\": [\n        {\n            \"cmd\": \"<command_name>\",\n            \"startTime\": <js_timestamp>,\n            \"endTime\": <js_timestamp>\n        },\n        ...\n    ]\n}  \u6362\u53e5\u8bdd\u8bf4\uff0c events  \u5c5e\u6027\u5305\u542b\u4e24\u79cd\u7c7b\u522b\u7684\u5c5e\u6027\u3002   \u4e8b\u4ef6\u7c7b\u578b\u7684\u540d\u5b57\u5c5e\u6027  commands  \u5c5e\u6027   \u4e8b\u4ef6\u7c7b\u578b\u7684\u540d\u5b57\u5c5e\u6027\u5bf9\u5e94\u7684\u662f\u4e8b\u4ef6\u53d1\u751f\u65f6\u7684\u65f6\u95f4\u6233\u5217\u8868\u3002\u56e0\u4e3a\u5728\u4e00\u4e2a\u4f1a\u8bdd\u5468\u671f\u5185\uff0c\u4e8b\u4ef6\u53ef\u80fd\u53d1\u751f\u591a\u6b21\uff0c\u6240\u4ee5\u65f6\u95f4\u6233\u662f\u4e2a\u5217\u8868\u3002\u4e8b\u4ef6\u7684\u7c7b\u578b\u5305\u542b\uff1a   newSessionRequested  newSessionStarted   \uff08\u4e2a\u522b driver \u4f1a\u5b9a\u4e49\u5c5e\u4e8e\u5b83\u4eec\u81ea\u5df1\u7684\u4e8b\u4ef6\u7c7b\u578b\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u6211\u4eec\u6ca1\u6cd5\u5217\u51fa\u4e00\u4e2a\u5b8c\u6574\u7684\u4e8b\u4ef6\u5217\u8868\u3002\u6700\u597d\u662f\u4ece\u4e00\u4e2a\u4f1a\u8bdd\u5f97\u5230\u54cd\u5e94\u7ed3\u679c\u4e4b\u540e\u53bb\u68c0\u67e5\u5404\u79cd\u53ef\u80fd\u7684\u4e8b\u4ef6\u7c7b\u578b\u3002\uff09  commands  \u5c5e\u6027\u662f\u4e00\u4e2a\u5bf9\u8c61\u5217\u8868\u3002\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u5305\u62ec\u4e00\u4e2a appium \u7684\u5185\u90e8\u547d\u4ee4\u7684\u540d\u5b57\uff08\u4f8b\u5982  click \uff09\uff0c\u4e5f\u5305\u62ec\u8fd9\u4e2a\u547d\u4ee4\u6267\u884c\u7684\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u3002  \u901a\u8fc7\u8fd9\u4e9b\u6570\u636e\uff0c\u4f60\u53ef\u4ee5\u8ba1\u7b97\u51fa\u65f6\u95f4\u4e4b\u95f4\u7684\u95f4\u9694\uff0c\u6216\u8005\u4e8b\u4ef6\u7684\u7cbe\u786e\u65f6\u95f4\u8f74\uff0c\u6216\u8005\u67d0\u4e2a\u4e8b\u4ef6\u7684\u5e73\u5747\u65f6\u95f4\u7684\u7edf\u8ba1\u4fe1\u606f\u7b49\u7b49\u3002  \u4f60\u53ea\u80fd\u83b7\u5f97\u8c03\u7528  /session/:id  \u8fd9\u4e2a\u63a5\u53e3\u671f\u95f4\u53d1\u751f\u7684\u4e8b\u4ef6\u6570\u636e\uff0c\u6240\u4ee5\u83b7\u53d6\u4f1a\u8bdd\u5468\u671f\u6570\u636e\u7684\u6700\u4f73\u65f6\u95f4\u662f\u5728\u4f60\u6b63\u597d\u8981\u9000\u51fa\u4f1a\u8bdd\u4e4b\u524d\u3002  Appium\u56e2\u961f\u7ef4\u62a4\u4e86\u4e00\u4e2a\u4e8b\u4ef6\u8ba1\u65f6\u89e3\u6790\u5de5\u5177\uff0c\u8fd9\u4e2a\u5de5\u5177\u53ef\u4ee5\u89e3\u6790\u4e8b\u4ef6\u8ba1\u65f6\u7684\u8f93\u51fa\uff0c\u7136\u540e\u751f\u6210\u5404\u79cd\u62a5\u544a\uff1a appium/appium-event-parser .  \u672c\u6587\u7531 yanqiang@douban.com \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "Appium \u4e8b\u4ef6\u8ba1\u65f6"
        },
        {
            "location": "/cn/advanced-concepts/grid/",
            "text": "Selenium Grid\n\n\n\u901a\u8fc7 \n--nodeconfig\n \u8fd9\u4e2a\u670d\u52a1\u7aef\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06 appium server \u6ce8\u518c\u5230\u672c\u5730\u7684 \nSelenium grid\n (\nGrid \u7684\u914d\u7f6e\u6587\u6863\n) \n\n\n>  appium --nodeconfig /path/to/nodeconfig.json\n# \u6216\u8005\u4f7f\u7528\u6e90\u6587\u4ef6\u6267\u884c\n> node . --nodeconfig /path/to/nodeconfig.json\n\n\n\n\n\u5728 node \u7684\u914d\u7f6e\u6587\u4ef6\u91cc\uff0c\u4f60\u9700\u8981\u5b9a\u4e49 \nbrowserName\n\uff0c\nversion\n \u548c \nplatform\n\u3002\n\u901a\u8fc7\u8fd9\u4e9b\u53c2\u6570\uff0cselenium grid \u4f1a\u5c06\u4f60\u7684\u6d4b\u8bd5\u5b9a\u5411\u5230\u6b63\u786e\u7684\u8bbe\u5907\u4e0a\u53bb\u3002\u4f60\u8fd8\u9700\u8981\u914d\u7f6e\u4f60\u7684 \nhost\n \u8be6\u7ec6\u4fe1\u606f\u548c\n\nselenium grid\n \u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u4f60\u53ef\u4ee5\u5728 \n\u8fd9\u91cc\n \u627e\u5230\u8be6\u7ec6\u7684\u53c2\u6570\u5217\u8868\u548c\u63cf\u8ff0\u4fe1\u606f\u3002\n\n\n\u4e00\u65e6\u4f60\u542f\u52a8\u4e86 appium \u670d\u52a1\u5668\u5e76\u4e14\u5728 grid \u91cc\u6ce8\u518c\u4e86\u4fe1\u606f\uff0c\u5c31\u53ef\u4ee5\u5728 grid \u63a7\u5236\u53f0\u53d1\u73b0\u4f60\u7684\u8bbe\u5907\uff1a\n\n\n\"http://\n\\<grid-ip-adress>\n:\n\\<grid-port>\n/grid/console\"\n\n\nGrid node\u7684\u914d\u7f6e\u6587\u4ef6\u4f8b\u5b50\n\n\n{\n  \"capabilities\":\n      [\n        {\n          \"browserName\": \"<e.g._iPhone5_or_iPad4>\",\n          \"version\":\"<version_of_iOS_e.g._7.1>\",\n          \"maxInstances\": 1,\n          \"platform\":\"<platform_e.g._MAC_or_ANDROID>\"\n        }\n      ],\n  \"configuration\":\n  {\n    \"cleanUpCycle\":2000,\n    \"timeout\":30000,\n    \"proxy\": \"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\n    \"url\":\"http://<host_name_appium_server_or_ip-address_appium_server>:<appium_port>/wd/hub\",\n    \"host\": <host_name_appium_server_or_ip-address_appium_server>,\n    \"port\": <appium_port>,\n    \"maxSession\": 1,\n    \"register\": true,\n    \"registerCycle\": 5000,\n    \"hubPort\": <grid_port>,\n    \"hubHost\": \"<Grid_host_name_or_grid_ip-address>\"\n  }\n}\n\n\n\n\n\u53ef\u4ee5\u5728 \n\u8fd9\u91cc\n\u67e5\u770b\u6709\u6548\u7684 platform \u53c2\u6570\u3002\n\n\n\u5982\u679c\u6ca1\u6709\u7ed9\u51fa \nurl\n\u3001\nhost\n \u548c \nport\n\uff0c\u914d\u7f6e\u4f1a\u81ea\u52a8\u6307\u5411 \nlocalhost:whatever-port-Appium-started-on\n\u3002\n\n\n\u5982\u679c\u4f60\u7684 Appium Server \u548c Selenium Grid \u6ca1\u6709\u8fd0\u884c\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u4e3a\u786e\u4fdd Selenium Grid \u8fde\u63a5\u6b63\u5e38\uff0c\u8bf7\u5728\u4f60\u7684 \nhost\n & \nurl\n \u4e0a\u4f7f\u7528\u5916\u90e8\u57df\u540d\u6216 IP \u5730\u5740\uff0c\u800c\u4e0d\u662f localhost \u548c 127.0.0.1\n\n\n\u672c\u6587\u7531 \ntobecrazy\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Grid"
        },
        {
            "location": "/cn/advanced-concepts/grid/#selenium-grid",
            "text": "\u901a\u8fc7  --nodeconfig  \u8fd9\u4e2a\u670d\u52a1\u7aef\u53c2\u6570\uff0c\u53ef\u4ee5\u5c06 appium server \u6ce8\u518c\u5230\u672c\u5730\u7684  Selenium grid  ( Grid \u7684\u914d\u7f6e\u6587\u6863 )   >  appium --nodeconfig /path/to/nodeconfig.json\n# \u6216\u8005\u4f7f\u7528\u6e90\u6587\u4ef6\u6267\u884c\n> node . --nodeconfig /path/to/nodeconfig.json  \u5728 node \u7684\u914d\u7f6e\u6587\u4ef6\u91cc\uff0c\u4f60\u9700\u8981\u5b9a\u4e49  browserName \uff0c version  \u548c  platform \u3002\n\u901a\u8fc7\u8fd9\u4e9b\u53c2\u6570\uff0cselenium grid \u4f1a\u5c06\u4f60\u7684\u6d4b\u8bd5\u5b9a\u5411\u5230\u6b63\u786e\u7684\u8bbe\u5907\u4e0a\u53bb\u3002\u4f60\u8fd8\u9700\u8981\u914d\u7f6e\u4f60\u7684  host  \u8be6\u7ec6\u4fe1\u606f\u548c selenium grid  \u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u4f60\u53ef\u4ee5\u5728  \u8fd9\u91cc  \u627e\u5230\u8be6\u7ec6\u7684\u53c2\u6570\u5217\u8868\u548c\u63cf\u8ff0\u4fe1\u606f\u3002  \u4e00\u65e6\u4f60\u542f\u52a8\u4e86 appium \u670d\u52a1\u5668\u5e76\u4e14\u5728 grid \u91cc\u6ce8\u518c\u4e86\u4fe1\u606f\uff0c\u5c31\u53ef\u4ee5\u5728 grid \u63a7\u5236\u53f0\u53d1\u73b0\u4f60\u7684\u8bbe\u5907\uff1a  \"http:// \\<grid-ip-adress> : \\<grid-port> /grid/console\"",
            "title": "Selenium Grid"
        },
        {
            "location": "/cn/advanced-concepts/grid/#grid-node",
            "text": "{\n  \"capabilities\":\n      [\n        {\n          \"browserName\": \"<e.g._iPhone5_or_iPad4>\",\n          \"version\":\"<version_of_iOS_e.g._7.1>\",\n          \"maxInstances\": 1,\n          \"platform\":\"<platform_e.g._MAC_or_ANDROID>\"\n        }\n      ],\n  \"configuration\":\n  {\n    \"cleanUpCycle\":2000,\n    \"timeout\":30000,\n    \"proxy\": \"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\n    \"url\":\"http://<host_name_appium_server_or_ip-address_appium_server>:<appium_port>/wd/hub\",\n    \"host\": <host_name_appium_server_or_ip-address_appium_server>,\n    \"port\": <appium_port>,\n    \"maxSession\": 1,\n    \"register\": true,\n    \"registerCycle\": 5000,\n    \"hubPort\": <grid_port>,\n    \"hubHost\": \"<Grid_host_name_or_grid_ip-address>\"\n  }\n}  \u53ef\u4ee5\u5728  \u8fd9\u91cc \u67e5\u770b\u6709\u6548\u7684 platform \u53c2\u6570\u3002  \u5982\u679c\u6ca1\u6709\u7ed9\u51fa  url \u3001 host  \u548c  port \uff0c\u914d\u7f6e\u4f1a\u81ea\u52a8\u6307\u5411  localhost:whatever-port-Appium-started-on \u3002  \u5982\u679c\u4f60\u7684 Appium Server \u548c Selenium Grid \u6ca1\u6709\u8fd0\u884c\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\uff0c\u4e3a\u786e\u4fdd Selenium Grid \u8fde\u63a5\u6b63\u5e38\uff0c\u8bf7\u5728\u4f60\u7684  host  &  url  \u4e0a\u4f7f\u7528\u5916\u90e8\u57df\u540d\u6216 IP \u5730\u5740\uff0c\u800c\u4e0d\u662f localhost \u548c 127.0.0.1  \u672c\u6587\u7531  tobecrazy  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "Grid node\u7684\u914d\u7f6e\u6587\u4ef6\u4f8b\u5b50"
        },
        {
            "location": "/cn/advanced-concepts/hybrid/",
            "text": "\u81ea\u52a8\u5316\u6df7\u5408\u5e94\u7528\n\n\nAppium \u5176\u4e2d\u4e00\u4e2a\u7406\u5ff5\u5c31\u662f\u4f60\u4e0d\u80fd\u4e3a\u4e86\u6d4b\u8bd5\u5e94\u7528\u800c\u4fee\u6539\u5e94\u7528\u3002\u4e3a\u4e86\u7b26\u5408\u8fd9\u4e2a\u65b9\u6cd5\u5b66\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Selenium \u6d4b\u8bd5\u4f20\u7edf web \u5e94\u7528\u7684\u65b9\u6cd5\u6765\u6d4b\u8bd5\u6df7\u5408 web \u5e94\u7528 (\u6bd4\u5982\uff0ciOS \u5e94\u7528\u91cc\u7684\u5143\u7d20 \"\nUIAWebView\n\") \uff0c\u8fd9\u662f\u6709\u53ef\u80fd\u7684\u3002\u8fd9\u91cc\u4f1a\u6709\u4e00\u4e9b\u6280\u672f\u6027\u7684\u590d\u6742\uff0cAppium \u9700\u8981\u77e5\u9053\u4f60\u662f\u60f3\u6d4b\u8bd5\u539f\u751f\u90e8\u5206\u5462\u8fd8\u662fweb\u90e8\u5206\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u8fd8\u80fd\u9075\u5b88 WebDriver \u7684\u534f\u8bae\u3002\n\n\n\u5728 Appium \u6d4b\u8bd5\u91cc\uff0c\u4f60\u9700\u8981\u4ee5\u4e0b\u51e0\u6b65\u6765\u548c web \u9875\u9762\u4ea4\u6d89\uff1a\n\n\n\n\n\u5207\u5230 webview \u90e8\u5206\n\n\n\u8c03\u7528 \nGET session/:sessionId/contexts\n\n\n\u8fd9\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6211\u4eec\u80fd\u8bbf\u95ee\u7684 context \u7684\u5217\u8868\uff0c\u6bd4\u5982 'NATIVE_APP' \u6216\u8005 'WEBVIEW_1'\n\n\n\u7528 context \u7684 id \u4f5c\u4e3a\u53c2\u6570\uff0c\u8c03\u7528\nPOST session/:sessionId/context\n\u65b9\u6cd5\uff0c\u5207\u6362\u5230 webview \u4e2d\u53bb\u3002\n\n\n(\u8fd9\u4f1a\u5c06\u4f60\u7684 Appium session \u653e\u5165\u4e00\u4e2a\u6a21\u5f0f\uff0c \u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\uff0c\u6240\u6709\u7684\u547d\u4ee4\u90fd\u4f1a\u88ab\u89e3\u91ca\u6210\u81ea\u52a8\u5316 web \u89c6\u56fe\u800c\u4e0d\u662f\u539f\u751f\u7684\u90e8\u5206\u3002\u6bd4\u5982\uff0c\u5f53\u4f60\u8fd0\u884c getElementByTagName\uff0c\u5b83\u4f1a\u5728 web \u89c6\u56fe\u7684 DOM \u4e0a\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u8fd4\u56de UIAElements\u3002\u5f53\u7136\uff0c\u4e00\u4e2a Webdriver \u7684\u65b9\u6cd5\u53ea\u80fd\u5728\u4e00\u4e2a\u4e0a\u4e0b\u6587\u4e2d\u6709\u610f\u4e49\uff0c\u6240\u4ee5\u5982\u679c\u5728\u9519\u8bef\u7684\u4e0a\u4e0b\u6587\uff0c\u4f60\u4f1a\u6536\u5230\u9519\u8bef\u4fe1\u606f\u3002)\n\n\n\u5982\u679c\u4f60\u60f3\u505c\u6b62 web \u89c6\u56fe\u7684\u81ea\u52a8\u5316\uff0c\u56de\u5230\u539f\u751f\u90e8\u5206\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u7528 \ncontext\n \u8c03\u7528\u6765\u79bb\u5f00 web \u5c42\uff0c\u53c2\u6570\u4f20\u539f\u751f context id \u5373\u53ef\u3002\n\n\n\n\n// javascript\n// \u5047\u5b9a\u4f60\u5df2\u7ecf\u521d\u59cb\u5316driver\ndriver\n \u00a0 \u00a0.contexts().then(function (contexts) { // \u83b7\u53d6view\u5217\u8868\uff0c\u8fd4\u56de\u6570\u7ec4\u683c\u5f0f: [\"NATIVE_APP\",\"WEBVIEW_1\"]\n \u00a0 \u00a0 \u00a0 \u00a0return driver.context(contexts[1]); // \u9009\u62e9 webview context\n    })\n\n \u00a0 \u00a0// \u6267\u884cweb\u6d4b\u8bd5\n \u00a0 \u00a0.elementsByCss('.green_button').click()\n\n    .context('NATIVE_APP') // leave webview context\n\n \u00a0 \u00a0//\u628anative\u64cd\u4f5c\u653e\u8fd9\u91cc\n \u00a0 \u00a0\n \u00a0 \u00a0.quit() // \u9000\u51fadriver\n\n\n\n\n// java\n// \u5047\u5b9a\u6211\u4eec\u8bbe\u7f6e\u4e86capabilities\ndriver = new AppiumDriver(new URL(\"http://127.0.0.1:4723/wd/hub\"), capabilities);\n\nSet<String> contextNames = driver.getContextHandles();\nfor (String contextName : contextNames) {\n \u00a0 \u00a0System.out.println(contextNames); //\u8f93\u51fa NATIVE_APP \\n WEBVIEW_1\n}\ndriver.context(contextNames.toArray()[1]); // \u8bbe\u7f6e\u5f53\u524d context \u4e3a WEBVIEW_1\n\n//\u6267\u884cweb\u6d4b\u8bd5\nString myText = driver.findElement(By.cssSelector(\".green_button\")).click();\n\ndriver.context(\"NATIVE_APP\");\n\n//\u5982\u679c\u9700\u8981\u6b64\u6b21\u653e\u7f6enative\u6d4b\u8bd5\u811a\u672c\n\ndriver.quit();\n\n\n\n\n# ruby\n# \u5047\u5b9a\u6211\u4eec\u8bbe\u7f6e\u4e86capabilities\n@driver = Selenium::WebDriver.for(:remote, :desired_capabilities => capabilities, :url => SERVER_URL)\n\n# I switch to the last context because its always the webview in our case, in other cases you may need to specify a context\n# View the appium logs while running @driver.contexts to figure out which context is the one you want and find the associated ID\n# Then switch to it using @driver.switch_to.context(\"WEBVIEW_6\")\n\nGiven(/^I switch to webview$/) do\n    webview = @driver.contexts.last\n    @driver.switch_to.context(webview)\nend\n\nGiven(/^I switch out of webview$/) do\n    @driver.switch_to.context(@driver.contexts.first)\nend\n\n# Now you can use CSS to select an element inside your webview\n\nAnd(/^I click a webview button $/) do\n    @driver.find_element(:css, \".green_button\").click\nend\n\n\n\n\n# python\n# assuming we have an initialized `driver` object for an app\n\n# switch to webview\nwebview = driver.contexts.last\ndriver.switch_to.context(webview)\n\n# do some webby stuff\ndriver.find_element(:css, \".green_button\").click\n\n# switch back to native view\ndriver.switch_to.context(driver.contexts.first)\n\n# do more native testing if we want\n\ndriver.quit()\n\n\n\n\n// php\n// assuming we have an initialized `driver` object in an AppiumTestCase\n\npublic function testThings()\n{\n        $expected_contexts = array(\n                0 => 'NATIVE_APP',\n                1 => 'WEBVIEW_1'\n        );\n\n        $contexts = $this->contexts();\n        $this->assertEquals($expected_contexts, $contexts);\n\n        $this->context($contexts[1]);\n        $context = $this->context();\n        $this->assertEquals('WEBVIEW_1', $context);\n\n        // do webby stuff\n\n        $this->context('NATIVE_APP');\n\n        // do mobile stuff\n}\n\n\n\n\n\u81ea\u52a8\u5316 Android \u7684\u6df7\u5408\u5e94\u7528\n\n\nAppium \u901a\u8fc7 Chromedriver \u5185\u5efa\u6df7\u5408\u5e94\u7528\u652f\u6301\u3002Appium \u4e5f\u53ef\u4ee5\u4f7f\u7528 Selendroid \u652f\u6301 4.4 \u4e4b\u524d\u7684\u8bbe\u5907\u7684 webview \u6d4b\u8bd5\u3002\uff08\u4f60\u9700\u8981\u5728 desired capability \u91cc\u6307\u5b9a \n\"device\": \"selendroid\"\n\uff09\u3002\n\n\n\u8bf7\u786e\u4fdd\n\nsetWebContentsDebuggingEnabled\n \u8bbe\u7f6e\u4e3a true\u3002\u5177\u4f53\u89c1\nremote debugging docs\n.\n\n\n\u4e00\u65e6\u4f60\u8bbe\u7f6e\u4e86 desired capabilities\uff0c\u5f00\u59cb\u4e00\u4e2a appium \u4f1a\u8bdd\uff0c\u9075\u5faa\u4e0a\u9762\u7684\u6559\u7a0b\u3002\n\n\n\u81ea\u52a8\u5316 iOS \u6df7\u5408\u5e94\u7528\n\n\nAppium \u4f7f\u7528 remote debugger \u521b\u5efa\u548c webview \u7684\u4ea4\u4e92\u8fde\u63a5\u3002\u5f53\u5728\u6a21\u62df\u5668\u4e0a\u6267\u884c\u4e0b\u9762\u4f8b\u5b50\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5efa\u7acb\u8fde\u63a5\uff0c\u56e0\u4e3a\u6a21\u62df\u5668\u548c appium \u670d\u52a1\u5668\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u3002\n\n\n\u4e00\u65e6\u4f60\u8bbe\u7f6e\u4e86 desired capabilities\uff0c\u5f00\u59cb\u4e00\u4e2a appium \u4f1a\u8bdd\uff0c\u9075\u5faa\u4e0a\u9762\u7684\u6559\u7a0b\u3002\n\n\n\u5728 iOS \u771f\u673a\u4e0a\u8fd0\u884c\n\n\n\u5f53\u5728\u771f\u673a\u4e0a\u8fd0\u884c\u7528\u4f8b\u65f6\uff0cappium \u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee web \u89c6\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u901a\u8fc7 USB \u7ebf\u7f06\u6765\u5efa\u7acb\u8fde\u63a5\u3002\u6211\u4eec\u4f7f\u7528 \nios-webkit-debugger-proxy\n\u5efa\u7acb\u8fde\u63a5\u3002\n\n\n\u5982\u4f55\u5b89\u88c5\u548c\u4f7f\u7528 iOS webkit debug proxy\uff0c\u8bf7\u53c2\u8003 \niOS webkit debug proxy\n \n\n\n\u672c\u6587\u7531 \ntobecrazy\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Hybrid"
        },
        {
            "location": "/cn/advanced-concepts/hybrid/#_1",
            "text": "Appium \u5176\u4e2d\u4e00\u4e2a\u7406\u5ff5\u5c31\u662f\u4f60\u4e0d\u80fd\u4e3a\u4e86\u6d4b\u8bd5\u5e94\u7528\u800c\u4fee\u6539\u5e94\u7528\u3002\u4e3a\u4e86\u7b26\u5408\u8fd9\u4e2a\u65b9\u6cd5\u5b66\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Selenium \u6d4b\u8bd5\u4f20\u7edf web \u5e94\u7528\u7684\u65b9\u6cd5\u6765\u6d4b\u8bd5\u6df7\u5408 web \u5e94\u7528 (\u6bd4\u5982\uff0ciOS \u5e94\u7528\u91cc\u7684\u5143\u7d20 \" UIAWebView \") \uff0c\u8fd9\u662f\u6709\u53ef\u80fd\u7684\u3002\u8fd9\u91cc\u4f1a\u6709\u4e00\u4e9b\u6280\u672f\u6027\u7684\u590d\u6742\uff0cAppium \u9700\u8981\u77e5\u9053\u4f60\u662f\u60f3\u6d4b\u8bd5\u539f\u751f\u90e8\u5206\u5462\u8fd8\u662fweb\u90e8\u5206\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u6211\u4eec\u8fd8\u80fd\u9075\u5b88 WebDriver \u7684\u534f\u8bae\u3002  \u5728 Appium \u6d4b\u8bd5\u91cc\uff0c\u4f60\u9700\u8981\u4ee5\u4e0b\u51e0\u6b65\u6765\u548c web \u9875\u9762\u4ea4\u6d89\uff1a   \u5207\u5230 webview \u90e8\u5206  \u8c03\u7528  GET session/:sessionId/contexts  \u8fd9\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6211\u4eec\u80fd\u8bbf\u95ee\u7684 context \u7684\u5217\u8868\uff0c\u6bd4\u5982 'NATIVE_APP' \u6216\u8005 'WEBVIEW_1'  \u7528 context \u7684 id \u4f5c\u4e3a\u53c2\u6570\uff0c\u8c03\u7528 POST session/:sessionId/context \u65b9\u6cd5\uff0c\u5207\u6362\u5230 webview \u4e2d\u53bb\u3002  (\u8fd9\u4f1a\u5c06\u4f60\u7684 Appium session \u653e\u5165\u4e00\u4e2a\u6a21\u5f0f\uff0c \u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\uff0c\u6240\u6709\u7684\u547d\u4ee4\u90fd\u4f1a\u88ab\u89e3\u91ca\u6210\u81ea\u52a8\u5316 web \u89c6\u56fe\u800c\u4e0d\u662f\u539f\u751f\u7684\u90e8\u5206\u3002\u6bd4\u5982\uff0c\u5f53\u4f60\u8fd0\u884c getElementByTagName\uff0c\u5b83\u4f1a\u5728 web \u89c6\u56fe\u7684 DOM \u4e0a\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u8fd4\u56de UIAElements\u3002\u5f53\u7136\uff0c\u4e00\u4e2a Webdriver \u7684\u65b9\u6cd5\u53ea\u80fd\u5728\u4e00\u4e2a\u4e0a\u4e0b\u6587\u4e2d\u6709\u610f\u4e49\uff0c\u6240\u4ee5\u5982\u679c\u5728\u9519\u8bef\u7684\u4e0a\u4e0b\u6587\uff0c\u4f60\u4f1a\u6536\u5230\u9519\u8bef\u4fe1\u606f\u3002)  \u5982\u679c\u4f60\u60f3\u505c\u6b62 web \u89c6\u56fe\u7684\u81ea\u52a8\u5316\uff0c\u56de\u5230\u539f\u751f\u90e8\u5206\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u7528  context  \u8c03\u7528\u6765\u79bb\u5f00 web \u5c42\uff0c\u53c2\u6570\u4f20\u539f\u751f context id \u5373\u53ef\u3002   // javascript\n// \u5047\u5b9a\u4f60\u5df2\u7ecf\u521d\u59cb\u5316driver\ndriver\n \u00a0 \u00a0.contexts().then(function (contexts) { // \u83b7\u53d6view\u5217\u8868\uff0c\u8fd4\u56de\u6570\u7ec4\u683c\u5f0f: [\"NATIVE_APP\",\"WEBVIEW_1\"]\n \u00a0 \u00a0 \u00a0 \u00a0return driver.context(contexts[1]); // \u9009\u62e9 webview context\n    })\n\n \u00a0 \u00a0// \u6267\u884cweb\u6d4b\u8bd5\n \u00a0 \u00a0.elementsByCss('.green_button').click()\n\n    .context('NATIVE_APP') // leave webview context\n\n \u00a0 \u00a0//\u628anative\u64cd\u4f5c\u653e\u8fd9\u91cc\n \u00a0 \u00a0\n \u00a0 \u00a0.quit() // \u9000\u51fadriver  // java\n// \u5047\u5b9a\u6211\u4eec\u8bbe\u7f6e\u4e86capabilities\ndriver = new AppiumDriver(new URL(\"http://127.0.0.1:4723/wd/hub\"), capabilities);\n\nSet<String> contextNames = driver.getContextHandles();\nfor (String contextName : contextNames) {\n \u00a0 \u00a0System.out.println(contextNames); //\u8f93\u51fa NATIVE_APP \\n WEBVIEW_1\n}\ndriver.context(contextNames.toArray()[1]); // \u8bbe\u7f6e\u5f53\u524d context \u4e3a WEBVIEW_1\n\n//\u6267\u884cweb\u6d4b\u8bd5\nString myText = driver.findElement(By.cssSelector(\".green_button\")).click();\n\ndriver.context(\"NATIVE_APP\");\n\n//\u5982\u679c\u9700\u8981\u6b64\u6b21\u653e\u7f6enative\u6d4b\u8bd5\u811a\u672c\n\ndriver.quit();  # ruby\n# \u5047\u5b9a\u6211\u4eec\u8bbe\u7f6e\u4e86capabilities\n@driver = Selenium::WebDriver.for(:remote, :desired_capabilities => capabilities, :url => SERVER_URL)\n\n# I switch to the last context because its always the webview in our case, in other cases you may need to specify a context\n# View the appium logs while running @driver.contexts to figure out which context is the one you want and find the associated ID\n# Then switch to it using @driver.switch_to.context(\"WEBVIEW_6\")\n\nGiven(/^I switch to webview$/) do\n    webview = @driver.contexts.last\n    @driver.switch_to.context(webview)\nend\n\nGiven(/^I switch out of webview$/) do\n    @driver.switch_to.context(@driver.contexts.first)\nend\n\n# Now you can use CSS to select an element inside your webview\n\nAnd(/^I click a webview button $/) do\n    @driver.find_element(:css, \".green_button\").click\nend  # python\n# assuming we have an initialized `driver` object for an app\n\n# switch to webview\nwebview = driver.contexts.last\ndriver.switch_to.context(webview)\n\n# do some webby stuff\ndriver.find_element(:css, \".green_button\").click\n\n# switch back to native view\ndriver.switch_to.context(driver.contexts.first)\n\n# do more native testing if we want\n\ndriver.quit()  // php\n// assuming we have an initialized `driver` object in an AppiumTestCase\n\npublic function testThings()\n{\n        $expected_contexts = array(\n                0 => 'NATIVE_APP',\n                1 => 'WEBVIEW_1'\n        );\n\n        $contexts = $this->contexts();\n        $this->assertEquals($expected_contexts, $contexts);\n\n        $this->context($contexts[1]);\n        $context = $this->context();\n        $this->assertEquals('WEBVIEW_1', $context);\n\n        // do webby stuff\n\n        $this->context('NATIVE_APP');\n\n        // do mobile stuff\n}",
            "title": "\u81ea\u52a8\u5316\u6df7\u5408\u5e94\u7528"
        },
        {
            "location": "/cn/advanced-concepts/hybrid/#android",
            "text": "Appium \u901a\u8fc7 Chromedriver \u5185\u5efa\u6df7\u5408\u5e94\u7528\u652f\u6301\u3002Appium \u4e5f\u53ef\u4ee5\u4f7f\u7528 Selendroid \u652f\u6301 4.4 \u4e4b\u524d\u7684\u8bbe\u5907\u7684 webview \u6d4b\u8bd5\u3002\uff08\u4f60\u9700\u8981\u5728 desired capability \u91cc\u6307\u5b9a  \"device\": \"selendroid\" \uff09\u3002  \u8bf7\u786e\u4fdd setWebContentsDebuggingEnabled  \u8bbe\u7f6e\u4e3a true\u3002\u5177\u4f53\u89c1 remote debugging docs .  \u4e00\u65e6\u4f60\u8bbe\u7f6e\u4e86 desired capabilities\uff0c\u5f00\u59cb\u4e00\u4e2a appium \u4f1a\u8bdd\uff0c\u9075\u5faa\u4e0a\u9762\u7684\u6559\u7a0b\u3002",
            "title": "\u81ea\u52a8\u5316 Android \u7684\u6df7\u5408\u5e94\u7528"
        },
        {
            "location": "/cn/advanced-concepts/hybrid/#ios",
            "text": "Appium \u4f7f\u7528 remote debugger \u521b\u5efa\u548c webview \u7684\u4ea4\u4e92\u8fde\u63a5\u3002\u5f53\u5728\u6a21\u62df\u5668\u4e0a\u6267\u884c\u4e0b\u9762\u4f8b\u5b50\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5efa\u7acb\u8fde\u63a5\uff0c\u56e0\u4e3a\u6a21\u62df\u5668\u548c appium \u670d\u52a1\u5668\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u3002  \u4e00\u65e6\u4f60\u8bbe\u7f6e\u4e86 desired capabilities\uff0c\u5f00\u59cb\u4e00\u4e2a appium \u4f1a\u8bdd\uff0c\u9075\u5faa\u4e0a\u9762\u7684\u6559\u7a0b\u3002",
            "title": "\u81ea\u52a8\u5316 iOS \u6df7\u5408\u5e94\u7528"
        },
        {
            "location": "/cn/advanced-concepts/hybrid/#ios_1",
            "text": "\u5f53\u5728\u771f\u673a\u4e0a\u8fd0\u884c\u7528\u4f8b\u65f6\uff0cappium \u65e0\u6cd5\u76f4\u63a5\u8bbf\u95ee web \u89c6\u56fe\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u901a\u8fc7 USB \u7ebf\u7f06\u6765\u5efa\u7acb\u8fde\u63a5\u3002\u6211\u4eec\u4f7f\u7528  ios-webkit-debugger-proxy \u5efa\u7acb\u8fde\u63a5\u3002  \u5982\u4f55\u5b89\u88c5\u548c\u4f7f\u7528 iOS webkit debug proxy\uff0c\u8bf7\u53c2\u8003  iOS webkit debug proxy    \u672c\u6587\u7531  tobecrazy  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u5728 iOS \u771f\u673a\u4e0a\u8fd0\u884c"
        },
        {
            "location": "/cn/advanced-concepts/ios-webkit-debug-proxy/",
            "text": "iOS WebKit \u8c03\u8bd5\u4ee3\u7406\n\n\n\u501f\u52a9 \nios_webkit_debug_proxy\n\uff0cAppium \u53ef\u4ee5\u5728 iOS \u771f\u673a\u4e0a\u8bbf\u95ee webview\u3002\n\n\n\u5b89\u88c5\n\n\n\u4f7f\u7528 Homebrew\n\n\n\u5728\u7ec8\u7aef\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u4f7f\u7528 Homebrew \u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684 ios-webkit-debug-proxy\uff1a\n\n\n``` center\n # \u6ca1\u6709\u5b89\u88c5 brew \u65f6\u624d\u9700\u8981\u7b2c\u4e00\u6761\u547d\u4ee4\u3002\n\n\n\n\nruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\nbrew update\nbrew install ios-webkit-debug-proxy\n ```\n\n\n\n\n\u4ece\u6e90\u7801\u6784\u5efa ios-webkit-debug-proxy\n\n\n\u5728\u4f60\u7684 mac \u4e0a\u6253\u5f00\u7ec8\u7aef\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u559c\u6b22\u7684\u641c\u7d22\u5f15\u64ce\u67e5\u627e\u5982\u4f55\u6253\u5f00\u7ec8\u7aef\u7684\u64cd\u4f5c\u6307\u5357\u3002\u6253\u5f00\u540e\u786e\u8ba4\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86 \nHomebew\n\uff1a\n\n\n$ brew -v\n\n\n\n\n\u786e\u8ba4 Homebrew \u5df2\u5b89\u88c5\u540e\uff0c\u6309\u4e0b\u9762\u7684\u505a\uff08 $ \u662f\u547d\u4ee4\u884c\u63d0\u793a\u7b26\uff0c\u4e0d\u7528\u8f93\u5165\uff09\uff1a\n\n\n$ cd  ~\n$ sudo apt-get install autoconf automake libusb-dev libusb-1.0-0-dev libplist-dev libplist++-dev usbmuxd libtool libimobiledevice-dev\n$ git clone https://github.com/google/ios-webkit-debug-proxy.git\n$ cd ios-webkit-debug-proxy\n$ ./autogen.sh\n$ make\n$ sudo make install\n\n\n\n\n\u8fd0\u884c ios-webkit-debug-proxy\n\n\n\u5b89\u88c5\u540e\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u542f\u52a8\u4ee3\u7406\uff1a\n\n\n# \u4fee\u6539 udid \u4e3a\u76ee\u6807\u8bbe\u5907\u7684 udid \u5e76\u786e\u8ba4 remote-debugger \u4f7f\u7528 27753 \u7aef\u53e3\u3002\n# \u4f60\u53ef\u4ee5\u4ece\u82f9\u679c\u5f00\u53d1\u8005\u8d44\u6e90\u5e73\u53f0\u5b66\u4e60\u5982\u4f55\u83b7\u53d6 UDID \u3002\n> ios_webkit_debug_proxy -c 0e4b2f612b65e98c1d07d22ee08678130d345429:27753 -d\n\n\n\n\n\u4f60\u4e5f\u53ef\u4ee5\u8bbe\u7f6e 'startIWDP' desired capability \u4e3a true (https://github.com/appium/appium/blob/master/docs/cn/writing-running-appium/caps.md)\u3002Appium \u4f1a\u5f00\u542f\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e0a\u8ff0\u547d\u4ee4\u5e76\u8bbe\u7f6e udid\uff0c\u6240\u4ee5\u4f60\u4e0d\u518d\u9700\u8981\u81ea\u5df1\u8fd0\u884c ios_webkit_debug_proxy \u3002Appium \u4f1a\u76d1\u63a7 ios-webkit-debug-proxy\uff0c\u4e00\u65e6\u5d29\u6e83\u5c31\u4f1a\u91cd\u542f\u3002\n\n\n// desired capabilities \u793a\u4f8b\n{\n  \"browserName\": \"Safari\",\n  \"platformName\": \"iOS\",\n  \"deviceName\": \"iPhone 7\",\n  \"automationName\": \"XCUITest\",\n  \"startIWDP\": true,\n  \"udid\": \"auto\"\n}\n\n\n\n\n\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 \nios-webkit-debug-proxy-launcher\n \u2014\u2014 Appium \u4ee3\u7801\u5e93\u4e2d\u7684\u4e00\u4e2a\u5c0f\u811a\u672c \u2014\u2014 \u6765\u542f\u52a8\u4ee3\u7406\u3002\u5b83\u4f1a\u76d1\u63a7\u65e5\u5fd7\u4e2d\u7684\u9519\u8bef\uff0c\u5e76\u5728\u9700\u8981\u65f6\u91cd\u542f\u4ee3\u7406\u3002\n\n\n# \u4fee\u6539 udid\n# \u6ce8\u610f\uff0c\u5728 Appium \u4ed3\u5e93\u4e2d\u8fd0\u884c\n> ./bin/ios-webkit-debug-proxy-launcher.js -c 0e4b2f612b65e98c1d07d22ee08678130d345429:27753 -d\n\n\n\n\n\u6ce8\u610f\uff1a\n \u4e3a\u4e86\u5141\u8bb8\u5efa\u7acb\u8fde\u63a5\uff0c\u8bbe\u5907\u4e0a\u9700\u8981\u6253\u5f00 \n\"Web \u68c0\u67e5\u5668\"\n\u3002\u5728 \n\u8bbe\u7f6e >\nsafari > \u9ad8\u7ea7\n \u4e2d\u6253\u5f00\u3002Web \u68c0\u67e5\u5668\u4f5c\u4e3a iOS6 \u7684\u4e00\u90e8\u5206\u88ab\u6dfb\u52a0\uff0c\u4e0d\u5728\u4e4b\u524d\u7684\u7248\u672c\u4e2d\u63d0\u4f9b\uff0c\u8bf7\u77e5\u6089\u3002\n\n\n\u672c\u6587\u7531 \nsanlengjingvv\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Ios webkit debug proxy"
        },
        {
            "location": "/cn/advanced-concepts/ios-webkit-debug-proxy/#ios-webkit",
            "text": "\u501f\u52a9  ios_webkit_debug_proxy \uff0cAppium \u53ef\u4ee5\u5728 iOS \u771f\u673a\u4e0a\u8bbf\u95ee webview\u3002",
            "title": "iOS WebKit \u8c03\u8bd5\u4ee3\u7406"
        },
        {
            "location": "/cn/advanced-concepts/ios-webkit-debug-proxy/#_1",
            "text": "",
            "title": "\u5b89\u88c5"
        },
        {
            "location": "/cn/advanced-concepts/ios-webkit-debug-proxy/#homebrew",
            "text": "\u5728\u7ec8\u7aef\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u4f7f\u7528 Homebrew \u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684 ios-webkit-debug-proxy\uff1a  ``` center\n # \u6ca1\u6709\u5b89\u88c5 brew \u65f6\u624d\u9700\u8981\u7b2c\u4e00\u6761\u547d\u4ee4\u3002   ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\nbrew update\nbrew install ios-webkit-debug-proxy\n ```",
            "title": "\u4f7f\u7528 Homebrew"
        },
        {
            "location": "/cn/advanced-concepts/ios-webkit-debug-proxy/#ios-webkit-debug-proxy",
            "text": "\u5728\u4f60\u7684 mac \u4e0a\u6253\u5f00\u7ec8\u7aef\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u559c\u6b22\u7684\u641c\u7d22\u5f15\u64ce\u67e5\u627e\u5982\u4f55\u6253\u5f00\u7ec8\u7aef\u7684\u64cd\u4f5c\u6307\u5357\u3002\u6253\u5f00\u540e\u786e\u8ba4\u4f60\u5df2\u7ecf\u5b89\u88c5\u4e86  Homebew \uff1a  $ brew -v  \u786e\u8ba4 Homebrew \u5df2\u5b89\u88c5\u540e\uff0c\u6309\u4e0b\u9762\u7684\u505a\uff08 $ \u662f\u547d\u4ee4\u884c\u63d0\u793a\u7b26\uff0c\u4e0d\u7528\u8f93\u5165\uff09\uff1a  $ cd  ~\n$ sudo apt-get install autoconf automake libusb-dev libusb-1.0-0-dev libplist-dev libplist++-dev usbmuxd libtool libimobiledevice-dev\n$ git clone https://github.com/google/ios-webkit-debug-proxy.git\n$ cd ios-webkit-debug-proxy\n$ ./autogen.sh\n$ make\n$ sudo make install",
            "title": "\u4ece\u6e90\u7801\u6784\u5efa ios-webkit-debug-proxy"
        },
        {
            "location": "/cn/advanced-concepts/ios-webkit-debug-proxy/#ios-webkit-debug-proxy_1",
            "text": "\u5b89\u88c5\u540e\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u542f\u52a8\u4ee3\u7406\uff1a  # \u4fee\u6539 udid \u4e3a\u76ee\u6807\u8bbe\u5907\u7684 udid \u5e76\u786e\u8ba4 remote-debugger \u4f7f\u7528 27753 \u7aef\u53e3\u3002\n# \u4f60\u53ef\u4ee5\u4ece\u82f9\u679c\u5f00\u53d1\u8005\u8d44\u6e90\u5e73\u53f0\u5b66\u4e60\u5982\u4f55\u83b7\u53d6 UDID \u3002\n> ios_webkit_debug_proxy -c 0e4b2f612b65e98c1d07d22ee08678130d345429:27753 -d  \u4f60\u4e5f\u53ef\u4ee5\u8bbe\u7f6e 'startIWDP' desired capability \u4e3a true (https://github.com/appium/appium/blob/master/docs/cn/writing-running-appium/caps.md)\u3002Appium \u4f1a\u5f00\u542f\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u8fd0\u884c\u4e0a\u8ff0\u547d\u4ee4\u5e76\u8bbe\u7f6e udid\uff0c\u6240\u4ee5\u4f60\u4e0d\u518d\u9700\u8981\u81ea\u5df1\u8fd0\u884c ios_webkit_debug_proxy \u3002Appium \u4f1a\u76d1\u63a7 ios-webkit-debug-proxy\uff0c\u4e00\u65e6\u5d29\u6e83\u5c31\u4f1a\u91cd\u542f\u3002  // desired capabilities \u793a\u4f8b\n{\n  \"browserName\": \"Safari\",\n  \"platformName\": \"iOS\",\n  \"deviceName\": \"iPhone 7\",\n  \"automationName\": \"XCUITest\",\n  \"startIWDP\": true,\n  \"udid\": \"auto\"\n}  \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528  ios-webkit-debug-proxy-launcher  \u2014\u2014 Appium \u4ee3\u7801\u5e93\u4e2d\u7684\u4e00\u4e2a\u5c0f\u811a\u672c \u2014\u2014 \u6765\u542f\u52a8\u4ee3\u7406\u3002\u5b83\u4f1a\u76d1\u63a7\u65e5\u5fd7\u4e2d\u7684\u9519\u8bef\uff0c\u5e76\u5728\u9700\u8981\u65f6\u91cd\u542f\u4ee3\u7406\u3002  # \u4fee\u6539 udid\n# \u6ce8\u610f\uff0c\u5728 Appium \u4ed3\u5e93\u4e2d\u8fd0\u884c\n> ./bin/ios-webkit-debug-proxy-launcher.js -c 0e4b2f612b65e98c1d07d22ee08678130d345429:27753 -d  \u6ce8\u610f\uff1a  \u4e3a\u4e86\u5141\u8bb8\u5efa\u7acb\u8fde\u63a5\uff0c\u8bbe\u5907\u4e0a\u9700\u8981\u6253\u5f00  \"Web \u68c0\u67e5\u5668\" \u3002\u5728  \u8bbe\u7f6e >\nsafari > \u9ad8\u7ea7  \u4e2d\u6253\u5f00\u3002Web \u68c0\u67e5\u5668\u4f5c\u4e3a iOS6 \u7684\u4e00\u90e8\u5206\u88ab\u6dfb\u52a0\uff0c\u4e0d\u5728\u4e4b\u524d\u7684\u7248\u672c\u4e2d\u63d0\u4f9b\uff0c\u8bf7\u77e5\u6089\u3002  \u672c\u6587\u7531  sanlengjingvv  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u8fd0\u884c ios-webkit-debug-proxy"
        },
        {
            "location": "/cn/advanced-concepts/iwd_xcode7/",
            "text": "\u4e3a xcode 7 \u548c iOS >= 9.0 \u914d\u7f6e\u65e0\u5ef6\u8fdf instruments\uff08iwd\uff09\n\n\niOS >= 9.0 \u65f6\uff0c\u9700\u8981\u624b\u52a8\u901a\u8fc7\u547d\u4ee4\u884c\u4f20\u9012\u4e8c\u8fdb\u5236\u6587\u4ef6\u6765\u914d\u7f6e\u65e0\u5ef6\u8fdf\u7684 instruments \uff08\u5728 xcode < 7 \u65f6 appium \u4f1a\u81ea\u52a8\u52a0\u4e0a \uff09\uff0c\u53c2\u9605 \niwd\n\n\n\u5728 xcode >= 7 \u65f6\u542f\u7528 iwd \uff1a\n- \u4e0b\u8f7d \nappium-instruments\n\n- \u5728 \n<appium-instruments>/bin/\n \u4e0b\u6839\u636e\u4ee5\u4e0b\u6307\u793a\u7684\u53c2\u6570\u8fd0\u884c \nxcode-iwd.sh\n \uff1a\n\n\nsh <appium-instruments>/bin/xcode-iwd.sh <path to xcode> <path to appium-instruments>\n\n\n\n\n\u6bd4\u5982\uff1a \nsh ./bin/xcode-iwd.sh /Applications/Xcode.app /Users/xyz/appium-instruments/\n\n\n\u6ce8\u610f\uff1aXcode 7 \u7684 iwd \u53ea\u5728 iOS >= 9.0 \u65f6\u6709\u6548\uff0c\u4f60\u53ef\u4ee5\u5728 iOS < 9.0 \u65f6\u5207\u6362\u4e00\u4e2a\u65e7\u7248\u672c\u7684 Xcode\n\n\n\u7531 @\u9ed1\u6c34 \u7ffb\u8bd1\uff0cTesterHome \u793e\u533a id\uff1asanlengjingvv\n\u7531 \n@chenhengjie123\n \u6821\u9a8c",
            "title": "Iwd xcode7"
        },
        {
            "location": "/cn/advanced-concepts/iwd_xcode7/#xcode-7-ios-90-instrumentsiwd",
            "text": "iOS >= 9.0 \u65f6\uff0c\u9700\u8981\u624b\u52a8\u901a\u8fc7\u547d\u4ee4\u884c\u4f20\u9012\u4e8c\u8fdb\u5236\u6587\u4ef6\u6765\u914d\u7f6e\u65e0\u5ef6\u8fdf\u7684 instruments \uff08\u5728 xcode < 7 \u65f6 appium \u4f1a\u81ea\u52a8\u52a0\u4e0a \uff09\uff0c\u53c2\u9605  iwd  \u5728 xcode >= 7 \u65f6\u542f\u7528 iwd \uff1a\n- \u4e0b\u8f7d  appium-instruments \n- \u5728  <appium-instruments>/bin/  \u4e0b\u6839\u636e\u4ee5\u4e0b\u6307\u793a\u7684\u53c2\u6570\u8fd0\u884c  xcode-iwd.sh  \uff1a  sh <appium-instruments>/bin/xcode-iwd.sh <path to xcode> <path to appium-instruments>  \u6bd4\u5982\uff1a  sh ./bin/xcode-iwd.sh /Applications/Xcode.app /Users/xyz/appium-instruments/  \u6ce8\u610f\uff1aXcode 7 \u7684 iwd \u53ea\u5728 iOS >= 9.0 \u65f6\u6709\u6548\uff0c\u4f60\u53ef\u4ee5\u5728 iOS < 9.0 \u65f6\u5207\u6362\u4e00\u4e2a\u65e7\u7248\u672c\u7684 Xcode  \u7531 @\u9ed1\u6c34 \u7ffb\u8bd1\uff0cTesterHome \u793e\u533a id\uff1asanlengjingvv\n\u7531  @chenhengjie123  \u6821\u9a8c",
            "title": "\u4e3a xcode 7 \u548c iOS &gt;= 9.0 \u914d\u7f6e\u65e0\u5ef6\u8fdf instruments\uff08iwd\uff09"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-1-0/",
            "text": "\u8fd9\u662f\u4e00\u4e2a\u65e7\u6587\u6863\uff0c\u53ea\u6709\u4ece\u65e9\u671f\u7248\u672c\u8fc1\u79fb\u5230 Appium 1.x \u7684\u7528\u6237\u624d\u6709\u5174\u8da3\u3002\n\n\n\u5c06\u60a8\u7684\u6d4b\u8bd5\u4ece Appium 0.18.x \u8fc1\u79fb\u5230 Appium 1.x\n\n\nAppium 1.0 \u4e2d\u5220\u9664\u4e86\u8bb8\u591a\u4e4b\u524d\u7248\u672c\u5c31\u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u529f\u80fd\u3002 \u672c\u6307\u5357\u5c06\u5e2e\u52a9\u60a8\u4e86\u89e3\u5728\u6d4b\u8bd5\u5957\u4ef6\u4e2d\u9700\u8981\u505a\u54ea\u4e9b\u4fee\u6539\u624d\u53ef\u4ee5\u5f88\u597d\u5229\u7528Appium 1.0\u3002\n\n\n\u65b0\u7684\u5ba2\u6237\u7aef\u5e93\n\n\nThe biggest thing you need to worry about is using the new Appium client libraries instead of the vanilla WebDriver clients you are currently using. Visit the \nAppium client list\n to find the client for your language. Downloads and instructions for integrating into your code are available on the individual client websites.\n\n\n\u60a8\u6700\u9700\u8981\u62c5\u5fc3\u7684\u662f\u4f7f\u7528\u65b0\u7684 Appium \u5ba2\u6237\u7aef\u5e93\uff0c\u800c\u4e0d\u662f\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u666e\u901a WebDriver \u5ba2\u6237\u7aef\u3002 \u8bbf\u95ee\nAppium\u5ba2\u6237\u7aef\u5217\u8868\n\u4ee5\u627e\u5230\u5339\u914d\u60a8\u7684\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u3002 \u4f60\u53ef\u4ee5\u5728\u5404\u4e2a\u5ba2\u6237\u7aef\u7f51\u7ad9\u4e0a\u627e\u5230\u4e0b\u8f7d\u5730\u5740\u548c\u5982\u4f55\u96c6\u6210\u5230\u4f60\u7684\u6d4b\u8bd5\u4ee3\u7801\u7684\u6559\u7a0b\u3002\n\n\n\u6700\u7ec8\uff0c\u4f60\u4f1a\u505a\u4ee5\u4e0b\u4e00\u4e9b\u4e8b\u60c5\uff08\u4ee5Python\u4e3a\u4f8b\uff09\uff1a\n\n\nfrom appium import webdriver\n\n\n\n\n\u4ee3\u66ff\uff1a\n\n\nfrom selenium import webdriver\n\n\n\n\n\u65b0\u7684 desired capabilities\n\n\n\u4e0d\u518d\u4f7f\u7528\u4ee5\u4e0b\u7684 capabilities\uff1a\n\n\n\n\ndevice\n\n\nversion\n\n\n\n\n\u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u66ff\u6362\uff1a\n\n\n\n\nplatformName\n\uff08\u201ciOS\u201d\u6216\u201cAndroid\u201d\uff09\n\n\nplatformVersion\n\uff08\u4f60\u60f3\u8981\u7684\u624b\u673a\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\uff09\n\n\ndeviceName\n\uff08\u4f60\u60f3\u8981\u7684\u90a3\u79cd\u8bbe\u5907\uff0c\u5c31\u50cf\u201ciPhone\u6a21\u62df\u5668\u201d\uff09\n\n\nautomationName\n\uff08\u201cSelendroid\u201d\u5982\u679c\u4f60\u60f3\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528Selendroid\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u53ef\u4ee5\u7701\u7565\u8fd9\u4e00\u70b9\uff09\n\n\n\n\napp\n capability \u4fdd\u6301\u4e0d\u53d8\uff0c\u4f46\u73b0\u5728\u4e13\u6307\u975e\u6d4f\u89c8\u5668 app\u3002 \u8981\u4f7f\u7528 Safari \u6216 Chrome \u7b49\u6d4f\u89c8\u5668\uff0c\u8bf7\u4f7f\u7528\u6807\u51c6\u7684 \nbrowserName\n capability\u3002\u8fd9\u610f\u5473\u7740 \napp\n \u548c \nbrowserName\n \u662f\u4e92\u65a5\u7684\u3002\n\n\n\u9488\u5bf9 Appium \u670d\u52a1\u7aef\u7684 capability\uff0c\u6211\u4eec\u7edf\u4e00\u4e86\u9a7c\u5cf0\u5f0f\u98ce\u683c\u3002\u8fd9\u610f\u5473\u7740\u50cf \napp-package\n \u6216 \napp-wait-activity\n \u8fd9\u6837\u7684\u4e0a\u9650\u73b0\u5728\u5206\u522b\u662f \nappPackage\n \u548c \nappWaitActivity\n\u3002\u5f53\u7136\uff0c\u7531\u4e8e Android \u5e94\u7528\u7684\u5305\u540d\u548c activity \u73b0\u5728\u5df2\u88ab\u81ea\u52a8\u68c0\u6d4b\u5230\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u5e94\u8be5\u53ef\u4ee5\u5b8c\u5168\u7701\u7565\u5b83\u4eec\u3002\n\n\n\u65b0\u7684\u5b9a\u4f4d\u7b56\u7565\n\n\n\u6211\u4eec\u5220\u9664\u4e86\u4ee5\u4e0b\u5b9a\u4f4d\u5668\u7b56\u7565\uff1a\n\n\n\n\nname\n\n\ntag name\n\n\n\n\n\u6211\u4eec\u6dfb\u52a0\u4e86 \naccessibility_id\n \u7b56\u7565\u6765\u66ff\u4ee3 \nname\n \u66fe\u7ecf\u7684\u4f5c\u7528\u3002\u5177\u4f53\u7ec6\u8282\u5c06\u4e0e\u60a8\u7684 Appium \u5ba2\u6237\u7aef\u76f8\u5173\u3002\n\n\ntag name\n \u5df2\u88ab \nclass name\n\u66ff\u6362\u3002 \u6240\u4ee5\u8981\u901a\u8fc7 UI \u7c7b\u578b\u627e\u5230\u4e00\u4e2a\u5143\u7d20\uff0c\u5728\u4f60\u7684\u5ba2\u6237\u811a\u672c\u91cc\u4f7f\u7528\u7c7b\u540d\u5b9a\u4f4d\u5668\u7b56\u7565\u3002\n\n\nNote about \nclass name\n and \nxpath\n strategies: these now require the fully-qualified class name for your element. This means that if you had an xpath selector that looked like this:\n\n\n\u5173\u4e8e \nclass name\n \u548c \nxpath\n \u7b56\u7565\u7684\u6ce8\u610f\u4e8b\u9879\uff1a\u8fd9\u4e9b\u7b56\u7565\u73b0\u5728\u9700\u8981\u5143\u7d20\u5b8c\u5168\u9650\u5b9a\u7c7b\u540d\u3002 \u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 xpath \u9009\u62e9\u5668\uff1a\n\n\n//table/cell/button\n\n\n\n\n\u73b0\u5728\u9700\u8981\uff1a\n\n\n//UIATableView/UIATableCell/UIAButton\n\n\n\n\n\uff08\u540c\u6837\u5bf9\u4e8eAndroid\uff1a\nbutton\n \u73b0\u5728\u9700\u8981\u662f \nandroid.widget.Button\n\uff09\n\n\n\u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86\u4ee5\u4e0b\u5b9a\u4f4d\u5668\u7b56\u7565\uff1a\n\n\n\n\n-ios uiautomation\n\n\n-android uiautomator\n\n\n\n\n\u53c2\u8003\u4f60\u7684\u5ba2\u6237\u7aef\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u65b0\u7684\u5b9a\u4f4d\u7b56\u7565\u3002\n\n\nXML, not JSON\n\n\nApp source methods, which previously returned JSON, now return XML, so if you have code that relies on parsing the app source, it will need to be updated.\n\n\n\u4ee5\u524d\u8fd4\u56de JSON \u7684 app source \u65b9\u6cd5\u73b0\u5728\u8fd4\u56de XML\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u6709\u4ee3\u7801\u4f9d\u8d56\u4e8e\u89e3\u6790 app source\uff0c\u5219\u9700\u8981\u66f4\u65b0\u3002\n\n\nHybrid \u901a\u8fc7 context \u652f\u6301\uff0c\u800c\u4e0d\u662f window\n\n\n\u4ee5\u524d\u901a\u8fc7\u5728 \"windows\" \u4e4b\u95f4\u5207\u6362\u652f\u6301 hybrid app\n\n\n\n\nwindow_handles\n\n\nwindow\n\n\nswitch_to.window\n\n\n\n\n\u73b0\u5728 Appium \u4f7f\u7528\u6982\u5ff5\u4e0a\u66f4\u52a0\u8d34\u5207\u7684 \"context\"\u3002\u8981\u83b7\u5f97\u6240\u6709\u53ef\u7528\u7684 context\uff0c\u6216\u5e94\u7528\u7a0b\u5e8f\u7279\u5b9a\u7684 context\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\n\n\n# python\ndriver.contexts\ncurrent = driver.context\n\n\n\n\n// javascript\ndriver.contexts().then(function (contexts) { /*...*/ })\n\n\n\n\n// c#\ndriver.GetContexts ()\ndriver.GetContext ()\n\n\n\n\n// java\nSet<String> contextNames = driver.getContextHandles();\nString context = driver.getContext();\n\n\n\n\n// php\n$contexts = $this->contexts();\n$context = $this->context();\n\n\n\n\n# ruby\ncontexts = available_contexts\ncontext = current_context\n\n\n\n\n\u5728\u4ed6\u4eec\u4e4b\u95f4\u5207\u6362\uff0c\u4f60\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\n\n\n# python\ndriver.switch_to.context(\"WEBVIEW\")\n\n\n\n\n// javascript\ndriver.currentContext().then(function (context) { /*...*/ })\n\n\n\n\n// c#\ndriver.SetContext (\"WEBVIEW\");\n\n\n\n\njava\ndriver.context(contextName);\n\n\n\n\n// php\n$this->context('WEBVIEW');\n\n\n\n\n# ruby\nset_context \"WEBVIEW\"\n\n\n\n\n\u4e0d\u518d\u6709 \nexecute_script(\"mobile: xxx\")\n\n\n\u6240\u6709 \nmobile:\n \u65b9\u6cd5\u5df2\u88ab\u5220\u9664\uff0c\u5e76\u5df2\u88ab Appium \u5ba2\u6237\u7aef\u5e93\u4e2d\u7684\u539f\u751f\u65b9\u6cd5\u6240\u66ff\u4ee3\u3002\u8fd9\u610f\u5473\u7740\u50cf \ndriver.execute(\"mobile: lock\", [5])\n \u7684\u65b9\u6cd5\u8c03\u7528\uff0c\u73b0\u5728\u53ef\u80fd\u4f1a\u662f \ndriver.lock(5)\n\uff08\u5176\u4e2d \nlock\n \u5df2\u7ecf\u53d8\u6210\u539f\u751f\u7684\u5ba2\u6237\u7aef\u65b9\u6cd5\uff09\u3002 \u5f53\u7136\uff0c\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u7684\u7ec6\u8282\u4f1a\u56e0\u5ba2\u6237\u7aef\u800c\u5f02\u3002\n\n\n\u7279\u522b\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u624b\u52bf\u65b9\u6cd5\u5df2\u88ab\u65b0\u7684 TouchAction / MultiAction API \u6240\u53d6\u4ee3\uff0c\u8be5 API \u5141\u8bb8\u4e00\u79cd\u66f4\u5f3a\u5927\u66f4\u666e\u904d\u7684\u65b9\u6cd5\u5c06\u624b\u52bf\u81ea\u52a8\u5316\u653e\u5728\u4e00\u8d77\u3002\u6709\u5173TouchAction / MultiAction \u7684\u4f7f\u7528\u8bf4\u660e\uff0c\u8bf7\u53c2\u8003\u60a8\u7684Appium\u5ba2\u6237\u7aef\u3002\n\n\n\u5c31\u662f\u8fd9\u6837\uff01\u5feb\u4e50\u7684\u8fc1\u79fb\uff01\n\n\n\u672c\u6587\u7531 \n\u9ad8\u9e4f\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Migrating to 1 0"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-1-0/#appium-018x-appium-1x",
            "text": "Appium 1.0 \u4e2d\u5220\u9664\u4e86\u8bb8\u591a\u4e4b\u524d\u7248\u672c\u5c31\u4e0d\u63a8\u8350\u4f7f\u7528\u7684\u529f\u80fd\u3002 \u672c\u6307\u5357\u5c06\u5e2e\u52a9\u60a8\u4e86\u89e3\u5728\u6d4b\u8bd5\u5957\u4ef6\u4e2d\u9700\u8981\u505a\u54ea\u4e9b\u4fee\u6539\u624d\u53ef\u4ee5\u5f88\u597d\u5229\u7528Appium 1.0\u3002",
            "title": "\u5c06\u60a8\u7684\u6d4b\u8bd5\u4ece Appium 0.18.x \u8fc1\u79fb\u5230 Appium 1.x"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-1-0/#_1",
            "text": "The biggest thing you need to worry about is using the new Appium client libraries instead of the vanilla WebDriver clients you are currently using. Visit the  Appium client list  to find the client for your language. Downloads and instructions for integrating into your code are available on the individual client websites.  \u60a8\u6700\u9700\u8981\u62c5\u5fc3\u7684\u662f\u4f7f\u7528\u65b0\u7684 Appium \u5ba2\u6237\u7aef\u5e93\uff0c\u800c\u4e0d\u662f\u60a8\u6b63\u5728\u4f7f\u7528\u7684\u666e\u901a WebDriver \u5ba2\u6237\u7aef\u3002 \u8bbf\u95ee Appium\u5ba2\u6237\u7aef\u5217\u8868 \u4ee5\u627e\u5230\u5339\u914d\u60a8\u7684\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u3002 \u4f60\u53ef\u4ee5\u5728\u5404\u4e2a\u5ba2\u6237\u7aef\u7f51\u7ad9\u4e0a\u627e\u5230\u4e0b\u8f7d\u5730\u5740\u548c\u5982\u4f55\u96c6\u6210\u5230\u4f60\u7684\u6d4b\u8bd5\u4ee3\u7801\u7684\u6559\u7a0b\u3002  \u6700\u7ec8\uff0c\u4f60\u4f1a\u505a\u4ee5\u4e0b\u4e00\u4e9b\u4e8b\u60c5\uff08\u4ee5Python\u4e3a\u4f8b\uff09\uff1a  from appium import webdriver  \u4ee3\u66ff\uff1a  from selenium import webdriver",
            "title": "\u65b0\u7684\u5ba2\u6237\u7aef\u5e93"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-1-0/#desired-capabilities",
            "text": "\u4e0d\u518d\u4f7f\u7528\u4ee5\u4e0b\u7684 capabilities\uff1a   device  version   \u4f7f\u7528\u8fd9\u4e9b\u529f\u80fd\u66ff\u6362\uff1a   platformName \uff08\u201ciOS\u201d\u6216\u201cAndroid\u201d\uff09  platformVersion \uff08\u4f60\u60f3\u8981\u7684\u624b\u673a\u64cd\u4f5c\u7cfb\u7edf\u7248\u672c\uff09  deviceName \uff08\u4f60\u60f3\u8981\u7684\u90a3\u79cd\u8bbe\u5907\uff0c\u5c31\u50cf\u201ciPhone\u6a21\u62df\u5668\u201d\uff09  automationName \uff08\u201cSelendroid\u201d\u5982\u679c\u4f60\u60f3\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528Selendroid\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u53ef\u4ee5\u7701\u7565\u8fd9\u4e00\u70b9\uff09   app  capability \u4fdd\u6301\u4e0d\u53d8\uff0c\u4f46\u73b0\u5728\u4e13\u6307\u975e\u6d4f\u89c8\u5668 app\u3002 \u8981\u4f7f\u7528 Safari \u6216 Chrome \u7b49\u6d4f\u89c8\u5668\uff0c\u8bf7\u4f7f\u7528\u6807\u51c6\u7684  browserName  capability\u3002\u8fd9\u610f\u5473\u7740  app  \u548c  browserName  \u662f\u4e92\u65a5\u7684\u3002  \u9488\u5bf9 Appium \u670d\u52a1\u7aef\u7684 capability\uff0c\u6211\u4eec\u7edf\u4e00\u4e86\u9a7c\u5cf0\u5f0f\u98ce\u683c\u3002\u8fd9\u610f\u5473\u7740\u50cf  app-package  \u6216  app-wait-activity  \u8fd9\u6837\u7684\u4e0a\u9650\u73b0\u5728\u5206\u522b\u662f  appPackage  \u548c  appWaitActivity \u3002\u5f53\u7136\uff0c\u7531\u4e8e Android \u5e94\u7528\u7684\u5305\u540d\u548c activity \u73b0\u5728\u5df2\u88ab\u81ea\u52a8\u68c0\u6d4b\u5230\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u60a8\u5e94\u8be5\u53ef\u4ee5\u5b8c\u5168\u7701\u7565\u5b83\u4eec\u3002",
            "title": "\u65b0\u7684 desired capabilities"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-1-0/#_2",
            "text": "\u6211\u4eec\u5220\u9664\u4e86\u4ee5\u4e0b\u5b9a\u4f4d\u5668\u7b56\u7565\uff1a   name  tag name   \u6211\u4eec\u6dfb\u52a0\u4e86  accessibility_id  \u7b56\u7565\u6765\u66ff\u4ee3  name  \u66fe\u7ecf\u7684\u4f5c\u7528\u3002\u5177\u4f53\u7ec6\u8282\u5c06\u4e0e\u60a8\u7684 Appium \u5ba2\u6237\u7aef\u76f8\u5173\u3002  tag name  \u5df2\u88ab  class name \u66ff\u6362\u3002 \u6240\u4ee5\u8981\u901a\u8fc7 UI \u7c7b\u578b\u627e\u5230\u4e00\u4e2a\u5143\u7d20\uff0c\u5728\u4f60\u7684\u5ba2\u6237\u811a\u672c\u91cc\u4f7f\u7528\u7c7b\u540d\u5b9a\u4f4d\u5668\u7b56\u7565\u3002  Note about  class name  and  xpath  strategies: these now require the fully-qualified class name for your element. This means that if you had an xpath selector that looked like this:  \u5173\u4e8e  class name  \u548c  xpath  \u7b56\u7565\u7684\u6ce8\u610f\u4e8b\u9879\uff1a\u8fd9\u4e9b\u7b56\u7565\u73b0\u5728\u9700\u8981\u5143\u7d20\u5b8c\u5168\u9650\u5b9a\u7c7b\u540d\u3002 \u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5982\u4e0b\u6240\u793a\u7684 xpath \u9009\u62e9\u5668\uff1a  //table/cell/button  \u73b0\u5728\u9700\u8981\uff1a  //UIATableView/UIATableCell/UIAButton  \uff08\u540c\u6837\u5bf9\u4e8eAndroid\uff1a button  \u73b0\u5728\u9700\u8981\u662f  android.widget.Button \uff09  \u6211\u4eec\u8fd8\u6dfb\u52a0\u4e86\u4ee5\u4e0b\u5b9a\u4f4d\u5668\u7b56\u7565\uff1a   -ios uiautomation  -android uiautomator   \u53c2\u8003\u4f60\u7684\u5ba2\u6237\u7aef\u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u65b0\u7684\u5b9a\u4f4d\u7b56\u7565\u3002",
            "title": "\u65b0\u7684\u5b9a\u4f4d\u7b56\u7565"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-1-0/#xml-not-json",
            "text": "App source methods, which previously returned JSON, now return XML, so if you have code that relies on parsing the app source, it will need to be updated.  \u4ee5\u524d\u8fd4\u56de JSON \u7684 app source \u65b9\u6cd5\u73b0\u5728\u8fd4\u56de XML\uff0c\u56e0\u6b64\u5982\u679c\u60a8\u6709\u4ee3\u7801\u4f9d\u8d56\u4e8e\u89e3\u6790 app source\uff0c\u5219\u9700\u8981\u66f4\u65b0\u3002",
            "title": "XML, not JSON"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-1-0/#hybrid-context-window",
            "text": "\u4ee5\u524d\u901a\u8fc7\u5728 \"windows\" \u4e4b\u95f4\u5207\u6362\u652f\u6301 hybrid app   window_handles  window  switch_to.window   \u73b0\u5728 Appium \u4f7f\u7528\u6982\u5ff5\u4e0a\u66f4\u52a0\u8d34\u5207\u7684 \"context\"\u3002\u8981\u83b7\u5f97\u6240\u6709\u53ef\u7528\u7684 context\uff0c\u6216\u5e94\u7528\u7a0b\u5e8f\u7279\u5b9a\u7684 context\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5  # python\ndriver.contexts\ncurrent = driver.context  // javascript\ndriver.contexts().then(function (contexts) { /*...*/ })  // c#\ndriver.GetContexts ()\ndriver.GetContext ()  // java\nSet<String> contextNames = driver.getContextHandles();\nString context = driver.getContext();  // php\n$contexts = $this->contexts();\n$context = $this->context();  # ruby\ncontexts = available_contexts\ncontext = current_context  \u5728\u4ed6\u4eec\u4e4b\u95f4\u5207\u6362\uff0c\u4f60\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5  # python\ndriver.switch_to.context(\"WEBVIEW\")  // javascript\ndriver.currentContext().then(function (context) { /*...*/ })  // c#\ndriver.SetContext (\"WEBVIEW\");  java\ndriver.context(contextName);  // php\n$this->context('WEBVIEW');  # ruby\nset_context \"WEBVIEW\"",
            "title": "Hybrid \u901a\u8fc7 context \u652f\u6301\uff0c\u800c\u4e0d\u662f window"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-1-0/#execute_scriptmobile-xxx",
            "text": "\u6240\u6709  mobile:  \u65b9\u6cd5\u5df2\u88ab\u5220\u9664\uff0c\u5e76\u5df2\u88ab Appium \u5ba2\u6237\u7aef\u5e93\u4e2d\u7684\u539f\u751f\u65b9\u6cd5\u6240\u66ff\u4ee3\u3002\u8fd9\u610f\u5473\u7740\u50cf  driver.execute(\"mobile: lock\", [5])  \u7684\u65b9\u6cd5\u8c03\u7528\uff0c\u73b0\u5728\u53ef\u80fd\u4f1a\u662f  driver.lock(5) \uff08\u5176\u4e2d  lock  \u5df2\u7ecf\u53d8\u6210\u539f\u751f\u7684\u5ba2\u6237\u7aef\u65b9\u6cd5\uff09\u3002 \u5f53\u7136\uff0c\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5\u7684\u7ec6\u8282\u4f1a\u56e0\u5ba2\u6237\u7aef\u800c\u5f02\u3002  \u7279\u522b\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u624b\u52bf\u65b9\u6cd5\u5df2\u88ab\u65b0\u7684 TouchAction / MultiAction API \u6240\u53d6\u4ee3\uff0c\u8be5 API \u5141\u8bb8\u4e00\u79cd\u66f4\u5f3a\u5927\u66f4\u666e\u904d\u7684\u65b9\u6cd5\u5c06\u624b\u52bf\u81ea\u52a8\u5316\u653e\u5728\u4e00\u8d77\u3002\u6709\u5173TouchAction / MultiAction \u7684\u4f7f\u7528\u8bf4\u660e\uff0c\u8bf7\u53c2\u8003\u60a8\u7684Appium\u5ba2\u6237\u7aef\u3002  \u5c31\u662f\u8fd9\u6837\uff01\u5feb\u4e50\u7684\u8fc1\u79fb\uff01  \u672c\u6587\u7531  \u9ad8\u9e4f  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u4e0d\u518d\u6709 execute_script(\"mobile: xxx\")"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-xcuitest/",
            "text": "\u5c06\u4f60\u7684iOS\u6d4b\u8bd5\u4eceUIAutomation\uff08iOS 9.3\u53ca\u66f4\u4f4e\u7248\u672c\uff09\u8fc1\u79fb\u5230XCUITest\uff08iOS 9.3\u53ca\u66f4\u9ad8\u7248\u672c\uff09\n\n\n\u5bf9\u4e8e iOS \u81ea\u52a8\u5316\uff0cAppium \u4f9d\u8d56\u82f9\u679c\u63d0\u4f9b\u7684\u7cfb\u7edf\u6846\u67b6\u3002\u5bf9\u4e8e iOS 9.2 \u53ca\u66f4\u4f4e\u7248\u672c\uff0c\u82f9\u679c\u552f\u4e00\u7684\u81ea\u52a8\u5316\u6280\u672f\u88ab\u79f0\u4e3aUIAutomation\uff0c\u5b83\u8fd0\u884c\u5728 \u201cInstruments\u201d \u4e2d\u3002\u4ece iOS 10 \u5f00\u59cb\uff0c\u82f9\u679c\u5df2\u7ecf\u5b8c\u5168\u5220\u9664\u4e86 UIAutomation \u5de5\u5177\uff0c\u56e0\u6b64 Appium \u4e0d\u53ef\u80fd\u6309\u7167\u4ee5\u524d\u7684\u65b9\u5f0f\u8fdb\u884c\u6d4b\u8bd5\u3002\u540c\u65f6\uff0c\u82f9\u679c\u63a8\u51fa\u4e86\u4e00\u6b3e\u540d\u4e3a XCUITest \u7684\u65b0\u578b\u81ea\u52a8\u5316\u6280\u672f\uff0c\u4ece iOS 9.3 \u5230 iOS 10 \u53ca\u4ee5\u4e0a\u7248\u672c\uff0c\u8fd9\u5c06\u662f\u82f9\u679c\u552f\u4e00\u652f\u6301\u7684\u81ea\u52a8\u5316\u6846\u67b6\u3002\n\n\nAppium \u4ece Appium 1.6 \u5f00\u59cb\u652f\u6301 XCUITest\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cXCUITest \u7684\u529f\u80fd\u4e0e UIAutomation \u7684\u529f\u80fd\u76f8\u5339\u914d\uff0c\u56e0\u6b64\uff0cAppium \u56e2\u961f\u80fd\u591f\u786e\u4fdd\u6d4b\u8bd5\u884c\u4e3a\u4fdd\u6301\u4e0d\u53d8\u3002\u8fd9\u662f\u4f7f\u7528 Appium \u7684\u597d\u5904\u4e4b\u4e00\uff01\u5373\u4f7f\u82f9\u679c\u5b8c\u5168\u6539\u53d8\u4e86\u6d4b\u8bd5\u4f7f\u7528\u7684\u6280\u672f\uff0c\u4f60\u7684\u811a\u672c\u53ef\u4ee5\u4fdd\u6301\u5927\u81f4\u76f8\u540c\uff01\u8bdd\u867d\u5982\u6b64\uff0c\u5982\u679c\u60a8\u60f3\u5728 XCUITest \u8fd0\u884c\u5b83\u4eec\uff0c\u8fd8\u662f\u5b58\u5728\u4e9b\u8bb8\u5dee\u5f02\uff0c\u60a8\u9700\u8981\u5173\u6ce8\u6d4b\u8bd5\u811a\u672c\u4e2d\u9700\u8981\u4fee\u6539\u7684\u90e8\u5206\u3002\u672c\u6587\u5c06\u5e2e\u52a9\u60a8\u89e3\u51b3\u8fd9\u4e9b\u5dee\u5f02\u3002\n\n\n\u5143\u7d20\u7c7b\u540d\u79f0\u6a21\u5f0f\n\n\n\u5728 XCUITest \u4e2d\uff0c\u82f9\u679c\u5df2\u7ecf\u4e3a\u6784\u6210\u89c6\u56fe\u5c42\u6b21\u7ed3\u6784\u7684 UI \u5143\u7d20\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u7c7b\u540d\u3002\u4f8b\u5982\uff0c\nUIAButton\n \u73b0\u5728\u4e3a\nXCUIElementTypeButton\n\u3002\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e24\u4e2a\u7c7b\u4e4b\u95f4\u6709\u76f4\u63a5\u6620\u5c04\u3002\u5982\u679c\u60a8\u4f7f\u7528 \nclass name\n \u5b9a\u4f4d\u5668\u7b56\u7565\u6765\u67e5\u627e\u5143\u7d20\uff0cAppium 1.6 \u5c06\u4e3a\u60a8\u91cd\u5199\u9009\u62e9\u5668\u3002\u540c\u6837\uff0c\u5982\u679c\u4f60\u4f7f\u7528xpath\u5b9a\u4f4d\u5668\u7b56\u7565\uff0cAppium 1.6 \u5c06\u5728 XPath \u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u6240\u6709 \nUIA*\n \u5143\u7d20\uff0c\u5e76\u9002\u5f53\u5730\u91cd\u5199\u5b83\u4eec\u3002\n\n\n\u4f46\u662f\uff0c\u8fd9\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4f60\u7684\u6d4b\u8bd5\u53ef\u4ee5\u5b8c\u5168\u76f8\u540c\u5730\u8fd0\u884c\uff0c\u539f\u56e0\u6709\u4e24\u4e2a\uff1a\n\n\n\n\n\n\nAppium \u901a\u8fc7 XCUITest \u548c UIAutomation \u770b\u5230\u7684\u5e94\u7528\u7684\u5c42\u6b21\u7ed3\u6784\u4e0d\u4e00\u5b9a\u662f\u76f8\u540c\u7684\u3002\u5982\u679c\u4f60\u6709\u57fa\u4e8e\u8def\u5f84\u7684 XPath \u9009\u62e9\u5668\uff0c\u5219\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u8c03\u6574\u3002\n\n\n\n\n\n\n\u7c7b\u540d\u5217\u8868\u4e5f\u4e0d\u5b8c\u5168\u4e00\u6837\u3002\u8bb8\u591a\u7531 XCUITest \u8fd4\u56de\u7684\u5143\u7d20\u5c5e\u4e8e\nXCUIElementTypeOther\u7c7b\n\uff0c\u8fd9\u662f\u4e00\u79cd\u5168\u65b0\u7684\u5bb9\u5668\u3002\n\n\n\n\n\n\n\u9875\u9762\u6e90\u7801\n\n\n\u5982\u4e0a\u8ff0\uff0c\u5982\u679c\u4f60\u4f9d\u8d56 \npage source\n \u547d\u4ee4\u8fd4\u56de\u7684 app \u6e90 XML\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8f93\u51fa\u7684 XML \u4f1a\u4e0e\u57fa\u4e8e UIAutomation \u7684\u7ed3\u679c\u4f1a\u6709\u663e\u8457\u4e0d\u540c\u3002\n\n\n-ios uiautomation\n \u5b9a\u4f4d\u7b56\u7565\n\n\n\u6b64\u5b9a\u4f4d\u5668\u7b56\u7565\u4e13\u95e8\u7528\u4e8e UIAutomation\uff0c\u56e0\u6b64\u5b83\u4e0d\u5305\u62ec\u5728 XCUITest \u4e2d\u3002 \u5728\u5373\u5c06\u53d1\u5e03\u7684\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u5c06\u81f4\u529b\u4e8e\u7c7b\u4f3c\u7684 \u201cnative\u201d \u578b\u5b9a\u4f4d\u7b56\u7565\u3002\n\n\nxpath\n \u5b9a\u4f4d\u7b56\u7565\n\n\n\n\n\n\n\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 XPath \u5b9a\u4f4d\u5668\uff0c\u9664\u975e\u4f60\u5b8c\u5168\u6ca1\u6709\u5176\u4ed6\u9009\u62e9\u3002 \u901a\u5e38\uff0cxpath \u5b9a\u4f4d\u5668\u53ef\u80fd\u6bd4\u5176\u4ed6\u7c7b\u578b\u7684\u5b9a\u4f4d\u5668\u6162\uff0c\u6bd4\u5982accessibility id\uff0c\u7c7b\u540d\u548c\u8c13\u8bcd\uff08\u5728\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\u53ef\u51cf\u7f13100\u500d\uff09\u3002 \u5b83\u4eec\u592a\u6162\u4e86\uff0c\u56e0\u4e3a xpath \u7684\u4f4d\u7f6e\u4e0d\u662f\u82f9\u679c\u7684XCTest \u6846\u67b6\u672c\u8eab\u6240\u652f\u6301\u7684\u3002\n\n\n\n\n\n\n\u4f7f\u7528\n\n\n\n\n\n\ndriver.findElement(x)\n\n\n\n\n\u800c\u4e0d\u662f\u4f7f\u7528\n\n\ndriver.findElements(x)[0]\n\n\n\n\n\u901a\u8fc7xpath\u67e5\u627e\u5355\u4e2a\u5143\u7d20\u3002 \u60a8\u7684\u5b9a\u4f4d\u5668\u5339\u914d\u7684UI\u5143\u7d20\u8d8a\u591a\uff0c\u4f60\u7684\u811a\u672c\u8d8a\u6162\u3002\n\n\n\n\n\u5728\u901a\u8fc7 xpath \u5b9a\u4f4d\u5143\u7d20\u65f6\uff0c\u4e00\u5b9a\u8981\u4f7f\u7528\u975e\u5e38\u5177\u4f53\u7684xpath\u3002 \u50cf\u8fd9\u6837\u7684\u5b9a\u4f4d\u5668\n\n\n\n\n//*\n\n\n\n\n\u53ef\u80fd\u9700\u8981\u51e0\u5206\u949f\u624d\u80fd\u5b8c\u6210\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6709\u591a\u5c11\u7528\u6237\u754c\u9762\u5143\u7d20\uff08\u4f8b\u5982\uff0c\n\n\ndriver.findElement(By.xpath(\"//XCUIElementTypeButton[@value='blabla']\"))\n\n\n\n\n\u6bd4\n\n\ndriver.findElement(By.xpath(\"//*[@value='blabla']\"))\n\n\n\n\n\u6216\n\n\ndriver.findElement(By.xpath(\"//XCUIElementTypeButton\")))\n\n\n\n\n\u8981\u5feb\u5f88\u591a\u3002\n\n\n\n\n\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6267\u884c\u591a\u4e2a\u5d4c\u5957\u7684 findElement \u8c03\u7528\u6bd4\u6267\u884c xpath \u5355\u4e2a\u8c03\u7528\u66f4\u5feb\uff08\u4f8b\u5982\uff0c\n\n\n\n\ndriver.findElement(x).findElement(y)\n\n\n\n\n\u901a\u5e38\u6bd4\n\n\ndriver.findElement(z)\n\n\n\n\n\u8981\u5feb\n\n\n\u5176\u4e2dx\u548cy\u4e0d\u662fxpath\u5b9a\u4f4d\u7b26\uff0cz\u662fxpath\u5b9a\u4f4d\u7b26\uff09\u3002\n\n\n\u7cfb\u7edf\u4f9d\u8d56\n\n\n\u9664\u4e86\u5347\u7ea7 XCode \u4f1a\u5e26\u6765\uff08\u4e0eAppium\u65e0\u5173\uff09\u8bb8\u591a\u95ee\u9898\u4e4b\u5916\uff0cAppium \u5bf9 XCUITest \u7684\u652f\u6301\u8fd8\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u7cfb\u7edf\u4f9d\u8d56\uff1a\nCarthage\n\u3002Appium Doctor \u73b0\u5df2\u66f4\u65b0\uff0c\u4ee5\u786e\u4fdd\ncarthage\n\u4e8c\u8fdb\u5236\u5728\u4f60\u7684\u7cfb\u7edf\u8def\u5f84\u91cc\u3002\n\n\nAPI\u5dee\u5f02\n\n\nUnfortunately, the XCUITest API and the UIAutomation API are not equivalent. In many cases (like with \ntap/click\n), the behavior is identical. But some features that were available in the UIAutomation backend are not yet available in the new XCUITest backend. These known lacking features include:\n\n\n\u4e0d\u5e78\u7684\u662f\uff0cXCUITest API \u548c UIAutomation API \u8fd8\u662f\u6709\u5dee\u522b\u7684\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff08\u6bd4\u5982 tap/click\uff09\uff0c\u884c\u4e3a\u662f\u76f8\u540c\u7684\uff0c\u4f46\u5728 UIAutomation \u4f5c\u4e3a\u5e95\u5c42\u9a71\u52a8\u65f6\uff0c\u53ef\u7528\u7684\u67d0\u4e9b\u529f\u80fd\u5728\u65b0\u7684 XCUITest \u65f6\u5c1a\u4e0d\u53ef\u7528\u3002\u4e0b\u9762\u662f\u5df2\u77e5\u7684\u7f3a\u4e4f\u7684\u529f\u80fd\uff1a\n\n\n\n\n\u5730\u7406\u4f4d\u7f6e\u652f\u6301\uff08\u4f8b\u5982\uff1a \ndriver.location\n\uff09\n\n\n\u632f\u52a8\u8bbe\u5907\n\n\n\u9501\u5b9a\u8bbe\u5907\n\n\n\u65cb\u8f6c\u8bbe\u5907\uff08device \norientation\n \u662f\u652f\u6301\u7684\uff09\n\n\n\n\nWe will endeavor to add these features back in future releases of Appium.\n\n\n\u6211\u4eec\u5728\u52aa\u529b\u628a\u8fd9\u4e9b\u529f\u80fd\u52a0\u5230 Appium \u7684\u672a\u6765\u7248\u672c\u91cc\u3002\n\n\n\u6eda\u52a8\u548c\u70b9\u51fb\n\n\n\u5728\u4e4b\u524d\u57fa\u4e8e UIAutomation \u7684\u9a71\u52a8\u4e2d\uff0c\u5982\u679c\u60a8\u5c1d\u8bd5\u5355\u51fb\u4e0d\u5728\u89c6\u56fe\u4e2d\u7684\u5143\u7d20\uff0cUIAutomation \u5c06\u81ea\u52a8\u6eda\u52a8\u5230\u8be5\u5143\u7d20\uff0c\u7136\u540e\u70b9\u51fb\u5b83\u3002 \u4f7f\u7528 XCUITest\uff0c\u4e0d\u662f\u8fd9\u6837\u3002 \u70b9\u51fb\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u786e\u4fdd\u5143\u7d20\u53ef\u89c1\uff08\u4e0e\u7528\u6237\u770b\u5230\u624d\u80fd\u70b9\u51fb\u7684\u884c\u4e3a\u4e00\u81f4\uff09\u3002\n\n\n\u5176\u4ed6\u5df2\u77e5\u95ee\u9898\n\n\nFinally, a list of known issues with the initial 1.6 release (we'll strike through issues which have been resolved):\n\n\n\u6700\u540e\uff0c\u5217\u51fa\u4e86\u521d\u59cb 1.6 \u7248\u672c\u7684\u5df2\u77e5\u95ee\u9898\uff08\u5df2\u89e3\u51b3\u7684\u95ee\u9898\u4f1a\u88ab\u6a2a\u7ebf\u5212\u53bb\uff09\uff1a\n\n\n\n\n~~\u65e0\u6cd5\u4ee5\u6a2a\u5411\u6a21\u5f0f\u4e0e\u8bbe\u5907\u4e0a\u7684\u5143\u7d20\u8fdb\u884c\u4ea4\u4e92\uff08https://github.com/appium/appium/issues/6994)~~\n\n\nshake\n \u82f9\u679c\u4e0d\u652f\u6301\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u5b9e\u73b0\n\n\nlock\n \u82f9\u679c\u4e0d\u652f\u6301\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u5b9e\u73b0\n\n\n\u8bbe\u7f6e\u5730\u7406\u4f4d\u7f6e\u4e0d\u88ab\u82f9\u679c\u652f\u6301\uff0c\u6211\u4eec\u4e5f\u4e0d\u652f\u6301\n\n\n\u901a\u8fc7TouchAction / MultiAction API\uff0c\nzoom\n \u624b\u52bf\u652f\u6301\uff0c\u56e0\u4e3a\u82f9\u679c\u7684\u4e00\u4e2abug\uff0c\npinch\n \u624b\u52bf\u4e0d\u652f\u6301\u3002\n\n\n~~\u901a\u8fc7TouchAction / MultiAction API\uff0c\nswipe\n\u624b\u52bf\u76ee\u524d\u4e0d\u53d7\u652f\u6301\uff0c\u5e94\u8be5\u5f88\u5feb\u89e3\u51b3\uff08https://github.com/appium/appium/issues/7573\uff09~~\n\n\nautoAcceptAlerts\n\uff0c \nautoDismissAlerts\n\u76ee\u524d\u8fd8\u4e0d\u80fd\u5de5\u4f5c\uff0c\u800c\u4e14\u6211\u4eec\u662f\u5426\u80fd\u591f\u5728\u5c06\u6765\u5b9e\u65bd\u8fd9\u4e9b\uff0c\u5b58\u5728\u4e89\u8bae\u3002\n\n\niOS SDK \u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u6b64\u4f7f\u7528\u67d0\u4e9b API \u65b9\u6cd5\u6784\u5efa\u7684 PickerWheels \u4e0d\u80fd\u7531 XCUITest \u81ea\u52a8\u6267\u884c\u3002\u6709\u5173\u89e3\u51b3\u65b9\u6cd5\uff0c\u8bf7\u53c2\u9605https://github.com/appium/appium/issues/6962\uff0c\u4ee5\u786e\u4fdd\u60a8\u7684 PickerWheels \u6b63\u786e\u6784\u5efa\u3002\n\n\n\n\n\u6211\u4eec\u5c06\u5c3d\u53ef\u80fd\u6dfb\u52a0\u7f3a\u5931\u7684\u529f\u80fd\uff0c\u5e76\u5728\u4ee5\u540e\u7684 Appium \u7248\u672c\u4e2d\u4fee\u590d\u5176\u4ed6\u5df2\u77e5\u95ee\u9898\u3002\n\n\n\u672c\u6587\u7531 \n\u6821\u957f\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Migrating to xcuitest"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-xcuitest/#iosuiautomationios-93xcuitestios-93",
            "text": "\u5bf9\u4e8e iOS \u81ea\u52a8\u5316\uff0cAppium \u4f9d\u8d56\u82f9\u679c\u63d0\u4f9b\u7684\u7cfb\u7edf\u6846\u67b6\u3002\u5bf9\u4e8e iOS 9.2 \u53ca\u66f4\u4f4e\u7248\u672c\uff0c\u82f9\u679c\u552f\u4e00\u7684\u81ea\u52a8\u5316\u6280\u672f\u88ab\u79f0\u4e3aUIAutomation\uff0c\u5b83\u8fd0\u884c\u5728 \u201cInstruments\u201d \u4e2d\u3002\u4ece iOS 10 \u5f00\u59cb\uff0c\u82f9\u679c\u5df2\u7ecf\u5b8c\u5168\u5220\u9664\u4e86 UIAutomation \u5de5\u5177\uff0c\u56e0\u6b64 Appium \u4e0d\u53ef\u80fd\u6309\u7167\u4ee5\u524d\u7684\u65b9\u5f0f\u8fdb\u884c\u6d4b\u8bd5\u3002\u540c\u65f6\uff0c\u82f9\u679c\u63a8\u51fa\u4e86\u4e00\u6b3e\u540d\u4e3a XCUITest \u7684\u65b0\u578b\u81ea\u52a8\u5316\u6280\u672f\uff0c\u4ece iOS 9.3 \u5230 iOS 10 \u53ca\u4ee5\u4e0a\u7248\u672c\uff0c\u8fd9\u5c06\u662f\u82f9\u679c\u552f\u4e00\u652f\u6301\u7684\u81ea\u52a8\u5316\u6846\u67b6\u3002  Appium \u4ece Appium 1.6 \u5f00\u59cb\u652f\u6301 XCUITest\u3002\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0cXCUITest \u7684\u529f\u80fd\u4e0e UIAutomation \u7684\u529f\u80fd\u76f8\u5339\u914d\uff0c\u56e0\u6b64\uff0cAppium \u56e2\u961f\u80fd\u591f\u786e\u4fdd\u6d4b\u8bd5\u884c\u4e3a\u4fdd\u6301\u4e0d\u53d8\u3002\u8fd9\u662f\u4f7f\u7528 Appium \u7684\u597d\u5904\u4e4b\u4e00\uff01\u5373\u4f7f\u82f9\u679c\u5b8c\u5168\u6539\u53d8\u4e86\u6d4b\u8bd5\u4f7f\u7528\u7684\u6280\u672f\uff0c\u4f60\u7684\u811a\u672c\u53ef\u4ee5\u4fdd\u6301\u5927\u81f4\u76f8\u540c\uff01\u8bdd\u867d\u5982\u6b64\uff0c\u5982\u679c\u60a8\u60f3\u5728 XCUITest \u8fd0\u884c\u5b83\u4eec\uff0c\u8fd8\u662f\u5b58\u5728\u4e9b\u8bb8\u5dee\u5f02\uff0c\u60a8\u9700\u8981\u5173\u6ce8\u6d4b\u8bd5\u811a\u672c\u4e2d\u9700\u8981\u4fee\u6539\u7684\u90e8\u5206\u3002\u672c\u6587\u5c06\u5e2e\u52a9\u60a8\u89e3\u51b3\u8fd9\u4e9b\u5dee\u5f02\u3002",
            "title": "\u5c06\u4f60\u7684iOS\u6d4b\u8bd5\u4eceUIAutomation\uff08iOS 9.3\u53ca\u66f4\u4f4e\u7248\u672c\uff09\u8fc1\u79fb\u5230XCUITest\uff08iOS 9.3\u53ca\u66f4\u9ad8\u7248\u672c\uff09"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-xcuitest/#_1",
            "text": "\u5728 XCUITest \u4e2d\uff0c\u82f9\u679c\u5df2\u7ecf\u4e3a\u6784\u6210\u89c6\u56fe\u5c42\u6b21\u7ed3\u6784\u7684 UI \u5143\u7d20\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u7c7b\u540d\u3002\u4f8b\u5982\uff0c UIAButton  \u73b0\u5728\u4e3a XCUIElementTypeButton \u3002\u5728\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e24\u4e2a\u7c7b\u4e4b\u95f4\u6709\u76f4\u63a5\u6620\u5c04\u3002\u5982\u679c\u60a8\u4f7f\u7528  class name  \u5b9a\u4f4d\u5668\u7b56\u7565\u6765\u67e5\u627e\u5143\u7d20\uff0cAppium 1.6 \u5c06\u4e3a\u60a8\u91cd\u5199\u9009\u62e9\u5668\u3002\u540c\u6837\uff0c\u5982\u679c\u4f60\u4f7f\u7528xpath\u5b9a\u4f4d\u5668\u7b56\u7565\uff0cAppium 1.6 \u5c06\u5728 XPath \u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u6240\u6709  UIA*  \u5143\u7d20\uff0c\u5e76\u9002\u5f53\u5730\u91cd\u5199\u5b83\u4eec\u3002  \u4f46\u662f\uff0c\u8fd9\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4f60\u7684\u6d4b\u8bd5\u53ef\u4ee5\u5b8c\u5168\u76f8\u540c\u5730\u8fd0\u884c\uff0c\u539f\u56e0\u6709\u4e24\u4e2a\uff1a    Appium \u901a\u8fc7 XCUITest \u548c UIAutomation \u770b\u5230\u7684\u5e94\u7528\u7684\u5c42\u6b21\u7ed3\u6784\u4e0d\u4e00\u5b9a\u662f\u76f8\u540c\u7684\u3002\u5982\u679c\u4f60\u6709\u57fa\u4e8e\u8def\u5f84\u7684 XPath \u9009\u62e9\u5668\uff0c\u5219\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u8c03\u6574\u3002    \u7c7b\u540d\u5217\u8868\u4e5f\u4e0d\u5b8c\u5168\u4e00\u6837\u3002\u8bb8\u591a\u7531 XCUITest \u8fd4\u56de\u7684\u5143\u7d20\u5c5e\u4e8e XCUIElementTypeOther\u7c7b \uff0c\u8fd9\u662f\u4e00\u79cd\u5168\u65b0\u7684\u5bb9\u5668\u3002",
            "title": "\u5143\u7d20\u7c7b\u540d\u79f0\u6a21\u5f0f"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-xcuitest/#_2",
            "text": "\u5982\u4e0a\u8ff0\uff0c\u5982\u679c\u4f60\u4f9d\u8d56  page source  \u547d\u4ee4\u8fd4\u56de\u7684 app \u6e90 XML\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8f93\u51fa\u7684 XML \u4f1a\u4e0e\u57fa\u4e8e UIAutomation \u7684\u7ed3\u679c\u4f1a\u6709\u663e\u8457\u4e0d\u540c\u3002",
            "title": "\u9875\u9762\u6e90\u7801"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-xcuitest/#-ios-uiautomation",
            "text": "\u6b64\u5b9a\u4f4d\u5668\u7b56\u7565\u4e13\u95e8\u7528\u4e8e UIAutomation\uff0c\u56e0\u6b64\u5b83\u4e0d\u5305\u62ec\u5728 XCUITest \u4e2d\u3002 \u5728\u5373\u5c06\u53d1\u5e03\u7684\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u5c06\u81f4\u529b\u4e8e\u7c7b\u4f3c\u7684 \u201cnative\u201d \u578b\u5b9a\u4f4d\u7b56\u7565\u3002",
            "title": "-ios uiautomation \u5b9a\u4f4d\u7b56\u7565"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-xcuitest/#xpath",
            "text": "\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 XPath \u5b9a\u4f4d\u5668\uff0c\u9664\u975e\u4f60\u5b8c\u5168\u6ca1\u6709\u5176\u4ed6\u9009\u62e9\u3002 \u901a\u5e38\uff0cxpath \u5b9a\u4f4d\u5668\u53ef\u80fd\u6bd4\u5176\u4ed6\u7c7b\u578b\u7684\u5b9a\u4f4d\u5668\u6162\uff0c\u6bd4\u5982accessibility id\uff0c\u7c7b\u540d\u548c\u8c13\u8bcd\uff08\u5728\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\u53ef\u51cf\u7f13100\u500d\uff09\u3002 \u5b83\u4eec\u592a\u6162\u4e86\uff0c\u56e0\u4e3a xpath \u7684\u4f4d\u7f6e\u4e0d\u662f\u82f9\u679c\u7684XCTest \u6846\u67b6\u672c\u8eab\u6240\u652f\u6301\u7684\u3002    \u4f7f\u7528    driver.findElement(x)  \u800c\u4e0d\u662f\u4f7f\u7528  driver.findElements(x)[0]  \u901a\u8fc7xpath\u67e5\u627e\u5355\u4e2a\u5143\u7d20\u3002 \u60a8\u7684\u5b9a\u4f4d\u5668\u5339\u914d\u7684UI\u5143\u7d20\u8d8a\u591a\uff0c\u4f60\u7684\u811a\u672c\u8d8a\u6162\u3002   \u5728\u901a\u8fc7 xpath \u5b9a\u4f4d\u5143\u7d20\u65f6\uff0c\u4e00\u5b9a\u8981\u4f7f\u7528\u975e\u5e38\u5177\u4f53\u7684xpath\u3002 \u50cf\u8fd9\u6837\u7684\u5b9a\u4f4d\u5668   //*  \u53ef\u80fd\u9700\u8981\u51e0\u5206\u949f\u624d\u80fd\u5b8c\u6210\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u6709\u591a\u5c11\u7528\u6237\u754c\u9762\u5143\u7d20\uff08\u4f8b\u5982\uff0c  driver.findElement(By.xpath(\"//XCUIElementTypeButton[@value='blabla']\"))  \u6bd4  driver.findElement(By.xpath(\"//*[@value='blabla']\"))  \u6216  driver.findElement(By.xpath(\"//XCUIElementTypeButton\")))  \u8981\u5feb\u5f88\u591a\u3002   \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6267\u884c\u591a\u4e2a\u5d4c\u5957\u7684 findElement \u8c03\u7528\u6bd4\u6267\u884c xpath \u5355\u4e2a\u8c03\u7528\u66f4\u5feb\uff08\u4f8b\u5982\uff0c   driver.findElement(x).findElement(y)  \u901a\u5e38\u6bd4  driver.findElement(z)  \u8981\u5feb  \u5176\u4e2dx\u548cy\u4e0d\u662fxpath\u5b9a\u4f4d\u7b26\uff0cz\u662fxpath\u5b9a\u4f4d\u7b26\uff09\u3002",
            "title": "xpath \u5b9a\u4f4d\u7b56\u7565"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-xcuitest/#_3",
            "text": "\u9664\u4e86\u5347\u7ea7 XCode \u4f1a\u5e26\u6765\uff08\u4e0eAppium\u65e0\u5173\uff09\u8bb8\u591a\u95ee\u9898\u4e4b\u5916\uff0cAppium \u5bf9 XCUITest \u7684\u652f\u6301\u8fd8\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u7cfb\u7edf\u4f9d\u8d56\uff1a Carthage \u3002Appium Doctor \u73b0\u5df2\u66f4\u65b0\uff0c\u4ee5\u786e\u4fdd carthage \u4e8c\u8fdb\u5236\u5728\u4f60\u7684\u7cfb\u7edf\u8def\u5f84\u91cc\u3002",
            "title": "\u7cfb\u7edf\u4f9d\u8d56"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-xcuitest/#api",
            "text": "Unfortunately, the XCUITest API and the UIAutomation API are not equivalent. In many cases (like with  tap/click ), the behavior is identical. But some features that were available in the UIAutomation backend are not yet available in the new XCUITest backend. These known lacking features include:  \u4e0d\u5e78\u7684\u662f\uff0cXCUITest API \u548c UIAutomation API \u8fd8\u662f\u6709\u5dee\u522b\u7684\u3002\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff08\u6bd4\u5982 tap/click\uff09\uff0c\u884c\u4e3a\u662f\u76f8\u540c\u7684\uff0c\u4f46\u5728 UIAutomation \u4f5c\u4e3a\u5e95\u5c42\u9a71\u52a8\u65f6\uff0c\u53ef\u7528\u7684\u67d0\u4e9b\u529f\u80fd\u5728\u65b0\u7684 XCUITest \u65f6\u5c1a\u4e0d\u53ef\u7528\u3002\u4e0b\u9762\u662f\u5df2\u77e5\u7684\u7f3a\u4e4f\u7684\u529f\u80fd\uff1a   \u5730\u7406\u4f4d\u7f6e\u652f\u6301\uff08\u4f8b\u5982\uff1a  driver.location \uff09  \u632f\u52a8\u8bbe\u5907  \u9501\u5b9a\u8bbe\u5907  \u65cb\u8f6c\u8bbe\u5907\uff08device  orientation  \u662f\u652f\u6301\u7684\uff09   We will endeavor to add these features back in future releases of Appium.  \u6211\u4eec\u5728\u52aa\u529b\u628a\u8fd9\u4e9b\u529f\u80fd\u52a0\u5230 Appium \u7684\u672a\u6765\u7248\u672c\u91cc\u3002",
            "title": "API\u5dee\u5f02"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-xcuitest/#_4",
            "text": "\u5728\u4e4b\u524d\u57fa\u4e8e UIAutomation \u7684\u9a71\u52a8\u4e2d\uff0c\u5982\u679c\u60a8\u5c1d\u8bd5\u5355\u51fb\u4e0d\u5728\u89c6\u56fe\u4e2d\u7684\u5143\u7d20\uff0cUIAutomation \u5c06\u81ea\u52a8\u6eda\u52a8\u5230\u8be5\u5143\u7d20\uff0c\u7136\u540e\u70b9\u51fb\u5b83\u3002 \u4f7f\u7528 XCUITest\uff0c\u4e0d\u662f\u8fd9\u6837\u3002 \u70b9\u51fb\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u786e\u4fdd\u5143\u7d20\u53ef\u89c1\uff08\u4e0e\u7528\u6237\u770b\u5230\u624d\u80fd\u70b9\u51fb\u7684\u884c\u4e3a\u4e00\u81f4\uff09\u3002",
            "title": "\u6eda\u52a8\u548c\u70b9\u51fb"
        },
        {
            "location": "/cn/advanced-concepts/migrating-to-xcuitest/#_5",
            "text": "Finally, a list of known issues with the initial 1.6 release (we'll strike through issues which have been resolved):  \u6700\u540e\uff0c\u5217\u51fa\u4e86\u521d\u59cb 1.6 \u7248\u672c\u7684\u5df2\u77e5\u95ee\u9898\uff08\u5df2\u89e3\u51b3\u7684\u95ee\u9898\u4f1a\u88ab\u6a2a\u7ebf\u5212\u53bb\uff09\uff1a   ~~\u65e0\u6cd5\u4ee5\u6a2a\u5411\u6a21\u5f0f\u4e0e\u8bbe\u5907\u4e0a\u7684\u5143\u7d20\u8fdb\u884c\u4ea4\u4e92\uff08https://github.com/appium/appium/issues/6994)~~  shake  \u82f9\u679c\u4e0d\u652f\u6301\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u5b9e\u73b0  lock  \u82f9\u679c\u4e0d\u652f\u6301\u6240\u4ee5\u6211\u4eec\u6ca1\u6709\u5b9e\u73b0  \u8bbe\u7f6e\u5730\u7406\u4f4d\u7f6e\u4e0d\u88ab\u82f9\u679c\u652f\u6301\uff0c\u6211\u4eec\u4e5f\u4e0d\u652f\u6301  \u901a\u8fc7TouchAction / MultiAction API\uff0c zoom  \u624b\u52bf\u652f\u6301\uff0c\u56e0\u4e3a\u82f9\u679c\u7684\u4e00\u4e2abug\uff0c pinch  \u624b\u52bf\u4e0d\u652f\u6301\u3002  ~~\u901a\u8fc7TouchAction / MultiAction API\uff0c swipe \u624b\u52bf\u76ee\u524d\u4e0d\u53d7\u652f\u6301\uff0c\u5e94\u8be5\u5f88\u5feb\u89e3\u51b3\uff08https://github.com/appium/appium/issues/7573\uff09~~  autoAcceptAlerts \uff0c  autoDismissAlerts \u76ee\u524d\u8fd8\u4e0d\u80fd\u5de5\u4f5c\uff0c\u800c\u4e14\u6211\u4eec\u662f\u5426\u80fd\u591f\u5728\u5c06\u6765\u5b9e\u65bd\u8fd9\u4e9b\uff0c\u5b58\u5728\u4e89\u8bae\u3002  iOS SDK \u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u6b64\u4f7f\u7528\u67d0\u4e9b API \u65b9\u6cd5\u6784\u5efa\u7684 PickerWheels \u4e0d\u80fd\u7531 XCUITest \u81ea\u52a8\u6267\u884c\u3002\u6709\u5173\u89e3\u51b3\u65b9\u6cd5\uff0c\u8bf7\u53c2\u9605https://github.com/appium/appium/issues/6962\uff0c\u4ee5\u786e\u4fdd\u60a8\u7684 PickerWheels \u6b63\u786e\u6784\u5efa\u3002   \u6211\u4eec\u5c06\u5c3d\u53ef\u80fd\u6dfb\u52a0\u7f3a\u5931\u7684\u529f\u80fd\uff0c\u5e76\u5728\u4ee5\u540e\u7684 Appium \u7248\u672c\u4e2d\u4fee\u590d\u5176\u4ed6\u5df2\u77e5\u95ee\u9898\u3002  \u672c\u6587\u7531  \u6821\u957f  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u5176\u4ed6\u5df2\u77e5\u95ee\u9898"
        },
        {
            "location": "/cn/advanced-concepts/settings/",
            "text": "Settings\n\n\nSettings\u662fappium\u5f15\u5165\u7684\u4e00\u4e2a\u65b0\u6982\u5ff5\u3002 \u5b83\u4eec\u76ee\u524d\u4e0d\u662fMobile JSON Wire\u534f\u8bae\u6216Webdriver\u89c4\u8303\u7684\u4e00\u90e8\u5206\u3002\n\n\nSettings\u662f\u7528\u6765\u6307\u5b9aappium server\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\n\n\nSettings\u6709\u4ee5\u4e0b\u7279\u70b9:\n - \u53ef\u53d8\u6027\uff0cSettings\u5728\u4e00\u4e2a\u4f1a\u8bdd\u4e2d\u662f\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u3002\n - \u4e34\u65f6\u6027\uff0cSettings\u53ea\u5bf9\u5f53\u524d\u4f1a\u8bdd\u751f\u6548\uff0c\u65b0\u5efa\u7acb\u7684\u4f1a\u8bdd\u4f1a\u88ab\u91cd\u7f6e\u3002\n - \u5c40\u9650\u6027\uff0cSettings\u53ea\u7528\u6765\u63a7\u5236appium server\uff0c\u4e0d\u80fd\u7528\u4e8e\u63a7\u5236\u88ab\u6d4b\u5e94\u7528\u6216\u8bbe\u5907\u3002\n\n\n\u4ee5Android\u7684\nignoreUnimportantViews\n\u4e3a\u4f8b\u3002Android\u4e2d\u53ef\u4ee5\u8bbe\u7f6e\nignoreUnimportantViews\n\u7528\u6765\u5ffd\u7565\u6240\u6709\u4e0e\u5f53\u524d\u89c6\u56fe\u65e0\u5173\u7684\u5143\u7d20\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u7528\u4f8b\u6267\u884c\u7684\u66f4\u5feb\u3002\u6ce8\u610f\uff0c\u5f53\u7528\u6237\u9700\u8981\u8bbf\u95ee\u8fd9\u4e9b\u88ab\u5ffd\u7565\u7684\u5143\u7d20\u65f6\uff0c\u9700\u8981\u7981\u7528\nignoreUnimportantViews\n\u540e\u5e76\u91cd\u65b0\u542f\u7528\u3002 \n\n\n\u53e6\u5916\u4e00\u4e2a\u4f8b\u5b50\u662fSettings\u8ba9appium\u5ffd\u7565\u5f53\u524d\u4e0d\u53ef\u89c1\u7684\u5143\u7d20\u3002\n\n\nSettings\u901a\u8fc7\u4e0b\u9762\u7684API\u5b9e\u73b0\uff1a\n\n\nPOST\n /session/:sessionId/appium/settings\n\n\n\n\nSettings\u4f7f\u7528\u952e\u503c\u5bf9(name:value)\u7684JSON\u683c\u5f0f\uff0cname\u4e3asetting\u7684\u540d\u5b57\uff0cvalue\u662fsetting\u7684\u53d6\u503c\u3002\n\n\n\n\n{\n  settings: {\n   ignoreUnimportantViews : true\n  }\n}\n\n\n\n\nGET\n /session/:sessionId/appium/settings\n\n\n\n\n\u4ee5JSON\u683c\u5f0f\u8fd4\u56de\u5f53\u524d\u6240\u6709\u914d\u7f6e\u3002\n\n\n\n\n{\n  ignoreUnimportantViews : true\n}\n\n\n\n\n\u6ce8\u610f\uff0c\u5b9e\u9645\u7684\u547d\u4ee4\u56e0\u60a8\u7684\u811a\u672c\u6240\u4f7f\u7528\u7684\u8bed\u8a00\u800c\u5f02; \u8bf7\u53c2\u9605\u5177\u4f53\u7684Appium\u5ba2\u6237\u7aef\u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002\n\n\n\u652f\u6301\u7684Settings\n\n\n\"ignoreUnimportantViews\"\n - \u5e03\u5c14\u7c7b\u578b\u3002\u8bbe\u7f6e\u4e3afalse\u65f6\uff0cAndroid\u8bbe\u5907\u4e0d\u4f1a\u5ffd\u7565\u4efb\u4f55\u89c6\u56fe\uff1b\u88ab\u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u4f1a\u4f7f\u7528\nsetCompressedLayoutHeirarchy()\n\u5ffd\u7565\u6807\u8bb0\u4e86IMPORTANT_FOR_ACCESSIBILITY_NO\u6216IMPORTANT_FOR_ACCESSIBILITY_AUTO\uff08\u4ee5\u53ca\u88ab\u7cfb\u7edf\u8ba4\u4e3a\u4e0d\u91cd\u8981\u7684\uff09\u7684\u89c6\u56fe\uff0c\u4ece\u800c\u5c3d\u91cf\u8ba9\u811a\u672c\u53d8\u5f97\u7b80\u5355\u6216\u6267\u884c\u7684\u66f4\u5feb\u3002\n\n\nAndroid UiAutomator Configurator\n\n\n\u8bbe\u7f6e\nUiAutomator Configurator\n \u7684\u8d85\u65f6\u65f6\u95f4\u548c\u5ef6\u8fdf. \u53ea\u652f\u6301Android API 18 \u53ca\u4ee5\u4e0a\u7248\u672c\u3002\n\n\n\"actionAcknowledgmentTimeout\"\n - Int\u7c7b\u578b\uff0c\u4e0e\nsetActionAcknowledgmentTimeout\n\u76f8\u540c\u3002\u88ab\u8bbe\u7f6e\u4e3a\u8d1f\u6570\u65f6\u5c06\u53d6\u9ed8\u8ba4\u503c(3 * 1000 \u6beb\u79d2)\n\n\n\"keyInjectionDelay\"\n - Int\u7c7b\u578b\uff0c\u4e0e\nsetKeyInjectionDelay\n\u76f8\u540c\u3002\u88ab\u8bbe\u7f6e\u4e3a\u8d1f\u6570\u65f6\u5c06\u53d6\u9ed8\u8ba4\u503c(0 \u6beb\u79d2)\n\n\n\"scrollAcknowledgmentTimeout\"\n - Int\u7c7b\u578b\uff0c\u4e0e\nsetScrollAcknowledgmentTimeout\n\u76f8\u540c\u3002\u88ab\u8bbe\u7f6e\u4e3a\u8d1f\u6570\u65f6\u5c06\u53d6\u9ed8\u8ba4\u503c(200 \u6beb\u79d2)\n\n\n\"waitForIdleTimeout\"\n - Int\u7c7b\u578b\uff0c\u4e0e\nsetWaitForIdleTimeout\n\u76f8\u540c\u3002\u88ab\u8bbe\u7f6e\u4e3a\u8d1f\u6570\u65f6\u5c06\u53d6\u9ed8\u8ba4\u503c(10 * 1000 \u6beb\u79d2)\n\n\n\"waitForSelectorTimeout\"\n - Int\u7c7b\u578b\uff0c\u4e0e\nsetWaitForSelectorTimeout\n\u76f8\u540c\u3002\u88ab\u8bbe\u7f6e\u4e3a\u8d1f\u6570\u65f6\u5c06\u53d6\u9ed8\u8ba4\u503c(10 * 1000 \u6beb\u79d2)\n\n\n\u672c\u6587\u7531 \nghost62184\n \u7ffb\u8bd1\uff0c \u7531 \nchenhengjie123\n \u6821\u9a8c",
            "title": "Settings"
        },
        {
            "location": "/cn/advanced-concepts/settings/#settings",
            "text": "Settings\u662fappium\u5f15\u5165\u7684\u4e00\u4e2a\u65b0\u6982\u5ff5\u3002 \u5b83\u4eec\u76ee\u524d\u4e0d\u662fMobile JSON Wire\u534f\u8bae\u6216Webdriver\u89c4\u8303\u7684\u4e00\u90e8\u5206\u3002  Settings\u662f\u7528\u6765\u6307\u5b9aappium server\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002  Settings\u6709\u4ee5\u4e0b\u7279\u70b9:\n - \u53ef\u53d8\u6027\uff0cSettings\u5728\u4e00\u4e2a\u4f1a\u8bdd\u4e2d\u662f\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u3002\n - \u4e34\u65f6\u6027\uff0cSettings\u53ea\u5bf9\u5f53\u524d\u4f1a\u8bdd\u751f\u6548\uff0c\u65b0\u5efa\u7acb\u7684\u4f1a\u8bdd\u4f1a\u88ab\u91cd\u7f6e\u3002\n - \u5c40\u9650\u6027\uff0cSettings\u53ea\u7528\u6765\u63a7\u5236appium server\uff0c\u4e0d\u80fd\u7528\u4e8e\u63a7\u5236\u88ab\u6d4b\u5e94\u7528\u6216\u8bbe\u5907\u3002  \u4ee5Android\u7684 ignoreUnimportantViews \u4e3a\u4f8b\u3002Android\u4e2d\u53ef\u4ee5\u8bbe\u7f6e ignoreUnimportantViews \u7528\u6765\u5ffd\u7565\u6240\u6709\u4e0e\u5f53\u524d\u89c6\u56fe\u65e0\u5173\u7684\u5143\u7d20\uff0c\u8fd9\u6837\u53ef\u4ee5\u8ba9\u7528\u4f8b\u6267\u884c\u7684\u66f4\u5feb\u3002\u6ce8\u610f\uff0c\u5f53\u7528\u6237\u9700\u8981\u8bbf\u95ee\u8fd9\u4e9b\u88ab\u5ffd\u7565\u7684\u5143\u7d20\u65f6\uff0c\u9700\u8981\u7981\u7528 ignoreUnimportantViews \u540e\u5e76\u91cd\u65b0\u542f\u7528\u3002   \u53e6\u5916\u4e00\u4e2a\u4f8b\u5b50\u662fSettings\u8ba9appium\u5ffd\u7565\u5f53\u524d\u4e0d\u53ef\u89c1\u7684\u5143\u7d20\u3002  Settings\u901a\u8fc7\u4e0b\u9762\u7684API\u5b9e\u73b0\uff1a  POST  /session/:sessionId/appium/settings   Settings\u4f7f\u7528\u952e\u503c\u5bf9(name:value)\u7684JSON\u683c\u5f0f\uff0cname\u4e3asetting\u7684\u540d\u5b57\uff0cvalue\u662fsetting\u7684\u53d6\u503c\u3002   {\n  settings: {\n   ignoreUnimportantViews : true\n  }\n}  GET  /session/:sessionId/appium/settings   \u4ee5JSON\u683c\u5f0f\u8fd4\u56de\u5f53\u524d\u6240\u6709\u914d\u7f6e\u3002   {\n  ignoreUnimportantViews : true\n}  \u6ce8\u610f\uff0c\u5b9e\u9645\u7684\u547d\u4ee4\u56e0\u60a8\u7684\u811a\u672c\u6240\u4f7f\u7528\u7684\u8bed\u8a00\u800c\u5f02; \u8bf7\u53c2\u9605\u5177\u4f53\u7684Appium\u5ba2\u6237\u7aef\u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002",
            "title": "Settings"
        },
        {
            "location": "/cn/advanced-concepts/settings/#settings_1",
            "text": "\"ignoreUnimportantViews\"  - \u5e03\u5c14\u7c7b\u578b\u3002\u8bbe\u7f6e\u4e3afalse\u65f6\uff0cAndroid\u8bbe\u5907\u4e0d\u4f1a\u5ffd\u7565\u4efb\u4f55\u89c6\u56fe\uff1b\u88ab\u8bbe\u7f6e\u4e3atrue\u65f6\uff0c\u4f1a\u4f7f\u7528 setCompressedLayoutHeirarchy() \u5ffd\u7565\u6807\u8bb0\u4e86IMPORTANT_FOR_ACCESSIBILITY_NO\u6216IMPORTANT_FOR_ACCESSIBILITY_AUTO\uff08\u4ee5\u53ca\u88ab\u7cfb\u7edf\u8ba4\u4e3a\u4e0d\u91cd\u8981\u7684\uff09\u7684\u89c6\u56fe\uff0c\u4ece\u800c\u5c3d\u91cf\u8ba9\u811a\u672c\u53d8\u5f97\u7b80\u5355\u6216\u6267\u884c\u7684\u66f4\u5feb\u3002",
            "title": "\u652f\u6301\u7684Settings"
        },
        {
            "location": "/cn/advanced-concepts/settings/#android-uiautomator-configurator",
            "text": "\u8bbe\u7f6e UiAutomator Configurator  \u7684\u8d85\u65f6\u65f6\u95f4\u548c\u5ef6\u8fdf. \u53ea\u652f\u6301Android API 18 \u53ca\u4ee5\u4e0a\u7248\u672c\u3002  \"actionAcknowledgmentTimeout\"  - Int\u7c7b\u578b\uff0c\u4e0e setActionAcknowledgmentTimeout \u76f8\u540c\u3002\u88ab\u8bbe\u7f6e\u4e3a\u8d1f\u6570\u65f6\u5c06\u53d6\u9ed8\u8ba4\u503c(3 * 1000 \u6beb\u79d2)  \"keyInjectionDelay\"  - Int\u7c7b\u578b\uff0c\u4e0e setKeyInjectionDelay \u76f8\u540c\u3002\u88ab\u8bbe\u7f6e\u4e3a\u8d1f\u6570\u65f6\u5c06\u53d6\u9ed8\u8ba4\u503c(0 \u6beb\u79d2)  \"scrollAcknowledgmentTimeout\"  - Int\u7c7b\u578b\uff0c\u4e0e setScrollAcknowledgmentTimeout \u76f8\u540c\u3002\u88ab\u8bbe\u7f6e\u4e3a\u8d1f\u6570\u65f6\u5c06\u53d6\u9ed8\u8ba4\u503c(200 \u6beb\u79d2)  \"waitForIdleTimeout\"  - Int\u7c7b\u578b\uff0c\u4e0e setWaitForIdleTimeout \u76f8\u540c\u3002\u88ab\u8bbe\u7f6e\u4e3a\u8d1f\u6570\u65f6\u5c06\u53d6\u9ed8\u8ba4\u503c(10 * 1000 \u6beb\u79d2)  \"waitForSelectorTimeout\"  - Int\u7c7b\u578b\uff0c\u4e0e setWaitForSelectorTimeout \u76f8\u540c\u3002\u88ab\u8bbe\u7f6e\u4e3a\u8d1f\u6570\u65f6\u5c06\u53d6\u9ed8\u8ba4\u503c(10 * 1000 \u6beb\u79d2)  \u672c\u6587\u7531  ghost62184  \u7ffb\u8bd1\uff0c \u7531  chenhengjie123  \u6821\u9a8c",
            "title": "Android UiAutomator Configurator"
        },
        {
            "location": "/cn/advanced-concepts/wda-custom-server/",
            "text": "\u5982\u4f55\u642d\u5efa\u5e76\u5b9a\u5236 WebDriverAgent Server\n\n\nAppium \u7684 iOS \u7248\u672c\u7684\u540e\u7aef\u7528\u7684\u662f\nFacebook's WebDriverAgent\n\u3002\u8be5\u540e\u7aef\u662f\u57fa\u4e8e\u82f9\u679c\u516c\u53f8\u7684 XCTest \u6846\u67b6\uff0c\u6240\u4ee5\u4e5f\u6709\u6240\u6709XCTest \u6846\u67b6\u5df2\u77e5\u7684\u95ee\u9898\u3002\u5176\u4e2d\u6709\u4e9b\u95ee\u9898\u6211\u4eec\u6b63\u5728\u8bbe\u6cd5\u89e3\u51b3\uff0c\u6709\u4e00\u4e9b\u5728\u73b0\u9636\u6bb5\u53ef\u80fd\u65e0\u6cd5\u89e3\u51b3\u3002\u672c\u6587\u4e2d\u63cf\u8ff0\u7684\u65b9\u6cd5\u5df2\u7ecf\u80fd\u591f\u4f7f\u60a8\u5b8c\u5168\u638c\u63e1\u5728\u8bbe\u5907\u4e0a\u5982\u4f55\u6784\u5efa\u3001\u7ba1\u7406\u548c\u8fd0\u884cWDA\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u60a8\u53ef\u4ee5\u5728CI\u73af\u5883\u4e2d\u5bf9\u60a8\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u8fdb\u884c\u5fae\u8c03\uff0c\u5e76\u4f7f\u5176\u5728\u957f\u671f\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b\u66f4\u52a0\u7a33\u5b9a\u3002\n\n\n\u91cd\u70b9\uff1a\n * \u5982\u679c\u4f7f\u7528\u4e86Appium\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u5219\u4e0d\u9700\u8981\u5982\u4e0b\u7684\u6b65\u9aa4\u3002\u670d\u52a1\u5668\u5c06\u4e3a\u60a8\u641e\u5b9a\u4e00\u5207\uff0c\u5f53\u7136\u4f60\u4e5f\u4e0d\u80fd\u5bf9WDA\u505a\u592a\u591a\u63a7\u5236\u3002\n * \u5bf9\u8fde\u63a5\u7684\u88ab\u6d4b\u8bbe\u5907\u5fc5\u987b\u6709SSH\u6216\u7269\u7406\u8bbf\u95ee\u6743\u9650\u3002\n\n\n\u5b89\u88c5WDA\n\n\nAppium \u4f1a\u81ea\u52a8\u4e0b\u8f7d WebDriverAgent \u6e90\u7801\u3002\u5982\u679c\u4f7f\u7528 npm \u547d\u4ee4\uff08\nnpm install -g appium\n\uff09 \u5b89\u88c5Appium\u7684\u8bdd\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u4f1a\u4fdd\u5b58\u5728/usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent \u76ee\u5f55\u4e0b\u3002\n\u5982\u679c\u662f\u9996\u6b21\u5b89\u88c5\u7684\u8bdd\uff0c\u8fd8\u9700\u8981\u4e0b\u8f7d\u4e00\u4e9b\u7b2c\u4e09\u65b9\u4f9d\u8d56(\"carthage\"\u5de5\u5177\u5c31\u662f\u4e3a\u6b64\u51c6\u5907\u7684: \nbrew install carthage\n):\n\n\ncd /usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent\n./Scripts/bootstrap.sh -d\n\n\n\n\n\u4e0d\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u914d\u7f6e\u6b65\u9aa4\uff0c\u4f60\u5c31\u53ef\u4ee5\u5728iOS\u6a21\u62df\u5668\u4e0a\u6267\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002\n\n\n\u5982\u679c\u662f\u5728\u771f\u673a\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u7684\u8bdd\uff0c\u5219\u9700\u8981\u505a\u66f4\u591a\u7684\u8bbe\u7f6e\u3002\u53c2\u8003\nreal device configuration documentation\n \u8bbe\u7f6e\u4ee3\u7801\u7b7e\u540d\u3002\u53e6\u5916\uff0c\u4f60\u8fd8\u9700\u8981\u5b89\u88c5iproxy\u5de5\u5177\u3002\n\n\nnpm install -g iproxy\n\n\n\n\n\u4e3a\u4e86\u786e\u4fdd WDA \u6e90\u4ee3\u7801\u914d\u7f6e\u6b63\u786e\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\n\n\n\n\u7528Xcode\u6253\u5f00/usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent/WebDriverAgent.xcodeproj\n\n\n\u9009\u62e9 \"WebDriverAgentRunner\" \u5de5\u7a0b\n\n\n\u9009\u62e9\u8981\u8fd0\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u771f\u673a/\u6a21\u62df\u5668\u4f5c\u4e3a\u6784\u5efa\u76ee\u6807\u673a\n\n\n\u5728\u4e3b\u83dc\u5355\u4e2d\u9009\u62e9 Product -> Test\n\n\n\n\nXcode \u4f1a\u6210\u529f\u6784\u5efa\u9879\u76ee\u5e76\u5b89\u88c5\u5230\u771f\u673a/\u6a21\u62df\u5668\u4e0a\uff0c\u6240\u4ee5\u60a8\u5c06\u5728\u82f9\u679c\u7cfb\u7edf\u7684\u684c\u9762\u4e0a\u770b\u5230 WebDriverAgentRunner \u5e94\u7528\u7a0b\u5e8f\u7684\u56fe\u6807\u3002\n\n\n\u542f\u52a8WDA\n\n\nWebDriverAgent \u5e94\u7528\u7a0b\u5e8f\u626e\u6f14\u4e00\u4e2a REST \u670d\u52a1\u7684\u89d2\u8272\uff0c\u63a5\u6536\u5916\u90e8 API \u8bf7\u6c42\uff0c\u7136\u540e\u4f20\u9012\u7ed9\u88ab\u6d4b\u5e94\u7528\u7684\u539f\u751f XCTest \u8c03\u7528\u3002\u5982\u679c\u5728\u6a21\u62df\u5668\u4e0a\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\uff0cREST \u670d\u52a1\u7684\u5730\u5740\u5c06\u662flocalhost\uff0c\u5982\u679c\u5728\u6709\u5b9e\u9645\u7684 IP \u5730\u5740\u7684\u771f\u5b9e\u8bbe\u5907\u4e0a\u8fd0\u884c\uff0cREST \u670d\u52a1\u7684\u5730\u5740\u5c06\u662f\u5b9e\u9645\u7684 ip \u5730\u5740\u3002\u6211\u4eec\u4f7f\u7528 iproxy \u5c06\u7f51\u7edc\u8bf7\u6c42\u8def\u7531\u5230\u901a\u8fc7 USB \u8fde\u63a5\u7684\u771f\u5b9e\u8bbe\u5907\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u5de5\u5177\u5c06\u6a21\u62df\u5668\u548c\u771f\u5b9e\u8bbe\u5907\u4e0a\u7684 WDA \u7f51\u7edc\u5730\u5740\u7edf\u4e00\u3002\n\n\n\u8fd9\u4e2a\u7528Java\u7f16\u5199\u7684\u52a9\u624b\u7c7b\u8bf4\u660e\u4e86\u4e3b\u8981\u7684\u5b9e\u73b0\u7ec6\u8282\uff1a\n\n\npublic class WDAServer {\n    private static final Logger log = ZLogger.getLog(WDAServer.class.getSimpleName());\n\n    private static final int MAX_REAL_DEVICE_RESTART_RETRIES = 1;\n    private static final Timedelta REAL_DEVICE_RUNNING_TIMEOUT = Timedelta.ofMinutes(4);\n    private static final Timedelta RESTART_TIMEOUT = Timedelta.ofMinutes(1);\n\n    // These settings are needed to properly sign WDA for real device tests\n    // See https://github.com/appium/appium-xcuitest-driver for more details\n    private static final File KEYCHAIN = new File(String.format(\"%s/%s\",\n            System.getProperty(\"user.home\"), \"/Library/Keychains/MyKeychain.keychain\"));\n    private static final String KEYCHAIN_PASSWORD = \"******\";\n\n    private static final File IPROXY_EXECUTABLE = new File(\"/usr/local/bin/iproxy\");\n    private static final File XCODEBUILD_EXECUTABLE = new File(\"/usr/bin/xcodebuild\");\n    private static final File WDA_PROJECT =\n            new File(\"/usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/\" +\n                    \"WebDriverAgent/WebDriverAgent.xcodeproj\");\n    private static final String WDA_SCHEME = \"WebDriverAgentRunner\";\n    private static final String WDA_CONFIGURATION = \"Debug\";\n    private static final File XCODEBUILD_LOG = new File(\"/usr/local/var/log/appium/build.log\");\n    private static final File IPROXY_LOG = new File(\"/usr/local/var/log/appium/iproxy.log\");\n\n    private static final int PORT = 8100;\n    public static final String SERVER_URL = String.format(\"http://127.0.0.1:%d\", PORT);\n\n    private static final String[] IPROXY_CMDLINE = new String[]{\n            IPROXY_EXECUTABLE.getAbsolutePath(),\n            Integer.toString(PORT),\n            Integer.toString(PORT),\n            String.format(\"> %s 2>&1 &\", IPROXY_LOG.getAbsolutePath())\n    };\n\n    private static WDAServer instance = null;\n    private final boolean isRealDevice;\n    private final String deviceId;\n    private final String platformVersion;\n    private int failedRestartRetriesCount = 0;\n\n    private WDAServer() {\n        try {\n            this.isRealDevice = !getIsSimulatorFromConfig(getClass());\n            final String udid;\n            if (isRealDevice) {\n                udid = IOSRealDeviceHelpers.getUDID();\n            } else {\n                udid = IOSSimulatorHelpers.getId();\n            }\n            this.deviceId = udid;\n            this.platformVersion = getPlatformVersionFromConfig(getClass());\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n        ensureToolsExistence();\n        ensureParentDirExistence();\n    }\n\n    public synchronized static WDAServer getInstance() {\n        if (instance == null) {\n            instance = new WDAServer();\n        }\n        return instance;\n    }\n\n    private boolean waitUntilIsRunning(Timedelta timeout) throws Exception {\n        final URL status = new URL(SERVER_URL + \"/status\");\n        try {\n            if (timeout.asSeconds() > 5) {\n                log.debug(String.format(\"Waiting max %s until WDA server starts responding...\", timeout));\n            }\n            new UrlChecker().waitUntilAvailable(timeout.asMillis(), TimeUnit.MILLISECONDS, status);\n            return true;\n        } catch (UrlChecker.TimeoutException e) {\n            return false;\n        }\n    }\n\n    private static void ensureParentDirExistence() {\n        if (!XCODEBUILD_LOG.getParentFile().exists()) {\n            if (!XCODEBUILD_LOG.getParentFile().mkdirs()) {\n                throw new IllegalStateException(String.format(\n                        \"The script has failed to create '%s' folder for Appium logs. \" +\n                                \"Please make sure your account has correct access permissions on the parent folder(s)\",\n                        XCODEBUILD_LOG.getParentFile().getAbsolutePath()));\n            }\n        }\n    }\n\n    private void ensureToolsExistence() {\n        if (isRealDevice && !IPROXY_EXECUTABLE.exists()) {\n            throw new IllegalStateException(String.format(\"%s tool is expected to be installed (`npm install -g iproxy`)\",\n                    IPROXY_EXECUTABLE.getAbsolutePath()));\n        }\n        if (!XCODEBUILD_EXECUTABLE.exists()) {\n            throw new IllegalStateException(String.format(\"xcodebuild tool is not detected on the current system at %s\",\n                    XCODEBUILD_EXECUTABLE.getAbsolutePath()));\n        }\n        if (!WDA_PROJECT.exists()) {\n            throw new IllegalStateException(String.format(\"WDA project is expected to exist at %s\",\n                    WDA_PROJECT.getAbsolutePath()));\n        }\n    }\n\n    private List<String> generateXcodebuildCmdline() {\n        final List<String> result = new ArrayList<>();\n        result.add(XCODEBUILD_EXECUTABLE.getAbsolutePath());\n        result.add(\"clean build test\");\n        result.add(String.format(\"-project %s\", WDA_PROJECT.getAbsolutePath()));\n        result.add(String.format(\"-scheme %s\", WDA_SCHEME));\n        result.add(String.format(\"-destination id=%s\", deviceId));\n        result.add(String.format(\"-configuration %s\", WDA_CONFIGURATION));\n        result.add(String.format(\"IPHONEOS_DEPLOYMENT_TARGET=%s\", platformVersion));\n        result.add(String.format(\"> %s 2>&1 &\", XCODEBUILD_LOG.getAbsolutePath()));\n        return result;\n    }\n\n    private static List<String> generateKeychainUnlockCmdlines() throws Exception {\n        final List<String> result = new ArrayList<>();\n        result.add(String.format(\"/usr/bin/security -v list-keychains -s %s\", KEYCHAIN.getAbsolutePath()));\n        result.add(String.format(\"/usr/bin/security -v unlock-keychain -p %s %s\",\n                KEYCHAIN_PASSWORD, KEYCHAIN.getAbsolutePath()));\n        result.add(String.format(\"/usr/bin/security set-keychain-settings -t 3600 %s\", KEYCHAIN.getAbsolutePath()));\n        return result;\n    }\n\n    public synchronized void restart() throws Exception {\n        if (isRealDevice && failedRestartRetriesCount >= MAX_REAL_DEVICE_RESTART_RETRIES) {\n            throw new IllegalStateException(String.format(\n                    \"WDA server cannot start on the connected device with udid %s after %s retries. \" +\n                            \"Reboot the device manually and try again\", deviceId, MAX_REAL_DEVICE_RESTART_RETRIES));\n        }\n\n        final String hostname = InetAddress.getLocalHost().getHostName();\n        log.info(String.format(\"Trying to (re)start WDA server on %s:%s...\", hostname, PORT));\n        UnixProcessHelpers.killProcessesGracefully(IPROXY_EXECUTABLE.getName(), XCODEBUILD_EXECUTABLE.getName());\n\n        final File scriptFile = File.createTempFile(\"script\", \".sh\");\n        try {\n            final List<String> scriptContent = new ArrayList<>();\n            scriptContent.add(\"#!/bin/bash\");\n            if (isRealDevice && isRunningInJenkinsNetwork()) {\n                scriptContent.add(String.join(\"\\n\", generateKeychainUnlockCmdlines()));\n            }\n            if (isRealDevice) {\n                scriptContent.add(String.join(\" \", IPROXY_CMDLINE));\n            }\n            final String wdaBuildCmdline = String.join(\" \", generateXcodebuildCmdline());\n            log.debug(String.format(\"Building WDA with command line:\\n%s\\n\", wdaBuildCmdline));\n            scriptContent.add(wdaBuildCmdline);\n            try (Writer output = new BufferedWriter(new FileWriter(scriptFile))) {\n                output.write(String.join(\"\\n\", scriptContent));\n            }\n            new ProcessBuilder(\"/bin/chmod\", \"u+x\", scriptFile.getCanonicalPath())\n                    .redirectErrorStream(true).start().waitFor(5, TimeUnit.SECONDS);\n            final ProcessBuilder pb = new ProcessBuilder(\"/bin/bash\", scriptFile.getCanonicalPath());\n            final Map<String, String> env = pb.environment();\n            // This is needed for Jenkins\n            env.put(\"BUILD_ID\", \"dontKillMe\");\n            log.info(String.format(\"Waiting max %s for WDA to be (re)started on %s:%s...\", RESTART_TIMEOUT.toString(),\n                    hostname, PORT));\n            final Timedelta started = Timedelta.now();\n            pb.redirectErrorStream(true).start().waitFor(RESTART_TIMEOUT.asMillis(), TimeUnit.MILLISECONDS);\n            if (!waitUntilIsRunning(RESTART_TIMEOUT)) {\n                ++failedRestartRetriesCount;\n                throw new IllegalStateException(\n                        String.format(\"WDA server has failed to start after %s timeout on server '%s'.\\n\"\n                                        + \"Please make sure that iDevice is properly connected and you can build \"\n                                        + \"WDA manually from XCode.\\n\"\n                                        + \"Xcodebuild logs:\\n\\n%s\\n\\n\\niproxy logs:\\n\\n%s\\n\\n\\n\",\n                                RESTART_TIMEOUT, hostname,\n                                getLog(XCODEBUILD_LOG).orElse(\"EMPTY\"), getLog(IPROXY_LOG).orElse(\"EMPTY\"))\n                );\n            }\n\n            log.info(String.format(\"WDA server has been successfully (re)started after %s \" +\n                    \"and now is listening on %s:%s\", Timedelta.now().diff(started).toString(), hostname, PORT));\n        } finally {\n            scriptFile.delete();\n        }\n    }\n\n    public boolean isRunning() throws Exception {\n        if (!isProcessRunning(XCODEBUILD_EXECUTABLE.getName())\n                || (isRealDevice && !isProcessRunning(IPROXY_EXECUTABLE.getName()))) {\n            return false;\n        }\n        return waitUntilIsRunning(isRealDevice ? REAL_DEVICE_RUNNING_TIMEOUT : Timedelta.ofSeconds(3));\n    }\n\n    public Optional<String> getLog(File logFile) {\n        if (logFile.exists()) {\n            try {\n                return Optional.of(new String(Files.readAllBytes(logFile.toPath()), Charset.forName(\"UTF-8\")));\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return Optional.empty();\n    }\n\n    public void resetLogs() {\n        for (File logFile : new File[]{XCODEBUILD_LOG, IPROXY_LOG}) {\n            if (logFile.exists()) {\n                try {\n                    final PrintWriter writer = new PrintWriter(logFile);\n                    writer.print(\"\");\n                    writer.close();\n                } catch (FileNotFoundException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n}\n\n\n\n\n\u4e4b\u524d\u5e94\u8be5\u8c03\u7528\u8fd9\u6bb5\u4ee3\u7801\u6765\u542f\u52a8 Appium iOS \u9a71\u52a8\uff0c\u4f8b\u5982\uff0c\u5728 setUp \u65b9\u6cd5\u4e2d\uff1a\n\n\n   if (!WDAServer.getInstance().isRunning()) {\n       WDAServer.getInstance().restart();\n   }\n\n\n\n\n\u4e3a Appium \u9a71\u52a8\u7a0b\u5e8f\u8bbe\u7f6e webDriverAgentUrl \u975e\u5e38\u91cd\u8981\uff0c\u8ba9\u5b83\u77e5\u9053\u6211\u4eec\u7684 WDA \u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\uff1a\n\n\n    capabilities.setCapability(\"webDriverAgentUrl\", WDAServer.SERVER_URL);\n\n\n\n\n\u91cd\u8981\u6ce8\u91ca\n\n\n\n\n\u5982\u679c\u662f jenkins agent \u6267\u884c\u7684\uff0c\u8be5\u8fdb\u7a0b\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u94a5\u5319\u4e32\uff08Keychain\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u4e3a\u771f\u5b9e\u8bbe\u5907\u7f16\u8bd1 WDA \u4e4b\u524d\u51c6\u5907\u94a5\u5319\u4e32\uff0c\u5426\u5219\u7f16\u7801\u5c06\u5931\u8d25\u3002\n\n\n\u5982\u679c xcodebuild \u548c iproxy \u8fdb\u7a0b\u5df2\u7ecf\u88ab\u51bb\u7ed3\uff0c\u6211\u4eec\u5728\u91cd\u65b0\u542f\u52a8\u4e4b\u524d\u6740\u6b7b\u8fd9\u4e9b\u8fdb\u7a0b\uff0c\u4ee5\u786e\u4fdd\u7f16\u8bd1\u6210\u529f\uff0c\n\n\n\u6211\u4eec\u51c6\u5907\u4e00\u4e2a\u5355\u72ec\u7684 bash \u811a\u672c\u5e76\u72ec\u7acb\u4e8e iproxy / xcodebuild \u8fdb\u7a0b\uff0c\u6240\u4ee5\u5373\u4f7f\u5728\u5b9e\u9645\u7684\u4ee3\u7801\u6267\u884c\u5b8c\u6210\u540e\uff0c\u5b83\u4eec\u4e5f\u53ef\u4ee5\u5728\u540e\u53f0\u7ee7\u7eed\u8fd0\u884c\u3002\u5982\u679c\u5728\u81ea\u52a8\u5316\u5b9e\u9a8c\u5ba4\u4e2d\u7684\u540c\u4e00\u673a\u5668/\u8282\u70b9\u4e0a\u6267\u884c\u591a\u4e2a\u6d4b\u8bd5/\u5957\u4ef6\uff0c\u6700\u5c11\u7684\u4eba\u5de5\u5e72\u9884\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002\n\n\n\u66f4\u6539 BUILD_ID \u73af\u5883\u53d8\u91cf\u7684\u503c\u4ee5\u907f\u514d\u5728\u4f5c\u4e1a\u5b8c\u6210\u540e\u7531 Jenkins agent \u7a0b\u5e8f\u6740\u6b7b\u540e\u53f0\u8fdb\u7a0b\u3002\n\n\nisRunning \u68c0\u67e5\u662f\u901a\u8fc7\u9a8c\u8bc1\u5b9e\u9645\u7684\u7f51\u7edc\u7ec8\u7aef\u6765\u5b8c\u6210\u7684.\n\n\n\u5b88\u62a4\u8fdb\u7a0b\u7684\u8f93\u51fa\u4f1a\u5b58\u5165\u65e5\u5fd7\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ddf\u8e2a\u9519\u8bef\u548c\u610f\u5916\u7684\u6545\u969c\u3002\u5982\u679c\u670d\u52a1\u5668\u65e0\u6cd5\u542f\u52a8/\u91cd\u542f\uff0c\u65e5\u5fd7\u6587\u4ef6\u7684\u5185\u5bb9\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5230\u5b9e\u9645\u7684\u9519\u8bef\u6d88\u606f\u4e2d\u3002\n\n\n\u771f\u673a\u8bbe\u5907ID\u53ef\u4ee5\u4ece \nsystem_profiler SPUSBDataType\n \u8f93\u51fa\u4e2d\u89e3\u6790\n\n\n\u6a21\u62df\u5668ID\u53ef\u4ee5\u4ece \nxcrun simctl list\n \u8f93\u51fa\u4e2d\u89e3\u6790\n\n\nUrlChecker \u7c7b\u662f\u4ece org.openqa.selenium.net \u5305\u5bfc\u5165\u7684\n\n\n\n\n\u672c\u6587\u7531 \nsimple\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Wda custom server"
        },
        {
            "location": "/cn/advanced-concepts/wda-custom-server/#webdriveragent-server",
            "text": "Appium \u7684 iOS \u7248\u672c\u7684\u540e\u7aef\u7528\u7684\u662f Facebook's WebDriverAgent \u3002\u8be5\u540e\u7aef\u662f\u57fa\u4e8e\u82f9\u679c\u516c\u53f8\u7684 XCTest \u6846\u67b6\uff0c\u6240\u4ee5\u4e5f\u6709\u6240\u6709XCTest \u6846\u67b6\u5df2\u77e5\u7684\u95ee\u9898\u3002\u5176\u4e2d\u6709\u4e9b\u95ee\u9898\u6211\u4eec\u6b63\u5728\u8bbe\u6cd5\u89e3\u51b3\uff0c\u6709\u4e00\u4e9b\u5728\u73b0\u9636\u6bb5\u53ef\u80fd\u65e0\u6cd5\u89e3\u51b3\u3002\u672c\u6587\u4e2d\u63cf\u8ff0\u7684\u65b9\u6cd5\u5df2\u7ecf\u80fd\u591f\u4f7f\u60a8\u5b8c\u5168\u638c\u63e1\u5728\u8bbe\u5907\u4e0a\u5982\u4f55\u6784\u5efa\u3001\u7ba1\u7406\u548c\u8fd0\u884cWDA\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u60a8\u53ef\u4ee5\u5728CI\u73af\u5883\u4e2d\u5bf9\u60a8\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u8fdb\u884c\u5fae\u8c03\uff0c\u5e76\u4f7f\u5176\u5728\u957f\u671f\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b\u66f4\u52a0\u7a33\u5b9a\u3002  \u91cd\u70b9\uff1a\n * \u5982\u679c\u4f7f\u7528\u4e86Appium\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u5219\u4e0d\u9700\u8981\u5982\u4e0b\u7684\u6b65\u9aa4\u3002\u670d\u52a1\u5668\u5c06\u4e3a\u60a8\u641e\u5b9a\u4e00\u5207\uff0c\u5f53\u7136\u4f60\u4e5f\u4e0d\u80fd\u5bf9WDA\u505a\u592a\u591a\u63a7\u5236\u3002\n * \u5bf9\u8fde\u63a5\u7684\u88ab\u6d4b\u8bbe\u5907\u5fc5\u987b\u6709SSH\u6216\u7269\u7406\u8bbf\u95ee\u6743\u9650\u3002",
            "title": "\u5982\u4f55\u642d\u5efa\u5e76\u5b9a\u5236 WebDriverAgent Server"
        },
        {
            "location": "/cn/advanced-concepts/wda-custom-server/#wda",
            "text": "Appium \u4f1a\u81ea\u52a8\u4e0b\u8f7d WebDriverAgent \u6e90\u7801\u3002\u5982\u679c\u4f7f\u7528 npm \u547d\u4ee4\uff08 npm install -g appium \uff09 \u5b89\u88c5Appium\u7684\u8bdd\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u4f1a\u4fdd\u5b58\u5728/usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent \u76ee\u5f55\u4e0b\u3002\n\u5982\u679c\u662f\u9996\u6b21\u5b89\u88c5\u7684\u8bdd\uff0c\u8fd8\u9700\u8981\u4e0b\u8f7d\u4e00\u4e9b\u7b2c\u4e09\u65b9\u4f9d\u8d56(\"carthage\"\u5de5\u5177\u5c31\u662f\u4e3a\u6b64\u51c6\u5907\u7684:  brew install carthage ):  cd /usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent\n./Scripts/bootstrap.sh -d  \u4e0d\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u914d\u7f6e\u6b65\u9aa4\uff0c\u4f60\u5c31\u53ef\u4ee5\u5728iOS\u6a21\u62df\u5668\u4e0a\u6267\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002  \u5982\u679c\u662f\u5728\u771f\u673a\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u7684\u8bdd\uff0c\u5219\u9700\u8981\u505a\u66f4\u591a\u7684\u8bbe\u7f6e\u3002\u53c2\u8003 real device configuration documentation  \u8bbe\u7f6e\u4ee3\u7801\u7b7e\u540d\u3002\u53e6\u5916\uff0c\u4f60\u8fd8\u9700\u8981\u5b89\u88c5iproxy\u5de5\u5177\u3002  npm install -g iproxy  \u4e3a\u4e86\u786e\u4fdd WDA \u6e90\u4ee3\u7801\u914d\u7f6e\u6b63\u786e\uff0c\u8bf7\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a   \u7528Xcode\u6253\u5f00/usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent/WebDriverAgent.xcodeproj  \u9009\u62e9 \"WebDriverAgentRunner\" \u5de5\u7a0b  \u9009\u62e9\u8981\u8fd0\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u771f\u673a/\u6a21\u62df\u5668\u4f5c\u4e3a\u6784\u5efa\u76ee\u6807\u673a  \u5728\u4e3b\u83dc\u5355\u4e2d\u9009\u62e9 Product -> Test   Xcode \u4f1a\u6210\u529f\u6784\u5efa\u9879\u76ee\u5e76\u5b89\u88c5\u5230\u771f\u673a/\u6a21\u62df\u5668\u4e0a\uff0c\u6240\u4ee5\u60a8\u5c06\u5728\u82f9\u679c\u7cfb\u7edf\u7684\u684c\u9762\u4e0a\u770b\u5230 WebDriverAgentRunner \u5e94\u7528\u7a0b\u5e8f\u7684\u56fe\u6807\u3002",
            "title": "\u5b89\u88c5WDA"
        },
        {
            "location": "/cn/advanced-concepts/wda-custom-server/#wda_1",
            "text": "WebDriverAgent \u5e94\u7528\u7a0b\u5e8f\u626e\u6f14\u4e00\u4e2a REST \u670d\u52a1\u7684\u89d2\u8272\uff0c\u63a5\u6536\u5916\u90e8 API \u8bf7\u6c42\uff0c\u7136\u540e\u4f20\u9012\u7ed9\u88ab\u6d4b\u5e94\u7528\u7684\u539f\u751f XCTest \u8c03\u7528\u3002\u5982\u679c\u5728\u6a21\u62df\u5668\u4e0a\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\uff0cREST \u670d\u52a1\u7684\u5730\u5740\u5c06\u662flocalhost\uff0c\u5982\u679c\u5728\u6709\u5b9e\u9645\u7684 IP \u5730\u5740\u7684\u771f\u5b9e\u8bbe\u5907\u4e0a\u8fd0\u884c\uff0cREST \u670d\u52a1\u7684\u5730\u5740\u5c06\u662f\u5b9e\u9645\u7684 ip \u5730\u5740\u3002\u6211\u4eec\u4f7f\u7528 iproxy \u5c06\u7f51\u7edc\u8bf7\u6c42\u8def\u7531\u5230\u901a\u8fc7 USB \u8fde\u63a5\u7684\u771f\u5b9e\u8bbe\u5907\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u5de5\u5177\u5c06\u6a21\u62df\u5668\u548c\u771f\u5b9e\u8bbe\u5907\u4e0a\u7684 WDA \u7f51\u7edc\u5730\u5740\u7edf\u4e00\u3002  \u8fd9\u4e2a\u7528Java\u7f16\u5199\u7684\u52a9\u624b\u7c7b\u8bf4\u660e\u4e86\u4e3b\u8981\u7684\u5b9e\u73b0\u7ec6\u8282\uff1a  public class WDAServer {\n    private static final Logger log = ZLogger.getLog(WDAServer.class.getSimpleName());\n\n    private static final int MAX_REAL_DEVICE_RESTART_RETRIES = 1;\n    private static final Timedelta REAL_DEVICE_RUNNING_TIMEOUT = Timedelta.ofMinutes(4);\n    private static final Timedelta RESTART_TIMEOUT = Timedelta.ofMinutes(1);\n\n    // These settings are needed to properly sign WDA for real device tests\n    // See https://github.com/appium/appium-xcuitest-driver for more details\n    private static final File KEYCHAIN = new File(String.format(\"%s/%s\",\n            System.getProperty(\"user.home\"), \"/Library/Keychains/MyKeychain.keychain\"));\n    private static final String KEYCHAIN_PASSWORD = \"******\";\n\n    private static final File IPROXY_EXECUTABLE = new File(\"/usr/local/bin/iproxy\");\n    private static final File XCODEBUILD_EXECUTABLE = new File(\"/usr/bin/xcodebuild\");\n    private static final File WDA_PROJECT =\n            new File(\"/usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/\" +\n                    \"WebDriverAgent/WebDriverAgent.xcodeproj\");\n    private static final String WDA_SCHEME = \"WebDriverAgentRunner\";\n    private static final String WDA_CONFIGURATION = \"Debug\";\n    private static final File XCODEBUILD_LOG = new File(\"/usr/local/var/log/appium/build.log\");\n    private static final File IPROXY_LOG = new File(\"/usr/local/var/log/appium/iproxy.log\");\n\n    private static final int PORT = 8100;\n    public static final String SERVER_URL = String.format(\"http://127.0.0.1:%d\", PORT);\n\n    private static final String[] IPROXY_CMDLINE = new String[]{\n            IPROXY_EXECUTABLE.getAbsolutePath(),\n            Integer.toString(PORT),\n            Integer.toString(PORT),\n            String.format(\"> %s 2>&1 &\", IPROXY_LOG.getAbsolutePath())\n    };\n\n    private static WDAServer instance = null;\n    private final boolean isRealDevice;\n    private final String deviceId;\n    private final String platformVersion;\n    private int failedRestartRetriesCount = 0;\n\n    private WDAServer() {\n        try {\n            this.isRealDevice = !getIsSimulatorFromConfig(getClass());\n            final String udid;\n            if (isRealDevice) {\n                udid = IOSRealDeviceHelpers.getUDID();\n            } else {\n                udid = IOSSimulatorHelpers.getId();\n            }\n            this.deviceId = udid;\n            this.platformVersion = getPlatformVersionFromConfig(getClass());\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n        ensureToolsExistence();\n        ensureParentDirExistence();\n    }\n\n    public synchronized static WDAServer getInstance() {\n        if (instance == null) {\n            instance = new WDAServer();\n        }\n        return instance;\n    }\n\n    private boolean waitUntilIsRunning(Timedelta timeout) throws Exception {\n        final URL status = new URL(SERVER_URL + \"/status\");\n        try {\n            if (timeout.asSeconds() > 5) {\n                log.debug(String.format(\"Waiting max %s until WDA server starts responding...\", timeout));\n            }\n            new UrlChecker().waitUntilAvailable(timeout.asMillis(), TimeUnit.MILLISECONDS, status);\n            return true;\n        } catch (UrlChecker.TimeoutException e) {\n            return false;\n        }\n    }\n\n    private static void ensureParentDirExistence() {\n        if (!XCODEBUILD_LOG.getParentFile().exists()) {\n            if (!XCODEBUILD_LOG.getParentFile().mkdirs()) {\n                throw new IllegalStateException(String.format(\n                        \"The script has failed to create '%s' folder for Appium logs. \" +\n                                \"Please make sure your account has correct access permissions on the parent folder(s)\",\n                        XCODEBUILD_LOG.getParentFile().getAbsolutePath()));\n            }\n        }\n    }\n\n    private void ensureToolsExistence() {\n        if (isRealDevice && !IPROXY_EXECUTABLE.exists()) {\n            throw new IllegalStateException(String.format(\"%s tool is expected to be installed (`npm install -g iproxy`)\",\n                    IPROXY_EXECUTABLE.getAbsolutePath()));\n        }\n        if (!XCODEBUILD_EXECUTABLE.exists()) {\n            throw new IllegalStateException(String.format(\"xcodebuild tool is not detected on the current system at %s\",\n                    XCODEBUILD_EXECUTABLE.getAbsolutePath()));\n        }\n        if (!WDA_PROJECT.exists()) {\n            throw new IllegalStateException(String.format(\"WDA project is expected to exist at %s\",\n                    WDA_PROJECT.getAbsolutePath()));\n        }\n    }\n\n    private List<String> generateXcodebuildCmdline() {\n        final List<String> result = new ArrayList<>();\n        result.add(XCODEBUILD_EXECUTABLE.getAbsolutePath());\n        result.add(\"clean build test\");\n        result.add(String.format(\"-project %s\", WDA_PROJECT.getAbsolutePath()));\n        result.add(String.format(\"-scheme %s\", WDA_SCHEME));\n        result.add(String.format(\"-destination id=%s\", deviceId));\n        result.add(String.format(\"-configuration %s\", WDA_CONFIGURATION));\n        result.add(String.format(\"IPHONEOS_DEPLOYMENT_TARGET=%s\", platformVersion));\n        result.add(String.format(\"> %s 2>&1 &\", XCODEBUILD_LOG.getAbsolutePath()));\n        return result;\n    }\n\n    private static List<String> generateKeychainUnlockCmdlines() throws Exception {\n        final List<String> result = new ArrayList<>();\n        result.add(String.format(\"/usr/bin/security -v list-keychains -s %s\", KEYCHAIN.getAbsolutePath()));\n        result.add(String.format(\"/usr/bin/security -v unlock-keychain -p %s %s\",\n                KEYCHAIN_PASSWORD, KEYCHAIN.getAbsolutePath()));\n        result.add(String.format(\"/usr/bin/security set-keychain-settings -t 3600 %s\", KEYCHAIN.getAbsolutePath()));\n        return result;\n    }\n\n    public synchronized void restart() throws Exception {\n        if (isRealDevice && failedRestartRetriesCount >= MAX_REAL_DEVICE_RESTART_RETRIES) {\n            throw new IllegalStateException(String.format(\n                    \"WDA server cannot start on the connected device with udid %s after %s retries. \" +\n                            \"Reboot the device manually and try again\", deviceId, MAX_REAL_DEVICE_RESTART_RETRIES));\n        }\n\n        final String hostname = InetAddress.getLocalHost().getHostName();\n        log.info(String.format(\"Trying to (re)start WDA server on %s:%s...\", hostname, PORT));\n        UnixProcessHelpers.killProcessesGracefully(IPROXY_EXECUTABLE.getName(), XCODEBUILD_EXECUTABLE.getName());\n\n        final File scriptFile = File.createTempFile(\"script\", \".sh\");\n        try {\n            final List<String> scriptContent = new ArrayList<>();\n            scriptContent.add(\"#!/bin/bash\");\n            if (isRealDevice && isRunningInJenkinsNetwork()) {\n                scriptContent.add(String.join(\"\\n\", generateKeychainUnlockCmdlines()));\n            }\n            if (isRealDevice) {\n                scriptContent.add(String.join(\" \", IPROXY_CMDLINE));\n            }\n            final String wdaBuildCmdline = String.join(\" \", generateXcodebuildCmdline());\n            log.debug(String.format(\"Building WDA with command line:\\n%s\\n\", wdaBuildCmdline));\n            scriptContent.add(wdaBuildCmdline);\n            try (Writer output = new BufferedWriter(new FileWriter(scriptFile))) {\n                output.write(String.join(\"\\n\", scriptContent));\n            }\n            new ProcessBuilder(\"/bin/chmod\", \"u+x\", scriptFile.getCanonicalPath())\n                    .redirectErrorStream(true).start().waitFor(5, TimeUnit.SECONDS);\n            final ProcessBuilder pb = new ProcessBuilder(\"/bin/bash\", scriptFile.getCanonicalPath());\n            final Map<String, String> env = pb.environment();\n            // This is needed for Jenkins\n            env.put(\"BUILD_ID\", \"dontKillMe\");\n            log.info(String.format(\"Waiting max %s for WDA to be (re)started on %s:%s...\", RESTART_TIMEOUT.toString(),\n                    hostname, PORT));\n            final Timedelta started = Timedelta.now();\n            pb.redirectErrorStream(true).start().waitFor(RESTART_TIMEOUT.asMillis(), TimeUnit.MILLISECONDS);\n            if (!waitUntilIsRunning(RESTART_TIMEOUT)) {\n                ++failedRestartRetriesCount;\n                throw new IllegalStateException(\n                        String.format(\"WDA server has failed to start after %s timeout on server '%s'.\\n\"\n                                        + \"Please make sure that iDevice is properly connected and you can build \"\n                                        + \"WDA manually from XCode.\\n\"\n                                        + \"Xcodebuild logs:\\n\\n%s\\n\\n\\niproxy logs:\\n\\n%s\\n\\n\\n\",\n                                RESTART_TIMEOUT, hostname,\n                                getLog(XCODEBUILD_LOG).orElse(\"EMPTY\"), getLog(IPROXY_LOG).orElse(\"EMPTY\"))\n                );\n            }\n\n            log.info(String.format(\"WDA server has been successfully (re)started after %s \" +\n                    \"and now is listening on %s:%s\", Timedelta.now().diff(started).toString(), hostname, PORT));\n        } finally {\n            scriptFile.delete();\n        }\n    }\n\n    public boolean isRunning() throws Exception {\n        if (!isProcessRunning(XCODEBUILD_EXECUTABLE.getName())\n                || (isRealDevice && !isProcessRunning(IPROXY_EXECUTABLE.getName()))) {\n            return false;\n        }\n        return waitUntilIsRunning(isRealDevice ? REAL_DEVICE_RUNNING_TIMEOUT : Timedelta.ofSeconds(3));\n    }\n\n    public Optional<String> getLog(File logFile) {\n        if (logFile.exists()) {\n            try {\n                return Optional.of(new String(Files.readAllBytes(logFile.toPath()), Charset.forName(\"UTF-8\")));\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return Optional.empty();\n    }\n\n    public void resetLogs() {\n        for (File logFile : new File[]{XCODEBUILD_LOG, IPROXY_LOG}) {\n            if (logFile.exists()) {\n                try {\n                    final PrintWriter writer = new PrintWriter(logFile);\n                    writer.print(\"\");\n                    writer.close();\n                } catch (FileNotFoundException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n}  \u4e4b\u524d\u5e94\u8be5\u8c03\u7528\u8fd9\u6bb5\u4ee3\u7801\u6765\u542f\u52a8 Appium iOS \u9a71\u52a8\uff0c\u4f8b\u5982\uff0c\u5728 setUp \u65b9\u6cd5\u4e2d\uff1a     if (!WDAServer.getInstance().isRunning()) {\n       WDAServer.getInstance().restart();\n   }  \u4e3a Appium \u9a71\u52a8\u7a0b\u5e8f\u8bbe\u7f6e webDriverAgentUrl \u975e\u5e38\u91cd\u8981\uff0c\u8ba9\u5b83\u77e5\u9053\u6211\u4eec\u7684 WDA \u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\uff1a      capabilities.setCapability(\"webDriverAgentUrl\", WDAServer.SERVER_URL);",
            "title": "\u542f\u52a8WDA"
        },
        {
            "location": "/cn/advanced-concepts/wda-custom-server/#_1",
            "text": "\u5982\u679c\u662f jenkins agent \u6267\u884c\u7684\uff0c\u8be5\u8fdb\u7a0b\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u94a5\u5319\u4e32\uff08Keychain\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5728\u4e3a\u771f\u5b9e\u8bbe\u5907\u7f16\u8bd1 WDA \u4e4b\u524d\u51c6\u5907\u94a5\u5319\u4e32\uff0c\u5426\u5219\u7f16\u7801\u5c06\u5931\u8d25\u3002  \u5982\u679c xcodebuild \u548c iproxy \u8fdb\u7a0b\u5df2\u7ecf\u88ab\u51bb\u7ed3\uff0c\u6211\u4eec\u5728\u91cd\u65b0\u542f\u52a8\u4e4b\u524d\u6740\u6b7b\u8fd9\u4e9b\u8fdb\u7a0b\uff0c\u4ee5\u786e\u4fdd\u7f16\u8bd1\u6210\u529f\uff0c  \u6211\u4eec\u51c6\u5907\u4e00\u4e2a\u5355\u72ec\u7684 bash \u811a\u672c\u5e76\u72ec\u7acb\u4e8e iproxy / xcodebuild \u8fdb\u7a0b\uff0c\u6240\u4ee5\u5373\u4f7f\u5728\u5b9e\u9645\u7684\u4ee3\u7801\u6267\u884c\u5b8c\u6210\u540e\uff0c\u5b83\u4eec\u4e5f\u53ef\u4ee5\u5728\u540e\u53f0\u7ee7\u7eed\u8fd0\u884c\u3002\u5982\u679c\u5728\u81ea\u52a8\u5316\u5b9e\u9a8c\u5ba4\u4e2d\u7684\u540c\u4e00\u673a\u5668/\u8282\u70b9\u4e0a\u6267\u884c\u591a\u4e2a\u6d4b\u8bd5/\u5957\u4ef6\uff0c\u6700\u5c11\u7684\u4eba\u5de5\u5e72\u9884\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002  \u66f4\u6539 BUILD_ID \u73af\u5883\u53d8\u91cf\u7684\u503c\u4ee5\u907f\u514d\u5728\u4f5c\u4e1a\u5b8c\u6210\u540e\u7531 Jenkins agent \u7a0b\u5e8f\u6740\u6b7b\u540e\u53f0\u8fdb\u7a0b\u3002  isRunning \u68c0\u67e5\u662f\u901a\u8fc7\u9a8c\u8bc1\u5b9e\u9645\u7684\u7f51\u7edc\u7ec8\u7aef\u6765\u5b8c\u6210\u7684.  \u5b88\u62a4\u8fdb\u7a0b\u7684\u8f93\u51fa\u4f1a\u5b58\u5165\u65e5\u5fd7\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ddf\u8e2a\u9519\u8bef\u548c\u610f\u5916\u7684\u6545\u969c\u3002\u5982\u679c\u670d\u52a1\u5668\u65e0\u6cd5\u542f\u52a8/\u91cd\u542f\uff0c\u65e5\u5fd7\u6587\u4ef6\u7684\u5185\u5bb9\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5230\u5b9e\u9645\u7684\u9519\u8bef\u6d88\u606f\u4e2d\u3002  \u771f\u673a\u8bbe\u5907ID\u53ef\u4ee5\u4ece  system_profiler SPUSBDataType  \u8f93\u51fa\u4e2d\u89e3\u6790  \u6a21\u62df\u5668ID\u53ef\u4ee5\u4ece  xcrun simctl list  \u8f93\u51fa\u4e2d\u89e3\u6790  UrlChecker \u7c7b\u662f\u4ece org.openqa.selenium.net \u5305\u5bfc\u5165\u7684   \u672c\u6587\u7531  simple  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u91cd\u8981\u6ce8\u91ca"
        },
        {
            "location": "/cn/appium-setup/android-hax-emulator/",
            "text": "Intel\u00ae \u786c\u4ef6\u52a0\u901f\u6267\u884c\u7ba1\u7406\u5668\n\n\n\u5982\u679c\u4f60\u53d1\u73b0\u4f60\u7684 android \u6a21\u62df\u5668\u8fd0\u884c\u901f\u5ea6\u592a\u7f13\u6162\uff0c\u800c\u4f60\u7684\u7cfb\u7edf\u53c8\u8fd0\u884c\u5728 Intel\u00ae \u7684 cpu \u4e0b\uff0c\u4f60\u53ef\u4ee5\u8bd5\u8bd5 HAXM\u3002 HAXM \u53ef\u4ee5\u8ba9\u4f60\u5229\u7528\u4f60\u7684\u786c\u4ef6\u865a\u62df\u5316\u6280\u672f\uff0c\u4e3a\u4f60\u7684\u6a21\u62df\u5668\u52a0\u901f\u3002\n\n\n\n\n\u4f7f\u7528 Android SDK Manager \u5b89\u88c5 HAXM \uff0c\u4f60\u4f1a\u5728 Extras \u6587\u4ef6\u5939\u91cc\u627e\u5230\u8fd9\u4e2a\u5305\uff1b\n\n\n\u4f60\u53ef\u4ee5\u5728 \nIntel\u00ae \u7684\u7f51\u7ad9\n \u627e\u5230\u6240\u6709\u76f8\u5173\u7684\u6587\u6863\uff1b\n\n\n\u8fd9\u9700\u8981 x86 \u67b6\u6784\u7684\u6a21\u62df\u5668\u955c\u50cf\uff1b\n\n\n\u4f7f\u7528 Intel \u7684\u5b89\u88c5\u5305\u53bb\u5b89\u88c5 HAXM; \u6839\u636e\u4f60\u5df2\u7ecf\u5b89\u88c5\u8fc7\u7684\u7248\u672c\u4e0d\u540c\uff0cAndroid SDK Manager \u53ef\u80fd\u4f1a\u5b89\u88c5\u4e0d\u6210\u529f\uff08\u8bd1\u8005\u6ce8\uff1a\u5982\u679c\u539f\u6765\u5df2\u7ecf\u6709\u4e00\u4e2a\u65e7\u7248\u672c\uff0c\u6b64\u65f6\u6709\u53ef\u80fd\u4f1a\u81ea\u52a8\u5b89\u88c5\u5931\u8d25\u3002\u5efa\u8bae\u5728 \nIntel\u00ae \u7684\u7f51\u7ad9\n \u5b89\u88c5\u5b98\u65b9\u5b89\u88c5\u5305\u624b\u52a8\u5b89\u88c5\uff09\u3002\n\n\n\n\n\u7ffb\u8bd1 by \nthanksdanny\n \uff0c\u7531 \nchenhengjie123\n \u6821\u9a8c",
            "title": "Android hax emulator"
        },
        {
            "location": "/cn/appium-setup/android-hax-emulator/#intel",
            "text": "\u5982\u679c\u4f60\u53d1\u73b0\u4f60\u7684 android \u6a21\u62df\u5668\u8fd0\u884c\u901f\u5ea6\u592a\u7f13\u6162\uff0c\u800c\u4f60\u7684\u7cfb\u7edf\u53c8\u8fd0\u884c\u5728 Intel\u00ae \u7684 cpu \u4e0b\uff0c\u4f60\u53ef\u4ee5\u8bd5\u8bd5 HAXM\u3002 HAXM \u53ef\u4ee5\u8ba9\u4f60\u5229\u7528\u4f60\u7684\u786c\u4ef6\u865a\u62df\u5316\u6280\u672f\uff0c\u4e3a\u4f60\u7684\u6a21\u62df\u5668\u52a0\u901f\u3002   \u4f7f\u7528 Android SDK Manager \u5b89\u88c5 HAXM \uff0c\u4f60\u4f1a\u5728 Extras \u6587\u4ef6\u5939\u91cc\u627e\u5230\u8fd9\u4e2a\u5305\uff1b  \u4f60\u53ef\u4ee5\u5728  Intel\u00ae \u7684\u7f51\u7ad9  \u627e\u5230\u6240\u6709\u76f8\u5173\u7684\u6587\u6863\uff1b  \u8fd9\u9700\u8981 x86 \u67b6\u6784\u7684\u6a21\u62df\u5668\u955c\u50cf\uff1b  \u4f7f\u7528 Intel \u7684\u5b89\u88c5\u5305\u53bb\u5b89\u88c5 HAXM; \u6839\u636e\u4f60\u5df2\u7ecf\u5b89\u88c5\u8fc7\u7684\u7248\u672c\u4e0d\u540c\uff0cAndroid SDK Manager \u53ef\u80fd\u4f1a\u5b89\u88c5\u4e0d\u6210\u529f\uff08\u8bd1\u8005\u6ce8\uff1a\u5982\u679c\u539f\u6765\u5df2\u7ecf\u6709\u4e00\u4e2a\u65e7\u7248\u672c\uff0c\u6b64\u65f6\u6709\u53ef\u80fd\u4f1a\u81ea\u52a8\u5b89\u88c5\u5931\u8d25\u3002\u5efa\u8bae\u5728  Intel\u00ae \u7684\u7f51\u7ad9  \u5b89\u88c5\u5b98\u65b9\u5b89\u88c5\u5305\u624b\u52a8\u5b89\u88c5\uff09\u3002   \u7ffb\u8bd1 by  thanksdanny  \uff0c\u7531  chenhengjie123  \u6821\u9a8c",
            "title": "Intel\u00ae \u786c\u4ef6\u52a0\u901f\u6267\u884c\u7ba1\u7406\u5668"
        },
        {
            "location": "/cn/appium-setup/android-setup/",
            "text": "Android \u914d\u7f6e\n\n\n\u5f00\u59cb\u914d\u7f6e\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5b89\u88c5 Node.js\uff08v4 \u6216\u66f4\u9ad8\u7248\u672c\uff09\u3002\u5177\u4f53\u8bf7\u53c2\u8003 \ninstructions for your flavor of linux\n\u3002\n\n\n\u5728\u4f60\u5b89\u88c5\u5b8c Node.js \u540e\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u5b89\u88c5 \nAndroid SDK\n.\n\u56e0\u4e3a\u4f60\u9700\u8981\u8fd0\u884c  \nandroid\n tool\uff08\u5305\u542b SDK\uff0c \u5728 'tools' \u76ee\u5f55\u4e0b\uff09\u3002\n\n\n\u8fd0\u884c \nandroid\n tool\uff0c\u5e76\u4f7f\u7528\u4ed6\u6765\u5b89\u88c5 Level 17 \u6216\u66f4\u9ad8\u7ea7\u7684 API\u3002\n\n\n\uff08\u5982\u679c\u60f3\u901a\u8fc7\u6e90\u7801\u8fd0\u884c Appium\uff0c\u9700\u8981\u5148\u7528 \nApache Ant\n \u53bb\u6784\u5efa\u51fa bootstrap jar\u5305\uff0cAppium \u4f1a\u5728 Android \u6a21\u62df\u5668\u6216\u771f\u673a\u4e0a\u8fd0\u884c\u8be5 jar \u5305\u3002\uff09\n\n\n\u6700\u540e\uff0c\u5c06\u73af\u5883\u53d8\u91cf \n$ANDROID_HOME\n \u914d\u7f6e\u4e3a\u4f60\u7684 Android SDK \u8def\u5f84\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u5982\u4f60\u89e3\u538b\u4e86 Android SDK \u5230 /usr/local/adt/\uff0c\u4f60\u5e94\u8be5\u5728\u6dfb\u52a0\u8fd9\u884c\u547d\u4ee4\u5230\u4f60\u7684 shell \u73af\u5883\u53d8\u91cf\u4e2d\uff1a\n\n\nexport ANDROID_HOME=\"/usr/local/adt/sdk\"\n\n\n\n\u73b0\u5728\u4f60\u5df2\u7ecf\u914d\u7f6e\u597d\u53ef\u4ee5\u8fd0\u884c Appium \u7684\u73af\u5883\u4e86\uff01\uff08\u5982\u679c\u4f60\u662f\u901a\u8fc7\u6e90\u7801\u8fd0\u884c\u7684 Appium\uff0c\u5e94\u8be5\u786e\u4fdd\u4f60\u5df2\u7ecf\u5728 Appium \u7684\u4ee3\u7801\u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c\u8fc7 \nnpm install\n \u5b89\u88c5\u6240\u6709\u7684\u4f9d\u8d56\u3002\uff09\n\n\n\u5bf9\u4e8e Android \u8001\u7248\u672c\u7684\u4e00\u4e9b\u989d\u5916\u914d\u7f6e\n\n\nAppium \u662f\u7528 \nSelendroid\n \u53bb\u8fd0\u884cAndroid 2.3\u52304.1\u7248\u672c\u3002\u5f53 Appium \u68c0\u6d4b\u5230\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u65e7\u7248\u672c\uff0c\u5b83\u5c31\u4f1a\u81ea\u52a8\u5730\u5207\u6362 Selendroid \u53bb\u8fd0\u884c\uff08\u8fd9\u91cc\u4e0d\u592a\u5bf9\uff0c\u5982\u679c\u8981\u4f7f\u7528 Selendroid \u9700\u8981\u6307\u5b9a\uff09\uff0c\u4f46\u5047\u5982\u4f60\u662f\u4f7f\u7528\u6e90\u7801\u53bb\u8fd0\u884c\uff0c\u4f60\u8fd8\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u914d\u7f6e\u3002\n\n\n\n\n\u786e\u4fdd\u4f60\u5df2\u7ecf\u5b89\u88c5 \nMaven 3.1.1\n \u6216\u5df2\u66f4\u65b0\u5230 \nmvn\n \u7684\u6700\u65b0\u7248\u672c\n\n\n\n\n\u8fd0\u884c Appium Android \u6d4b\u8bd5\n\n\n\u5728 Linux \u73af\u5883\u4e0a\u8fd0\u884c\u6d4b\u8bd5\uff0c\u4f60\u9700\u8981\u542f\u52a8\u5e76\u8fd0\u884c\u4e00\u4e2a API \u4e3a Level 17 \u6216\u66f4\u9ad8\u7248\u672c\u7684 AVD\u3002\u5982\u679c\u4f60\u662f\u901a\u8fc7 NPM \u5b89\u88c5\u7684\u8bdd\uff0c\u5219\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u8f93\u5165 \nappium\n \u53bb\u8fd0\u884c Appium\u3002\u5982\u679c\u662f\u901a\u8fc7\u6e90\u7801\u8fd0\u884c\uff0c\u5728\u76ee\u5f55\u5e95\u4e0b\u8fd0\u884c \nnode .\n\u3002\n\n\n\u9605\u8bfb \nserver documentation\n \u4f60\u80fd\u67e5\u770b\u6240\u6709\u547d\u4ee4\u884c\u53c2\u6570\u3002\n\n\n\u6ce8\u610f\n\n\n\n\n\u73b0\u5728\u6709\u4e00\u4e9b android \u7684\u786c\u4ef6\u52a0\u901f\u6a21\u62df\u5668\uff0c\u4ed6\u6709\u81ea\u5df1\u7684\u4e00\u4e9b\u5c40\u9650\u6027\u3002\u66f4\u591a\u7684\u4fe1\u606f\u4f60\u53ef\u4ee5\u67e5\u770b\u8fd9\u4efd \npage\n.\n\n\n\u5982\u679c\u4f60\u60f3\u8fd0\u884c\u4efb\u4f55 Appium \u7684\u6d4b\u8bd5\u6216\u4f7f\u7528\u4efb\u4f55\u7535\u91cf\u76f8\u5173\u7684\u547d\u4ee4\uff0c\u9700\u8981\u786e\u4fdd\u5728\u4f60\u7684 AVD \u7684 \nconfig.ini\n \u91cc \nhw.battery=yes\n \u3002\u82e5\u4e3a Android 5.0, \u5219\u8fd9\u662f\u9ed8\u8ba4\u7684\n\n\nSelendroid \u9700\u8981\u68c0\u6d4b\u4f60\u7684\u5e94\u7528\u662f\u5426\u62e5\u6709\u4ee5\u4e0b\u6743\u9650\uff1a\n  \n<uses-permission android:name=\"android.**permission.INTERNET\"/>\n,\u5047\u5982\u4f60\u5728\u4f7f\u7528 selendroid \u6216\u8005\u66f4\u8001\u7684Android\u7248\u672c\uff08\u4e5f\u5c31\u662f2.3\u52304.1\uff09\u65f6\uff0c\u4f60\u5e94\u786e\u4fdd\u4f60\u7684\u5e94\u7528\u8bbe\u7f6e\u4e86 internet \u6743\u9650\u3002\n\n\n\n\n\u672c\u6587\u7531 \nthanksdanny\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Android setup"
        },
        {
            "location": "/cn/appium-setup/android-setup/#android",
            "text": "\u5f00\u59cb\u914d\u7f6e\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u5b89\u88c5 Node.js\uff08v4 \u6216\u66f4\u9ad8\u7248\u672c\uff09\u3002\u5177\u4f53\u8bf7\u53c2\u8003  instructions for your flavor of linux \u3002  \u5728\u4f60\u5b89\u88c5\u5b8c Node.js \u540e\uff0c\u4e0b\u4e00\u6b65\u5c31\u662f\u5b89\u88c5  Android SDK .\n\u56e0\u4e3a\u4f60\u9700\u8981\u8fd0\u884c   android  tool\uff08\u5305\u542b SDK\uff0c \u5728 'tools' \u76ee\u5f55\u4e0b\uff09\u3002  \u8fd0\u884c  android  tool\uff0c\u5e76\u4f7f\u7528\u4ed6\u6765\u5b89\u88c5 Level 17 \u6216\u66f4\u9ad8\u7ea7\u7684 API\u3002  \uff08\u5982\u679c\u60f3\u901a\u8fc7\u6e90\u7801\u8fd0\u884c Appium\uff0c\u9700\u8981\u5148\u7528  Apache Ant  \u53bb\u6784\u5efa\u51fa bootstrap jar\u5305\uff0cAppium \u4f1a\u5728 Android \u6a21\u62df\u5668\u6216\u771f\u673a\u4e0a\u8fd0\u884c\u8be5 jar \u5305\u3002\uff09  \u6700\u540e\uff0c\u5c06\u73af\u5883\u53d8\u91cf  $ANDROID_HOME  \u914d\u7f6e\u4e3a\u4f60\u7684 Android SDK \u8def\u5f84\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u5982\u4f60\u89e3\u538b\u4e86 Android SDK \u5230 /usr/local/adt/\uff0c\u4f60\u5e94\u8be5\u5728\u6dfb\u52a0\u8fd9\u884c\u547d\u4ee4\u5230\u4f60\u7684 shell \u73af\u5883\u53d8\u91cf\u4e2d\uff1a  export ANDROID_HOME=\"/usr/local/adt/sdk\"  \u73b0\u5728\u4f60\u5df2\u7ecf\u914d\u7f6e\u597d\u53ef\u4ee5\u8fd0\u884c Appium \u7684\u73af\u5883\u4e86\uff01\uff08\u5982\u679c\u4f60\u662f\u901a\u8fc7\u6e90\u7801\u8fd0\u884c\u7684 Appium\uff0c\u5e94\u8be5\u786e\u4fdd\u4f60\u5df2\u7ecf\u5728 Appium \u7684\u4ee3\u7801\u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c\u8fc7  npm install  \u5b89\u88c5\u6240\u6709\u7684\u4f9d\u8d56\u3002\uff09",
            "title": "Android \u914d\u7f6e"
        },
        {
            "location": "/cn/appium-setup/android-setup/#android_1",
            "text": "Appium \u662f\u7528  Selendroid  \u53bb\u8fd0\u884cAndroid 2.3\u52304.1\u7248\u672c\u3002\u5f53 Appium \u68c0\u6d4b\u5230\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u65e7\u7248\u672c\uff0c\u5b83\u5c31\u4f1a\u81ea\u52a8\u5730\u5207\u6362 Selendroid \u53bb\u8fd0\u884c\uff08\u8fd9\u91cc\u4e0d\u592a\u5bf9\uff0c\u5982\u679c\u8981\u4f7f\u7528 Selendroid \u9700\u8981\u6307\u5b9a\uff09\uff0c\u4f46\u5047\u5982\u4f60\u662f\u4f7f\u7528\u6e90\u7801\u53bb\u8fd0\u884c\uff0c\u4f60\u8fd8\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u914d\u7f6e\u3002   \u786e\u4fdd\u4f60\u5df2\u7ecf\u5b89\u88c5  Maven 3.1.1  \u6216\u5df2\u66f4\u65b0\u5230  mvn  \u7684\u6700\u65b0\u7248\u672c",
            "title": "\u5bf9\u4e8e Android \u8001\u7248\u672c\u7684\u4e00\u4e9b\u989d\u5916\u914d\u7f6e"
        },
        {
            "location": "/cn/appium-setup/android-setup/#appium-android",
            "text": "\u5728 Linux \u73af\u5883\u4e0a\u8fd0\u884c\u6d4b\u8bd5\uff0c\u4f60\u9700\u8981\u542f\u52a8\u5e76\u8fd0\u884c\u4e00\u4e2a API \u4e3a Level 17 \u6216\u66f4\u9ad8\u7248\u672c\u7684 AVD\u3002\u5982\u679c\u4f60\u662f\u901a\u8fc7 NPM \u5b89\u88c5\u7684\u8bdd\uff0c\u5219\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u8f93\u5165  appium  \u53bb\u8fd0\u884c Appium\u3002\u5982\u679c\u662f\u901a\u8fc7\u6e90\u7801\u8fd0\u884c\uff0c\u5728\u76ee\u5f55\u5e95\u4e0b\u8fd0\u884c  node . \u3002  \u9605\u8bfb  server documentation  \u4f60\u80fd\u67e5\u770b\u6240\u6709\u547d\u4ee4\u884c\u53c2\u6570\u3002",
            "title": "\u8fd0\u884c Appium Android \u6d4b\u8bd5"
        },
        {
            "location": "/cn/appium-setup/android-setup/#_1",
            "text": "\u73b0\u5728\u6709\u4e00\u4e9b android \u7684\u786c\u4ef6\u52a0\u901f\u6a21\u62df\u5668\uff0c\u4ed6\u6709\u81ea\u5df1\u7684\u4e00\u4e9b\u5c40\u9650\u6027\u3002\u66f4\u591a\u7684\u4fe1\u606f\u4f60\u53ef\u4ee5\u67e5\u770b\u8fd9\u4efd  page .  \u5982\u679c\u4f60\u60f3\u8fd0\u884c\u4efb\u4f55 Appium \u7684\u6d4b\u8bd5\u6216\u4f7f\u7528\u4efb\u4f55\u7535\u91cf\u76f8\u5173\u7684\u547d\u4ee4\uff0c\u9700\u8981\u786e\u4fdd\u5728\u4f60\u7684 AVD \u7684  config.ini  \u91cc  hw.battery=yes  \u3002\u82e5\u4e3a Android 5.0, \u5219\u8fd9\u662f\u9ed8\u8ba4\u7684  Selendroid \u9700\u8981\u68c0\u6d4b\u4f60\u7684\u5e94\u7528\u662f\u5426\u62e5\u6709\u4ee5\u4e0b\u6743\u9650\uff1a\n   <uses-permission android:name=\"android.**permission.INTERNET\"/> ,\u5047\u5982\u4f60\u5728\u4f7f\u7528 selendroid \u6216\u8005\u66f4\u8001\u7684Android\u7248\u672c\uff08\u4e5f\u5c31\u662f2.3\u52304.1\uff09\u65f6\uff0c\u4f60\u5e94\u786e\u4fdd\u4f60\u7684\u5e94\u7528\u8bbe\u7f6e\u4e86 internet \u6743\u9650\u3002   \u672c\u6587\u7531  thanksdanny  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u6ce8\u610f"
        },
        {
            "location": "/cn/appium-setup/ios-deploy/",
            "text": "\u5728\u771f\u673a\u4e0a\u90e8\u7f72 iOS \u5e94\u7528\n\n\n\u51c6\u5907\u5728\u771f\u673a\u4e0a\u8fd0\u884c Appium \u4e4b\u524d\uff0c\u4f60\u9700\u8981\u505a\u597d\u4ee5\u4e0b\u51e0\u4ef6\u4e8b\uff1a\n\n\n\n\n\u4f7f\u7528\u7279\u5b9a\u8bbe\u5907\u76f8\u5173\u7684\u53c2\u6570\u53bb\u6784\u5efa\u4f60\u7684 app\n\n\n\u4f7f\u7528\u7b2c\u4e09\u65b9\u5de5\u5177 \nideviceinstaller\n \u5c06\u4f60\u6784\u5efa\u7684\u5305\u90e8\u7f72\u5230\u4f60\u7684\u8bbe\u5907\u4e0a \n\n\n\n\nXcodebuild \u7684\u53c2\u6570\uff1a\n\n\n\u73b0\u5728\u65b0\u7248\u7684 xcodebuild \u5141\u8bb8\u4f7f\u7528\u7684\u6307\u5b9a\u8bbe\u7f6e\u3002\u8bf7\u53c2\u8003\ndeveloper.apple.com\n:\n\n\nxcodebuild [-project projectname] [-target targetname ...]\n             [-configuration configurationname] [-sdk [sdkfullpath | sdkname]]\n             [buildaction ...] [setting=value ...] [-userdefault=value ...]\n\n\n\n\n\u5728\u8fd9\u8d44\u6599\u4e2d\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e9b\u6709\u7528\u7684 \n\u8bbe\u7f6e\n\n\nCODE_SIGN_IDENTITY (\u4ee3\u7801\u7b7e\u540d\u6807\u8bc6)\n\u63cf\u8ff0: \u6307\u5b9a\u4ee3\u7801\u7b7e\u540d\u6807\u8bc6\u7684\u540d\u79f0.\n\u793a\u4f8b\u503c: iPhone Developer\n\n\n\n\n\nPROVISIONING_PROFILE \u867d\u7136\u5728\u53ef\u7528\u7684\u547d\u4ee4\u5217\u8868\u4e2d\u79fb\u9664\u4e86\uff0c\u4f46\u8fd8\u662f\u6709\u5fc5\u8981\u8bbe\u7f6e\u7684\u3002\n\n\n\u5728 xcodebuild \u547d\u4ee4\u4e2d\u6307\u5b9a \"CODE_SIGN_IDENTITY\" \u4e0e \"PROVISIONING_PROFILE\" \u7684\u8bbe\u7f6e\uff1a\n\n\nxcodebuild -sdk <iphoneos> -target <target_name> -configuration <Debug> CODE_SIGN_IDENTITY=\"iPhone Developer: Mister Smith\" PROVISIONING_PROFILE=\"XXXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXX\"\n\n\n\n\n\u4e00\u65e6\u6210\u529f\uff0capp \u5c31\u4f1a\u88ab\u6784\u5efa\u5230 \n<app_dir>/build/<configuration>-iphoneos/<app_name>.app\n \u76ee\u5f55\u4e0b\u3002\n\n\n\u4f7f\u7528 ideviceinstaller \u90e8\u7f72\n\n\n\u4f7f\u7528 Homebrew \u53bb\u5b89\u88c5\u88ab\u6807\u8bb0\u4e3a\u6700\u65b0\u7248\u672c\u7684 ideviceinstaller \u5de5\u5177\uff0c\u5728\u7ec8\u7aef\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a\n\n\n# \u7b2c\u4e00\u884c\u547d\u4ee4\u53ea\u662f\u5728\u4f60\u6ca1\u6709\u5b89\u88c5\u597d brew \u7684\u60c5\u51b5\u4e0b\u624d\u9700\u8981\u6267\u884c\n> ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n> brew update\n> brew install ideviceinstaller\n> ideviceinstaller -u <UDID of device> -i <path of .app/.ipa>\n\n\n\n\n\u4e0b\u4e00\u90e8\u5206\uff1a\n\u5728\u771f\u673a\u4e0a\u8fd0\u884c Appium\n\n\n\u672c\u6587\u7531 \nthanksdanny\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Ios deploy"
        },
        {
            "location": "/cn/appium-setup/ios-deploy/#ios",
            "text": "\u51c6\u5907\u5728\u771f\u673a\u4e0a\u8fd0\u884c Appium \u4e4b\u524d\uff0c\u4f60\u9700\u8981\u505a\u597d\u4ee5\u4e0b\u51e0\u4ef6\u4e8b\uff1a   \u4f7f\u7528\u7279\u5b9a\u8bbe\u5907\u76f8\u5173\u7684\u53c2\u6570\u53bb\u6784\u5efa\u4f60\u7684 app  \u4f7f\u7528\u7b2c\u4e09\u65b9\u5de5\u5177  ideviceinstaller  \u5c06\u4f60\u6784\u5efa\u7684\u5305\u90e8\u7f72\u5230\u4f60\u7684\u8bbe\u5907\u4e0a",
            "title": "\u5728\u771f\u673a\u4e0a\u90e8\u7f72 iOS \u5e94\u7528"
        },
        {
            "location": "/cn/appium-setup/ios-deploy/#xcodebuild",
            "text": "\u73b0\u5728\u65b0\u7248\u7684 xcodebuild \u5141\u8bb8\u4f7f\u7528\u7684\u6307\u5b9a\u8bbe\u7f6e\u3002\u8bf7\u53c2\u8003 developer.apple.com :  xcodebuild [-project projectname] [-target targetname ...]\n             [-configuration configurationname] [-sdk [sdkfullpath | sdkname]]\n             [buildaction ...] [setting=value ...] [-userdefault=value ...]  \u5728\u8fd9\u8d44\u6599\u4e2d\u4f60\u4f1a\u53d1\u73b0\u4e00\u4e9b\u6709\u7528\u7684  \u8bbe\u7f6e  CODE_SIGN_IDENTITY (\u4ee3\u7801\u7b7e\u540d\u6807\u8bc6)\n\u63cf\u8ff0: \u6307\u5b9a\u4ee3\u7801\u7b7e\u540d\u6807\u8bc6\u7684\u540d\u79f0.\n\u793a\u4f8b\u503c: iPhone Developer  PROVISIONING_PROFILE \u867d\u7136\u5728\u53ef\u7528\u7684\u547d\u4ee4\u5217\u8868\u4e2d\u79fb\u9664\u4e86\uff0c\u4f46\u8fd8\u662f\u6709\u5fc5\u8981\u8bbe\u7f6e\u7684\u3002  \u5728 xcodebuild \u547d\u4ee4\u4e2d\u6307\u5b9a \"CODE_SIGN_IDENTITY\" \u4e0e \"PROVISIONING_PROFILE\" \u7684\u8bbe\u7f6e\uff1a  xcodebuild -sdk <iphoneos> -target <target_name> -configuration <Debug> CODE_SIGN_IDENTITY=\"iPhone Developer: Mister Smith\" PROVISIONING_PROFILE=\"XXXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXX\"  \u4e00\u65e6\u6210\u529f\uff0capp \u5c31\u4f1a\u88ab\u6784\u5efa\u5230  <app_dir>/build/<configuration>-iphoneos/<app_name>.app  \u76ee\u5f55\u4e0b\u3002",
            "title": "Xcodebuild \u7684\u53c2\u6570\uff1a"
        },
        {
            "location": "/cn/appium-setup/ios-deploy/#ideviceinstaller",
            "text": "\u4f7f\u7528 Homebrew \u53bb\u5b89\u88c5\u88ab\u6807\u8bb0\u4e3a\u6700\u65b0\u7248\u672c\u7684 ideviceinstaller \u5de5\u5177\uff0c\u5728\u7ec8\u7aef\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a  # \u7b2c\u4e00\u884c\u547d\u4ee4\u53ea\u662f\u5728\u4f60\u6ca1\u6709\u5b89\u88c5\u597d brew \u7684\u60c5\u51b5\u4e0b\u624d\u9700\u8981\u6267\u884c\n> ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n> brew update\n> brew install ideviceinstaller\n> ideviceinstaller -u <UDID of device> -i <path of .app/.ipa>  \u4e0b\u4e00\u90e8\u5206\uff1a \u5728\u771f\u673a\u4e0a\u8fd0\u884c Appium  \u672c\u6587\u7531  thanksdanny  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u4f7f\u7528 ideviceinstaller \u90e8\u7f72"
        },
        {
            "location": "/cn/appium-setup/parallel_tests/",
            "text": "Android \u5e76\u53d1\u6d4b\u8bd5\n\n\nAppium \u7ed9\u7528\u6237\u63d0\u4f9b\u4e86\u5728\u4e00\u4e2a\u673a\u5668\u4e0a\u542f\u52a8\u591a\u4e2a Android sessions \u7684\u65b9\u6848\u3002\u8be5\u65b9\u6848\u53ea\u9700\u8981\u901a\u8fc7\u4e0d\u540c\u53c2\u6570\u6765\u542f\u52a8\u7684\u591a\u4e2a Appium \u670d\u52a1\u3002\n\n\n\u4ee5\u4e0b\u662f\u542f\u52a8\u591a\u4e2a Android \u4f1a\u8bdd\u7684\u4e00\u4e9b\u91cd\u8981\u53c2\u6570\uff1a\n\n\n\n\n-p\n Appium \u4e3b\u8981\u7aef\u53e3\n\n\n-U\n \u8bbe\u5907 id\n\n\n-bp\n Appium bootstrap \u7aef\u53e3\n\n\n--chromedriver-port\n chromedriver \u7aef\u53e3 (\u82e5\u662f\u5728\u4f7f\u7528 webviews \u6216 chrome)\n\n\n--selendroid-port\n selendroid \u7aef\u53e3 (\u82e5\u662f\u5728\u4f7f\u7528 selendroid)\n\n\n\n\n\u66f4\u591a\u76f8\u5173\u53c2\u6570\u7684\u4fe1\u606f\u53ef\u4ee5\u53c2\u8003 \n\u8fd9\u91cc\n \u3002\n\n\n\u5982\u679c\u6211\u4eec\u6709\u4e24\u53f0\u8bbe\u5907\uff0c\u4e14\u4ed6\u4eec\u7684\u8bbe\u5907 id \u5206\u522b\u4e3a 43364 \u548c 32456\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u542f\u52a8\u4e24\u4e2a\u4e0d\u540c\u7684 Appium \u670d\u52a1\u5668\uff1a\n\n\nnode . -p 4492 -bp 2251  -U 32456\n\n\nnode . -p 4491  -bp 2252 -U 43364\n\n\n\u53ea\u8981\u4f60\u7684 Appium \u4e0e Appium bootstrap \u7684\u7aef\u53e3\u5728 0 \u5230 65536 \u4e4b\u95f4\uff0c\u4e14\u7aef\u53e3\u53f7\u5e76\u4e0d\u76f8\u540c\uff0c\u8fd9\u6837\u4e24\u4e2a Appium \u670d\u52a1\u5668\u5c31\u4e0d\u4f1a\u53bb\u76d1\u542c\u540c\u4e00\u4e2a\u7aef\u53e3\u3002\u786e\u4fdd\u901a\u8fc7 -u \u53c2\u6570\u6807\u5fd7\u7684 id \u4e0e\u5bf9\u5e94\u7684\u8bbe\u5907 id \u662f\u4e00\u81f4\u7684\u3002\u8fd9\u5c31\u662f Appium \u80fd\u77e5\u9053\u8bbe\u5907\u4e4b\u95f4\u662f\u5982\u4f55\u901a\u4fe1\u7684\u539f\u56e0\uff0c\u56e0\u6b64\u5fc5\u987b\u4fdd\u8bc1\u53c2\u6570\u51c6\u786e\u65e0\u8bef\u3002\n\n\n\u5982\u679c\u4f60\u4f7f\u7528 chromedriver \u6216 selendroid\uff0c\u8bb0\u5f97\u786e\u4fdd\u670d\u52a1\u5668\u7684\u7aef\u53e3\u53f7\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u3002\n\n\n\u5982\u679c\u4f60\u4f7f\u7528 \nappium-uiautomator2-driver\n\uff0c\n\u9700\u8981\u7ed9 systemPort \u8fd9\u4e2a capability \u914d\u7f6e\u4e3a\u4e0d\u540c\u7684\u7cfb\u7edf\u7aef\u53e3\u3002\u56e0\u4e3a\u6709\u65f6\u5019\u5982\u679c\u6ca1\u6709\u4f7f\u7528\u4e0d\u540c\u7684\u7aef\u53e3\uff0c\u4f1a\u51fa\u73b0\u51b2\u7a81\uff0c\u6bd4\u5982\n\u8fd9\u4e2a\u95ee\u9898\n.\n\n\niOS \u5e76\u53d1\u6d4b\u8bd5\n\n\n\u5341\u5206\u4e0d\u5e78\uff0c\u76ee\u524d\u5e76\u4e0d\u80fd\u5728\u672c\u5730\u8fd0\u884c iOS \u7684\u5e76\u53d1\u6d4b\u8bd5\u3002iOS \u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u542f\u52a8\u4e00\u4e2a\u6a21\u62df\u5668\uff0c\u4e0d\u50cf Andoid \u53ef\u4ee5\u540c\u65f6\u591a\u4e2a\u6a21\u62df\u5668\u53bb\u8fd0\u884c\u6d4b\u8bd5\u3002\n\n\n\u5982\u679c\u4f60\u60f3\u8fd0\u884c iOS \u7684\u5e76\u53d1\u6d4b\u8bd5\uff0c\u4f60\u9700\u8981\u4f7f\u7528 Sauce \u4e0a\u4f20\u4f60\u7684 Appium \u6d4b\u8bd5\u811a\u672c\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fd0\u884c\u591a\u53f0 iOS \u548c Android \u7684\u5e76\u53d1\u6d4b\u8bd5\uff0c\u53ea\u8981\u4f60\u7684\u8d26\u53f7\u5141\u8bb8\u3002\u67e5\u770b\u66f4\u591a\u76f8\u5173\u4fe1\u606f\u53ef\u4ee5\u67e5\u770b \n\u8fd9\u91cc\n\u3002\n\n\n\u672c\u6587\u7531 \nthanksdanny\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Parallel tests"
        },
        {
            "location": "/cn/appium-setup/parallel_tests/#android",
            "text": "Appium \u7ed9\u7528\u6237\u63d0\u4f9b\u4e86\u5728\u4e00\u4e2a\u673a\u5668\u4e0a\u542f\u52a8\u591a\u4e2a Android sessions \u7684\u65b9\u6848\u3002\u8be5\u65b9\u6848\u53ea\u9700\u8981\u901a\u8fc7\u4e0d\u540c\u53c2\u6570\u6765\u542f\u52a8\u7684\u591a\u4e2a Appium \u670d\u52a1\u3002  \u4ee5\u4e0b\u662f\u542f\u52a8\u591a\u4e2a Android \u4f1a\u8bdd\u7684\u4e00\u4e9b\u91cd\u8981\u53c2\u6570\uff1a   -p  Appium \u4e3b\u8981\u7aef\u53e3  -U  \u8bbe\u5907 id  -bp  Appium bootstrap \u7aef\u53e3  --chromedriver-port  chromedriver \u7aef\u53e3 (\u82e5\u662f\u5728\u4f7f\u7528 webviews \u6216 chrome)  --selendroid-port  selendroid \u7aef\u53e3 (\u82e5\u662f\u5728\u4f7f\u7528 selendroid)   \u66f4\u591a\u76f8\u5173\u53c2\u6570\u7684\u4fe1\u606f\u53ef\u4ee5\u53c2\u8003  \u8fd9\u91cc  \u3002  \u5982\u679c\u6211\u4eec\u6709\u4e24\u53f0\u8bbe\u5907\uff0c\u4e14\u4ed6\u4eec\u7684\u8bbe\u5907 id \u5206\u522b\u4e3a 43364 \u548c 32456\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u542f\u52a8\u4e24\u4e2a\u4e0d\u540c\u7684 Appium \u670d\u52a1\u5668\uff1a  node . -p 4492 -bp 2251  -U 32456  node . -p 4491  -bp 2252 -U 43364  \u53ea\u8981\u4f60\u7684 Appium \u4e0e Appium bootstrap \u7684\u7aef\u53e3\u5728 0 \u5230 65536 \u4e4b\u95f4\uff0c\u4e14\u7aef\u53e3\u53f7\u5e76\u4e0d\u76f8\u540c\uff0c\u8fd9\u6837\u4e24\u4e2a Appium \u670d\u52a1\u5668\u5c31\u4e0d\u4f1a\u53bb\u76d1\u542c\u540c\u4e00\u4e2a\u7aef\u53e3\u3002\u786e\u4fdd\u901a\u8fc7 -u \u53c2\u6570\u6807\u5fd7\u7684 id \u4e0e\u5bf9\u5e94\u7684\u8bbe\u5907 id \u662f\u4e00\u81f4\u7684\u3002\u8fd9\u5c31\u662f Appium \u80fd\u77e5\u9053\u8bbe\u5907\u4e4b\u95f4\u662f\u5982\u4f55\u901a\u4fe1\u7684\u539f\u56e0\uff0c\u56e0\u6b64\u5fc5\u987b\u4fdd\u8bc1\u53c2\u6570\u51c6\u786e\u65e0\u8bef\u3002  \u5982\u679c\u4f60\u4f7f\u7528 chromedriver \u6216 selendroid\uff0c\u8bb0\u5f97\u786e\u4fdd\u670d\u52a1\u5668\u7684\u7aef\u53e3\u53f7\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\u3002  \u5982\u679c\u4f60\u4f7f\u7528  appium-uiautomator2-driver \uff0c\n\u9700\u8981\u7ed9 systemPort \u8fd9\u4e2a capability \u914d\u7f6e\u4e3a\u4e0d\u540c\u7684\u7cfb\u7edf\u7aef\u53e3\u3002\u56e0\u4e3a\u6709\u65f6\u5019\u5982\u679c\u6ca1\u6709\u4f7f\u7528\u4e0d\u540c\u7684\u7aef\u53e3\uff0c\u4f1a\u51fa\u73b0\u51b2\u7a81\uff0c\u6bd4\u5982 \u8fd9\u4e2a\u95ee\u9898 .",
            "title": "Android \u5e76\u53d1\u6d4b\u8bd5"
        },
        {
            "location": "/cn/appium-setup/parallel_tests/#ios",
            "text": "\u5341\u5206\u4e0d\u5e78\uff0c\u76ee\u524d\u5e76\u4e0d\u80fd\u5728\u672c\u5730\u8fd0\u884c iOS \u7684\u5e76\u53d1\u6d4b\u8bd5\u3002iOS \u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u542f\u52a8\u4e00\u4e2a\u6a21\u62df\u5668\uff0c\u4e0d\u50cf Andoid \u53ef\u4ee5\u540c\u65f6\u591a\u4e2a\u6a21\u62df\u5668\u53bb\u8fd0\u884c\u6d4b\u8bd5\u3002  \u5982\u679c\u4f60\u60f3\u8fd0\u884c iOS \u7684\u5e76\u53d1\u6d4b\u8bd5\uff0c\u4f60\u9700\u8981\u4f7f\u7528 Sauce \u4e0a\u4f20\u4f60\u7684 Appium \u6d4b\u8bd5\u811a\u672c\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8fd0\u884c\u591a\u53f0 iOS \u548c Android \u7684\u5e76\u53d1\u6d4b\u8bd5\uff0c\u53ea\u8981\u4f60\u7684\u8d26\u53f7\u5141\u8bb8\u3002\u67e5\u770b\u66f4\u591a\u76f8\u5173\u4fe1\u606f\u53ef\u4ee5\u67e5\u770b  \u8fd9\u91cc \u3002  \u672c\u6587\u7531  thanksdanny  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "iOS \u5e76\u53d1\u6d4b\u8bd5"
        },
        {
            "location": "/cn/appium-setup/platform-support/",
            "text": "Appium \u652f\u6301\u7684\u5e73\u53f0\n\n\nAppium \u652f\u6301\u591a\u79cd\u5e73\u53f0\u4ee5\u53ca\u5404\u79cd\u6d4b\u8bd5\u65b9\u5f0f\uff08native\uff0chybrid\uff0cweb\uff0c\u771f\u673a\uff0c\u6a21\u62df\u5668\uff0c\u7b49\u7b49...\uff09\u3002\u8fd9\u4efd\u6587\u6863\u7684\u8bbe\u8ba1\u521d\u8877\u5c31\u662f\u4e3a\u4e86\u641e\u6e05\u695a\u6240\u652f\u6301\u5e73\u53f0\u7684\u7248\u672c\uff0c\u4ee5\u53ca\u6240\u9700\u7684\u6761\u4ef6\u3002\n\n\niOS \u5e73\u53f0\u652f\u6301\n\n\n\u83b7\u53d6 iOS \u5e73\u53f0\u4e0b\u6240\u9700\u7684\u5fc5\u5907\u6761\u4ef6\u548c\u5b89\u88c5\u8bf4\u660e\uff0c\u8bf7\u67e5\u9605 \nRunning on OS X: iOS\n \n\n\n\n\n\u7248\u672c\uff1a7.1 \u53ca\u4ee5\u4e0a\u7248\u672c\n\n\n\u8bbe\u5907\uff1aiPhone \u6a21\u62df\u5668\uff0ciPad \u6a21\u62df\u5668\uff0c\u4ee5\u53ca iPhone \u548c iPad \u7684\u771f\u673a\n\n\n\u662f\u5426\u652f\u6301 Native \u5e94\u7528\uff1a\u652f\u6301\u3002\u5982\u5728\u6a21\u62df\u5668\u6267\u884c\uff0c\u9700\u8981 debug \u7248\u672c\u7684 .app \u5305\uff0c\u5728\u771f\u673a\u4e0a\u8fd0\u884c\u5219\u9700\u8981\u5df2\u7b7e\u540d\u7684 .ipa \u5305\u3002\u5e95\u5c42\u7684\u6846\u67b6\u662f\u7531\u82f9\u679c\u7684 \nXCUITest\n (\u6216 \nUIAutomation\n \u652f\u6301\u66f4\u65e7\u7684\u7248\u672c) \u6240\u63d0\u4f9b\u652f\u6301\n\n\n\u662f\u5426\u652f\u6301\u79fb\u52a8\u7aef\u6d4f\u89c8\u5668\uff1a\u652f\u6301\u3002\u6211\u4eec\u901a\u8fc7\u79fb\u52a8\u7aef\u7684 Safari \u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002\u5bf9\u4e8e\u771f\u673a\uff0c\nios-webkit-remote-debugger\n \u5de5\u5177\u662f\u5fc5\u987b\u7684\u3002\u53ef\u60dc\u7684\u662f\u5bf9\u4e8e Safari \u7684 native \u90e8\u5206\u7684\u81ea\u52a8\u5316\u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u3002\u66f4\u591a\u4ecb\u7ecd\u8bf7\u67e5\u770b \nmobile web doc\n\u3002\n\n\n\u662f\u5426\u652f\u6301 Hybrid \u5e94\u7528\uff1a\u652f\u6301\u3002\u5982\u4f7f\u7528\u771f\u673a\uff0cios-webkit-remote-debugger \u5de5\u5177\u4e5f\u662f\u5fc5\u987b\u7684\u3002\u66f4\u591a\u4ecb\u7ecd\u8bf7\u67e5\u770b \nhybrid doc\n\u3002\n\n\n\u662f\u5426\u652f\u6301\u5728\u4e00\u4e2a session \u4e2d\u591a\u4e2a\u5e94\u7528\u7684\u81ea\u52a8\u5316\uff1a\u4e0d\u652f\u6301\n\n\n\u662f\u5426\u652f\u6301\u591a\u8bbe\u5907\u540c\u65f6\u6267\u884c\u81ea\u52a8\u5316\uff1a\u4e0d\u652f\u6301 \n\n\n\u662f\u5426\u652f\u6301\u7b2c\u4e09\u65b9\u5e94\u7528\u7684\u81ea\u52a8\u5316\uff1a\u4ec5\u652f\u6301\u5728\u6a21\u62df\u5668\u4e0a\u4ec5\u6709\u7684\u7b2c\u4e09\u65b9\u5e94\u7528\uff08\u8bbe\u7f6e\uff0c\u5730\u56fe\uff0c\u7b49\u7b49...\uff09\u3002\u82e5\u5728 iOS 10 \u53ca\u4ee5\u4e0a\u7684\u7248\u672c\uff0c\u4f60\u540c\u6837\u53ef\u4ee5\u5728 home \u754c\u9762\u505a\u81ea\u52a8\u5316\u3002\n\n\n\u662f\u5426\u652f\u6301\u81ea\u5b9a\u4e49\u7684\u3001\u975e\u6807\u51c6\u7684 UI \u63a7\u4ef6\u7684\u81ea\u52a8\u5316\uff1a\u53ea\u652f\u6301\u5c0f\u90e8\u5206\u3002\u4f60\u9700\u8981\u5728\u63a7\u4ef6\u8bbe\u7f6e\u53ef\u8bc6\u522b\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u5bf9\u4e00\u4e9b\u5143\u7d20\u8fdb\u884c\u4e00\u4e9b\u57fa\u7840\u7684\u81ea\u52a8\u5316\u64cd\u4f5c\u3002\n\n\n\n\nAndroid \u5e73\u53f0\u652f\u6301\n\n\n\u67e5\u9605\nRunning on OS X: Android\n\uff0c\nRunning on Windows\n \u6216\u8005 \nRunning on Linux\n \u67e5\u770b\u66f4\u591a\u7684\u8bbe\u5907\u4fe1\u606f\u4ee5\u53ca\u5b89\u88c5\u8bf4\u660e\u3002\n\n\n\n\n\u7248\u672c\uff1a2.3 \u53ca\u4ee5\u4e0a\u7248\u672c\n\n\n2.3 \u81f3 4.2 \u7248\u672c\u662f\u901a\u8fc7 Appium \u7ed1\u5b9a\u7684\u57fa\u4e8e \nInstrumentation\n\u6846\u67b6\u7684 \nSelendroid\n\u5b9e\u73b0\u7684\u81ea\u52a8\u5316\u3002Selendroid \u7684\u547d\u4ee4\u8bbe\u7f6e\u4e0e\u9ed8\u8ba4\u7684 Appium \u6709\u70b9\u4e0d\u540c\uff0c \u652f\u6301\u7684\u914d\u7f6e\u6587\u4ef6\u4e5f\u540c\u6837\u4e0d\u540c\u3002\u8981\u83b7\u5f97\u5728\u540e\u53f0\u8fd0\u884c\u81ea\u52a8\u5316\u7684\u6743\u9650\uff0c\u9700\u8981\u73af\u5883\u914d\u7f6e\u4e2d\u5c06 \nautomationName\n \u7684\u503c\u4e3a \nSelendroid\n\u3002\n\n\n4.2 \u4ee5\u53ca\u66f4\u9ad8\u7684\u7248\u672c\u662f\u901a\u8fc7 Appium \u81ea\u5df1\u7684 \nUiAutomator\n \u5e93\u5b9e\u73b0\u3002\u8fd9\u662f\u9ed8\u8ba4\u7684\u81ea\u52a8\u5316\u540e\u53f0\u3002\n\n\n\u8bbe\u5907\uff1aAndroid \u6a21\u62df\u5668\u4ee5\u53ca Android \u771f\u673a\n\n\n\u662f\u5426\u652f\u6301 Native \u5e94\u7528\uff1a\u652f\u6301\n\n\n\u662f\u5426\u652f\u6301\u79fb\u52a8\u7aef\u6d4f\u89c8\u5668\uff1a\u652f\u6301\uff08\u9664\u4e86\u4f7f\u7528 Selendroid \u540e\u53f0\u7684\u65f6\u5019\uff09\u3002Appium \u7ed1\u5b9a\u4e86\u4e00\u4e2a \nChromedriver\n \u670d\u52a1\uff0c\u4f7f\u7528\u8fd9\u4e2a\u4ee3\u7406\u670d\u52a1\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002\u5728 4.2 \u548c 4.3 \u7248\u672c\uff0c\u53ea\u80fd\u5728\u5b98\u65b9\u7684 Chrome \u6d4f\u89c8\u5668\u6216\u8005 Chromium \u6267\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002\u5728 4.4 \u53ca\u66f4\u9ad8\u7248\u672c\uff0c\u53ef\u4ee5\u5728\u5185\u7f6e\u7684 \u201c\u6d4f\u89c8\u5668\u201d \u5e94\u7528\u4e0a\u8fdb\u884c\u81ea\u52a8\u5316\u4e86\u3002\u66f4\u591a\u4ecb\u7ecd\u8bf7\u67e5\u770b \nmobile web doc\n\u3002 \n\n\n\u662f\u5426\u652f\u6301 Hybrid \u5e94\u7528\uff1a\u652f\u6301\u3002\u66f4\u591a\u4ecb\u7ecd\u8bf7\u67e5\u9605 \nhybrid doc\n\u3002\n\n\n\u9ed8\u8ba4\u7684 Appium \u81ea\u52a8\u5316\u540e\u53f0\uff1a\u652f\u6301 4.4 \u4ee5\u53ca\u66f4\u9ad8\u7248\u672c\n\n\nSelendroid \u81ea\u52a8\u5316\u540e\u53f0\uff1a\u652f\u6301 2.3 \u4ee5\u53ca\u66f4\u9ad8\u7248\u672c\n\n\n\u662f\u5426\u652f\u6301\u591a\u4e2a app \u5728\u540c\u4e00\u4e2a session \u4e2d\u81ea\u52a8\u5316\uff1a\u652f\u6301\uff08\u9664\u4e86\u4f7f\u7528 Selendroid \u540e\u53f0\u7684\u65f6\u5019\uff09\n\n\n\u662f\u5426\u652f\u6301\u591a\u4e2a\u8bbe\u5907\u540c\u65f6\u8fdb\u884c\u81ea\u52a8\u5316\uff1a\u652f\u6301\uff0c\u5373\u4f7f Appium \u5728\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u7aef\u53e3\u53f7\u4f5c\u4e3a\u670d\u52a1\u5668\u53c2\u6570\uff0c\n--port\n, \n--bootstrap-port\n (\u6216\u8005 \n--selendroid-port\n) \u8fd8\u6709 \n--chromedriver-port\n. \u66f4\u591a\u4ecb\u7ecd\u8bf7\u67e5\u770b \nserver args doc\n\u3002\n\n\n\u652f\u6301\u7b2c\u4e09\u65b9\u5f15\u7528\uff1a\u652f\u6301\uff08\u9664\u4e86\u4f7f\u7528 Selendroid \u540e\u53f0\u7684\u65f6\u5019\uff09\n\n\n\u652f\u6301\u81ea\u5b9a\u4e49\u7684\u3001\u975e\u6807\u51c6\u7684 UI \u63a7\u4ef6\u7684\u81ea\u52a8\u5316\uff1a\u4e0d\u652f\u6301\n\n\n\n\nWindows \u684c\u9762\u652f\u6301\n\n\n\u67e5\u770b\u4ee5\u4e0b\u6587\u6863\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\uff1a\n\n\n\n\nRunning on Windows\n\n\nWindows App Testing\n\n\n\n\n\u672c\u6587\u7531 \nthanksdanny\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Platform support"
        },
        {
            "location": "/cn/appium-setup/platform-support/#appium",
            "text": "Appium \u652f\u6301\u591a\u79cd\u5e73\u53f0\u4ee5\u53ca\u5404\u79cd\u6d4b\u8bd5\u65b9\u5f0f\uff08native\uff0chybrid\uff0cweb\uff0c\u771f\u673a\uff0c\u6a21\u62df\u5668\uff0c\u7b49\u7b49...\uff09\u3002\u8fd9\u4efd\u6587\u6863\u7684\u8bbe\u8ba1\u521d\u8877\u5c31\u662f\u4e3a\u4e86\u641e\u6e05\u695a\u6240\u652f\u6301\u5e73\u53f0\u7684\u7248\u672c\uff0c\u4ee5\u53ca\u6240\u9700\u7684\u6761\u4ef6\u3002",
            "title": "Appium \u652f\u6301\u7684\u5e73\u53f0"
        },
        {
            "location": "/cn/appium-setup/platform-support/#ios",
            "text": "\u83b7\u53d6 iOS \u5e73\u53f0\u4e0b\u6240\u9700\u7684\u5fc5\u5907\u6761\u4ef6\u548c\u5b89\u88c5\u8bf4\u660e\uff0c\u8bf7\u67e5\u9605  Running on OS X: iOS     \u7248\u672c\uff1a7.1 \u53ca\u4ee5\u4e0a\u7248\u672c  \u8bbe\u5907\uff1aiPhone \u6a21\u62df\u5668\uff0ciPad \u6a21\u62df\u5668\uff0c\u4ee5\u53ca iPhone \u548c iPad \u7684\u771f\u673a  \u662f\u5426\u652f\u6301 Native \u5e94\u7528\uff1a\u652f\u6301\u3002\u5982\u5728\u6a21\u62df\u5668\u6267\u884c\uff0c\u9700\u8981 debug \u7248\u672c\u7684 .app \u5305\uff0c\u5728\u771f\u673a\u4e0a\u8fd0\u884c\u5219\u9700\u8981\u5df2\u7b7e\u540d\u7684 .ipa \u5305\u3002\u5e95\u5c42\u7684\u6846\u67b6\u662f\u7531\u82f9\u679c\u7684  XCUITest  (\u6216  UIAutomation  \u652f\u6301\u66f4\u65e7\u7684\u7248\u672c) \u6240\u63d0\u4f9b\u652f\u6301  \u662f\u5426\u652f\u6301\u79fb\u52a8\u7aef\u6d4f\u89c8\u5668\uff1a\u652f\u6301\u3002\u6211\u4eec\u901a\u8fc7\u79fb\u52a8\u7aef\u7684 Safari \u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002\u5bf9\u4e8e\u771f\u673a\uff0c ios-webkit-remote-debugger  \u5de5\u5177\u662f\u5fc5\u987b\u7684\u3002\u53ef\u60dc\u7684\u662f\u5bf9\u4e8e Safari \u7684 native \u90e8\u5206\u7684\u81ea\u52a8\u5316\u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u3002\u66f4\u591a\u4ecb\u7ecd\u8bf7\u67e5\u770b  mobile web doc \u3002  \u662f\u5426\u652f\u6301 Hybrid \u5e94\u7528\uff1a\u652f\u6301\u3002\u5982\u4f7f\u7528\u771f\u673a\uff0cios-webkit-remote-debugger \u5de5\u5177\u4e5f\u662f\u5fc5\u987b\u7684\u3002\u66f4\u591a\u4ecb\u7ecd\u8bf7\u67e5\u770b  hybrid doc \u3002  \u662f\u5426\u652f\u6301\u5728\u4e00\u4e2a session \u4e2d\u591a\u4e2a\u5e94\u7528\u7684\u81ea\u52a8\u5316\uff1a\u4e0d\u652f\u6301  \u662f\u5426\u652f\u6301\u591a\u8bbe\u5907\u540c\u65f6\u6267\u884c\u81ea\u52a8\u5316\uff1a\u4e0d\u652f\u6301   \u662f\u5426\u652f\u6301\u7b2c\u4e09\u65b9\u5e94\u7528\u7684\u81ea\u52a8\u5316\uff1a\u4ec5\u652f\u6301\u5728\u6a21\u62df\u5668\u4e0a\u4ec5\u6709\u7684\u7b2c\u4e09\u65b9\u5e94\u7528\uff08\u8bbe\u7f6e\uff0c\u5730\u56fe\uff0c\u7b49\u7b49...\uff09\u3002\u82e5\u5728 iOS 10 \u53ca\u4ee5\u4e0a\u7684\u7248\u672c\uff0c\u4f60\u540c\u6837\u53ef\u4ee5\u5728 home \u754c\u9762\u505a\u81ea\u52a8\u5316\u3002  \u662f\u5426\u652f\u6301\u81ea\u5b9a\u4e49\u7684\u3001\u975e\u6807\u51c6\u7684 UI \u63a7\u4ef6\u7684\u81ea\u52a8\u5316\uff1a\u53ea\u652f\u6301\u5c0f\u90e8\u5206\u3002\u4f60\u9700\u8981\u5728\u63a7\u4ef6\u8bbe\u7f6e\u53ef\u8bc6\u522b\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u5bf9\u4e00\u4e9b\u5143\u7d20\u8fdb\u884c\u4e00\u4e9b\u57fa\u7840\u7684\u81ea\u52a8\u5316\u64cd\u4f5c\u3002",
            "title": "iOS \u5e73\u53f0\u652f\u6301"
        },
        {
            "location": "/cn/appium-setup/platform-support/#android",
            "text": "\u67e5\u9605 Running on OS X: Android \uff0c Running on Windows  \u6216\u8005  Running on Linux  \u67e5\u770b\u66f4\u591a\u7684\u8bbe\u5907\u4fe1\u606f\u4ee5\u53ca\u5b89\u88c5\u8bf4\u660e\u3002   \u7248\u672c\uff1a2.3 \u53ca\u4ee5\u4e0a\u7248\u672c  2.3 \u81f3 4.2 \u7248\u672c\u662f\u901a\u8fc7 Appium \u7ed1\u5b9a\u7684\u57fa\u4e8e  Instrumentation \u6846\u67b6\u7684  Selendroid \u5b9e\u73b0\u7684\u81ea\u52a8\u5316\u3002Selendroid \u7684\u547d\u4ee4\u8bbe\u7f6e\u4e0e\u9ed8\u8ba4\u7684 Appium \u6709\u70b9\u4e0d\u540c\uff0c \u652f\u6301\u7684\u914d\u7f6e\u6587\u4ef6\u4e5f\u540c\u6837\u4e0d\u540c\u3002\u8981\u83b7\u5f97\u5728\u540e\u53f0\u8fd0\u884c\u81ea\u52a8\u5316\u7684\u6743\u9650\uff0c\u9700\u8981\u73af\u5883\u914d\u7f6e\u4e2d\u5c06  automationName  \u7684\u503c\u4e3a  Selendroid \u3002  4.2 \u4ee5\u53ca\u66f4\u9ad8\u7684\u7248\u672c\u662f\u901a\u8fc7 Appium \u81ea\u5df1\u7684  UiAutomator  \u5e93\u5b9e\u73b0\u3002\u8fd9\u662f\u9ed8\u8ba4\u7684\u81ea\u52a8\u5316\u540e\u53f0\u3002  \u8bbe\u5907\uff1aAndroid \u6a21\u62df\u5668\u4ee5\u53ca Android \u771f\u673a  \u662f\u5426\u652f\u6301 Native \u5e94\u7528\uff1a\u652f\u6301  \u662f\u5426\u652f\u6301\u79fb\u52a8\u7aef\u6d4f\u89c8\u5668\uff1a\u652f\u6301\uff08\u9664\u4e86\u4f7f\u7528 Selendroid \u540e\u53f0\u7684\u65f6\u5019\uff09\u3002Appium \u7ed1\u5b9a\u4e86\u4e00\u4e2a  Chromedriver  \u670d\u52a1\uff0c\u4f7f\u7528\u8fd9\u4e2a\u4ee3\u7406\u670d\u52a1\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002\u5728 4.2 \u548c 4.3 \u7248\u672c\uff0c\u53ea\u80fd\u5728\u5b98\u65b9\u7684 Chrome \u6d4f\u89c8\u5668\u6216\u8005 Chromium \u6267\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002\u5728 4.4 \u53ca\u66f4\u9ad8\u7248\u672c\uff0c\u53ef\u4ee5\u5728\u5185\u7f6e\u7684 \u201c\u6d4f\u89c8\u5668\u201d \u5e94\u7528\u4e0a\u8fdb\u884c\u81ea\u52a8\u5316\u4e86\u3002\u66f4\u591a\u4ecb\u7ecd\u8bf7\u67e5\u770b  mobile web doc \u3002   \u662f\u5426\u652f\u6301 Hybrid \u5e94\u7528\uff1a\u652f\u6301\u3002\u66f4\u591a\u4ecb\u7ecd\u8bf7\u67e5\u9605  hybrid doc \u3002  \u9ed8\u8ba4\u7684 Appium \u81ea\u52a8\u5316\u540e\u53f0\uff1a\u652f\u6301 4.4 \u4ee5\u53ca\u66f4\u9ad8\u7248\u672c  Selendroid \u81ea\u52a8\u5316\u540e\u53f0\uff1a\u652f\u6301 2.3 \u4ee5\u53ca\u66f4\u9ad8\u7248\u672c  \u662f\u5426\u652f\u6301\u591a\u4e2a app \u5728\u540c\u4e00\u4e2a session \u4e2d\u81ea\u52a8\u5316\uff1a\u652f\u6301\uff08\u9664\u4e86\u4f7f\u7528 Selendroid \u540e\u53f0\u7684\u65f6\u5019\uff09  \u662f\u5426\u652f\u6301\u591a\u4e2a\u8bbe\u5907\u540c\u65f6\u8fdb\u884c\u81ea\u52a8\u5316\uff1a\u652f\u6301\uff0c\u5373\u4f7f Appium \u5728\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u4e0d\u540c\u7684\u7aef\u53e3\u53f7\u4f5c\u4e3a\u670d\u52a1\u5668\u53c2\u6570\uff0c --port ,  --bootstrap-port  (\u6216\u8005  --selendroid-port ) \u8fd8\u6709  --chromedriver-port . \u66f4\u591a\u4ecb\u7ecd\u8bf7\u67e5\u770b  server args doc \u3002  \u652f\u6301\u7b2c\u4e09\u65b9\u5f15\u7528\uff1a\u652f\u6301\uff08\u9664\u4e86\u4f7f\u7528 Selendroid \u540e\u53f0\u7684\u65f6\u5019\uff09  \u652f\u6301\u81ea\u5b9a\u4e49\u7684\u3001\u975e\u6807\u51c6\u7684 UI \u63a7\u4ef6\u7684\u81ea\u52a8\u5316\uff1a\u4e0d\u652f\u6301",
            "title": "Android \u5e73\u53f0\u652f\u6301"
        },
        {
            "location": "/cn/appium-setup/platform-support/#windows",
            "text": "\u67e5\u770b\u4ee5\u4e0b\u6587\u6863\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\uff1a   Running on Windows  Windows App Testing   \u672c\u6587\u7531  thanksdanny  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "Windows \u684c\u9762\u652f\u6301"
        },
        {
            "location": "/cn/appium-setup/real-devices-android/",
            "text": "\u5728 Android \u771f\u673a\u4e0a\u8fd0\u884c Appium\n\n\n\u8c22\u5929\u8c22\u5730\uff01\u5728 Android \u771f\u673a\u4e0a\u8fd0\u884c\u662f\u6ca1\u6709\u989d\u5916\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\u5728\u6a21\u62df\u5668\u4e0a\u80fd\u8fd0\u884c\u7684\u6d4b\u8bd5\u540c\u6837\u9002\u7528\u5728\u771f\u673a\u4e0a\u3002\u786e\u4fdd\u4f60\u7684\u8bbe\u5907\u53ef\u4ee5\u8fde\u63a5 ADB \u548c\u5f00\u542f\u5f00\u53d1\u8005\u6a21\u5f0f\u3002\u5728\u771f\u673a\u4e0a\u6d4b\u8bd5 Chrome\uff0c\u4f60\u53ea\u9700\u8d1f\u8d23\u786e\u8ba4 Chrome \u5df2\u5b89\u88c5\u4e0a\u4e00\u4e2a\u5408\u9002\u7684\u7248\u672c\u3002\n\n\n\u540c\u6837\uff0c\u4f60\u9700\u8981\u5728\u624b\u673a\u4e0a\u5173\u95ed\u201c\u9a8c\u8bc1\u5e94\u7528\u201d\uff0c\u5426\u5219\u4ed6\u4f1a\u963b\u6b62 Appium \u7684\u8f85\u52a9\u5e94\u7528\u542f\u52a8\u548c\u6b63\u5e38\u8fd0\u884c\u3002\n\n\n\u672c\u6587\u7531 \nthanksdanny\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Real devices android"
        },
        {
            "location": "/cn/appium-setup/real-devices-android/#android-appium",
            "text": "\u8c22\u5929\u8c22\u5730\uff01\u5728 Android \u771f\u673a\u4e0a\u8fd0\u884c\u662f\u6ca1\u6709\u989d\u5916\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\uff1a\u5728\u6a21\u62df\u5668\u4e0a\u80fd\u8fd0\u884c\u7684\u6d4b\u8bd5\u540c\u6837\u9002\u7528\u5728\u771f\u673a\u4e0a\u3002\u786e\u4fdd\u4f60\u7684\u8bbe\u5907\u53ef\u4ee5\u8fde\u63a5 ADB \u548c\u5f00\u542f\u5f00\u53d1\u8005\u6a21\u5f0f\u3002\u5728\u771f\u673a\u4e0a\u6d4b\u8bd5 Chrome\uff0c\u4f60\u53ea\u9700\u8d1f\u8d23\u786e\u8ba4 Chrome \u5df2\u5b89\u88c5\u4e0a\u4e00\u4e2a\u5408\u9002\u7684\u7248\u672c\u3002  \u540c\u6837\uff0c\u4f60\u9700\u8981\u5728\u624b\u673a\u4e0a\u5173\u95ed\u201c\u9a8c\u8bc1\u5e94\u7528\u201d\uff0c\u5426\u5219\u4ed6\u4f1a\u963b\u6b62 Appium \u7684\u8f85\u52a9\u5e94\u7528\u542f\u52a8\u548c\u6b63\u5e38\u8fd0\u884c\u3002  \u672c\u6587\u7531  thanksdanny  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u5728 Android \u771f\u673a\u4e0a\u8fd0\u884c Appium"
        },
        {
            "location": "/cn/appium-setup/real-devices-ios/",
            "text": "\u5728 iOS \u771f\u673a\u4e0a\u8fd0\u884c Appium\n\n\nAppium \u5df2\u652f\u6301\u771f\u673a\u7684\u6d4b\u8bd5\u3002\n\n\n\u4f7f\u7528 Appium \u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\n\n\n\u628a\u8bbe\u5907\u7684 udid \u4f20\u7ed9 \nudid\n \u8fd9\u4e2a capability\u3002\u628a\u5e94\u7528\u7684 bundle ID \u4f20\u7ed9 \napp\n \u8fd9\u4e2a capability\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u5df2\u7ecf\u5728\u624b\u673a\u4e0a\u5b89\u88c5\u597d\u4e86\u3002\u5982\u679c\u5e94\u7528\u672a\u5b89\u88c5\uff0c\u90a3\u4e48\u9700\u8981\u5c06 \n.ipa\n \u6216\u8005 \n.app\n \u6587\u4ef6\u7684\u8def\u5f84\u4f20\u7ed9 \napp\n \u8fd9\u4e2a capability\u3002\u4e00\u65e6\u4f60\u7684\u8bbe\u5907\u548c\u5e94\u7528\u5df2\u7ecf\u914d\u7f6e\u597d\uff0c\u4f60\u5c31\u53ef\u4ee5\u5728\u90a3\u4e2a\u8bbe\u5907\u4e0a\u8fd0\u884c\u6d4b\u8bd5\u4e86\u3002\n\n\nDesired Capabilities\n\n\n\u901a\u8fc7\u5728\u6d4b\u8bd5\u91cc\u4f7f\u7528\u4ee5\u4e0b\u7684 capability\uff0c\u4f60\u53ef\u4ee5\u5728\u67d0\u4e2a\u8bbe\u5907\u52a0\u8f7d\u8fd9\u4e2a\u5e94\u7528\uff1a\n\n\n\n\napp\n \u6216\u8005 \nbundleId\n - \u6307\u5b9a\u5e94\u7528\uff0c\u6216\u8005\u5982\u679c\u5e94\u7528\u5df2\u7ecf\u5b89\u88c5\u5230\u624b\u673a\u4e0a\u4e86\uff0c\u53ea\u9700\u7b80\u5355\u5730\u6307\u5b9a\u5e94\u7528\u7684 bundleID\u3002\u8fd9\u6837 Appium \u5c31\u53ef\u4ee5\u52a0\u8f7d\u8be5\u5e94\u7528\u4e86\u3002\n\n\nudid\n - \u88ab\u6d4b\u8bbe\u5907\u7684 id\u3002\u5982\u679c\u53ea\u6709\u4e00\u53f0\u8bbe\u5907\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a \nauto\n\uff0cAppium \u80fd\u81ea\u52a8\u8bc6\u522b\u8bbe\u5907 id \u5e76\u4f7f\u7528\u5b83\u3002\n\n\n\n\n\u66f4\u591a\u7684\u7ec6\u8282\u53c2\u8003 \nAppium server capabilities\n\n\n\u5fc5\u5907\u7684\u8f6f\u4ef6\n\n\nAppium iOS \u771f\u673a\u652f\u6301\u4f9d\u8d56\u4e00\u4e2a\u91cd\u8981\u7684\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u5957\u4ef6 \nlibimobiledevice\n\uff0c\u4f7f\u7528 \nHomebrew\n \u53ef\u4ee5\u8f7b\u6613\u5730\u5b89\u88c5\u597d\u3002\n\n\nbrew install libimobiledevice\n\n\n\n\n\u5728 Xcode 7 \u548c iOS 9.3 \u6216\u8005\u4ee5\u4e0b\uff0c\u914d\u7f6e iOS \u771f\u673a\u8bbe\u5907\u6d4b\u8bd5\n\n\n\u5728 iOS 9.3 \u6216\u8005\u4ee5\u4e0b\uff0c\u4f7f\u7528 Xcode 7.3 \u6216\u8005\u4ee5\u4e0b\u5bf9\u771f\u673a\u8fdb\u884c\u81ea\u52a8\u5316 (\u6bd4\u5982\uff0c\u57fa\u4e8e Instruments \u7684\u6d4b\u8bd5) \u9700\u8981\u76f8\u5bf9\u8f83\u5c11\u7684\u914d\u7f6e\u3002\u4e3b\u8981\u5c31\u662f\u9700\u8981\u4f60\u7684\u5e94\u7528\u662f\u4f7f\u7528\u5f00\u53d1\u8005\u8bc1\u4e66\u7b7e\u540d\u7684\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u82f9\u679c\u79fb\u9664\u4e86\u6240\u6709\u4f7f\u7528\u8001\u7248\u672c Xcode \u7684\u6587\u6863\uff0c\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u4ece\n\u8fd9\u91cc\n\uff0c\n\u8fd9\u91cc\n\u627e\u5230\u5982\u4f55\u64cd\u4f5c\u3002\n\n\n\u66f4\u8be6\u7ec6\u5730\u8bf4\uff0c \u5728\u771f\u673a\u4e0a\u5f00\u59cb\u6d4b\u8bd5, \u4f60\u9700\u8981\u5982\u4e0b\u6b65\u9aa4\uff1a\n\n\n\n\n\u4e00\u4e2a \nApple Developer ID\n \u548c\u4e00\u4e2a\u6709\u6548\u7684\u914d\u7f6e\u597d\u5f00\u53d1\u8005\u8bc1\u4e66\u548c provisioning profile \u7684\u5f00\u53d1\u8005\u8d26\u53f7\u3002\n\n\n\u8981\u5728\u771f\u673a\u4e0a\u6d4b\u8bd5\uff0c\u4e00\u4e2a\u6709\u6548\u7684 iOS \u5f00\u53d1\u8bc1\u4e66\u548c Provisioning Profile \u662f\u5fc5\u987b\u7684\u3002\u88ab\u6d4b\u5e94\u7528\u4e5f\u5fc5\u987b\u88ab\u7b7e\u540d\u3002\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u5728 \nApple documentation\n \u627e\u5230\u3002\n\n\n\u4e00\u4e2a\u82f9\u679c\u8bbe\u5907\uff1a iPad \u6216\u8005 iPhone \u90fd\u53ef\u4ee5\u3002\u786e\u4fdd\u5df2\u7ecf\u5728 Xcode \u91cc\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u5f00\u53d1\u673a\u3002\n\n\n\u4e00\u4e2a\u5df2\u7ecf\u7b7e\u540d\u7684 \n.app\n \u6216\u5219 \n.ipa\n \u6587\u4ef6\uff0c\u6216\u8005\u4f7f\u7528\u6e90\u7801\u7f16\u4e00\u4e2a\u3002\n\n\n\u4e00\u53f0 Mac \u7535\u8111\uff0c\u88c5\u597d\u4e86 \nXcode\n \u548c Xcode Command\nLine Developer Tools\u3002\n\n\n\n\nAppium \u4f7f\u7528 \nideviceinstaller\n (\nlibimobiledevice\n \u5957\u4ef6\u7684\u4e00\u90e8\u5206)\u6765\u5904\u7406\u5e94\u7528\u5b89\u88c5\u95ee\u9898\u3002\u4f46\u662f\u6709\u65f6\u5019\u4f7f\u7528 Xcode \u63d0\u524d\u5b89\u88c5\u597d\u5e94\u7528\u786e\u4fdd\u6ca1\u6709\u95ee\u9898\u66f4\u52a0\u5bb9\u6613\u3002(\u66f4\u591a\u53c2\u8003 \niOS deploy\n)\u3002\n\n\n\u6392\u969c\u601d\u8def\n\n\n\n\n\u786e\u4fdd UDID \u662f\u65e0\u8bef\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7 Xcode Organizer \u6216\u8005 iTunew \u67e5\u770b\u3002\u7559\u610f UDID \u662f\u5f88\u957f\u7684\u5b57\u7b26\u4e32\uff0820+ \u5b57\u7b26\uff09\u3002\n\n\n\u786e\u4fdd\u4f60\u53ef\u4ee5\u5728\u6a21\u62df\u5668\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\u3002\n\n\n\u91cd\u590d\u786e\u8ba4\u901a\u8fc7 Instrumens \u662f\u5426\u53ef\u4ee5\u542f\u52a8\u4f60\u7684\u81ea\u52a8\u5316\u3002\n\n\n\u786e\u4fdd Instruments \u4e0d\u5728\u8fd0\u884c\u72b6\u6001\u4e2d\u3002\n\n\n\u786e\u4fdd UI Automation \u5728\u4f60\u7684\u8bbe\u5907\u5df2\u7ecf\u6253\u5f00\u3002\u8bbe\u7f6e -> \u5f00\u53d1\u8005 -> \u4f7f\u7528 UI Automation\u3002\n\n\n\n\n\u5728 Xcode 8 \u548c iOS 9.3 \u4ee5\u4e0a\u914d\u7f6e iOS \u771f\u673a\u8bbe\u5907\u6d4b\u8bd5\n\n\n\u4f5c\u4e3a\u5bf9 \nlibimobiledevice\n \u4f9d\u8d56\u7684\u8865\u5145\uff0cAppium \u5bf9 iOS 9.3 \u53ca\u4ee5\u4e0a\u548c Xcode 8 \u53ca\u4ee5\u4e0a\u7684\u652f\u6301\u4f9d\u8d56 \nios-deploy\n,\n\u901a\u8fc7 \nnpm\n \u53ef\u4ee5\u65b9\u4fbf\u5730\u5b89\u88c5\uff1a\n\n\nnpm install -g ios-deploy\n\n\n\n\n\u4e0d\u5e78\u5730\u662f\uff0c\u82f9\u679c\u6539\u53d8\u4e86\u4ee5\u5f80\u7684\u6d4b\u8bd5\u65b9\u6cd5\u3002\u65b0\u7684\u65b9\u6cd5\u9700\u8981\u5b89\u88c5\u4e00\u4e2a\u5e2e\u52a9\u5e94\u7528\u5230\u8bbe\u5907\u4e0a\u53bb\uff0c\u901a\u8fc7\u8fd9\u4e2a\u5e94\u7528\uff0c\u81ea\u52a8\u5316\u6d4b\u8bd5\u624d\u80fd\u8fdb\u884c\u3002\u8bf4\u8d77\u6765\u633a\u7b80\u5355\uff0c\u4f46\u662f\u4ee3\u7801\u7b7e\u540d\u548c\u751f\u6210\u4f9b\u5f00\u53d1\u548c\u6d4b\u8bd5\u7684\u5e94\u7528\uff0c\u8ba9\u4eba\u6709\u4e00\u70b9\u5934\u75bc\u3002\n\n\nAppium \u5b89\u88c5\u7684\u5e94\u7528\u53eb \nWebDriverAgent-Runner\n (\u53ef\u4ee5\u5728\n\u8fd9\u91cc\n)\u627e\u5230\uff0c\u8981\u60f3\u5b89\u88c5\u8fd9\u4e2a\u5e94\u7528\uff0cAppium\u9700\u8981\u80fd\u914d\u7f6e\u8fd9\u4e2a\u6784\u5efa\u3002\n\n\n\u57fa\u672c (\u81ea\u52a8\u5316) \u914d\u7f6e\n\n\n\u5728 iOS \u771f\u673a\u4e0a\u8bbe\u7f6e\u548c\u8fd0\u884c Appium XCUItest\uff0c\u6700\u65b9\u4fbf\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u81ea\u52a8\u5316\u914d\u7f6e\u7b56\u7565\u3002\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\n\n\n\n\n\u4f7f\u7528 \nxcodeOrgId\n \u548c \nxcodeSigningId\n desired capabilities:\n\n\n\n\n    {\n      \"xcodeOrgId\": \"<Team ID>\",\n      \"xcodeSigningId\": \"iPhone Developer\"\n    }\n\n\n\n\n\n\n\u5728\u4f60\u7684\u6587\u4ef6\u7cfb\u7edf\u91cc\u521b\u5efa\u4e00\u4e2a \n.xcconfig\n \u6587\u4ef6\uff0c\u5185\u5bb9\u662f\uff1a\n\n\n\n\n    DEVELOPMENT_TEAM = <Team ID>\n    CODE_SIGN_IDENTITY = iPhone Developer\n\n\n\n\n\u4ee5\u4e0a\u4efb\u4f55\u4e00\u4e2a\u65b9\u5f0f\uff0cTeam ID \u662f\u4e00\u4e2a 10 \u4e2a\u5b57\u7b26\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u82f9\u679c\u751f\u6210\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u5206\u914d\u7ed9\u4f60\u7684\u56e2\u961f\u3002\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u5f00\u53d1\u8005\u8d26\u53f7\u91cc\u627e\u5230\u4f60\u7684 Team ID\u3002\u767b\u5f55 \ndeveloper.apple.com/account\n\uff0c\u7136\u540e\u70b9\u51fb\u8fb9\u680f\u4e0a\u7684 Membership\u3002\u4f60\u7684 Team ID \u5728 Membership\nInformation \u90e8\u5206\u7684\u56e2\u961f\u540d\u5b57\u4e0b\u9762\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728 keychain \u91cc\u7684 iPhone \u5f00\u53d1\u8005\u8bc1\u4e66\u91cc\u7684 \"Organizational Unit\" \u5c5e\u6027\u627e\u5230\u4f60\u7684 Team ID\u3002\n\n\n\u6ce8\u610f\u8fd9\u662f\u4e92\u65a5\u7684\u7b56\u7565\uff1b\u8981\u4e48\u7528 \nxcodeConfigFile\n capability\uff0c \u8981\u4e48\u7528 \nxcodeOrgId\n and \nxcodeSigningId\n \u7684\u7ec4\u5408\u3002\n\n\n\u5f53\u4ee5\u4e0a\u7684\u914d\u7f6e\u641e\u5b9a\u540e\uff0c\u53ea\u9700\u518d\u6307\u5b9a \nudid\n capability \u5c31\u53ef\u4ee5\u5728\u771f\u673a\u4e0a\u5f00\u59cb\u6d4b\u8bd5\u4e86\u3002\n\n\n\u5982\u679c\u8fd8\u662f\u4e0d\u5de5\u4f5c\u7684\u8bdd\uff0c\u901a\u5e38\u4f1a\u5728 Appium server \u7684\u65e5\u5fd7\u91cc\u663e\u793a\u4e00\u4e9b\u9519\u8bef\u5982\uff1a\ninfo XCUITest xcodebuild exited with code '65' and signal 'null'\n\u3002\u8fd9\u901a\u5e38\u8868\u793a\u5fc5\u8981\u7684\u4ee3\u7801\u7b7e\u540d\u6ca1\u914d\u7f6e\u6b63\u786e\u3002 \u53bb\u770b\u4e0b \nBasic (manual) configuration\n\n\u8fd9\u4e2a\u6587\u6863\uff0c\u53c2\u8bd5\u4fee\u590d\u4e0b\u3002\n\n\n\u5982\u679c \nWebDriverAgentRunner\n \u6210\u529f\u7684\u5728\u8bbe\u5907\u4e0a\u5b89\u88c5\u597d\uff0c\u4f46\u662f\u5728 Appium server \u65e5\u5fd7\u91cc\u8fd8\u662f\u6709\u5982\u4e0b\u9519\u8bef\u4fe1\u606f\uff1a\n\n\n2017-01-24 09:02:18.358 xcodebuild[30385:339674] Error Domain=com.apple.platform.iphoneos Code=-12 \"Unable to launch com.apple.test.WebDriverAgentRunner-Runner\" UserInfo={NSLocalizedDescription=Unable to launch com.apple.test.WebDriverAgentRunner-Runner, NSUnderlyingError=0x7fa839cadc60 {Error Domain=DTXMessage Code=1 \"(null)\" UserInfo={DTXExceptionKey=The operation couldn\u2019t be completed. Unable to launch com.apple.test.WebDriverAgentRunner-Runner because it has an invalid code signature, inadequate entitlements or its profile has not been explicitly trusted by the user. : Failed to launch process with bundle identifier 'com.apple.test.WebDriverAgentRunner-Runner'}}}\n2017-01-24 09:02:18.358 xcodebuild[30385:339674] Error Domain=IDETestOperationsObserverErrorDomain Code=5 \"Early unexpected exit, operation never finished bootstrapping - no restart will be attempted\" UserInfo={NSLocalizedDescription=Early unexpected exit, operation never finished bootstrapping - no restart will be attempted}\n\nTesting failed:\n    Test target WebDriverAgentRunner encountered an error (Early unexpected exit, operation never finished bootstrapping - no restart will be attempted)\n\n\n\n\n\u8fd9\u4e2a\u95ee\u9898\u662f\u56e0\u4e3a\u5f00\u53d1\u8005\u5728\u8fd9\u53f0\u8bbe\u5907\u4e0a\u4e0d\u88ab\u4fe1\u4efb\u3002\u5982\u679c\u4f60\u5728\u8bbe\u5907\u4e0a\u624b\u52a8\u8fd0\u884c \nWebDriverAgentRunner\n\uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u9519\u8bef\u9875\u9762\u5f39\u51fa\u6765\uff1a\n\n\n\n\n\u4f60\u53ef\u4ee5\u53bb\u8bbe\u5907\u4e2d\u7684 Settings => General => Device Management \u4fe1\u4efb\u8fd9\u4e2a\u5f00\u53d1\u8005\uff0c\u5141\u8bb8 \nWebDriverAgentRunner\n \u8fd0\u884c (\u53c2\u8003 \nApple\ndocumentation for more information\n).\n\n\n\u57fa\u672c (\u624b\u52a8) \u914d\u7f6e\n\n\n\u5f88\u591a\u60c5\u51b5\uff0c\u57fa\u672c\u7684\u81ea\u52a8\u914d\u7f6e\u6ee1\u8db3\u4e0d\u4e86\u9700\u6c42\u3002\u8fd9\u901a\u5e38\u548c\u771f\u673a\u8fd0\u884c\u4e0a\u7684\u4ee3\u7801\u7b7e\u540d\u548c\u9879\u76ee\u914d\u7f6e\u6709\u5173\u3002\u8fd9\u5e38\u5e38\u53d1\u751f\u5728\u514d\u8d39\u7684\u5f00\u53d1\u8005\u8d26\u53f7\u4e0a\uff0c\u514d\u8d39\u7684\u5f00\u53d1\u8005\u8d26\u53f7\u4e0d\u80fd\u521b\u5efa wildcard provisioning profile\uff0c\u4e5f\u4e0d\u80fd\u4e3a\u5e94\u7528\u521b\u5efa\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u3002\n\n\nXcode \n\u521b\u5efa provisioning profile \u5931\u8d25\n \u7684\u9519\u8bef\u5982\u4e0b\uff1a\n\n\n\n\n\u6700\u5bb9\u6613\u7684\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u6253\u5f00 \nXcode\n\u521b\u5efa\u4e00\u4e2a\u65b0\u5de5\u7a0b\uff1a\n\n\n\n\n\u7c7b\u578b\u4e0d\u91cd\u8981\uff0c\u53ea\u8981\u662f \"iOS\"\u3002\u7528\u6700\u7b80\u5355\u7684 \"Single View Application\" \u5373\u53ef\uff1a\n\n\n\n\n\u91cd\u8981\u7684\u5730\u65b9\u662f\u8981\u7528\u552f\u4e00\u7684 \"Product Name\" \u548c \"Organization Name\". \u7136\u540e\uff0c\u5728\u8fd9\u91cc\uff0c\u6307\u5b9a\u4f60\u7684 \"Team\"\u3002\n\n\n\n\n\u4f60\u53ef\u4ee5\u5728 \"Project\" tab \u786e\u8ba4 provisioning profile \u662f\u5426\u521b\u5efa\u6210\u529f\u3002\n\n\n\n\n\u6216\u8005\u53bb\u4f60\u7684\u8d26\u53f7\u9996\u9009\u9879\u91cc\u770b\u770b provisioning profile\uff1a\n\n\n\n\n\u73b0\u5728\u4f60\u5c31\u6709\u4e86\u4e00\u4e2a\u6709\u6548\u7684 provisioning profile\u3002 \u8bb0\u4f4f\u4f60\u5173\u8054\u8fd9\u4e2a profile \u7684 bundle id\uff0c\u7136\u540e\u653e\u5230 \nupdatedWDABundleId\n \u8fd9\u4e2a desired capability \u91cc\u3002\u7136\u540e\u8ddf\u7740\n\u524d\u9762\u7684\u81ea\u52a8\u914d\u7f6e\u6559\u7a0b\n\u64cd\u4f5c\u5373\u53ef\u3002\n\n\n\u5168\u90e8\u624b\u52a8\u914d\u7f6e\n\n\n\u53e6\u5916\uff0c\u53ef\u4ee5\u624b\u52a8\u628a provisioning profile \u548c\u9879\u76ee\u5173\u8054\u5728\u4e00\u8d77\u3002 (\u8bb0\u4f4f\u5982\u679c\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6bcf\u6b21 WebDriverAgent \u66f4\u65b0\uff0c\u90fd\u8981\u505a\u4e00\u6b21\u3002\u6240\u4ee5\u6211\u4eec\u4e0d\u63a8\u8350\u8fd9\u4e2a\u65b9\u6cd5)\uff1a\n\n\n\n\n\u627e\u5230\u4f60\u7684 Appium \u7684\u5b89\u88c5\u76ee\u5f55\n\n\n\n\n    $ which appium\n    /path/where/installed/bin/appium\n\n\n\n\n\n\n\u5047\u8bbe\u5b89\u88c5\u76ee\u5f55\u662f\uff1a \n/path/where/installed/bin/appium\n\uff0c\u90a3\u4e48 \nWebDriverAgent\n\n    \u5728 \n/path/where/installed/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent\n\u3002\n    \u6253\u5f00\u7ec8\u7aef\u5230\u90a3\u4e2a\u76ee\u5f55\uff0c\u7136\u540e\u6309\u4ee5\u4e0b\u547d\u4ee4\u64cd\u4f5c\uff1a\n\n\n\n\n    mkdir -p Resources/WebDriverAgent.bundle\n    ./Scripts/bootstrap.sh -d\n\n\n\n\n\n\n\n\n\u5728 Xcode \u91cc\u6253\u5f00 \nWebDriverAgent.xcodeproj\n\u3002 \u5bf9\u4e8e \nWebDriverAgentLib\n\n    \u548c \nWebDriverAgentRunner\n \u4e24\u4e2a target\uff0c\u90fd\u9009\u62e9 \"General\" tab \u91cc\u7684 \"Automatically manage signing\"\n    \u7136\u540e\u9009\u62e9\u4f60\u7684 \nDevelopment Team\n\u3002\u8fd9\u4e5f\u4f1a\u81ea\u52a8\u9009\u62e9 \nSigning Ceritificate\n\u3002\u5927\u6982\u7684\u6837\u5b50\u5982\u4e0b\uff1a\n\n\n\n\n\n\nXcode \u53ef\u80fd\u4f1a\u521b\u5efa\u4e0d\u4e86 \nWebDriverAgentRunner\n \u7684 provisioning profile\uff1a\n\n\n\n\n\n\n\n\n\u8fd9\u65f6\u5019\u9700\u8981\u5728 \"Build Settings\" tab \u91cc\u624b\u52a8\u6539 bundle id\u3002\u628a \"Product Bundle Identifier\"\n  \u4ece \ncom.facebook.WebDriverAgentRunner\n \u6539\u6210 Xcode \u80fd\u91c7\u7528\u7684\uff1a\n\n\n\n\n\n\n\n\n\u5728\u56de\u5230 \"General\" tab \u91cc\u7684 \nWebDriverAgentRunner\n target\uff0c\u73b0\u5728\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a provisioning profile \u521b\u5efa\u6210\u679c\u4e86:\n\n\n\n\n\n\n\n\n\n\n\u6700\u540e\uff0c\u4f60\u53ef\u4ee5\u9a8c\u8bc1\u4e00\u5207\u90fd OK \u4e86\u3002 \u6784\u5efa\u8fd9\u4e2a\u9879\u76ee\uff1a\n\n\n\n\n\n\n    xcodebuild -project WebDriverAgent.xcodeproj -scheme WebDriverAgentRunner -destination 'id=<udid>' test\n\n\n\n\n\u5982\u679c\u6210\u679c\u4e86\uff0c\u6700\u540e\u7684\u8f93\u51fa\u4f1a\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a\n\n\n    Test Suite 'All tests' started at 2017-01-23 15:49:12.585\n    Test Suite 'WebDriverAgentRunner.xctest' started at 2017-01-23 15:49:12.586\n    Test Suite 'UITestingUITests' started at 2017-01-23 15:49:12.587\n    Test Case '-[UITestingUITests testRunner]' started.\n        t =     0.00s     Start Test at 2017-01-23 15:49:12.588\n        t =     0.00s     Set Up\n\n\n\n\n\n\n\u8981\u5b8c\u6574\u9a8c\u8bc1\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u8bd5\u8bd5\u770b\u8bbf\u95ee WebDriverAgent server \u7684\u72b6\u6001 (\n\u6ce8\u610f\uff1a\n \u4f60\u5fc5\u987b\u548c\u624b\u673a\u8bbe\u5907\u540c\u4e00\u4e2a\u7f51\u6bb5\uff0c\u4f60\u53ef\u4ee5\u4ece Settings => Wi-Fi => Current Network \u627e\u5230\u624b\u673a\u5f53\u524d\u7684 IP\u3002):\n\n\n\n\n    export DEVICE_URL='http://<device IP>:8100'\n    export JSON_HEADER='-H \"Content-Type: application/json;charset=UTF-8, accept: application/json\"'\n    curl -X GET $JSON_HEADER $DEVICE_URL/status\n\n\n\n\n\u4f60\u4f1a\u5f97\u5230\u5982\u4e0b\u8f93\u51fa\uff1a\n\n\n\n    {\n      \"value\" : {\n        \"state\" : \"success\",\n        \"os\" : {\n          \"name\" : \"iOS\",\n          \"version\" : \"10.2\"\n        },\n        \"ios\" : {\n          \"simulatorVersion\" : \"10.2\",\n          \"ip\" : \"192.168.0.7\"\n        },\n        \"build\" : {\n          \"time\" : \"Jan 23 2017 14:59:57\"\n        }\n      },\n      \"sessionId\" : \"8951A6DD-F3AD-410E-A5DB-D042F42F68A7\",\n      \"status\" : 0\n    }",
            "title": "Real devices ios"
        },
        {
            "location": "/cn/appium-setup/real-devices-ios/#ios-appium",
            "text": "Appium \u5df2\u652f\u6301\u771f\u673a\u7684\u6d4b\u8bd5\u3002",
            "title": "\u5728 iOS \u771f\u673a\u4e0a\u8fd0\u884c Appium"
        },
        {
            "location": "/cn/appium-setup/real-devices-ios/#appium",
            "text": "\u628a\u8bbe\u5907\u7684 udid \u4f20\u7ed9  udid  \u8fd9\u4e2a capability\u3002\u628a\u5e94\u7528\u7684 bundle ID \u4f20\u7ed9  app  \u8fd9\u4e2a capability\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u5df2\u7ecf\u5728\u624b\u673a\u4e0a\u5b89\u88c5\u597d\u4e86\u3002\u5982\u679c\u5e94\u7528\u672a\u5b89\u88c5\uff0c\u90a3\u4e48\u9700\u8981\u5c06  .ipa  \u6216\u8005  .app  \u6587\u4ef6\u7684\u8def\u5f84\u4f20\u7ed9  app  \u8fd9\u4e2a capability\u3002\u4e00\u65e6\u4f60\u7684\u8bbe\u5907\u548c\u5e94\u7528\u5df2\u7ecf\u914d\u7f6e\u597d\uff0c\u4f60\u5c31\u53ef\u4ee5\u5728\u90a3\u4e2a\u8bbe\u5907\u4e0a\u8fd0\u884c\u6d4b\u8bd5\u4e86\u3002",
            "title": "\u4f7f\u7528 Appium \u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5"
        },
        {
            "location": "/cn/appium-setup/real-devices-ios/#desired-capabilities",
            "text": "\u901a\u8fc7\u5728\u6d4b\u8bd5\u91cc\u4f7f\u7528\u4ee5\u4e0b\u7684 capability\uff0c\u4f60\u53ef\u4ee5\u5728\u67d0\u4e2a\u8bbe\u5907\u52a0\u8f7d\u8fd9\u4e2a\u5e94\u7528\uff1a   app  \u6216\u8005  bundleId  - \u6307\u5b9a\u5e94\u7528\uff0c\u6216\u8005\u5982\u679c\u5e94\u7528\u5df2\u7ecf\u5b89\u88c5\u5230\u624b\u673a\u4e0a\u4e86\uff0c\u53ea\u9700\u7b80\u5355\u5730\u6307\u5b9a\u5e94\u7528\u7684 bundleID\u3002\u8fd9\u6837 Appium \u5c31\u53ef\u4ee5\u52a0\u8f7d\u8be5\u5e94\u7528\u4e86\u3002  udid  - \u88ab\u6d4b\u8bbe\u5907\u7684 id\u3002\u5982\u679c\u53ea\u6709\u4e00\u53f0\u8bbe\u5907\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a  auto \uff0cAppium \u80fd\u81ea\u52a8\u8bc6\u522b\u8bbe\u5907 id \u5e76\u4f7f\u7528\u5b83\u3002   \u66f4\u591a\u7684\u7ec6\u8282\u53c2\u8003  Appium server capabilities",
            "title": "Desired Capabilities"
        },
        {
            "location": "/cn/appium-setup/real-devices-ios/#_1",
            "text": "Appium iOS \u771f\u673a\u652f\u6301\u4f9d\u8d56\u4e00\u4e2a\u91cd\u8981\u7684\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u5957\u4ef6  libimobiledevice \uff0c\u4f7f\u7528  Homebrew  \u53ef\u4ee5\u8f7b\u6613\u5730\u5b89\u88c5\u597d\u3002  brew install libimobiledevice",
            "title": "\u5fc5\u5907\u7684\u8f6f\u4ef6"
        },
        {
            "location": "/cn/appium-setup/real-devices-ios/#xcode-7-ios-93-ios",
            "text": "\u5728 iOS 9.3 \u6216\u8005\u4ee5\u4e0b\uff0c\u4f7f\u7528 Xcode 7.3 \u6216\u8005\u4ee5\u4e0b\u5bf9\u771f\u673a\u8fdb\u884c\u81ea\u52a8\u5316 (\u6bd4\u5982\uff0c\u57fa\u4e8e Instruments \u7684\u6d4b\u8bd5) \u9700\u8981\u76f8\u5bf9\u8f83\u5c11\u7684\u914d\u7f6e\u3002\u4e3b\u8981\u5c31\u662f\u9700\u8981\u4f60\u7684\u5e94\u7528\u662f\u4f7f\u7528\u5f00\u53d1\u8005\u8bc1\u4e66\u7b7e\u540d\u7684\u3002 \u4e0d\u5e78\u7684\u662f\uff0c\u82f9\u679c\u79fb\u9664\u4e86\u6240\u6709\u4f7f\u7528\u8001\u7248\u672c Xcode \u7684\u6587\u6863\uff0c\u4e0d\u8fc7\u4f60\u53ef\u4ee5\u4ece \u8fd9\u91cc \uff0c \u8fd9\u91cc \u627e\u5230\u5982\u4f55\u64cd\u4f5c\u3002  \u66f4\u8be6\u7ec6\u5730\u8bf4\uff0c \u5728\u771f\u673a\u4e0a\u5f00\u59cb\u6d4b\u8bd5, \u4f60\u9700\u8981\u5982\u4e0b\u6b65\u9aa4\uff1a   \u4e00\u4e2a  Apple Developer ID  \u548c\u4e00\u4e2a\u6709\u6548\u7684\u914d\u7f6e\u597d\u5f00\u53d1\u8005\u8bc1\u4e66\u548c provisioning profile \u7684\u5f00\u53d1\u8005\u8d26\u53f7\u3002  \u8981\u5728\u771f\u673a\u4e0a\u6d4b\u8bd5\uff0c\u4e00\u4e2a\u6709\u6548\u7684 iOS \u5f00\u53d1\u8bc1\u4e66\u548c Provisioning Profile \u662f\u5fc5\u987b\u7684\u3002\u88ab\u6d4b\u5e94\u7528\u4e5f\u5fc5\u987b\u88ab\u7b7e\u540d\u3002\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u5728  Apple documentation  \u627e\u5230\u3002  \u4e00\u4e2a\u82f9\u679c\u8bbe\u5907\uff1a iPad \u6216\u8005 iPhone \u90fd\u53ef\u4ee5\u3002\u786e\u4fdd\u5df2\u7ecf\u5728 Xcode \u91cc\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u5f00\u53d1\u673a\u3002  \u4e00\u4e2a\u5df2\u7ecf\u7b7e\u540d\u7684  .app  \u6216\u5219  .ipa  \u6587\u4ef6\uff0c\u6216\u8005\u4f7f\u7528\u6e90\u7801\u7f16\u4e00\u4e2a\u3002  \u4e00\u53f0 Mac \u7535\u8111\uff0c\u88c5\u597d\u4e86  Xcode  \u548c Xcode Command\nLine Developer Tools\u3002   Appium \u4f7f\u7528  ideviceinstaller  ( libimobiledevice  \u5957\u4ef6\u7684\u4e00\u90e8\u5206)\u6765\u5904\u7406\u5e94\u7528\u5b89\u88c5\u95ee\u9898\u3002\u4f46\u662f\u6709\u65f6\u5019\u4f7f\u7528 Xcode \u63d0\u524d\u5b89\u88c5\u597d\u5e94\u7528\u786e\u4fdd\u6ca1\u6709\u95ee\u9898\u66f4\u52a0\u5bb9\u6613\u3002(\u66f4\u591a\u53c2\u8003  iOS deploy )\u3002",
            "title": "\u5728 Xcode 7 \u548c iOS 9.3 \u6216\u8005\u4ee5\u4e0b\uff0c\u914d\u7f6e iOS \u771f\u673a\u8bbe\u5907\u6d4b\u8bd5"
        },
        {
            "location": "/cn/appium-setup/real-devices-ios/#_2",
            "text": "\u786e\u4fdd UDID \u662f\u65e0\u8bef\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7 Xcode Organizer \u6216\u8005 iTunew \u67e5\u770b\u3002\u7559\u610f UDID \u662f\u5f88\u957f\u7684\u5b57\u7b26\u4e32\uff0820+ \u5b57\u7b26\uff09\u3002  \u786e\u4fdd\u4f60\u53ef\u4ee5\u5728\u6a21\u62df\u5668\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\u3002  \u91cd\u590d\u786e\u8ba4\u901a\u8fc7 Instrumens \u662f\u5426\u53ef\u4ee5\u542f\u52a8\u4f60\u7684\u81ea\u52a8\u5316\u3002  \u786e\u4fdd Instruments \u4e0d\u5728\u8fd0\u884c\u72b6\u6001\u4e2d\u3002  \u786e\u4fdd UI Automation \u5728\u4f60\u7684\u8bbe\u5907\u5df2\u7ecf\u6253\u5f00\u3002\u8bbe\u7f6e -> \u5f00\u53d1\u8005 -> \u4f7f\u7528 UI Automation\u3002",
            "title": "\u6392\u969c\u601d\u8def"
        },
        {
            "location": "/cn/appium-setup/real-devices-ios/#xcode-8-ios-93-ios",
            "text": "\u4f5c\u4e3a\u5bf9  libimobiledevice  \u4f9d\u8d56\u7684\u8865\u5145\uff0cAppium \u5bf9 iOS 9.3 \u53ca\u4ee5\u4e0a\u548c Xcode 8 \u53ca\u4ee5\u4e0a\u7684\u652f\u6301\u4f9d\u8d56  ios-deploy ,\n\u901a\u8fc7  npm  \u53ef\u4ee5\u65b9\u4fbf\u5730\u5b89\u88c5\uff1a  npm install -g ios-deploy  \u4e0d\u5e78\u5730\u662f\uff0c\u82f9\u679c\u6539\u53d8\u4e86\u4ee5\u5f80\u7684\u6d4b\u8bd5\u65b9\u6cd5\u3002\u65b0\u7684\u65b9\u6cd5\u9700\u8981\u5b89\u88c5\u4e00\u4e2a\u5e2e\u52a9\u5e94\u7528\u5230\u8bbe\u5907\u4e0a\u53bb\uff0c\u901a\u8fc7\u8fd9\u4e2a\u5e94\u7528\uff0c\u81ea\u52a8\u5316\u6d4b\u8bd5\u624d\u80fd\u8fdb\u884c\u3002\u8bf4\u8d77\u6765\u633a\u7b80\u5355\uff0c\u4f46\u662f\u4ee3\u7801\u7b7e\u540d\u548c\u751f\u6210\u4f9b\u5f00\u53d1\u548c\u6d4b\u8bd5\u7684\u5e94\u7528\uff0c\u8ba9\u4eba\u6709\u4e00\u70b9\u5934\u75bc\u3002  Appium \u5b89\u88c5\u7684\u5e94\u7528\u53eb  WebDriverAgent-Runner  (\u53ef\u4ee5\u5728 \u8fd9\u91cc )\u627e\u5230\uff0c\u8981\u60f3\u5b89\u88c5\u8fd9\u4e2a\u5e94\u7528\uff0cAppium\u9700\u8981\u80fd\u914d\u7f6e\u8fd9\u4e2a\u6784\u5efa\u3002",
            "title": "\u5728 Xcode 8 \u548c iOS 9.3 \u4ee5\u4e0a\u914d\u7f6e iOS \u771f\u673a\u8bbe\u5907\u6d4b\u8bd5"
        },
        {
            "location": "/cn/appium-setup/real-devices-ios/#_3",
            "text": "\u5728 iOS \u771f\u673a\u4e0a\u8bbe\u7f6e\u548c\u8fd0\u884c Appium XCUItest\uff0c\u6700\u65b9\u4fbf\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u81ea\u52a8\u5316\u914d\u7f6e\u7b56\u7565\u3002\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a   \u4f7f\u7528  xcodeOrgId  \u548c  xcodeSigningId  desired capabilities:       {\n      \"xcodeOrgId\": \"<Team ID>\",\n      \"xcodeSigningId\": \"iPhone Developer\"\n    }   \u5728\u4f60\u7684\u6587\u4ef6\u7cfb\u7edf\u91cc\u521b\u5efa\u4e00\u4e2a  .xcconfig  \u6587\u4ef6\uff0c\u5185\u5bb9\u662f\uff1a       DEVELOPMENT_TEAM = <Team ID>\n    CODE_SIGN_IDENTITY = iPhone Developer  \u4ee5\u4e0a\u4efb\u4f55\u4e00\u4e2a\u65b9\u5f0f\uff0cTeam ID \u662f\u4e00\u4e2a 10 \u4e2a\u5b57\u7b26\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u82f9\u679c\u751f\u6210\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u5206\u914d\u7ed9\u4f60\u7684\u56e2\u961f\u3002\u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u5f00\u53d1\u8005\u8d26\u53f7\u91cc\u627e\u5230\u4f60\u7684 Team ID\u3002\u767b\u5f55  developer.apple.com/account \uff0c\u7136\u540e\u70b9\u51fb\u8fb9\u680f\u4e0a\u7684 Membership\u3002\u4f60\u7684 Team ID \u5728 Membership\nInformation \u90e8\u5206\u7684\u56e2\u961f\u540d\u5b57\u4e0b\u9762\u3002\u4f60\u4e5f\u53ef\u4ee5\u5728 keychain \u91cc\u7684 iPhone \u5f00\u53d1\u8005\u8bc1\u4e66\u91cc\u7684 \"Organizational Unit\" \u5c5e\u6027\u627e\u5230\u4f60\u7684 Team ID\u3002  \u6ce8\u610f\u8fd9\u662f\u4e92\u65a5\u7684\u7b56\u7565\uff1b\u8981\u4e48\u7528  xcodeConfigFile  capability\uff0c \u8981\u4e48\u7528  xcodeOrgId  and  xcodeSigningId  \u7684\u7ec4\u5408\u3002  \u5f53\u4ee5\u4e0a\u7684\u914d\u7f6e\u641e\u5b9a\u540e\uff0c\u53ea\u9700\u518d\u6307\u5b9a  udid  capability \u5c31\u53ef\u4ee5\u5728\u771f\u673a\u4e0a\u5f00\u59cb\u6d4b\u8bd5\u4e86\u3002  \u5982\u679c\u8fd8\u662f\u4e0d\u5de5\u4f5c\u7684\u8bdd\uff0c\u901a\u5e38\u4f1a\u5728 Appium server \u7684\u65e5\u5fd7\u91cc\u663e\u793a\u4e00\u4e9b\u9519\u8bef\u5982\uff1a info XCUITest xcodebuild exited with code '65' and signal 'null' \u3002\u8fd9\u901a\u5e38\u8868\u793a\u5fc5\u8981\u7684\u4ee3\u7801\u7b7e\u540d\u6ca1\u914d\u7f6e\u6b63\u786e\u3002 \u53bb\u770b\u4e0b  Basic (manual) configuration \n\u8fd9\u4e2a\u6587\u6863\uff0c\u53c2\u8bd5\u4fee\u590d\u4e0b\u3002  \u5982\u679c  WebDriverAgentRunner  \u6210\u529f\u7684\u5728\u8bbe\u5907\u4e0a\u5b89\u88c5\u597d\uff0c\u4f46\u662f\u5728 Appium server \u65e5\u5fd7\u91cc\u8fd8\u662f\u6709\u5982\u4e0b\u9519\u8bef\u4fe1\u606f\uff1a  2017-01-24 09:02:18.358 xcodebuild[30385:339674] Error Domain=com.apple.platform.iphoneos Code=-12 \"Unable to launch com.apple.test.WebDriverAgentRunner-Runner\" UserInfo={NSLocalizedDescription=Unable to launch com.apple.test.WebDriverAgentRunner-Runner, NSUnderlyingError=0x7fa839cadc60 {Error Domain=DTXMessage Code=1 \"(null)\" UserInfo={DTXExceptionKey=The operation couldn\u2019t be completed. Unable to launch com.apple.test.WebDriverAgentRunner-Runner because it has an invalid code signature, inadequate entitlements or its profile has not been explicitly trusted by the user. : Failed to launch process with bundle identifier 'com.apple.test.WebDriverAgentRunner-Runner'}}}\n2017-01-24 09:02:18.358 xcodebuild[30385:339674] Error Domain=IDETestOperationsObserverErrorDomain Code=5 \"Early unexpected exit, operation never finished bootstrapping - no restart will be attempted\" UserInfo={NSLocalizedDescription=Early unexpected exit, operation never finished bootstrapping - no restart will be attempted}\n\nTesting failed:\n    Test target WebDriverAgentRunner encountered an error (Early unexpected exit, operation never finished bootstrapping - no restart will be attempted)  \u8fd9\u4e2a\u95ee\u9898\u662f\u56e0\u4e3a\u5f00\u53d1\u8005\u5728\u8fd9\u53f0\u8bbe\u5907\u4e0a\u4e0d\u88ab\u4fe1\u4efb\u3002\u5982\u679c\u4f60\u5728\u8bbe\u5907\u4e0a\u624b\u52a8\u8fd0\u884c  WebDriverAgentRunner \uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u9519\u8bef\u9875\u9762\u5f39\u51fa\u6765\uff1a   \u4f60\u53ef\u4ee5\u53bb\u8bbe\u5907\u4e2d\u7684 Settings => General => Device Management \u4fe1\u4efb\u8fd9\u4e2a\u5f00\u53d1\u8005\uff0c\u5141\u8bb8  WebDriverAgentRunner  \u8fd0\u884c (\u53c2\u8003  Apple\ndocumentation for more information ).",
            "title": "\u57fa\u672c (\u81ea\u52a8\u5316) \u914d\u7f6e"
        },
        {
            "location": "/cn/appium-setup/real-devices-ios/#_4",
            "text": "\u5f88\u591a\u60c5\u51b5\uff0c\u57fa\u672c\u7684\u81ea\u52a8\u914d\u7f6e\u6ee1\u8db3\u4e0d\u4e86\u9700\u6c42\u3002\u8fd9\u901a\u5e38\u548c\u771f\u673a\u8fd0\u884c\u4e0a\u7684\u4ee3\u7801\u7b7e\u540d\u548c\u9879\u76ee\u914d\u7f6e\u6709\u5173\u3002\u8fd9\u5e38\u5e38\u53d1\u751f\u5728\u514d\u8d39\u7684\u5f00\u53d1\u8005\u8d26\u53f7\u4e0a\uff0c\u514d\u8d39\u7684\u5f00\u53d1\u8005\u8d26\u53f7\u4e0d\u80fd\u521b\u5efa wildcard provisioning profile\uff0c\u4e5f\u4e0d\u80fd\u4e3a\u5e94\u7528\u521b\u5efa\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u3002  Xcode  \u521b\u5efa provisioning profile \u5931\u8d25  \u7684\u9519\u8bef\u5982\u4e0b\uff1a   \u6700\u5bb9\u6613\u7684\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u6253\u5f00  Xcode \u521b\u5efa\u4e00\u4e2a\u65b0\u5de5\u7a0b\uff1a   \u7c7b\u578b\u4e0d\u91cd\u8981\uff0c\u53ea\u8981\u662f \"iOS\"\u3002\u7528\u6700\u7b80\u5355\u7684 \"Single View Application\" \u5373\u53ef\uff1a   \u91cd\u8981\u7684\u5730\u65b9\u662f\u8981\u7528\u552f\u4e00\u7684 \"Product Name\" \u548c \"Organization Name\". \u7136\u540e\uff0c\u5728\u8fd9\u91cc\uff0c\u6307\u5b9a\u4f60\u7684 \"Team\"\u3002   \u4f60\u53ef\u4ee5\u5728 \"Project\" tab \u786e\u8ba4 provisioning profile \u662f\u5426\u521b\u5efa\u6210\u529f\u3002   \u6216\u8005\u53bb\u4f60\u7684\u8d26\u53f7\u9996\u9009\u9879\u91cc\u770b\u770b provisioning profile\uff1a   \u73b0\u5728\u4f60\u5c31\u6709\u4e86\u4e00\u4e2a\u6709\u6548\u7684 provisioning profile\u3002 \u8bb0\u4f4f\u4f60\u5173\u8054\u8fd9\u4e2a profile \u7684 bundle id\uff0c\u7136\u540e\u653e\u5230  updatedWDABundleId  \u8fd9\u4e2a desired capability \u91cc\u3002\u7136\u540e\u8ddf\u7740 \u524d\u9762\u7684\u81ea\u52a8\u914d\u7f6e\u6559\u7a0b \u64cd\u4f5c\u5373\u53ef\u3002",
            "title": "\u57fa\u672c (\u624b\u52a8) \u914d\u7f6e"
        },
        {
            "location": "/cn/appium-setup/real-devices-ios/#_5",
            "text": "\u53e6\u5916\uff0c\u53ef\u4ee5\u624b\u52a8\u628a provisioning profile \u548c\u9879\u76ee\u5173\u8054\u5728\u4e00\u8d77\u3002 (\u8bb0\u4f4f\u5982\u679c\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6bcf\u6b21 WebDriverAgent \u66f4\u65b0\uff0c\u90fd\u8981\u505a\u4e00\u6b21\u3002\u6240\u4ee5\u6211\u4eec\u4e0d\u63a8\u8350\u8fd9\u4e2a\u65b9\u6cd5)\uff1a   \u627e\u5230\u4f60\u7684 Appium \u7684\u5b89\u88c5\u76ee\u5f55       $ which appium\n    /path/where/installed/bin/appium   \u5047\u8bbe\u5b89\u88c5\u76ee\u5f55\u662f\uff1a  /path/where/installed/bin/appium \uff0c\u90a3\u4e48  WebDriverAgent \n    \u5728  /path/where/installed/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent \u3002\n    \u6253\u5f00\u7ec8\u7aef\u5230\u90a3\u4e2a\u76ee\u5f55\uff0c\u7136\u540e\u6309\u4ee5\u4e0b\u547d\u4ee4\u64cd\u4f5c\uff1a       mkdir -p Resources/WebDriverAgent.bundle\n    ./Scripts/bootstrap.sh -d    \u5728 Xcode \u91cc\u6253\u5f00  WebDriverAgent.xcodeproj \u3002 \u5bf9\u4e8e  WebDriverAgentLib \n    \u548c  WebDriverAgentRunner  \u4e24\u4e2a target\uff0c\u90fd\u9009\u62e9 \"General\" tab \u91cc\u7684 \"Automatically manage signing\"\n    \u7136\u540e\u9009\u62e9\u4f60\u7684  Development Team \u3002\u8fd9\u4e5f\u4f1a\u81ea\u52a8\u9009\u62e9  Signing Ceritificate \u3002\u5927\u6982\u7684\u6837\u5b50\u5982\u4e0b\uff1a    Xcode \u53ef\u80fd\u4f1a\u521b\u5efa\u4e0d\u4e86  WebDriverAgentRunner  \u7684 provisioning profile\uff1a     \u8fd9\u65f6\u5019\u9700\u8981\u5728 \"Build Settings\" tab \u91cc\u624b\u52a8\u6539 bundle id\u3002\u628a \"Product Bundle Identifier\"\n  \u4ece  com.facebook.WebDriverAgentRunner  \u6539\u6210 Xcode \u80fd\u91c7\u7528\u7684\uff1a     \u5728\u56de\u5230 \"General\" tab \u91cc\u7684  WebDriverAgentRunner  target\uff0c\u73b0\u5728\u4f60\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a provisioning profile \u521b\u5efa\u6210\u679c\u4e86:      \u6700\u540e\uff0c\u4f60\u53ef\u4ee5\u9a8c\u8bc1\u4e00\u5207\u90fd OK \u4e86\u3002 \u6784\u5efa\u8fd9\u4e2a\u9879\u76ee\uff1a        xcodebuild -project WebDriverAgent.xcodeproj -scheme WebDriverAgentRunner -destination 'id=<udid>' test  \u5982\u679c\u6210\u679c\u4e86\uff0c\u6700\u540e\u7684\u8f93\u51fa\u4f1a\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a      Test Suite 'All tests' started at 2017-01-23 15:49:12.585\n    Test Suite 'WebDriverAgentRunner.xctest' started at 2017-01-23 15:49:12.586\n    Test Suite 'UITestingUITests' started at 2017-01-23 15:49:12.587\n    Test Case '-[UITestingUITests testRunner]' started.\n        t =     0.00s     Start Test at 2017-01-23 15:49:12.588\n        t =     0.00s     Set Up   \u8981\u5b8c\u6574\u9a8c\u8bc1\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u8bd5\u8bd5\u770b\u8bbf\u95ee WebDriverAgent server \u7684\u72b6\u6001 ( \u6ce8\u610f\uff1a  \u4f60\u5fc5\u987b\u548c\u624b\u673a\u8bbe\u5907\u540c\u4e00\u4e2a\u7f51\u6bb5\uff0c\u4f60\u53ef\u4ee5\u4ece Settings => Wi-Fi => Current Network \u627e\u5230\u624b\u673a\u5f53\u524d\u7684 IP\u3002):       export DEVICE_URL='http://<device IP>:8100'\n    export JSON_HEADER='-H \"Content-Type: application/json;charset=UTF-8, accept: application/json\"'\n    curl -X GET $JSON_HEADER $DEVICE_URL/status  \u4f60\u4f1a\u5f97\u5230\u5982\u4e0b\u8f93\u51fa\uff1a      {\n      \"value\" : {\n        \"state\" : \"success\",\n        \"os\" : {\n          \"name\" : \"iOS\",\n          \"version\" : \"10.2\"\n        },\n        \"ios\" : {\n          \"simulatorVersion\" : \"10.2\",\n          \"ip\" : \"192.168.0.7\"\n        },\n        \"build\" : {\n          \"time\" : \"Jan 23 2017 14:59:57\"\n        }\n      },\n      \"sessionId\" : \"8951A6DD-F3AD-410E-A5DB-D042F42F68A7\",\n      \"status\" : 0\n    }",
            "title": "\u5168\u90e8\u624b\u52a8\u914d\u7f6e"
        },
        {
            "location": "/cn/appium-setup/real-devices/",
            "text": "Appium \u4e0a\u5bf9\u771f\u673a\u6d4b\u8bd5\u7684\u652f\u6301\n\n\nAppium \u5df2\u652f\u6301\u771f\u673a\u7684\u6d4b\u8bd5\u3002\n\n\n\n\nAndroid\n \u6d4b\u8bd5\uff0c \u53c2\u8003 \nandroid real device documentation\n\n\niOS\n \u6d4b\u8bd5\uff0c \u53c2\u8003 \niOS real device documentation",
            "title": "Real devices"
        },
        {
            "location": "/cn/appium-setup/real-devices/#appium",
            "text": "Appium \u5df2\u652f\u6301\u771f\u673a\u7684\u6d4b\u8bd5\u3002   Android  \u6d4b\u8bd5\uff0c \u53c2\u8003  android real device documentation  iOS  \u6d4b\u8bd5\uff0c \u53c2\u8003  iOS real device documentation",
            "title": "Appium \u4e0a\u5bf9\u771f\u673a\u6d4b\u8bd5\u7684\u652f\u6301"
        },
        {
            "location": "/cn/appium-setup/running-on-linux/",
            "text": "\u5728 Linux \u4e0a\u8fd0\u884c Appium\n\n\n\u5c40\u9650\u6027\n\n\n\u5982\u679c\u4f60\u8981\u5728 Linux \u4e0a\u8fd0\u884c Appium\uff0c\u662f\u4e0d\u80fd\u4f7f\u7528 '.app' \u7684\u9884\u6784\u5efa\u5305\u7684\uff0c\u56e0\u4e3a\u5b83\u53ea\u80fd\u5728 OS X \u4e0a\u8fdb\u884c\u6784\u5efa\u3002\u5176\u6b21\uff0ciOS \u7684\u5e94\u7528\u6d4b\u8bd5\u4e5f\u662f\u65e0\u6cd5\u8fdb\u884c\uff0c\u56e0\u4e3a Appium \u4e5f\u662f\u4f9d\u8d56\u5728 OS X \u4e0a\u7279\u6709\u7684\u5e93\u624d\u80fd\u652f\u6301 iOS \u7684\u6d4b\u8bd5\u3002\n\n\n\u914d\u7f6e\uff08Android\uff09\n\n\nAndroid \u4e0a\u7684\u4e00\u4e9b\u8bbe\u7f6e\uff0c\u4e0e\u5728 linux \u4e0a\u8fd0\u884c\u6d4b\u8bd5\u7684\u65b9\u5f0f\uff0c\u90fd\u662f\u8ddf Mac OS X \u4e0a\u7684\u64cd\u4f5c\u65b9\u5f0f\u662f\u76f8\u540c\u7684\u3002 \u8bf7\u67e5\u9605 \nAndroid \u8bbe\u7f6e\u6587\u6863\n.\n\n\n\u672c\u6587\u7531 \nthanksdanny\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Running on linux"
        },
        {
            "location": "/cn/appium-setup/running-on-linux/#linux-appium",
            "text": "",
            "title": "\u5728 Linux \u4e0a\u8fd0\u884c Appium"
        },
        {
            "location": "/cn/appium-setup/running-on-linux/#_1",
            "text": "\u5982\u679c\u4f60\u8981\u5728 Linux \u4e0a\u8fd0\u884c Appium\uff0c\u662f\u4e0d\u80fd\u4f7f\u7528 '.app' \u7684\u9884\u6784\u5efa\u5305\u7684\uff0c\u56e0\u4e3a\u5b83\u53ea\u80fd\u5728 OS X \u4e0a\u8fdb\u884c\u6784\u5efa\u3002\u5176\u6b21\uff0ciOS \u7684\u5e94\u7528\u6d4b\u8bd5\u4e5f\u662f\u65e0\u6cd5\u8fdb\u884c\uff0c\u56e0\u4e3a Appium \u4e5f\u662f\u4f9d\u8d56\u5728 OS X \u4e0a\u7279\u6709\u7684\u5e93\u624d\u80fd\u652f\u6301 iOS \u7684\u6d4b\u8bd5\u3002",
            "title": "\u5c40\u9650\u6027"
        },
        {
            "location": "/cn/appium-setup/running-on-linux/#android",
            "text": "Android \u4e0a\u7684\u4e00\u4e9b\u8bbe\u7f6e\uff0c\u4e0e\u5728 linux \u4e0a\u8fd0\u884c\u6d4b\u8bd5\u7684\u65b9\u5f0f\uff0c\u90fd\u662f\u8ddf Mac OS X \u4e0a\u7684\u64cd\u4f5c\u65b9\u5f0f\u662f\u76f8\u540c\u7684\u3002 \u8bf7\u67e5\u9605  Android \u8bbe\u7f6e\u6587\u6863 .  \u672c\u6587\u7531  thanksdanny  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u914d\u7f6e\uff08Android\uff09"
        },
        {
            "location": "/cn/appium-setup/running-on-osx/",
            "text": "\u5728 Mac OS Xcode \u4e0a\u8fd0\u884c Appium\n\n\n\u5728 OS X \u4e0a\uff0cAppium \u652f\u6301 iOS \u4e0e Android \u6d4b\u8bd5\u3002\n\n\n\u7cfb\u7edf\u914d\u7f6e\uff08iOS\uff09\n\n\n\n\nAppium \u8981\u6c42 Mac OS X 10.10 \u6216\u66f4\u9ad8\u7684\u7cfb\u7edf\u7248\u672c\u3002\n\n\n\u786e\u4fdd\u4f60\u5df2\u7ecf\u5b89\u88c5 Xcode \u4e0e iOS \u7684 SDK\u3002\u63a8\u8350\u4f7f\u7528 Xcode 7.1\u7248\u672c\uff0c\u56e0\u4e3a\u65e9\u671f\u7248\u672c\u7684 Xcode \u7684\u7248\u672c\u5bf9\u4e8e\u53ef\u6d4b\u8bd5\u7684 iOS \u7248\u672c\u662f\u53d7\u9650\u7684\u3002\u67e5\u770b\u4e0b\u9762\u7684\u7ae0\u8282\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002\n\n\n\u4f60\u9700\u8981\u7ed9 iOS \u6a21\u62df\u5668\u6388\u6743\u4f7f\u7528\u3002\u8bf7\u67e5\u770b\n\u4e0b\u9762\u7ae0\u8282\n\u3002\n\n\n\u5982\u679c\u4f60\u4f7f\u7528 Xcode 7.x \u53ca\u4ee5\u4e0a\u7248\u672c\uff0cInstruments Without Delay(IWD) \u5df2\u7ecf\u5931\u6548\u4e86\u3002\u4f60\u901a\u8fc7\n\u8fd9\u4e2a\u65b9\u6cd5\n\u53bb\u4f7f\u7528 IWD (\u5b83\u4f1a\u4f7f\u4f60\u7684\u6d4b\u8bd5\u901f\u5ea6\u663e\u8457\u63d0\u5347)\u3002\n\n\n\u5982\u679c\u4f60\u4f7f\u7528 Xcode 6\uff0c\u4f7f\u7528 Appium \u524d\u4f60\u5f97\u63d0\u524d\u542f\u52a8\u6a21\u62df\u5668\u3002\u5047\u5982\u4f60\u60f3\u53d1\u9001\u6587\u672c\u4fe1\u606f\uff0c\u4f60\u5f97\u6539\u53d8\u4ed6\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u53bb\u5f00\u542f\u865a\u62df\u952e\u76d8\u3002\u5f00\u542f\u952e\u76d8\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u8f93\u5165\u6846\uff0c\u6216\u4f7f\u7528\u5feb\u6377\u952e\uff08comand + K\uff09\u53bb\u8c03\u51fa\u952e\u76d8\u3002\n\n\n\u5982\u679c\u4f60\u4f7f\u7528 Xcode 6\uff0cXcode \u4e0a\u6709\u4e2a\u6a21\u5757\u53eb Devices\uff08\u5feb\u6377\u952e\uff1acomand-shift-2\uff09\u3002\u4f7f\u7528 Appium \u7684\u65f6\u5019\uff0c\u4f60\u53ea\u9700\u8981\u5728 capabilities \u4e2d\u7684 devicesName \u53c2\u6570\u586b\u4e0a\u4f60\u7684\u8bbe\u5907\u540d\u5b57\uff0c\u6bcf\u4e00\u4e2a sdk \u7248\u672c\u90fd\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u8bbe\u5907\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u5728 capabilities \u91cc\u8bbe\u7f6e\u4e86 devicesName \u4e3a \"iPhone 5s\" \u4ee5\u53ca platformVersion \u4e3a \"8.0\"\uff0c\u4f60\u5c31\u5f97\u4fdd\u8bc1\u5728\u8bbe\u5907\u5217\u8868\u91cc\uff0c\u8fd9\u662f\u552f\u4e00\u4e00\u4e2a\u4f7f\u7528 8.0 sdk \u4e14\u540d\u4e3a\"iPhone 5s\"\u7684\u8bbe\u5907\u3002\u5426\u5219\uff0cAppium \u5c31\u4e0d\u4f1a\u77e5\u9053\u4f60\u60f3\u7528\u7684\u54ea\u53f0\u8bbe\u5907\u3002\n\n\n\u5728 iOS 8\uff0c\u53ef\u4ee5\u5728\n\u8bbe\u7f6e\n\u91cc\u5f00\u542f\u6216\u8005\u5173\u95ed UIAutomation\u3002\u8be5\u8bbe\u7f6e\u5c31\u5728\u624b\u673a\u7684\u8bbe\u7f6e\u91cc\u4e00\u4e2a\u53eb\"Developer\"\u9875\u9762\u3002\u5728\u4f7f\u7528\u6a21\u62df\u5668\u6216\u8005\u771f\u673a\u53bb\u505a\u81ea\u52a8\u5316\u524d\uff0c\u4f60\u9700\u8981\u53bb\u8be5\u9875\u9762\u786e\u4fdd UIautomation \u5f00\u5173\u5df2\u7ecf\u5f00\u542f\u3002\n\n\n\n\n\u6388\u6743 iOS \u8bbe\u5907\u7ed9\u4f60\u7684\u7535\u8111\n\n\n\u4f60\u8981\u8fd0\u884c \nauthorize-ios\n \u5de5\u5177\u8fdb\u884c\u6388\u6743\uff0c\u53ef\u4ee5\u901a\u8fc7 \nnpm\n \u53bb\u5b89\u88c5\u8be5\u5de5\u5177\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\n\n\nnpm install -g authorize-ios\n\n\n\n\n\u7136\u540e\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u53bb\u8c03\u8d77\u8be5\u5de5\u5177\n\n\nsudo authorize-ios\n\n\n\n\n\u5982\u679c\u4f60\u662f\u4f7f\u7528 \nAppium.app\n\uff0c\u4f60\u53ef\u4ee5\u5728 GUI \u754c\u9762\u8fdb\u884c\u6388\u6743\u3002\n\n\n\u6bcf\u6b21\u66f4\u65b0 Xcode \u7248\u672c\u7684\u65f6\u5019\uff0c\u4f60\u90fd\u9700\u8981\u91cd\u590d\u4ee5\u4e0a\u6b65\u9aa4\u54e6\uff01\n\n\n\u4f7f\u7528\u591a\u79cd iOS SDK \u6d4b\u8bd5\n\n\nXcode 7.1 \u7248\u672c\u5141\u8bb8\u4f7f\u7528 iOS 7.1 \u4ee5\u53ca\u66f4\u9ad8\u7ea7\u7684\u7cfb\u7edf\u7248\u672c\u53bb\u505a\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002\n\n\n\u5982\u679c\u4f60\u4f7f\u7528\u591a\u4e2a Xcode \u7248\u672c\uff0c\u4f60\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u53bb\u5207\u6362\u7248\u672c\uff1a\n\n\nsudo xcode-select --switch &lt;path to required xcode&gt;\n\n\n\n\u5728 Xcode 8\uff08\u5305\u62ec iOS 10\uff09\u4e0b\u4f7f\u7528 XCUITest \u8fdb\u884c\u6d4b\u8bd5\n\n\n\u4e3a\u4e86\u5728 Xcode 8\uff08\u5176\u4e2d\u5305\u62ec\u6240\u6709 iOS 10+ \u7684\u6d4b\u8bd5\uff09\u4f7f\u7528 iOS \u771f\u673a\u505a\u81ea\u52a8\u5316\uff0c\u4f60\u8981\u5b89\u88c5 \nCarthage\n \u53bb\u505a\u4f9d\u8d56\u7ba1\u7406\uff1a\n\n\nbrew install carthage\n\n\n\n\n\u6d4b\u8bd5 Mac \u5e94\u7528\n\n\n\u76ee\u524d\u4e3a\u6b62\uff0cMac \u5bf9\u5e94\u7684 appium driver \u5728 AppiumForMac \u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u8fd8\u6ca1\u53d1\u5e03\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4f60\u60f3\u8fdb\u884c Mac \u5e94\u7528\u7684\u81ea\u52a8\u5316\uff0c\u4f60\u5c31\u5f97\u624b\u52a8\u53bb\u5b89\u88c5 AppiumForMac \u5e94\u7528\uff0c\u5e76\u4e14\u5bf9 OS X \u6388\u4e88\u53ef\u8bbf\u95ee\u6743\u9650\u3002\n\n\n\u5982\u4f55\u5b89\u88c5 Appium for Mac\uff1a\n1. \n\u4e0b\u8f7d\u8be5\u53d1\u5e03\u7248\u672c\n\uff0c\u5c06\u4ed6\u89e3\u538b\u7f29\u5230 \n/Applications\n \u6587\u4ef6\u5939\u4e2d\n2. \u67e5\u770b \n\u7b80\u8981\u8865\u5145\u5b89\u88c5\u8bf4\u660e\n\uff0c\u786e\u4fdd appium \u653e\u8bbf\u95ee\u5230 OS X \u7684 Accessibility APIs\n\n\n\u66f4\u591a\u76f8\u5173\u5982\u4f55\u4f7f\u7528 Appium for mac \u7684\u76f8\u5173\u4fe1\u606f\uff0c\u8bf7\u67e5\u9605\u8be5\n\u6587\u6863\n\u3002\n\n\n\u7cfb\u7edf\u914d\u7f6e\uff08Android\uff09\n\n\nAndroid \u7684\u8bbe\u7f6e\u64cd\u4f5c\u6307\u5357\u4e0e\u5728 Mac OS X \u4e0a\u7684\u8bbe\u7f6e\uff0c\u5927\u81f4\u4e0e Linux \u4e0a\u7684\u8bbe\u7f6e\u76f8\u4f3c\uff0c\u53ef\u4ee5\u53c2\u8003 \nAndroid \u8bbe\u7f6e\u6587\u6863\n\u3002\n\n\n\u4f7f\u7528 Jenkins \u5728 OS X \u4e0a\u8fd0\u884c iOS \u6d4b\u8bd5\n\n\n\u7b2c\u4e00\u6b65\u5c31\u662f\u4e0b\u8f7d jenkins-cli.jar\uff0c\u4ee5\u53ca\u9a8c\u8bc1\u4f60\u7684 Mac \u662f\u5426\u6210\u529f\u7684\u8fde\u63a5\u4e0a Jenkins \u4e3b\u673a\u3002\u786e\u4fdd\u5df2\u7ecf\u8fd0\u884c\u4e86 \nauthorize-ios\n \u7b49\u76f8\u5173\u7684\u547d\u4ee4\u3002\n\n\nwget https://jenkins.ci.cloudbees.com/jnlpJars/jenkins-cli.jar\n\n\njava -jar jenkins-cli.jar \\\n -s https://team-appium.ci.cloudbees.com \\\n -i ~/.ssh/id_rsa \\\n on-premise-executor \\\n -fsroot ~/jenkins \\\n -labels osx \\\n -name mac_appium\n ```\n\n\u63a5\u4e0b\u6765\u4e3a\u4e86\u5728\u767b\u5f55\u7684\u65f6\u5019\u53ef\u4ee5\u81ea\u52a8\u542f\u52a8\uff0c\u5b9a\u4e49\u4e00\u4e2a Jenkins \u7684 LaunchAgent\u3002LaunchDaemon \u5c06\u4f1a\u505c\u6b62\u5de5\u4f5c\uff0c\u56e0\u4e3a deamons \u6ca1\u6709\u83b7\u53d6 GUI \u7684\u8bbf\u95ee\u6743\u9650\u3002\u786e\u4fdd plist \u6587\u4ef6\u4e0d\u4f1a\u5305\u542b`SessionCreate` \u6216 `User` \u8fd9\u4e24\u4e2a\u952e\u503c\uff0c\u5c31\u9632\u6b62\u6d4b\u8bd5\u5728\u8fd0\u884c\u65f6\u542f\u52a8\u3002\u5982\u679c\u6f0f\u4e86\u914d\u7f6e\uff0c\u4f60\u4f1a\u770b\u5230\u8be5\u62a5\u9519\uff1a `Failed to authorize rights`\u3002\n\n\n\n\n\n\n$ sudo nano /Library/LaunchAgents/com.jenkins.ci.plist\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n\n\n\n\n    \nLabel\n\n    \ncom.jenkins.ci\n\n    \nProgramArguments\n\n    \n\n        \njava\n\n        \n-Djava.awt.headless=true\n\n        \n-jar\n\n        \n/Users/appium/jenkins/jenkins-cli.jar\n\n        \n-s\n\n        \nhttps://instructure.ci.cloudbees.com\n\n        \non-premise-executor\n\n        \n-fsroot\n\n        \n/Users/appium/jenkins\n\n        \n-executors\n\n        \n1\n\n        \n-labels\n\n        \nmac\n\n        \n-name\n\n        \nmac_appium\n\n        \n-persistent\n\n    \n\n    \nKeepAlive\n\n    \n\n    \nStandardOutPath\n\n    \n/Users/appium/jenkins/stdout.log\n\n    \nStandardErrorPath\n\n    \n/Users/appium/jenkins/error.log\n\n\n\n\n\n\n\n\u6700\u540e\u8bbe\u7f6e owner\uff0c\u6743\u9650\uff0c\u518d\u5f00\u542f\u4ee3\u7406\u3002\n\n\n\n\n\nsudo chown root:wheel /Library/LaunchAgents/com.jenkins.ci.plist\nsudo chmod 644 /Library/LaunchAgents/com.jenkins.ci.plist\n\n\nlaunchctl load /Library/LaunchAgents/com.jenkins.ci.plist\nlaunchctl start com.jenkins.ci\n\n\n\n### \u8fd0\u884c iOS \u6d4b\u8bd5\u65f6\u751f\u6210\u7684\u6587\u4ef6\n\n\u6d4b\u8bd5 iOS \u7684\u8fc7\u7a0b\u4e2d\u751f\u6210\u7684\u6587\u4ef6\u6709\u65f6\u53ef\u80fd\u4f1a\u8fc7\u5927\u3002\u8fd9\u4e9b\u6587\u4ef6\u5305\u542b\u65e5\u5fd7\uff0c\u4e34\u65f6\u6587\u4ef6\uff0c\u8fd8\u6709 Xcode \u8fd0\u884c\u65f6\u4ea7\u751f\u7684\u6570\u636e\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4e0b\u9762\u7684\u8fd9\u4e9b\u5730\u5740\u90fd\u662f\u8fd9\u4e9b\u6587\u4ef6\u4fdd\u5b58\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u5220\u9664\u4ed6\u4eec\u8282\u7701\u7a7a\u95f4\uff1a\n\n\n\n\n\n$HOME/Library/Logs/CoreSimulator/*\n\n\n\n\u57fa\u4e8e Instruments \u7684\u6d4b\u8bd5 (iOS \u4e0d\u662f\u4f7f\u7528 `XCUITest` \u4f5c\u4e3a `automationName`):\n\n\n\n\n\n/Library/Caches/com.apple.dt.instruments/*\n\n\n\n\u57fa\u4e8e XCUITest \u7684\u6d4b\u8bd5\uff1a\n\n\n\n\n\n$HOME/Library/Developer/Xcode/DerivedData/*\n```\n\n\n\u672c\u6587\u7531 \nthanksdanny\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Running on osx"
        },
        {
            "location": "/cn/appium-setup/running-on-osx/#mac-os-xcode-appium",
            "text": "\u5728 OS X \u4e0a\uff0cAppium \u652f\u6301 iOS \u4e0e Android \u6d4b\u8bd5\u3002",
            "title": "\u5728 Mac OS Xcode \u4e0a\u8fd0\u884c Appium"
        },
        {
            "location": "/cn/appium-setup/running-on-osx/#ios",
            "text": "Appium \u8981\u6c42 Mac OS X 10.10 \u6216\u66f4\u9ad8\u7684\u7cfb\u7edf\u7248\u672c\u3002  \u786e\u4fdd\u4f60\u5df2\u7ecf\u5b89\u88c5 Xcode \u4e0e iOS \u7684 SDK\u3002\u63a8\u8350\u4f7f\u7528 Xcode 7.1\u7248\u672c\uff0c\u56e0\u4e3a\u65e9\u671f\u7248\u672c\u7684 Xcode \u7684\u7248\u672c\u5bf9\u4e8e\u53ef\u6d4b\u8bd5\u7684 iOS \u7248\u672c\u662f\u53d7\u9650\u7684\u3002\u67e5\u770b\u4e0b\u9762\u7684\u7ae0\u8282\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u3002  \u4f60\u9700\u8981\u7ed9 iOS \u6a21\u62df\u5668\u6388\u6743\u4f7f\u7528\u3002\u8bf7\u67e5\u770b \u4e0b\u9762\u7ae0\u8282 \u3002  \u5982\u679c\u4f60\u4f7f\u7528 Xcode 7.x \u53ca\u4ee5\u4e0a\u7248\u672c\uff0cInstruments Without Delay(IWD) \u5df2\u7ecf\u5931\u6548\u4e86\u3002\u4f60\u901a\u8fc7 \u8fd9\u4e2a\u65b9\u6cd5 \u53bb\u4f7f\u7528 IWD (\u5b83\u4f1a\u4f7f\u4f60\u7684\u6d4b\u8bd5\u901f\u5ea6\u663e\u8457\u63d0\u5347)\u3002  \u5982\u679c\u4f60\u4f7f\u7528 Xcode 6\uff0c\u4f7f\u7528 Appium \u524d\u4f60\u5f97\u63d0\u524d\u542f\u52a8\u6a21\u62df\u5668\u3002\u5047\u5982\u4f60\u60f3\u53d1\u9001\u6587\u672c\u4fe1\u606f\uff0c\u4f60\u5f97\u6539\u53d8\u4ed6\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u53bb\u5f00\u542f\u865a\u62df\u952e\u76d8\u3002\u5f00\u542f\u952e\u76d8\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u8f93\u5165\u6846\uff0c\u6216\u4f7f\u7528\u5feb\u6377\u952e\uff08comand + K\uff09\u53bb\u8c03\u51fa\u952e\u76d8\u3002  \u5982\u679c\u4f60\u4f7f\u7528 Xcode 6\uff0cXcode \u4e0a\u6709\u4e2a\u6a21\u5757\u53eb Devices\uff08\u5feb\u6377\u952e\uff1acomand-shift-2\uff09\u3002\u4f7f\u7528 Appium \u7684\u65f6\u5019\uff0c\u4f60\u53ea\u9700\u8981\u5728 capabilities \u4e2d\u7684 devicesName \u53c2\u6570\u586b\u4e0a\u4f60\u7684\u8bbe\u5907\u540d\u5b57\uff0c\u6bcf\u4e00\u4e2a sdk \u7248\u672c\u90fd\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u8bbe\u5907\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u5728 capabilities \u91cc\u8bbe\u7f6e\u4e86 devicesName \u4e3a \"iPhone 5s\" \u4ee5\u53ca platformVersion \u4e3a \"8.0\"\uff0c\u4f60\u5c31\u5f97\u4fdd\u8bc1\u5728\u8bbe\u5907\u5217\u8868\u91cc\uff0c\u8fd9\u662f\u552f\u4e00\u4e00\u4e2a\u4f7f\u7528 8.0 sdk \u4e14\u540d\u4e3a\"iPhone 5s\"\u7684\u8bbe\u5907\u3002\u5426\u5219\uff0cAppium \u5c31\u4e0d\u4f1a\u77e5\u9053\u4f60\u60f3\u7528\u7684\u54ea\u53f0\u8bbe\u5907\u3002  \u5728 iOS 8\uff0c\u53ef\u4ee5\u5728 \u8bbe\u7f6e \u91cc\u5f00\u542f\u6216\u8005\u5173\u95ed UIAutomation\u3002\u8be5\u8bbe\u7f6e\u5c31\u5728\u624b\u673a\u7684\u8bbe\u7f6e\u91cc\u4e00\u4e2a\u53eb\"Developer\"\u9875\u9762\u3002\u5728\u4f7f\u7528\u6a21\u62df\u5668\u6216\u8005\u771f\u673a\u53bb\u505a\u81ea\u52a8\u5316\u524d\uff0c\u4f60\u9700\u8981\u53bb\u8be5\u9875\u9762\u786e\u4fdd UIautomation \u5f00\u5173\u5df2\u7ecf\u5f00\u542f\u3002",
            "title": "\u7cfb\u7edf\u914d\u7f6e\uff08iOS\uff09"
        },
        {
            "location": "/cn/appium-setup/running-on-osx/#ios_1",
            "text": "\u4f60\u8981\u8fd0\u884c  authorize-ios  \u5de5\u5177\u8fdb\u884c\u6388\u6743\uff0c\u53ef\u4ee5\u901a\u8fc7  npm  \u53bb\u5b89\u88c5\u8be5\u5de5\u5177\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5  npm install -g authorize-ios  \u7136\u540e\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u53bb\u8c03\u8d77\u8be5\u5de5\u5177  sudo authorize-ios  \u5982\u679c\u4f60\u662f\u4f7f\u7528  Appium.app \uff0c\u4f60\u53ef\u4ee5\u5728 GUI \u754c\u9762\u8fdb\u884c\u6388\u6743\u3002  \u6bcf\u6b21\u66f4\u65b0 Xcode \u7248\u672c\u7684\u65f6\u5019\uff0c\u4f60\u90fd\u9700\u8981\u91cd\u590d\u4ee5\u4e0a\u6b65\u9aa4\u54e6\uff01",
            "title": "\u6388\u6743 iOS \u8bbe\u5907\u7ed9\u4f60\u7684\u7535\u8111"
        },
        {
            "location": "/cn/appium-setup/running-on-osx/#ios-sdk",
            "text": "Xcode 7.1 \u7248\u672c\u5141\u8bb8\u4f7f\u7528 iOS 7.1 \u4ee5\u53ca\u66f4\u9ad8\u7ea7\u7684\u7cfb\u7edf\u7248\u672c\u53bb\u505a\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002  \u5982\u679c\u4f60\u4f7f\u7528\u591a\u4e2a Xcode \u7248\u672c\uff0c\u4f60\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u53bb\u5207\u6362\u7248\u672c\uff1a  sudo xcode-select --switch &lt;path to required xcode&gt;",
            "title": "\u4f7f\u7528\u591a\u79cd iOS SDK \u6d4b\u8bd5"
        },
        {
            "location": "/cn/appium-setup/running-on-osx/#xcode-8-ios-10-xcuitest",
            "text": "\u4e3a\u4e86\u5728 Xcode 8\uff08\u5176\u4e2d\u5305\u62ec\u6240\u6709 iOS 10+ \u7684\u6d4b\u8bd5\uff09\u4f7f\u7528 iOS \u771f\u673a\u505a\u81ea\u52a8\u5316\uff0c\u4f60\u8981\u5b89\u88c5  Carthage  \u53bb\u505a\u4f9d\u8d56\u7ba1\u7406\uff1a  brew install carthage",
            "title": "\u5728 Xcode 8\uff08\u5305\u62ec iOS 10\uff09\u4e0b\u4f7f\u7528 XCUITest \u8fdb\u884c\u6d4b\u8bd5"
        },
        {
            "location": "/cn/appium-setup/running-on-osx/#mac",
            "text": "\u76ee\u524d\u4e3a\u6b62\uff0cMac \u5bf9\u5e94\u7684 appium driver \u5728 AppiumForMac \u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u8fd8\u6ca1\u53d1\u5e03\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4f60\u60f3\u8fdb\u884c Mac \u5e94\u7528\u7684\u81ea\u52a8\u5316\uff0c\u4f60\u5c31\u5f97\u624b\u52a8\u53bb\u5b89\u88c5 AppiumForMac \u5e94\u7528\uff0c\u5e76\u4e14\u5bf9 OS X \u6388\u4e88\u53ef\u8bbf\u95ee\u6743\u9650\u3002  \u5982\u4f55\u5b89\u88c5 Appium for Mac\uff1a\n1.  \u4e0b\u8f7d\u8be5\u53d1\u5e03\u7248\u672c \uff0c\u5c06\u4ed6\u89e3\u538b\u7f29\u5230  /Applications  \u6587\u4ef6\u5939\u4e2d\n2. \u67e5\u770b  \u7b80\u8981\u8865\u5145\u5b89\u88c5\u8bf4\u660e \uff0c\u786e\u4fdd appium \u653e\u8bbf\u95ee\u5230 OS X \u7684 Accessibility APIs  \u66f4\u591a\u76f8\u5173\u5982\u4f55\u4f7f\u7528 Appium for mac \u7684\u76f8\u5173\u4fe1\u606f\uff0c\u8bf7\u67e5\u9605\u8be5 \u6587\u6863 \u3002",
            "title": "\u6d4b\u8bd5 Mac \u5e94\u7528"
        },
        {
            "location": "/cn/appium-setup/running-on-osx/#android",
            "text": "Android \u7684\u8bbe\u7f6e\u64cd\u4f5c\u6307\u5357\u4e0e\u5728 Mac OS X \u4e0a\u7684\u8bbe\u7f6e\uff0c\u5927\u81f4\u4e0e Linux \u4e0a\u7684\u8bbe\u7f6e\u76f8\u4f3c\uff0c\u53ef\u4ee5\u53c2\u8003  Android \u8bbe\u7f6e\u6587\u6863 \u3002",
            "title": "\u7cfb\u7edf\u914d\u7f6e\uff08Android\uff09"
        },
        {
            "location": "/cn/appium-setup/running-on-osx/#jenkins-os-x-ios",
            "text": "\u7b2c\u4e00\u6b65\u5c31\u662f\u4e0b\u8f7d jenkins-cli.jar\uff0c\u4ee5\u53ca\u9a8c\u8bc1\u4f60\u7684 Mac \u662f\u5426\u6210\u529f\u7684\u8fde\u63a5\u4e0a Jenkins \u4e3b\u673a\u3002\u786e\u4fdd\u5df2\u7ecf\u8fd0\u884c\u4e86  authorize-ios  \u7b49\u76f8\u5173\u7684\u547d\u4ee4\u3002  wget https://jenkins.ci.cloudbees.com/jnlpJars/jenkins-cli.jar  java -jar jenkins-cli.jar \\\n -s https://team-appium.ci.cloudbees.com \\\n -i ~/.ssh/id_rsa \\\n on-premise-executor \\\n -fsroot ~/jenkins \\\n -labels osx \\\n -name mac_appium\n ```\n\n\u63a5\u4e0b\u6765\u4e3a\u4e86\u5728\u767b\u5f55\u7684\u65f6\u5019\u53ef\u4ee5\u81ea\u52a8\u542f\u52a8\uff0c\u5b9a\u4e49\u4e00\u4e2a Jenkins \u7684 LaunchAgent\u3002LaunchDaemon \u5c06\u4f1a\u505c\u6b62\u5de5\u4f5c\uff0c\u56e0\u4e3a deamons \u6ca1\u6709\u83b7\u53d6 GUI \u7684\u8bbf\u95ee\u6743\u9650\u3002\u786e\u4fdd plist \u6587\u4ef6\u4e0d\u4f1a\u5305\u542b`SessionCreate` \u6216 `User` \u8fd9\u4e24\u4e2a\u952e\u503c\uff0c\u5c31\u9632\u6b62\u6d4b\u8bd5\u5728\u8fd0\u884c\u65f6\u542f\u52a8\u3002\u5982\u679c\u6f0f\u4e86\u914d\u7f6e\uff0c\u4f60\u4f1a\u770b\u5230\u8be5\u62a5\u9519\uff1a `Failed to authorize rights`\u3002  $ sudo nano /Library/LaunchAgents/com.jenkins.ci.plist\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">  \n     Label \n     com.jenkins.ci \n     ProgramArguments \n     \n         java \n         -Djava.awt.headless=true \n         -jar \n         /Users/appium/jenkins/jenkins-cli.jar \n         -s \n         https://instructure.ci.cloudbees.com \n         on-premise-executor \n         -fsroot \n         /Users/appium/jenkins \n         -executors \n         1 \n         -labels \n         mac \n         -name \n         mac_appium \n         -persistent \n     \n     KeepAlive \n     \n     StandardOutPath \n     /Users/appium/jenkins/stdout.log \n     StandardErrorPath \n     /Users/appium/jenkins/error.log    \n\u6700\u540e\u8bbe\u7f6e owner\uff0c\u6743\u9650\uff0c\u518d\u5f00\u542f\u4ee3\u7406\u3002  sudo chown root:wheel /Library/LaunchAgents/com.jenkins.ci.plist\nsudo chmod 644 /Library/LaunchAgents/com.jenkins.ci.plist  launchctl load /Library/LaunchAgents/com.jenkins.ci.plist\nlaunchctl start com.jenkins.ci  \n### \u8fd0\u884c iOS \u6d4b\u8bd5\u65f6\u751f\u6210\u7684\u6587\u4ef6\n\n\u6d4b\u8bd5 iOS \u7684\u8fc7\u7a0b\u4e2d\u751f\u6210\u7684\u6587\u4ef6\u6709\u65f6\u53ef\u80fd\u4f1a\u8fc7\u5927\u3002\u8fd9\u4e9b\u6587\u4ef6\u5305\u542b\u65e5\u5fd7\uff0c\u4e34\u65f6\u6587\u4ef6\uff0c\u8fd8\u6709 Xcode \u8fd0\u884c\u65f6\u4ea7\u751f\u7684\u6570\u636e\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4e0b\u9762\u7684\u8fd9\u4e9b\u5730\u5740\u90fd\u662f\u8fd9\u4e9b\u6587\u4ef6\u4fdd\u5b58\u7684\u5730\u65b9\uff0c\u53ef\u4ee5\u5220\u9664\u4ed6\u4eec\u8282\u7701\u7a7a\u95f4\uff1a  $HOME/Library/Logs/CoreSimulator/*  \n\u57fa\u4e8e Instruments \u7684\u6d4b\u8bd5 (iOS \u4e0d\u662f\u4f7f\u7528 `XCUITest` \u4f5c\u4e3a `automationName`):  /Library/Caches/com.apple.dt.instruments/*  \n\u57fa\u4e8e XCUITest \u7684\u6d4b\u8bd5\uff1a  $HOME/Library/Developer/Xcode/DerivedData/*\n```  \u672c\u6587\u7531  thanksdanny  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u4f7f\u7528 Jenkins \u5728 OS X \u4e0a\u8fd0\u884c iOS \u6d4b\u8bd5"
        },
        {
            "location": "/cn/appium-setup/running-on-windows/",
            "text": "Windows \u8bbe\u7f6e\n\n\n\u5728 Windows \u4e0a\uff0cAppium \u652f\u6301 Windows \u4e0e Android \u5e94\u7528\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\uff01\n\n\n\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u9605 \nWindows \u5e94\u7528\u6d4b\u8bd5\n\u3002\n\n\n\u5728 Windows \u4e0a\u8fd0\u884c Appium\n\n\n\u914d\u7f6e\n\n\n\u5f00\u59cb\u5b89\u88c5\uff1a\n\n\n\n\n\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684 \nnode \u4e0e npm \u5de5\u5177\n \u7684 MSI (\u7248\u672c >= 6.0)  \nnpm\n \u548c \nnodejs\n \u4e24\u4e2a\u547d\u4ee4\u5e94\u8be5\u5728\u4f60\u7684 PATH \u7cfb\u7edf\u53d8\u91cf\u91cc\u3002\n\n\n\u6253\u5f00\u4f60\u7684 cmd \u7ec8\u7aef\n\n\n\u8fd0\u884c \nnpm install -g appium\n \u8fd9\u6761\u547d\u4ee4\u540e\uff0c\u5c31\u4f1a\u901a\u8fc7 NPM \u53bb\u5b89\u88c5 Appium\u3002\n\n\n\u5728\u547d\u4ee4\u884c\u7b80\u5355\u5730\u8f93\u5165 \nappium\n \u5c31\u53ef\u4ee5\u5feb\u901f\u5f00\u542f Appium\u3002\n\n\n\u6309\u7167\u4e0b\u9762\u7684\u53ea\u662f\u53bb\u8bbe\u7f6e Android \u6216\u8005 Windows \u5e94\u7528\u7684\u6d4b\u8bd5\u3002\n\n\n\u4f7f\u7528\u4efb\u610f Appium \u5ba2\u6237\u7aef\u53bb\u8fd0\u884c\u4e00\u4e2a\u6d4b\u8bd5\u3002\n\n\n\n\nAndroid \u5e94\u7528\u6d4b\u8bd5\u7684\u4e00\u4e9b\u989d\u5916\u914d\u7f6e\n\n\n\n\n\u4e0b\u8f7d\u6700\u65b0\u7248\u7684 Java JDK\n\u8fd9\u91cc\n\uff08\u8bb0\u5f97\u5148\u63a5\u53d7\u534f\u8bae\u7684\u8bb8\u53ef\uff09\u3002\u8bbe\u7f6e 'JAVA_HOME' \u4e3a\u4f60\u7684 JDK \u8def\u5f84\u3002\u76ee\u5f55\u4e0b\u7684 \nbin\n \u6587\u4ef6\u5939\u5e94\u8be5\u6dfb\u52a0\u5230\u4f60\u7684 PATH \u53d8\u91cf\u4e2d\u3002 \n\n\n\u5b89\u88c5 \nAndroid SDK\n\u3002\u5c06\u73af\u5883\u53d8\u91cf\nANDROID_HOME\n\u8bbe\u7f6e\u4e3a\u4f60\u7684 Android SDK \u8def\u5f84\uff0c\u5e76\u4e14\u5c06 \ntools\n \u548c \nplatform-tools\n \u8fd9\u4e24\u4e2a\u6587\u4ef6\u5939\u6dfb\u52a0\u5230\u4f60\u7684 PATH \u53d8\u91cf\u4e2d\u53bb\u3002\n\n\n\u5b89\u88c5 \nApache Ant\n \u6216\u4f7f\u7528 eclipse \u63d2\u4ef6\u76ee\u5f55\u4e2d\u7684 Android Windows SDK\u3002\u786e\u4fdd\u6dfb\u52a0\u7684\u6587\u4ef6\u5939\u5305\u542b Ant \u5728\u4f60\u7684 PATH \u53d8\u91cf\u4e2d\u3002\n\n\n\u5b89\u88c5 \nApache Maven\n \uff0c\u5e76\u8bbe\u7f6e M2HOME \u4e0e M2 \u7684\u73af\u5883\u53d8\u91cf\u3002\u8bbe\u7f6e \nM2_HOME\n \u4e3a maven \u6240\u5728\u7684\u5b89\u88c5\u8def\u5f84\uff0c\u8bbe\u7f6e \nM2\n \u4e3a \nbin\n \u76ee\u5f55\u7684\u8def\u5f84\u3002\u5c06 \nM2\n \u8def\u5f84\u6dfb\u52a0\u5230\u4f60\u7684 PATH \u53d8\u91cf\u4e2d\u3002\n\n\n\u5728 Windows \u4e0a\u8fd0\u884c\u6d4b\u8bd5\uff0c\u4f60\u9700\u8981\u542f\u52a8 Android \u7684\u865a\u62df\u673a\u6216\u8005\u4e00\u53f0\u5df2\u7ecf\u8fde\u63a5\u7535\u8111\u7684 Android \u771f\u673a\uff0c\u5e76\u4e14 AVD \u8981\u6c42 API Level 17 \u6216\u66f4\u9ad8\u7248\u672c\uff0c\u624d\u80fd\u5728\u547d\u4ee4\u884c\u4e2d\u8fd0\u884c Appium(\u901a\u8fc7 \nappium\n \u547d\u4ee4)\n\n\n\u4f60\u7684\u6d4b\u8bd5\u811a\u672c\u5e94\u8be5\u786e\u4fdd \nplatformVersion\n \u53c2\u6570\u662f\u4e0e\u4f60\u7684\u6a21\u62df\u5668\u6216\u8005\u6a21\u62df\u5668\u7684\u7248\u672c\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u4ee5\u53ca\napp\n\u53c2\u6570\u662f\u4f60\u7684\u9700\u8981\u6d4b\u8bd5\u7684\u5e94\u7528\u7684\u7edd\u5bf9\u8def\u5f84\u3002\n\n\n\n\nWindows \u5e94\u7528\u6d4b\u8bd5\u7684\u989d\u5916\u914d\u7f6e\n\n\n\n\n\u6d4b\u8bd5 Windows \u5e94\u7528\uff0c\u6700\u57fa\u672c\u7684\u8981\u6c42\u5c31\u662f\u8981\u6253\u5f00 \n\u5f00\u53d1\u8005\u6a21\u5f0f\n\u3002\n\n\n\n\n\uff08\u67e5\u770b\nWindows app testing\n\uff0c\u4e86\u89e3\u66f4\u591a\u6d4b\u8bd5 Windows \u5e94\u7528\u6d4b\u8bd5\u7684\u8bf4\u660e\uff09\n\n\n\u8fd0\u884c Appium\n\n\n\u67e5\u770b \nserver documentation\n \u53ef\u4ee5\u67e5\u770b\u6240\u6709\u7684\u547d\u4ee4\u53c2\u6570\u3002\n\n\n\n\n\u5728 Windows \u4e0a\u8fd0\u884c Appium.exe \u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\uff0c\u6216\u8005\u5f53\u4f60\u4ee5\u6e90\u7801\u65b9\u5f0f\u8fd0\u884c\uff0c\u4f60\u8981\u5728 cmd \u8fd0\u884c\u65f6\u6709\u7ba1\u7406\u5458\u6743\u9650\u3002\n\n\n\u5728 Windows \u4e0a\u8fd0\u884c Andoid \u6d4b\u8bd5\u65f6\uff0c\u52a1\u5fc5\u8bb0\u5f97\u6dfb\u52a0\u4e0a\n--no-reset\n \u6216 \n--full-reset\n \u53c2\u6570\u3002 \n\n\nAndroid \u6709\u786c\u4ef6\u52a0\u901f\u4eff\u771f\u5668\uff1b\u4f46\u4ed6\u4e5f\u662f\u6709\u9650\u5236\u7684\uff0c\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u9605\u8be5\n\u6587\u7ae0\n.\n\n\n\n\n\u672c\u6587\u7531 \nthanksdanny\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Running on windows"
        },
        {
            "location": "/cn/appium-setup/running-on-windows/#windows",
            "text": "\u5728 Windows \u4e0a\uff0cAppium \u652f\u6301 Windows \u4e0e Android \u5e94\u7528\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\uff01  \u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u9605  Windows \u5e94\u7528\u6d4b\u8bd5 \u3002",
            "title": "Windows \u8bbe\u7f6e"
        },
        {
            "location": "/cn/appium-setup/running-on-windows/#windows-appium",
            "text": "",
            "title": "\u5728 Windows \u4e0a\u8fd0\u884c Appium"
        },
        {
            "location": "/cn/appium-setup/running-on-windows/#_1",
            "text": "\u5f00\u59cb\u5b89\u88c5\uff1a   \u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684  node \u4e0e npm \u5de5\u5177  \u7684 MSI (\u7248\u672c >= 6.0)   npm  \u548c  nodejs  \u4e24\u4e2a\u547d\u4ee4\u5e94\u8be5\u5728\u4f60\u7684 PATH \u7cfb\u7edf\u53d8\u91cf\u91cc\u3002  \u6253\u5f00\u4f60\u7684 cmd \u7ec8\u7aef  \u8fd0\u884c  npm install -g appium  \u8fd9\u6761\u547d\u4ee4\u540e\uff0c\u5c31\u4f1a\u901a\u8fc7 NPM \u53bb\u5b89\u88c5 Appium\u3002  \u5728\u547d\u4ee4\u884c\u7b80\u5355\u5730\u8f93\u5165  appium  \u5c31\u53ef\u4ee5\u5feb\u901f\u5f00\u542f Appium\u3002  \u6309\u7167\u4e0b\u9762\u7684\u53ea\u662f\u53bb\u8bbe\u7f6e Android \u6216\u8005 Windows \u5e94\u7528\u7684\u6d4b\u8bd5\u3002  \u4f7f\u7528\u4efb\u610f Appium \u5ba2\u6237\u7aef\u53bb\u8fd0\u884c\u4e00\u4e2a\u6d4b\u8bd5\u3002",
            "title": "\u914d\u7f6e"
        },
        {
            "location": "/cn/appium-setup/running-on-windows/#android",
            "text": "\u4e0b\u8f7d\u6700\u65b0\u7248\u7684 Java JDK \u8fd9\u91cc \uff08\u8bb0\u5f97\u5148\u63a5\u53d7\u534f\u8bae\u7684\u8bb8\u53ef\uff09\u3002\u8bbe\u7f6e 'JAVA_HOME' \u4e3a\u4f60\u7684 JDK \u8def\u5f84\u3002\u76ee\u5f55\u4e0b\u7684  bin  \u6587\u4ef6\u5939\u5e94\u8be5\u6dfb\u52a0\u5230\u4f60\u7684 PATH \u53d8\u91cf\u4e2d\u3002   \u5b89\u88c5  Android SDK \u3002\u5c06\u73af\u5883\u53d8\u91cf ANDROID_HOME \u8bbe\u7f6e\u4e3a\u4f60\u7684 Android SDK \u8def\u5f84\uff0c\u5e76\u4e14\u5c06  tools  \u548c  platform-tools  \u8fd9\u4e24\u4e2a\u6587\u4ef6\u5939\u6dfb\u52a0\u5230\u4f60\u7684 PATH \u53d8\u91cf\u4e2d\u53bb\u3002  \u5b89\u88c5  Apache Ant  \u6216\u4f7f\u7528 eclipse \u63d2\u4ef6\u76ee\u5f55\u4e2d\u7684 Android Windows SDK\u3002\u786e\u4fdd\u6dfb\u52a0\u7684\u6587\u4ef6\u5939\u5305\u542b Ant \u5728\u4f60\u7684 PATH \u53d8\u91cf\u4e2d\u3002  \u5b89\u88c5  Apache Maven  \uff0c\u5e76\u8bbe\u7f6e M2HOME \u4e0e M2 \u7684\u73af\u5883\u53d8\u91cf\u3002\u8bbe\u7f6e  M2_HOME  \u4e3a maven \u6240\u5728\u7684\u5b89\u88c5\u8def\u5f84\uff0c\u8bbe\u7f6e  M2  \u4e3a  bin  \u76ee\u5f55\u7684\u8def\u5f84\u3002\u5c06  M2  \u8def\u5f84\u6dfb\u52a0\u5230\u4f60\u7684 PATH \u53d8\u91cf\u4e2d\u3002  \u5728 Windows \u4e0a\u8fd0\u884c\u6d4b\u8bd5\uff0c\u4f60\u9700\u8981\u542f\u52a8 Android \u7684\u865a\u62df\u673a\u6216\u8005\u4e00\u53f0\u5df2\u7ecf\u8fde\u63a5\u7535\u8111\u7684 Android \u771f\u673a\uff0c\u5e76\u4e14 AVD \u8981\u6c42 API Level 17 \u6216\u66f4\u9ad8\u7248\u672c\uff0c\u624d\u80fd\u5728\u547d\u4ee4\u884c\u4e2d\u8fd0\u884c Appium(\u901a\u8fc7  appium  \u547d\u4ee4)  \u4f60\u7684\u6d4b\u8bd5\u811a\u672c\u5e94\u8be5\u786e\u4fdd  platformVersion  \u53c2\u6570\u662f\u4e0e\u4f60\u7684\u6a21\u62df\u5668\u6216\u8005\u6a21\u62df\u5668\u7684\u7248\u672c\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u4ee5\u53ca app \u53c2\u6570\u662f\u4f60\u7684\u9700\u8981\u6d4b\u8bd5\u7684\u5e94\u7528\u7684\u7edd\u5bf9\u8def\u5f84\u3002",
            "title": "Android \u5e94\u7528\u6d4b\u8bd5\u7684\u4e00\u4e9b\u989d\u5916\u914d\u7f6e"
        },
        {
            "location": "/cn/appium-setup/running-on-windows/#windows_1",
            "text": "\u6d4b\u8bd5 Windows \u5e94\u7528\uff0c\u6700\u57fa\u672c\u7684\u8981\u6c42\u5c31\u662f\u8981\u6253\u5f00  \u5f00\u53d1\u8005\u6a21\u5f0f \u3002   \uff08\u67e5\u770b Windows app testing \uff0c\u4e86\u89e3\u66f4\u591a\u6d4b\u8bd5 Windows \u5e94\u7528\u6d4b\u8bd5\u7684\u8bf4\u660e\uff09",
            "title": "Windows \u5e94\u7528\u6d4b\u8bd5\u7684\u989d\u5916\u914d\u7f6e"
        },
        {
            "location": "/cn/appium-setup/running-on-windows/#appium",
            "text": "\u67e5\u770b  server documentation  \u53ef\u4ee5\u67e5\u770b\u6240\u6709\u7684\u547d\u4ee4\u53c2\u6570\u3002   \u5728 Windows \u4e0a\u8fd0\u884c Appium.exe \u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\uff0c\u6216\u8005\u5f53\u4f60\u4ee5\u6e90\u7801\u65b9\u5f0f\u8fd0\u884c\uff0c\u4f60\u8981\u5728 cmd \u8fd0\u884c\u65f6\u6709\u7ba1\u7406\u5458\u6743\u9650\u3002  \u5728 Windows \u4e0a\u8fd0\u884c Andoid \u6d4b\u8bd5\u65f6\uff0c\u52a1\u5fc5\u8bb0\u5f97\u6dfb\u52a0\u4e0a --no-reset  \u6216  --full-reset  \u53c2\u6570\u3002   Android \u6709\u786c\u4ef6\u52a0\u901f\u4eff\u771f\u5668\uff1b\u4f46\u4ed6\u4e5f\u662f\u6709\u9650\u5236\u7684\uff0c\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u9605\u8be5 \u6587\u7ae0 .   \u672c\u6587\u7531  thanksdanny  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u8fd0\u884c Appium"
        },
        {
            "location": "/cn/appium-setup/troubleshooting/",
            "text": "Appium \u7684\u6545\u969c\u6392\u67e5\n\n\n\u5f53\u4f60\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u95ee\u9898\uff0c\u5148\u522b\u6025\u7740\u5230 github \u4e0a\u63d0\u4ea4\u53cd\u9988\uff0c\u6216\u8005\u5230 \nappium-discuss discussion group\n \u63d0\u95ee\u3002\u53ef\u4ee5\u5148\u8bd5\u8bd5\u5728\u672c\u6587\u4e2d\u80fd\u5426\u627e\u5230\u89e3\u51b3\u7684\u529e\u6cd5\u3002\n\n\n\u5e38\u89c1\u95ee\u9898\n\n\n\n\n\u786e\u4fdd\u4f60\u662f\u8ddf\u7740 \nREADME\n \u4e2d\u7684\u6bcf\u4e00\u6b65\u6765\u505a\u3002\n\n\n\u786e\u4fdd\u4f60\u7684\u7cfb\u7edf\u5df2\u7ecf\u914d\u7f6e\u597d\u6240\u9700\u73af\u5883\uff08\u4f8b\u5982. Xcode \u5df2\u66f4\u81f3\u6700\u65b0\uff0cAndroid SDK \u5df2\u7ecf\u5b89\u88c5\u597d\uff0c\u800c\u4e14\nANDROID_HOME\n\u4e5f\u8bbe\u7f6e\u65e0\u8bef\uff09\u3002\n\n\n\u786e\u4fdd\u4f60\u5e94\u7528\u7684\u5b58\u653e\u8def\u5f84\u662f\u6b63\u786e\u7684\u3002\n\n\n\u5728 windows \u4e0a\u8fd0\u884c appium.app \u8981\u4f7f\u7528\u7ba1\u7406\u5458\u6743\u9650\uff0c\u5047\u5982\u4f60\u5728 cmd \u4e2d\u8fd0\u884c\uff0c\u4e5f\u5f97\u786e\u4fdd\u662f\u5728\u7ba1\u7406\u5458\u6743\u9650\u4e0b\u3002\n\n\n\n\n\u5982\u679c\u4f60\u662f\u901a\u8fc7 Appium.app \u8fd0\u884c\n\n\n\n\n\u5347\u7ea7\u5e94\u7528\u5e76\u91cd\u542f\u3002\u5982\u679c\u4f60\u88ab\u544a\u77e5\u5e94\u7528\u65e0\u6cd5\u5347\u7ea7\uff0c\u8bf7\u5230 \nappium.io\n \u91cd\u65b0\u4e0b\u8f7d\u3002\n\n\n\n\n\u5982\u679c\u4f60\u662f\u901a\u8fc7 Appium \u7684\u6e90\u7801\u8fd0\u884c\n\n\n\n\n\u901a\u8fc7 \ngit pull\n \u547d\u4ee4\u62c9\u53d6\u4ee3\u7801\uff0c\u786e\u4fdd\u5f53\u524d\u7684\u4ee3\u7801\u662f\u6700\u65b0\u7684\n\n\n\u79fb\u9664\u65e7\u7684\u4f9d\u8d56\uff1a\nrm -rf node_modules\n\n\n\u91cd\u65b0\u5b89\u88c5\u4f9d\u8d56\uff1a\nnpm install\n\n\n\n\n\u4ee3\u7801 Re-transpile: \ngulp transpile\n\n\n\n\n\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528 \nAppium Doctor\n \u53bb\u68c0\u6d4b Appium \u73af\u5883\u662f\u5426\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u3002\n\n\n\n\n\u5982\u679c\u4f60\u5347\u7ea7\u5230 Android SDK 22 \u540e\u51fa\u73b0\u5982\u4e0b\u62a5\u9519\uff1a\n  \n{ANDROID_HOME}/tools/ant/uibuild.xml:155: SDK does not have any Build Tools installed.\n\n\u5728 Android SDK 22 \u4e2d\uff0cplatform \u4e0e build tools \u5206\u522b\u88ab\u62c6\u5206\u5230\u5404\u81ea\u7684 SDK \u7ba1\u7406\u5305\u4e2d\u53bb\u4e86\u3002\u4f60\u9700\u8981\u786e\u4fdd\u5df2\u7ecf\u6b63\u786e\u5b89\u88c5\u4e86 build-tools \u4e0e platform-tools\u3002\n\n\n\n\nAndroid\n\n\n\n\n\u786e\u4fdd Android \u6a21\u62df\u5668\u5df2\u7ecf\u5f00\u542f\u5e76\u5728\u8fd0\u884c\u4e2d\u3002\n\n\n\u51fa\u73b0\u8bbe\u5907\u8fde\u63a5\u95ee\u9898\u65f6\uff0c \nadb kill-server && adb devices\n \u8fd9\u884c\u547d\u4ee4\u975e\u5e38\u6709\u7528\u3002\u5b83\u53ef\u4ee5\u91cd\u7f6e\u4f60\u7684 Android \u8bbe\u5907\u7684\u8fde\u63a5\u3002\n\n\n\u786e\u4fdd\u4f60\u5df2\u7ecf\u8bbe\u7f6e\u4e86 ANDROID_HOME \u5df2\u7ecf\u6307\u5411\u4e86 Android SDK \u8def\u5f84\n\n\n\n\nWindows\n\n\n\n\n\u786e\u4fdd\u5df2\u7ecf\u5f00\u542f\u4e86\u5f00\u53d1\u8005\u6a21\u5f0f\u3002\n\n\n\u786e\u4fdd command prompt \u5df2\u7ecf\u662f\u7ba1\u7406\u5458\u6743\u9650\u3002\n\n\n\u68c0\u67e5 Appium \u670d\u52a1\u5668\u6b63\u5728\u76d1\u542c\u7684 URL \u662f\u5426\u4e0e\u4f60\u6d4b\u8bd5\u811a\u672c\u4e2d\u7684 URL \u5339\u914d\u7684\u4e0a\u3002\n\n\n\n\nIOS\n\n\n\n\n\u786e\u4fdd Instruments.app \u6ca1\u6709\u88ab\u5f00\u542f\u3002\n\n\n\u5982\u679c\u4f60\u4f7f\u7528\u6a21\u62df\u5668\u65f6\uff0c\u8bb0\u5f97\u4e0d\u8981\u8ba9\u771f\u673a\u8fde\u4e0a\u4f60\u7684\u7535\u8111\u3002\n\n\n\u786e\u4fdd\u5728\u624b\u673a\u7684\u8bbe\u7f6e\u4e2d\u7684 accessibility \u8f85\u52a9\u529f\u80fd\u662f\u5173\u95ed\u7684\u3002\n\n\n\u786e\u4fdd\u5e94\u7528\u662f\u53d8\u5f02\u5728\u5f53\u524d\u8fd0\u884c\u7684\u6a21\u62df\u5668\u4e0a\u3002\n\n\n\u786e\u4fdd\u5e94\u7528\u5df2\u7f16\u8bd1\u5728\u5408\u9002\u7684\u6a21\u62df\u5668\uff08\u6216\u771f\u673a\uff09\u4e0a\uff08\u4f8b\u5982. \u5728\u6a21\u62df\u5668\u4e0a\u8fd0\u884c\u9700\u8981 debug \u6a21\u5f0f\u7684\u5305\uff09\uff0c\u5426\u5219\u4f60\u4f1a\u51fa\u73b0\nposix spawn\n\u62a5\u9519\u3002\n\n\n\u5982\u679c\u4f60\u66fe\u7ecf\u7528 sudo \u8fd0\u884c\u8fc7 Appium\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u8fd0\u884c \nsudo rm /tmp/instruments_sock\n \u8be5\u547d\u4ee4\uff0c\u800c\u4e14\u8bb0\u4f4f\u4ee5\u540e\u5c3d\u91cf\u522b\u5e26\u4e0a sudo\u3002\n\n\n\u5982\u679c\u4f60\u662f\u7b2c\u4e00\u6b21\u8fd0\u884c Appium\uff0c\u8bb0\u5f97\u5bf9 Instruments \u8fdb\u884c\u6388\u6743\u3002 \u67e5\u9605 \nrunning on OSX documentation\n \u4e86\u89e3\u66f4\u591a\u3002\n\n\n\u5982\u679c\u5728\u771f\u673a\u4e0a\u8fd0\u884c Instruments \u51fa\u73b0\u4e86\u5d29\u6e83(\"exited with code 253\")\uff0c\u786e\u4fdd Xcode \u5df2\u7ecf\u4e0b\u8f7d\u4e86\u8bbe\u5907\u7684\u7b26\u53f7\u6587\u4ef6\u3002\u5230 Window -> Devices\uff0c\u7136\u540e\u4ed6\u5c31\u4f1a\u81ea\u52a8\u7684\u5f00\u59cb\u4e0b\u8f7d\u3002\u6bcf\u6b21 iOS \u7248\u672c\u5347\u7ea7\u540e\u90fd\u9700\u8981\u505a\u8fd9\u6b65\u3002\n\n\n\u5982\u679c\u4f60\u770b\u5230 \niOS Simulator failed to install the application.\n \u8fd9\u6837\u7684\u62a5\u9519\uff0c\u5e76\u4e14\u786e\u5b9a\u8def\u5f84\u6ca1\u6709\u8bbe\u7f6e\u9519\u8bef\u7684\u8bdd\uff0c\u90a3\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u53bb\u91cd\u542f\u4f60\u7684\u7535\u8111\u3002\n\n\n\u786e\u4fdd\u4f60\u7684 macOS \u4e0a\u7684 keychain \u5df2\u7ecf\u4fdd\u5b58\u4e86\u7528\u4e8e\u6784\u5efa\u4f60\u7684\u5e94\u7528\u7684\u8bc1\u4e66\uff0c\u5e76\u4e14 WebDeriverAgent \u662f\u5df2\u7b7e\u540d\u7684\u3002\u7279\u522b\u662f\u4f60\u5728\u4f7f\u7528 ssh \u7684\u60c5\u51b5\u4e0b\u3002\u901a\u5e38\u5931\u8d25\u7684\u8bdd\u4f1a\u663e\u793a\n\u7b7e\u540d\n\u62a5\u9519\u3002\n\n\n\u5982\u679c\u4f60\u7684\u5e94\u7528\u4e2d\u8fd8\u6709\u81ea\u5b9a\u4e49\u7684\u5143\u7d20\uff0c\u4ed6\u4eec\u6216\u8bb8\u4e0d\u80fd\u901a\u8fc7\u9ed8\u8ba4\u7684\u65b9\u5f0f\u53bb\u4f7f\u7528 UIAutomaion\uff08and therefore Appuim\uff09\u8fdb\u884c\u81ea\u52a8\u5316\u3002\u4f60\u9700\u8981\u5c06 accessibility status \u8bbe\u7f6e\u4e3a'enabled'\u3002\u5728\u4ee3\u7801\u4e2d\u8bbe\u7f6e\u7684\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n\n\n\ncenter\n  [myCustomView setAccessibilityEnabled:YES];\n\n\n\n\n\u5728 iOS \u4e0a\u6d4b\u8bd5\u53ef\u80fd\u4f1a\u51fa\u73b0\u7c7b\u4f3c\u5185\u5b58\u6cc4\u9732\uff08\u5305\u62ec\u6027\u80fd\u4e0d\u4f73\u3001\u7a0b\u5e8f\u6302\u8d77\uff09\u7684\u72b6\u51b5\u3002\u5982\u679c\u4f60\u51fa\u73b0\u4e86\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u8fd9\u5f88\u53ef\u80fd\u662f\u7531\u4e8e\u4e00\u4e2a NSLog \u7684\u5df2\u77e5\u95ee\u9898\u6240\u5bfc\u81f4\u7684\u3002\u5176\u4e2d\u7684\u4e00\u4e2a\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u5c06\u6240\u6709\u7684 NSLog \u4ee3\u7801\u79fb\u9664\u3002\u7136\u800c\uff0c\u8fd8\u662f\u6709\u4e00\u4e9b\u5de7\u5999\u7684\u5904\u7406\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4e0d\u91cd\u6784\u5c31\u80fd\u89e3\u51b3\u3002\n\n\n\n\n### \u89e3\u51b3\u529e\u6cd5 1\n  NSLog \u662f\u4e00\u4e2a\u5b8f\u4e14\u53ef\u4ee5\u88ab\u5b9a\u4e49\u7684\u3002\u4f8b\u5982\uff1a\n  ```objectivec\n  // \nYou'll need to define TEST or TEST2 and then recompile.\n\n\n#ifdef TEST\n    #define NSLog(...) _BlackHoleTestLogger(\nVA_ARGS\n);\n  #endif // TEST\n  #ifdef TEST2\n    #define NSLog(...) _StdoutTestLogger(\nVA_ARGS\n);\n  #endif // TEST2\n\n\nvoid _BlackHoleTestLogger(NSString *format, ...) {\n      //\n  }\n\n\nvoid _StdoutTestLogger(NSString *format, ...) {\n      va_list argumentList;\n      va_start(argumentList, format);\n      NSMutableString * message = [[NSMutableString alloc] initWithFormat:format\n                                                  arguments:argumentList];\n\n\n  printf(message);\n\n  va_end(argumentList);\n  [message release];\n\n\n\n}\n  ```\n\n\n### \u89e3\u51b3\u529e\u6cd5 2\n  \u624b\u52a8\u53bb\u66ff\u6362\u6389 NSLog \u5c01\u88c5\u7684\u5e95\u5c42\u529f\u80fd\u3002\u8be5\u65b9\u6cd5\u88ab \nApple in a similar context.\n \u6240\u63a8\u8350\n  ```objectivec\n  extern void _NSSetLogCStringFunction(void(\n)(const char \n, unsigned, BOOL));\n\n\nstatic void _GarbageFreeLogCString(const char *message, unsigned length, BOOL withSyslogBanner) {\n     fprintf(stderr, \"%s\\n\", message);\n  }\n\n\nint main (int argc, const char \nargv[]) {\n     NSAutoreleasePool \npool = [[NSAutoreleasePool alloc] init];\n     int exitCode;\n\n\n setbuf(stderr, NULL);\n\n _NSSetLogCStringFunction(_GarbageFreeLogCString);\n exitCode = WOApplicationMain(@\"Application\", argc, argv);\n [pool release];\n return exitCode;\n\n\n\n}\n```\n\n\nWebview/Hybrid/Safari \u5e94\u7528\u7684\u652f\u6301\n\n\n\n\n\u786e\u4fdd\u771f\u673a\u4e0a\u7684 'Web Inspector' \u4e3a\u6253\u5f00\u72b6\u6001\u3002\n\n\n\u786e\u4fdd\u4f60\u5df2\u7ecf\u6253\u5f00 Safari \u7684\u5f00\u53d1\u8005\u6a21\u5f0f\uff08Safari - Advance Preferences- Developer menu for simulators\uff09\u3002\n\n\n\u786e\u4fdd\u4f60\u5ba2\u6237\u7aef\u7684\u5e93\u63d0\u4f9b\u7684 appium \u547d\u4ee4 \ncontext\n \u53ef\u4ee5\u8ba9\u4f60\u6b63\u786e\u5730\u5207\u6362 contexts\u3002\n\n\n\u5f53\u4f60\u5c1d\u8bd5\u6253\u5f00\u4ee3\u7406\u7684\u65f6\u5019\uff0c\u51fa\u73b0\u4e86\u8fd9\u4e2a\u62a5\u9519\uff1aselect_port() failed\uff0c\u8bf7\u67e5\u9605\u8be5\n\u6587\u6863\n\u3002\n\n\n\u5728 Safari session \u4e2d\uff0c\u5982\u679c\u65e5\u5fd7\u8bb0\u5f55\u5230\u4e0d\u80fd\u8f93\u5165\u521d\u59cb url \u7684\u95ee\u9898\uff0c\u5148\u786e\u4fdd\u4f60\u7684\u8f6f\u952e\u76d8\u662f\u5426\u5df2\u88ab\u5f00\u542f\uff0c\u8be6\u60c5\u8bf7\u67e5\u9605\u8be5\n\u6587\u6863\n\u3002\n\n\n\n\n\u5230\u793e\u533a\u5bfb\u6c42\u5e2e\u52a9\n\n\n\u5982\u679c\u4e0a\u8ff0\u6b65\u9aa4\u8fd8\u6ca1\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u90a3\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u83b7\u5f97\u5e2e\u52a9\uff1a\n\n\n\u5f53\u4f60\u5728\u4f7f\u7528 Appium \u7684\u8fc7\u7a0b\u4e2d\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u800c\u4e14 Appium \u63d0\u4f9b\u7684\u62a5\u9519\u4fe1\u606f\u4e0d\u591f\u6e05\u6670\u7684\u8bdd\uff0c\u6b22\u8fce\u52a0\u5165\n\u8ba8\u8bba\u7ec4\n\u4e0e\u5927\u5bb6\u8fdb\u884c\u8ba8\u8bba\u3002\u63d0\u95ee\u65f6\u8bf7\u9644\u5e26\u4e0a\u5982\u4e0b\u4fe1\u606f\uff1a\n\n\n\n\n\u4f60\u662f\u901a\u8fc7\u4ec0\u4e48\u65b9\u5f0f\u8fd0\u884c Appium(Appium.app, npm, source)\u3002\n\n\n\u4f60\u4f7f\u7528\u4ec0\u4e48\u64cd\u4f5c\u7cfb\u7edf\u3002\n\n\n\u4f60\u662f\u9488\u5bf9\u4ec0\u4e48\u8bbe\u5907\u548c\u7248\u672c\u53bb\u505a\u6d4b\u8bd5\u7684\uff08\u4f8b\u5982. Android 4.4, \u6216\u8005 iOS 7.1\uff09\u3002\n\n\n\u4f60\u662f\u4f7f\u7528\u771f\u673a\u8fd8\u662f\u6a21\u62df\u5668\u53bb\u505a\u6d4b\u8bd5\u3002\n\n\n\u63d0\u4f9b\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7ed9\u51fa\u7684\u7684\u9519\u8bef\uff08\u4f8b\u5982. \u201c\u5728\u8fd0\u884c\u6211\u7684 Python \u6d4b\u8bd5\u811a\u672c\u65f6\u5019\u51fa\u73b0\u4e86\u5f02\u5e38\uff0cAppium \u670d\u52a1\u5668\u7684\u62a5\u9519\u4fe1\u606f\u5982\u94fe\u63a5\u4e2d\u6240\u793a\u201d\uff09\u3002\n\n\n\u9664\u4e86\u4e0a\u8ff0\uff0c\u5728\u63d0\u95ee\u7684\u65f6\u5019\u5e0c\u671b\u53ef\u4ee5\u9644\u5e26\u4e0a Appium \u670d\u52a1\u5668\u8f93\u51fa\u7684\u5185\u5bb9\uff08\u7279\u522b\u662f\u5728 verbose \u6a21\u5f0f\u4e0b\uff09\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u597d\u5730\u5206\u6790\u5e76\u8ddf\u8fdb\u95ee\u9898\u3002\n\n\n\n\n\u5982\u679c\u4f60\u786e\u4fe1\u4f60\u53d1\u73b0\u7684\u662f\u4e00\u4e2a bug\uff0c\u8bf7\u76f4\u63a5\u5230 \nissue tracker\n \u53bb\u63d0\u4ea4\u4e00\u4e2a issue \u53bb\u63cf\u8ff0 bug \u7684\u4fe1\u606f\u4ee5\u53ca\u91cd\u73b0\u6b65\u9aa4\u3002\n\n\n\u5df2\u77e5\u95ee\u9898\n\n\n\n\n\u5982\u679c\u4f60\u5df2\u5728\u5b98\u7f51\u4e0b\u8f7d\u5e76\u5b89\u88c5 Node\uff0c\u4f60\u9700\u8981\u4f7f\u7528 sudo \u53bb\u8fd0\u884c \nnpm\n\u3002\u53ef\u8fd9\u4e48\u505a\u8fd9\u5e76\u4e0d\u7406\u60f3\u3002\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7 \nnvm\n, \nn\n \u6216\u8005 \nbrew install node\n \u8fd9\u51e0\u79cd\u65b9\u5f0f\u53bb\u5b89\u88c5\uff01\n\n\n\u901a\u8fc7\u8bbe\u7f6e\u4ee3\u7406\uff0ciOS \u771f\u673a\u53ef\u4ee5\u652f\u6301 Webview \u4e86\uff0c\u8be6\u60c5\u53ef\u67e5\u770b\n\u8ba8\u8bba\n\u3002\n\n\n\u6709\u65f6\u5019 iOS \u7684 UI \u5143\u7d20\u5728\u88ab\u5b9a\u4f4d\u5230\u540e\u7684\u51e0\u6beb\u79d2\u95f4\u4f1a\u5931\u6548\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u7c7b\u4f3c \n(null) cannot be tapped\n \u7684\u62a5\u9519\u3002\u552f\u4e00\u7684\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u628a  finding-and-clicking \u7684\u4ee3\u7801\u653e\u8fdb\u4e00\u4e2a retry block \u4e2d\u3002\n\n\n\u5982\u679c\u4f60\u662f\u901a\u8fc7 MacPorts \u53bb\u5b89\u88c5 Node \u4e0e npm\uff0cAppium \u53ef\u80fd\u5f88\u96be\u627e\u5230\u53ef\u6267\u884c\u7684 \nnode\n\u3002\u4f60\u5fc5\u987b\u786e\u4fdd MacoPorts \u7684 bin \u6587\u4ef6\u5939(\u9ed8\u8ba4\u662f \n/opt/local/bin\n)\u5df2\u7ecf\u6dfb\u52a0\u5230\u4f60\u7684 \n~/.profile\n, \n~/.bash_profile\n \u6216\u8005 \n~/.bashrc\n \u4e2d\u7684 \nPATH\n \u73af\u5883\u53d8\u91cf\u4e2d\u3002\n\n\n\n\n\u7279\u5b9a\u7684\u9519\u8bef\n\n\n\n\n\n\n\n\nAction\n\n\nError\n\n\nResolution\n\n\n\n\n\n\n\n\n\n\nRunning ios test\n\n\n[INST STDERR] posix spawn failure; aborting launch\n\n\n\u4f60\u7684\u5e94\u7528\u6ca1\u6709\u5206\u522b\u5bf9\u5e94\u6a21\u62df\u5668\u6216\u8005\u771f\u673a\u53bb\u7f16\u8bd1\u5bf9\u5e94\u7248\u672c.\n\n\n\n\n\n\nRunning mobile safari test\n\n\nerror: Could not prepare mobile safari with version '7.1'\n\n\n\u4f60\u53ef\u80fd\u9700\u8981\u518d\u6b21\u8fd0\u884c\u6388\u6743\u7684\u811a\u672c\u4ee5\u786e\u4fdd iOS SDK \u6587\u4ef6\u662f\u53ef\u5199\u72b6\u6001\u3002\u8be6\u60c5\u8bf7\u67e5\u9605 \nrunning on OSX documentation\n\n\n\n\n\n\n\n\n\u672c\u6587\u7531 \nthanksdanny\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Troubleshooting"
        },
        {
            "location": "/cn/appium-setup/troubleshooting/#appium",
            "text": "\u5f53\u4f60\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u95ee\u9898\uff0c\u5148\u522b\u6025\u7740\u5230 github \u4e0a\u63d0\u4ea4\u53cd\u9988\uff0c\u6216\u8005\u5230  appium-discuss discussion group  \u63d0\u95ee\u3002\u53ef\u4ee5\u5148\u8bd5\u8bd5\u5728\u672c\u6587\u4e2d\u80fd\u5426\u627e\u5230\u89e3\u51b3\u7684\u529e\u6cd5\u3002",
            "title": "Appium \u7684\u6545\u969c\u6392\u67e5"
        },
        {
            "location": "/cn/appium-setup/troubleshooting/#_1",
            "text": "\u786e\u4fdd\u4f60\u662f\u8ddf\u7740  README  \u4e2d\u7684\u6bcf\u4e00\u6b65\u6765\u505a\u3002  \u786e\u4fdd\u4f60\u7684\u7cfb\u7edf\u5df2\u7ecf\u914d\u7f6e\u597d\u6240\u9700\u73af\u5883\uff08\u4f8b\u5982. Xcode \u5df2\u66f4\u81f3\u6700\u65b0\uff0cAndroid SDK \u5df2\u7ecf\u5b89\u88c5\u597d\uff0c\u800c\u4e14 ANDROID_HOME \u4e5f\u8bbe\u7f6e\u65e0\u8bef\uff09\u3002  \u786e\u4fdd\u4f60\u5e94\u7528\u7684\u5b58\u653e\u8def\u5f84\u662f\u6b63\u786e\u7684\u3002  \u5728 windows \u4e0a\u8fd0\u884c appium.app \u8981\u4f7f\u7528\u7ba1\u7406\u5458\u6743\u9650\uff0c\u5047\u5982\u4f60\u5728 cmd \u4e2d\u8fd0\u884c\uff0c\u4e5f\u5f97\u786e\u4fdd\u662f\u5728\u7ba1\u7406\u5458\u6743\u9650\u4e0b\u3002",
            "title": "\u5e38\u89c1\u95ee\u9898"
        },
        {
            "location": "/cn/appium-setup/troubleshooting/#appiumapp",
            "text": "\u5347\u7ea7\u5e94\u7528\u5e76\u91cd\u542f\u3002\u5982\u679c\u4f60\u88ab\u544a\u77e5\u5e94\u7528\u65e0\u6cd5\u5347\u7ea7\uff0c\u8bf7\u5230  appium.io  \u91cd\u65b0\u4e0b\u8f7d\u3002",
            "title": "\u5982\u679c\u4f60\u662f\u901a\u8fc7 Appium.app \u8fd0\u884c"
        },
        {
            "location": "/cn/appium-setup/troubleshooting/#appium_1",
            "text": "\u901a\u8fc7  git pull  \u547d\u4ee4\u62c9\u53d6\u4ee3\u7801\uff0c\u786e\u4fdd\u5f53\u524d\u7684\u4ee3\u7801\u662f\u6700\u65b0\u7684  \u79fb\u9664\u65e7\u7684\u4f9d\u8d56\uff1a rm -rf node_modules  \u91cd\u65b0\u5b89\u88c5\u4f9d\u8d56\uff1a npm install   \u4ee3\u7801 Re-transpile:  gulp transpile    \u4f60\u53ef\u4ee5\u4f7f\u7528  Appium Doctor  \u53bb\u68c0\u6d4b Appium \u73af\u5883\u662f\u5426\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u3002   \u5982\u679c\u4f60\u5347\u7ea7\u5230 Android SDK 22 \u540e\u51fa\u73b0\u5982\u4e0b\u62a5\u9519\uff1a\n   {ANDROID_HOME}/tools/ant/uibuild.xml:155: SDK does not have any Build Tools installed. \n\u5728 Android SDK 22 \u4e2d\uff0cplatform \u4e0e build tools \u5206\u522b\u88ab\u62c6\u5206\u5230\u5404\u81ea\u7684 SDK \u7ba1\u7406\u5305\u4e2d\u53bb\u4e86\u3002\u4f60\u9700\u8981\u786e\u4fdd\u5df2\u7ecf\u6b63\u786e\u5b89\u88c5\u4e86 build-tools \u4e0e platform-tools\u3002",
            "title": "\u5982\u679c\u4f60\u662f\u901a\u8fc7 Appium \u7684\u6e90\u7801\u8fd0\u884c"
        },
        {
            "location": "/cn/appium-setup/troubleshooting/#android",
            "text": "\u786e\u4fdd Android \u6a21\u62df\u5668\u5df2\u7ecf\u5f00\u542f\u5e76\u5728\u8fd0\u884c\u4e2d\u3002  \u51fa\u73b0\u8bbe\u5907\u8fde\u63a5\u95ee\u9898\u65f6\uff0c  adb kill-server && adb devices  \u8fd9\u884c\u547d\u4ee4\u975e\u5e38\u6709\u7528\u3002\u5b83\u53ef\u4ee5\u91cd\u7f6e\u4f60\u7684 Android \u8bbe\u5907\u7684\u8fde\u63a5\u3002  \u786e\u4fdd\u4f60\u5df2\u7ecf\u8bbe\u7f6e\u4e86 ANDROID_HOME \u5df2\u7ecf\u6307\u5411\u4e86 Android SDK \u8def\u5f84",
            "title": "Android"
        },
        {
            "location": "/cn/appium-setup/troubleshooting/#windows",
            "text": "\u786e\u4fdd\u5df2\u7ecf\u5f00\u542f\u4e86\u5f00\u53d1\u8005\u6a21\u5f0f\u3002  \u786e\u4fdd command prompt \u5df2\u7ecf\u662f\u7ba1\u7406\u5458\u6743\u9650\u3002  \u68c0\u67e5 Appium \u670d\u52a1\u5668\u6b63\u5728\u76d1\u542c\u7684 URL \u662f\u5426\u4e0e\u4f60\u6d4b\u8bd5\u811a\u672c\u4e2d\u7684 URL \u5339\u914d\u7684\u4e0a\u3002",
            "title": "Windows"
        },
        {
            "location": "/cn/appium-setup/troubleshooting/#ios",
            "text": "\u786e\u4fdd Instruments.app \u6ca1\u6709\u88ab\u5f00\u542f\u3002  \u5982\u679c\u4f60\u4f7f\u7528\u6a21\u62df\u5668\u65f6\uff0c\u8bb0\u5f97\u4e0d\u8981\u8ba9\u771f\u673a\u8fde\u4e0a\u4f60\u7684\u7535\u8111\u3002  \u786e\u4fdd\u5728\u624b\u673a\u7684\u8bbe\u7f6e\u4e2d\u7684 accessibility \u8f85\u52a9\u529f\u80fd\u662f\u5173\u95ed\u7684\u3002  \u786e\u4fdd\u5e94\u7528\u662f\u53d8\u5f02\u5728\u5f53\u524d\u8fd0\u884c\u7684\u6a21\u62df\u5668\u4e0a\u3002  \u786e\u4fdd\u5e94\u7528\u5df2\u7f16\u8bd1\u5728\u5408\u9002\u7684\u6a21\u62df\u5668\uff08\u6216\u771f\u673a\uff09\u4e0a\uff08\u4f8b\u5982. \u5728\u6a21\u62df\u5668\u4e0a\u8fd0\u884c\u9700\u8981 debug \u6a21\u5f0f\u7684\u5305\uff09\uff0c\u5426\u5219\u4f60\u4f1a\u51fa\u73b0 posix spawn \u62a5\u9519\u3002  \u5982\u679c\u4f60\u66fe\u7ecf\u7528 sudo \u8fd0\u884c\u8fc7 Appium\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u8fd0\u884c  sudo rm /tmp/instruments_sock  \u8be5\u547d\u4ee4\uff0c\u800c\u4e14\u8bb0\u4f4f\u4ee5\u540e\u5c3d\u91cf\u522b\u5e26\u4e0a sudo\u3002  \u5982\u679c\u4f60\u662f\u7b2c\u4e00\u6b21\u8fd0\u884c Appium\uff0c\u8bb0\u5f97\u5bf9 Instruments \u8fdb\u884c\u6388\u6743\u3002 \u67e5\u9605  running on OSX documentation  \u4e86\u89e3\u66f4\u591a\u3002  \u5982\u679c\u5728\u771f\u673a\u4e0a\u8fd0\u884c Instruments \u51fa\u73b0\u4e86\u5d29\u6e83(\"exited with code 253\")\uff0c\u786e\u4fdd Xcode \u5df2\u7ecf\u4e0b\u8f7d\u4e86\u8bbe\u5907\u7684\u7b26\u53f7\u6587\u4ef6\u3002\u5230 Window -> Devices\uff0c\u7136\u540e\u4ed6\u5c31\u4f1a\u81ea\u52a8\u7684\u5f00\u59cb\u4e0b\u8f7d\u3002\u6bcf\u6b21 iOS \u7248\u672c\u5347\u7ea7\u540e\u90fd\u9700\u8981\u505a\u8fd9\u6b65\u3002  \u5982\u679c\u4f60\u770b\u5230  iOS Simulator failed to install the application.  \u8fd9\u6837\u7684\u62a5\u9519\uff0c\u5e76\u4e14\u786e\u5b9a\u8def\u5f84\u6ca1\u6709\u8bbe\u7f6e\u9519\u8bef\u7684\u8bdd\uff0c\u90a3\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u53bb\u91cd\u542f\u4f60\u7684\u7535\u8111\u3002  \u786e\u4fdd\u4f60\u7684 macOS \u4e0a\u7684 keychain \u5df2\u7ecf\u4fdd\u5b58\u4e86\u7528\u4e8e\u6784\u5efa\u4f60\u7684\u5e94\u7528\u7684\u8bc1\u4e66\uff0c\u5e76\u4e14 WebDeriverAgent \u662f\u5df2\u7b7e\u540d\u7684\u3002\u7279\u522b\u662f\u4f60\u5728\u4f7f\u7528 ssh \u7684\u60c5\u51b5\u4e0b\u3002\u901a\u5e38\u5931\u8d25\u7684\u8bdd\u4f1a\u663e\u793a \u7b7e\u540d \u62a5\u9519\u3002  \u5982\u679c\u4f60\u7684\u5e94\u7528\u4e2d\u8fd8\u6709\u81ea\u5b9a\u4e49\u7684\u5143\u7d20\uff0c\u4ed6\u4eec\u6216\u8bb8\u4e0d\u80fd\u901a\u8fc7\u9ed8\u8ba4\u7684\u65b9\u5f0f\u53bb\u4f7f\u7528 UIAutomaion\uff08and therefore Appuim\uff09\u8fdb\u884c\u81ea\u52a8\u5316\u3002\u4f60\u9700\u8981\u5c06 accessibility status \u8bbe\u7f6e\u4e3a'enabled'\u3002\u5728\u4ee3\u7801\u4e2d\u8bbe\u7f6e\u7684\u65b9\u5f0f\u5982\u4e0b\uff1a   center\n  [myCustomView setAccessibilityEnabled:YES];   \u5728 iOS \u4e0a\u6d4b\u8bd5\u53ef\u80fd\u4f1a\u51fa\u73b0\u7c7b\u4f3c\u5185\u5b58\u6cc4\u9732\uff08\u5305\u62ec\u6027\u80fd\u4e0d\u4f73\u3001\u7a0b\u5e8f\u6302\u8d77\uff09\u7684\u72b6\u51b5\u3002\u5982\u679c\u4f60\u51fa\u73b0\u4e86\u7c7b\u4f3c\u7684\u95ee\u9898\uff0c\u8fd9\u5f88\u53ef\u80fd\u662f\u7531\u4e8e\u4e00\u4e2a NSLog \u7684\u5df2\u77e5\u95ee\u9898\u6240\u5bfc\u81f4\u7684\u3002\u5176\u4e2d\u7684\u4e00\u4e2a\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u5c06\u6240\u6709\u7684 NSLog \u4ee3\u7801\u79fb\u9664\u3002\u7136\u800c\uff0c\u8fd8\u662f\u6709\u4e00\u4e9b\u5de7\u5999\u7684\u5904\u7406\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4e0d\u91cd\u6784\u5c31\u80fd\u89e3\u51b3\u3002   ### \u89e3\u51b3\u529e\u6cd5 1\n  NSLog \u662f\u4e00\u4e2a\u5b8f\u4e14\u53ef\u4ee5\u88ab\u5b9a\u4e49\u7684\u3002\u4f8b\u5982\uff1a\n  ```objectivec\n  //  You'll need to define TEST or TEST2 and then recompile.  #ifdef TEST\n    #define NSLog(...) _BlackHoleTestLogger( VA_ARGS );\n  #endif // TEST\n  #ifdef TEST2\n    #define NSLog(...) _StdoutTestLogger( VA_ARGS );\n  #endif // TEST2  void _BlackHoleTestLogger(NSString *format, ...) {\n      //\n  }  void _StdoutTestLogger(NSString *format, ...) {\n      va_list argumentList;\n      va_start(argumentList, format);\n      NSMutableString * message = [[NSMutableString alloc] initWithFormat:format\n                                                  arguments:argumentList];    printf(message);\n\n  va_end(argumentList);\n  [message release];  }\n  ```  ### \u89e3\u51b3\u529e\u6cd5 2\n  \u624b\u52a8\u53bb\u66ff\u6362\u6389 NSLog \u5c01\u88c5\u7684\u5e95\u5c42\u529f\u80fd\u3002\u8be5\u65b9\u6cd5\u88ab  Apple in a similar context.  \u6240\u63a8\u8350\n  ```objectivec\n  extern void _NSSetLogCStringFunction(void( )(const char  , unsigned, BOOL));  static void _GarbageFreeLogCString(const char *message, unsigned length, BOOL withSyslogBanner) {\n     fprintf(stderr, \"%s\\n\", message);\n  }  int main (int argc, const char  argv[]) {\n     NSAutoreleasePool  pool = [[NSAutoreleasePool alloc] init];\n     int exitCode;   setbuf(stderr, NULL);\n\n _NSSetLogCStringFunction(_GarbageFreeLogCString);\n exitCode = WOApplicationMain(@\"Application\", argc, argv);\n [pool release];\n return exitCode;  }\n```",
            "title": "IOS"
        },
        {
            "location": "/cn/appium-setup/troubleshooting/#webviewhybridsafari",
            "text": "\u786e\u4fdd\u771f\u673a\u4e0a\u7684 'Web Inspector' \u4e3a\u6253\u5f00\u72b6\u6001\u3002  \u786e\u4fdd\u4f60\u5df2\u7ecf\u6253\u5f00 Safari \u7684\u5f00\u53d1\u8005\u6a21\u5f0f\uff08Safari - Advance Preferences- Developer menu for simulators\uff09\u3002  \u786e\u4fdd\u4f60\u5ba2\u6237\u7aef\u7684\u5e93\u63d0\u4f9b\u7684 appium \u547d\u4ee4  context  \u53ef\u4ee5\u8ba9\u4f60\u6b63\u786e\u5730\u5207\u6362 contexts\u3002  \u5f53\u4f60\u5c1d\u8bd5\u6253\u5f00\u4ee3\u7406\u7684\u65f6\u5019\uff0c\u51fa\u73b0\u4e86\u8fd9\u4e2a\u62a5\u9519\uff1aselect_port() failed\uff0c\u8bf7\u67e5\u9605\u8be5 \u6587\u6863 \u3002  \u5728 Safari session \u4e2d\uff0c\u5982\u679c\u65e5\u5fd7\u8bb0\u5f55\u5230\u4e0d\u80fd\u8f93\u5165\u521d\u59cb url \u7684\u95ee\u9898\uff0c\u5148\u786e\u4fdd\u4f60\u7684\u8f6f\u952e\u76d8\u662f\u5426\u5df2\u88ab\u5f00\u542f\uff0c\u8be6\u60c5\u8bf7\u67e5\u9605\u8be5 \u6587\u6863 \u3002",
            "title": "Webview/Hybrid/Safari \u5e94\u7528\u7684\u652f\u6301"
        },
        {
            "location": "/cn/appium-setup/troubleshooting/#_2",
            "text": "\u5982\u679c\u4e0a\u8ff0\u6b65\u9aa4\u8fd8\u6ca1\u89e3\u51b3\u4f60\u7684\u95ee\u9898\uff0c\u90a3\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u83b7\u5f97\u5e2e\u52a9\uff1a  \u5f53\u4f60\u5728\u4f7f\u7528 Appium \u7684\u8fc7\u7a0b\u4e2d\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u800c\u4e14 Appium \u63d0\u4f9b\u7684\u62a5\u9519\u4fe1\u606f\u4e0d\u591f\u6e05\u6670\u7684\u8bdd\uff0c\u6b22\u8fce\u52a0\u5165 \u8ba8\u8bba\u7ec4 \u4e0e\u5927\u5bb6\u8fdb\u884c\u8ba8\u8bba\u3002\u63d0\u95ee\u65f6\u8bf7\u9644\u5e26\u4e0a\u5982\u4e0b\u4fe1\u606f\uff1a   \u4f60\u662f\u901a\u8fc7\u4ec0\u4e48\u65b9\u5f0f\u8fd0\u884c Appium(Appium.app, npm, source)\u3002  \u4f60\u4f7f\u7528\u4ec0\u4e48\u64cd\u4f5c\u7cfb\u7edf\u3002  \u4f60\u662f\u9488\u5bf9\u4ec0\u4e48\u8bbe\u5907\u548c\u7248\u672c\u53bb\u505a\u6d4b\u8bd5\u7684\uff08\u4f8b\u5982. Android 4.4, \u6216\u8005 iOS 7.1\uff09\u3002  \u4f60\u662f\u4f7f\u7528\u771f\u673a\u8fd8\u662f\u6a21\u62df\u5668\u53bb\u505a\u6d4b\u8bd5\u3002  \u63d0\u4f9b\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7ed9\u51fa\u7684\u7684\u9519\u8bef\uff08\u4f8b\u5982. \u201c\u5728\u8fd0\u884c\u6211\u7684 Python \u6d4b\u8bd5\u811a\u672c\u65f6\u5019\u51fa\u73b0\u4e86\u5f02\u5e38\uff0cAppium \u670d\u52a1\u5668\u7684\u62a5\u9519\u4fe1\u606f\u5982\u94fe\u63a5\u4e2d\u6240\u793a\u201d\uff09\u3002  \u9664\u4e86\u4e0a\u8ff0\uff0c\u5728\u63d0\u95ee\u7684\u65f6\u5019\u5e0c\u671b\u53ef\u4ee5\u9644\u5e26\u4e0a Appium \u670d\u52a1\u5668\u8f93\u51fa\u7684\u5185\u5bb9\uff08\u7279\u522b\u662f\u5728 verbose \u6a21\u5f0f\u4e0b\uff09\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u597d\u5730\u5206\u6790\u5e76\u8ddf\u8fdb\u95ee\u9898\u3002   \u5982\u679c\u4f60\u786e\u4fe1\u4f60\u53d1\u73b0\u7684\u662f\u4e00\u4e2a bug\uff0c\u8bf7\u76f4\u63a5\u5230  issue tracker  \u53bb\u63d0\u4ea4\u4e00\u4e2a issue \u53bb\u63cf\u8ff0 bug \u7684\u4fe1\u606f\u4ee5\u53ca\u91cd\u73b0\u6b65\u9aa4\u3002",
            "title": "\u5230\u793e\u533a\u5bfb\u6c42\u5e2e\u52a9"
        },
        {
            "location": "/cn/appium-setup/troubleshooting/#_3",
            "text": "\u5982\u679c\u4f60\u5df2\u5728\u5b98\u7f51\u4e0b\u8f7d\u5e76\u5b89\u88c5 Node\uff0c\u4f60\u9700\u8981\u4f7f\u7528 sudo \u53bb\u8fd0\u884c  npm \u3002\u53ef\u8fd9\u4e48\u505a\u8fd9\u5e76\u4e0d\u7406\u60f3\u3002\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7  nvm ,  n  \u6216\u8005  brew install node  \u8fd9\u51e0\u79cd\u65b9\u5f0f\u53bb\u5b89\u88c5\uff01  \u901a\u8fc7\u8bbe\u7f6e\u4ee3\u7406\uff0ciOS \u771f\u673a\u53ef\u4ee5\u652f\u6301 Webview \u4e86\uff0c\u8be6\u60c5\u53ef\u67e5\u770b \u8ba8\u8bba \u3002  \u6709\u65f6\u5019 iOS \u7684 UI \u5143\u7d20\u5728\u88ab\u5b9a\u4f4d\u5230\u540e\u7684\u51e0\u6beb\u79d2\u95f4\u4f1a\u5931\u6548\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u7c7b\u4f3c  (null) cannot be tapped  \u7684\u62a5\u9519\u3002\u552f\u4e00\u7684\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u628a  finding-and-clicking \u7684\u4ee3\u7801\u653e\u8fdb\u4e00\u4e2a retry block \u4e2d\u3002  \u5982\u679c\u4f60\u662f\u901a\u8fc7 MacPorts \u53bb\u5b89\u88c5 Node \u4e0e npm\uff0cAppium \u53ef\u80fd\u5f88\u96be\u627e\u5230\u53ef\u6267\u884c\u7684  node \u3002\u4f60\u5fc5\u987b\u786e\u4fdd MacoPorts \u7684 bin \u6587\u4ef6\u5939(\u9ed8\u8ba4\u662f  /opt/local/bin )\u5df2\u7ecf\u6dfb\u52a0\u5230\u4f60\u7684  ~/.profile ,  ~/.bash_profile  \u6216\u8005  ~/.bashrc  \u4e2d\u7684  PATH  \u73af\u5883\u53d8\u91cf\u4e2d\u3002",
            "title": "\u5df2\u77e5\u95ee\u9898"
        },
        {
            "location": "/cn/appium-setup/troubleshooting/#_4",
            "text": "Action  Error  Resolution      Running ios test  [INST STDERR] posix spawn failure; aborting launch  \u4f60\u7684\u5e94\u7528\u6ca1\u6709\u5206\u522b\u5bf9\u5e94\u6a21\u62df\u5668\u6216\u8005\u771f\u673a\u53bb\u7f16\u8bd1\u5bf9\u5e94\u7248\u672c.    Running mobile safari test  error: Could not prepare mobile safari with version '7.1'  \u4f60\u53ef\u80fd\u9700\u8981\u518d\u6b21\u8fd0\u884c\u6388\u6743\u7684\u811a\u672c\u4ee5\u786e\u4fdd iOS SDK \u6587\u4ef6\u662f\u53ef\u5199\u72b6\u6001\u3002\u8be6\u60c5\u8bf7\u67e5\u9605  running on OSX documentation     \u672c\u6587\u7531  thanksdanny  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u7279\u5b9a\u7684\u9519\u8bef"
        },
        {
            "location": "/cn/contributing-to-appium/appium-from-source/",
            "text": "\u4ece\u6e90\u7801\u8fd0\u884cAppium\n\n\n\u4f60\u60f3\u4ece\u6e90\u7801\u8fd0\u884cAppium\u5e76\u5e2e\u52a9\u4fee\u590dBUG\u548c\u6dfb\u52a0\u529f\u80fd\u5417\uff1f\n\u771f\u68d2\uff01\u53ea\u9700\u8981fork\u5de5\u7a0b\uff0c\u6dfb\u52a0\u4e00\u4e2a\u4fee\u6539\uff0c\u7136\u540e\u53d1\u9001pull\u8bf7\u6c42\u5373\u53ef\uff01\n\u5728\u5f00\u59cb\u4e4b\u524d\u8bf7\u9605\u8bfb\u6211\u4eec\u7684\u4ee3\u7801\u98ce\u683c\u6307\u5357\uff08\nStyle Guide\n\u3002\n\u5728\u53d1\u9001pull\u8bf7\u6c42\u524d\u8bf7\u786e\u4fdd\u901a\u8fc7\u5355\u5143\u548c\u529f\u80fd\u6d4b\u8bd5\uff1b\u5173\u4e8e\u5982\u4f55\u8fd0\u884c\u6d4b\u8bd5\u7b49\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u7ee7\u7eed\u9605\u8bfb\uff01\n\n\n\u9996\u5148\uff0c\u786e\u4fdd\u4f60\u9605\u8bfbREADME\u6587\u4ef6\u4e14\u6309\u7167\u8bbe\u7f6e\u8bf4\u660e\u8d70\u3002\n\n\n\u4ece\u6e90\u7801\u914d\u7f6e Appium\n\n\nAppium \u7684\u914d\u7f6e\u6d89\u53ca\uff1a\n\n\n\n\nAppium Server \u2014\u2014 \u5728\u4f60\u7684\u6d4b\u8bd5\u4ee3\u7801\u548c\u8bbe\u5907\u6216\u6a21\u62df\u5668\u4e4b\u95f4\u901a\u8fc7 Appium Server \u6765\u56de\u53d1\u9001\u6d88\u606f\n\n\n\u6d4b\u8bd5\u811a\u672c \u2014\u2014 \u4efb\u4f55\u5ba2\u6237\u7aef\u8bed\u8a00\u90fd\u53ef\u4ee5\uff0c\u53ea\u8981\u548c Appium \u517c\u5bb9\n\n\n\n\n\u8fd0\u884c Appium Server\uff0c\u7136\u540e\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\u3002\n\n\n\u5feb\u901f\u5f00\u59cb\uff1a\n\n\ngit clone https://github.com/appium/appium.git\ncd appium\nnpm install\ngulp transpile # requires gulp, see below\nnpm install -g authorize-ios # for ios only\nauthorize-ios                # for ios only\nnode .\n\n\n\n\ngit clone https://github.com/appium/appium.git\ncd appium\nnpm install\ngulp transpile # \u9700\u8981gulp\uff0c\u5f80\u4e0b\u770b\nnpm install -g authorize-ios # \u4ec5iOS\nauthorize-ios                # \u4ec5iOS\nnode .\n\n\n\n\n\u6363\u9f13\u6539\u9020 Appium\n\n\nMake sure you have \nant\n, \nmaven\n, \nadb\n installed and added to system \nPATH\n, also you\nwould need the android-16 sdk (for Selendroid) and android-19 sdk installed.\nFrom your local repo's command prompt, install the following packages using the\nfollowing commands (if you didn't install \nnode\n using Homebrew, you might have\nto run \nnpm\n with sudo privileges):\n\n\n\u786e\u4fdd\u5df2\u5b89\u88c5 \nant\n\u3001 \nmaven\n\u3001 \nadb\n \u4e14\u5df2\u6dfb\u52a0\u5230 \nPATH\n \u73af\u5883\u53d8\u91cf\uff0c\u8fd8\u9700\u8981\u5b89\u88c5 android-16 \u7684 sdk\uff08Selendroid\u9700\u8981\u4f7f\u7528\uff09\u548c android-19 \u7684 sdk\u3002\u5728 Appium \u672c\u5730\u4ed3\u5e93\u6253\u5f00\u547d\u4ee4\u884c\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\u4ee5\u4e0b\u5305\uff08\u5982\u679c\u4f60\u6ca1\u6709\u4f7f\u7528Homebrew\u5b89\u88c5\u8fc7 node\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528 sudo \u8fd0\u884c npm\uff09\uff1a\n\n\nnpm install -g mocha\nnpm install -g gulp\nnpm install -g gulp-cli\nnpm install -g appium-doctor && appium-doctor --dev\nnpm install\ngulp transpile\n\n\n\n\n\u524d\u4e24\u4e2a\u547d\u4ee4\u5b89\u88c5\u6d4b\u8bd5\u548c\u6784\u5efa\u5de5\u5177\uff08\u5982\u679c\u60a8\u901a\u8fc7 Homebrew \u5b89\u88c5\u4e86 nodejs\uff0c\u5219 \nsudo\n \u53ef\u80fd\u4e0d\u662f\u5fc5\u9700\u7684\uff09\u3002 \u7b2c\u4e09\u4e2a\u547d\u4ee4\u9a8c\u8bc1\u6240\u6709\u4f9d\u8d56\u5173\u7cfb\u662f\u5426\u6b63\u786e\u8bbe\u7f6e\uff08\u56e0\u4e3a\u6784\u5efa Appium \u7684\u4f9d\u8d56\u5173\u7cfb\u4e0d\u540c\u4e8e\u7b80\u5355\u8fd0\u884c Appium \u7684\u4f9d\u8d56\u9879\uff09\uff0c\u800c\u7b2c\u56db\u4e2a\u547d\u4ee4\u5c06\u5b89\u88c5\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u4f9d\u8d56\u5173\u7cfb\u5e76\u6784\u5efa\u652f\u6301\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u3002 \u6700\u7ec8\u7684\u547d\u4ee4\u5c06\u8f6c\u6362\u6240\u6709\u4ee3\u7801\uff0c\u4ee5\u4fbf nodejs \u53ef\u4ee5\u8fd0\u884c\u5b83\u3002\n\n\nWhen pulling new code from GitHub, if there are changes to \npackage.json\n it\nis necessary to remove the old dependencies and re-run \nnpm install\n:\n\n\n\u5f53\u4ece GitHub \u4e2d\u62c9\u51fa\u65b0\u7684\u4ee3\u7801\u65f6\uff0c\u5982\u679c \npackage.json\n \u6709\u66f4\u6539\uff0c\u9700\u8981\u5220\u9664\u65e7\u7684\u4f9d\u8d56\u5173\u7cfb\u5e76\u91cd\u65b0\u8fd0\u884c \nnpm install\n\uff1a\n\n\nrm -rf node_modules\nnpm install\ngulp transpile\n\n\n\n\n\u6b64\u65f6\uff0c\u60a8\u5c06\u53ef\u4ee5\u542f\u52a8 Appium Server\uff1a\n\n\nnode .\n\n\n\n\n\u5b8c\u6574\u7684\u53c2\u6570\u5217\u8868\uff0c\u8bf7\u53c2\u8003\nthe server documentation\n\n\nHacking with Appium for iOS\n\n\n\u9f13\u6363 iOS \u4e0a\u7684Appium\n\n\n\u4e3a\u4e86\u907f\u514d\u542f\u52a8iOS\u5e94\u7528\u7a0b\u5e8f\u65f6\u53ef\u80fd\u51fa\u73b0\u7684\u5b89\u5168\u5bf9\u8bdd\u6846\uff0c\u60a8\u5fc5\u987b\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u4e4b\u4e00\u4fee\u6539 \n/etc/authorization\n \u6587\u4ef6\uff1a\n\n\n\n\n\u624b\u52a8\u4fee\u6539 \n/etc/authorization\n \u6587\u4ef6\u4e2d\u7684 \n<key>system.privilege.taskport</key>\n \u4e0b\u7684 \n<allow-root>\n\u7684\u503c\u4e3a \n<true/>\n\u3002 \n\n\n\n\n\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u4e3a\u60a8\u81ea\u52a8\u4fee\u6539 \n/etc/authorization\n \u6587\u4ef6\uff1a\n\n\ncenter\nnpm install -g authorize-ios\nsudo authorize-ios\n\n\n\n\n\n\n\u6b64\u65f6\uff0c\u8fd0\u884c\uff1a\n\n\nrm -rf node-modules\nnpm install\ngulp transpile\n\n\n\n\n\u73b0\u5728\u4f60\u7684 Appium \u5b9e\u4f8b\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u3002\u8fd0\u884c \nnode .\n \u4ee5\u542f\u52a8Appium\u670d\u52a1\u5668\u3002\n\n\n\u9f13\u6363 Android \u4e0a\u7684Appium\n\n\n\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u914d\u7f6eAppium\uff1a\n\n\nrm -rf node-modules\nnpm install\ngulp transpile\n\n\n\n\n\u786e\u4fdd\u60a8\u53ea\u6709\u4e00\u4e2a Android \u6a21\u62df\u5668\u6216\u8bbe\u5907\u8fd0\u884c\uff0c\u4f8b\u5982\uff0c\u901a\u8fc7\u5728\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u6b64\u547d\u4ee4\uff08\u5047\u8bbe \nemulator\n \u547d\u4ee4\u5728\u60a8\u7684\u8def\u5f84\u4e0a\uff09\uff1a\n\n\nemulator -avd <MyAvdName>\n\n\n\n\n\u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 \nnode .\n \u8fd0\u884cAppium\u670d\u52a1\u5668\u4e86\u3002\n\n\n\u786e\u4fdd\u4f60\u7684\u4ee3\u7801\u662f\u6700\u65b0\u7684\n\n\n\u7531\u4e8eAppium\u4f7f\u7528\u67d0\u4e9b\u8f6f\u4ef6\u5305\u7684\u5f00\u53d1\u7248\u672c\uff0c\u56e0\u6b64\u901a\u5e38\u9700\u8981\u5b89\u88c5\u65b0 \nnpm\n \u8f6f\u4ef6\u5305\u6216\u66f4\u65b0\u5404\u79cd\u8f6f\u4ef6\u3002\u8fd0\u884c \nnpm install\n \u5c06\u66f4\u65b0\u6240\u9700\u7684\u4e00\u5207\u3002\u5f53 Appium \u5347\u7ea7\u7248\u672c\u65f6\uff0c\u60a8\u8fd8\u9700\u8981\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u5728\u8fd0\u884c \nnpm install\n \u4e4b\u524d\uff0c\u5efa\u8bae\u5148\u5220\u9664 \nnode_modules\n \u76ee\u5f55\u4e2d\u7684\u6240\u6709\u65e7\u4f9d\u8d56\u9879\uff1a\n\n\nrm -rf node-modules\nnpm install\ngulp transpile\n\n\n\n\n\u8fd0\u884c\u6d4b\u8bd5\n\n\n\u9996\u5148\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u5173\u4e8e\nrunning tests in\ngeneral\n \u7684\u6587\u6863\uff0c\u786e\u4fdd\u60a8\u7684\u7cfb\u7edf\u6b63\u786e\u8bbe\u7f6e\u4e3a\u60a8\u5e0c\u671b\u6d4b\u8bd5\u7684\u5e73\u53f0\u3002\n\n\n\u4e00\u65e6\u60a8\u7684\u7cfb\u7edf\u914d\u7f6e\u5b8c\u6bd5\uff0c\u60a8\u7684\u4ee3\u7801\u662f\u6700\u65b0\u7684\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\uff1a\n\n\ngulp once\n\n\n\n\n\u60a8\u53ef\u4ee5\u5bf9\u6240\u6709\u53d7\u652f\u6301\u7684\u5e73\u53f0\u8fd0\u884c\u529f\u80fd\u6d4b\u8bd5\uff08\u786e\u4fdd\u5728\u53e6\u4e00\u4e2a\u7a97\u53e3\u4e2d\u8fd0\u884cAppium \nnode .\n\uff09\u4e0e\uff1a\n\n\ngulp e2e-test\n\n\n\n\n\u5728\u63d0\u4ea4\u4ee3\u7801\u4e4b\u524d\uff0c\u8bf7\u8fd0\u884c \ngulp once\n \u4e00\u4e9b\u57fa\u672c\u6d4b\u8bd5\uff0c\u5e76\u6839\u636e\u4ee3\u7801\u8d28\u91cf\u6807\u51c6\u68c0\u67e5\u60a8\u7684\u66f4\u6539\u3002\n\n\n\u672c\u6587\u7531 \n\u6821\u957f\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Appium from source"
        },
        {
            "location": "/cn/contributing-to-appium/appium-from-source/#appium",
            "text": "\u4f60\u60f3\u4ece\u6e90\u7801\u8fd0\u884cAppium\u5e76\u5e2e\u52a9\u4fee\u590dBUG\u548c\u6dfb\u52a0\u529f\u80fd\u5417\uff1f\n\u771f\u68d2\uff01\u53ea\u9700\u8981fork\u5de5\u7a0b\uff0c\u6dfb\u52a0\u4e00\u4e2a\u4fee\u6539\uff0c\u7136\u540e\u53d1\u9001pull\u8bf7\u6c42\u5373\u53ef\uff01\n\u5728\u5f00\u59cb\u4e4b\u524d\u8bf7\u9605\u8bfb\u6211\u4eec\u7684\u4ee3\u7801\u98ce\u683c\u6307\u5357\uff08 Style Guide \u3002\n\u5728\u53d1\u9001pull\u8bf7\u6c42\u524d\u8bf7\u786e\u4fdd\u901a\u8fc7\u5355\u5143\u548c\u529f\u80fd\u6d4b\u8bd5\uff1b\u5173\u4e8e\u5982\u4f55\u8fd0\u884c\u6d4b\u8bd5\u7b49\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u7ee7\u7eed\u9605\u8bfb\uff01  \u9996\u5148\uff0c\u786e\u4fdd\u4f60\u9605\u8bfbREADME\u6587\u4ef6\u4e14\u6309\u7167\u8bbe\u7f6e\u8bf4\u660e\u8d70\u3002",
            "title": "\u4ece\u6e90\u7801\u8fd0\u884cAppium"
        },
        {
            "location": "/cn/contributing-to-appium/appium-from-source/#appium_1",
            "text": "Appium \u7684\u914d\u7f6e\u6d89\u53ca\uff1a   Appium Server \u2014\u2014 \u5728\u4f60\u7684\u6d4b\u8bd5\u4ee3\u7801\u548c\u8bbe\u5907\u6216\u6a21\u62df\u5668\u4e4b\u95f4\u901a\u8fc7 Appium Server \u6765\u56de\u53d1\u9001\u6d88\u606f  \u6d4b\u8bd5\u811a\u672c \u2014\u2014 \u4efb\u4f55\u5ba2\u6237\u7aef\u8bed\u8a00\u90fd\u53ef\u4ee5\uff0c\u53ea\u8981\u548c Appium \u517c\u5bb9   \u8fd0\u884c Appium Server\uff0c\u7136\u540e\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\u3002  \u5feb\u901f\u5f00\u59cb\uff1a  git clone https://github.com/appium/appium.git\ncd appium\nnpm install\ngulp transpile # requires gulp, see below\nnpm install -g authorize-ios # for ios only\nauthorize-ios                # for ios only\nnode .  git clone https://github.com/appium/appium.git\ncd appium\nnpm install\ngulp transpile # \u9700\u8981gulp\uff0c\u5f80\u4e0b\u770b\nnpm install -g authorize-ios # \u4ec5iOS\nauthorize-ios                # \u4ec5iOS\nnode .",
            "title": "\u4ece\u6e90\u7801\u914d\u7f6e Appium"
        },
        {
            "location": "/cn/contributing-to-appium/appium-from-source/#appium_2",
            "text": "Make sure you have  ant ,  maven ,  adb  installed and added to system  PATH , also you\nwould need the android-16 sdk (for Selendroid) and android-19 sdk installed.\nFrom your local repo's command prompt, install the following packages using the\nfollowing commands (if you didn't install  node  using Homebrew, you might have\nto run  npm  with sudo privileges):  \u786e\u4fdd\u5df2\u5b89\u88c5  ant \u3001  maven \u3001  adb  \u4e14\u5df2\u6dfb\u52a0\u5230  PATH  \u73af\u5883\u53d8\u91cf\uff0c\u8fd8\u9700\u8981\u5b89\u88c5 android-16 \u7684 sdk\uff08Selendroid\u9700\u8981\u4f7f\u7528\uff09\u548c android-19 \u7684 sdk\u3002\u5728 Appium \u672c\u5730\u4ed3\u5e93\u6253\u5f00\u547d\u4ee4\u884c\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\u4ee5\u4e0b\u5305\uff08\u5982\u679c\u4f60\u6ca1\u6709\u4f7f\u7528Homebrew\u5b89\u88c5\u8fc7 node\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528 sudo \u8fd0\u884c npm\uff09\uff1a  npm install -g mocha\nnpm install -g gulp\nnpm install -g gulp-cli\nnpm install -g appium-doctor && appium-doctor --dev\nnpm install\ngulp transpile  \u524d\u4e24\u4e2a\u547d\u4ee4\u5b89\u88c5\u6d4b\u8bd5\u548c\u6784\u5efa\u5de5\u5177\uff08\u5982\u679c\u60a8\u901a\u8fc7 Homebrew \u5b89\u88c5\u4e86 nodejs\uff0c\u5219  sudo  \u53ef\u80fd\u4e0d\u662f\u5fc5\u9700\u7684\uff09\u3002 \u7b2c\u4e09\u4e2a\u547d\u4ee4\u9a8c\u8bc1\u6240\u6709\u4f9d\u8d56\u5173\u7cfb\u662f\u5426\u6b63\u786e\u8bbe\u7f6e\uff08\u56e0\u4e3a\u6784\u5efa Appium \u7684\u4f9d\u8d56\u5173\u7cfb\u4e0d\u540c\u4e8e\u7b80\u5355\u8fd0\u884c Appium \u7684\u4f9d\u8d56\u9879\uff09\uff0c\u800c\u7b2c\u56db\u4e2a\u547d\u4ee4\u5c06\u5b89\u88c5\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u4f9d\u8d56\u5173\u7cfb\u5e76\u6784\u5efa\u652f\u6301\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u3002 \u6700\u7ec8\u7684\u547d\u4ee4\u5c06\u8f6c\u6362\u6240\u6709\u4ee3\u7801\uff0c\u4ee5\u4fbf nodejs \u53ef\u4ee5\u8fd0\u884c\u5b83\u3002  When pulling new code from GitHub, if there are changes to  package.json  it\nis necessary to remove the old dependencies and re-run  npm install :  \u5f53\u4ece GitHub \u4e2d\u62c9\u51fa\u65b0\u7684\u4ee3\u7801\u65f6\uff0c\u5982\u679c  package.json  \u6709\u66f4\u6539\uff0c\u9700\u8981\u5220\u9664\u65e7\u7684\u4f9d\u8d56\u5173\u7cfb\u5e76\u91cd\u65b0\u8fd0\u884c  npm install \uff1a  rm -rf node_modules\nnpm install\ngulp transpile  \u6b64\u65f6\uff0c\u60a8\u5c06\u53ef\u4ee5\u542f\u52a8 Appium Server\uff1a  node .  \u5b8c\u6574\u7684\u53c2\u6570\u5217\u8868\uff0c\u8bf7\u53c2\u8003 the server documentation",
            "title": "\u6363\u9f13\u6539\u9020 Appium"
        },
        {
            "location": "/cn/contributing-to-appium/appium-from-source/#hacking-with-appium-for-ios",
            "text": "",
            "title": "Hacking with Appium for iOS"
        },
        {
            "location": "/cn/contributing-to-appium/appium-from-source/#ios-appium",
            "text": "\u4e3a\u4e86\u907f\u514d\u542f\u52a8iOS\u5e94\u7528\u7a0b\u5e8f\u65f6\u53ef\u80fd\u51fa\u73b0\u7684\u5b89\u5168\u5bf9\u8bdd\u6846\uff0c\u60a8\u5fc5\u987b\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u4e4b\u4e00\u4fee\u6539  /etc/authorization  \u6587\u4ef6\uff1a   \u624b\u52a8\u4fee\u6539  /etc/authorization  \u6587\u4ef6\u4e2d\u7684  <key>system.privilege.taskport</key>  \u4e0b\u7684  <allow-root> \u7684\u503c\u4e3a  <true/> \u3002    \u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u4e3a\u60a8\u81ea\u52a8\u4fee\u6539  /etc/authorization  \u6587\u4ef6\uff1a  center\nnpm install -g authorize-ios\nsudo authorize-ios    \u6b64\u65f6\uff0c\u8fd0\u884c\uff1a  rm -rf node-modules\nnpm install\ngulp transpile  \u73b0\u5728\u4f60\u7684 Appium \u5b9e\u4f8b\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u3002\u8fd0\u884c  node .  \u4ee5\u542f\u52a8Appium\u670d\u52a1\u5668\u3002",
            "title": "\u9f13\u6363 iOS \u4e0a\u7684Appium"
        },
        {
            "location": "/cn/contributing-to-appium/appium-from-source/#android-appium",
            "text": "\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u914d\u7f6eAppium\uff1a  rm -rf node-modules\nnpm install\ngulp transpile  \u786e\u4fdd\u60a8\u53ea\u6709\u4e00\u4e2a Android \u6a21\u62df\u5668\u6216\u8bbe\u5907\u8fd0\u884c\uff0c\u4f8b\u5982\uff0c\u901a\u8fc7\u5728\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u6b64\u547d\u4ee4\uff08\u5047\u8bbe  emulator  \u547d\u4ee4\u5728\u60a8\u7684\u8def\u5f84\u4e0a\uff09\uff1a  emulator -avd <MyAvdName>  \u73b0\u5728\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7  node .  \u8fd0\u884cAppium\u670d\u52a1\u5668\u4e86\u3002",
            "title": "\u9f13\u6363 Android \u4e0a\u7684Appium"
        },
        {
            "location": "/cn/contributing-to-appium/appium-from-source/#_1",
            "text": "\u7531\u4e8eAppium\u4f7f\u7528\u67d0\u4e9b\u8f6f\u4ef6\u5305\u7684\u5f00\u53d1\u7248\u672c\uff0c\u56e0\u6b64\u901a\u5e38\u9700\u8981\u5b89\u88c5\u65b0  npm  \u8f6f\u4ef6\u5305\u6216\u66f4\u65b0\u5404\u79cd\u8f6f\u4ef6\u3002\u8fd0\u884c  npm install  \u5c06\u66f4\u65b0\u6240\u9700\u7684\u4e00\u5207\u3002\u5f53 Appium \u5347\u7ea7\u7248\u672c\u65f6\uff0c\u60a8\u8fd8\u9700\u8981\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u5728\u8fd0\u884c  npm install  \u4e4b\u524d\uff0c\u5efa\u8bae\u5148\u5220\u9664  node_modules  \u76ee\u5f55\u4e2d\u7684\u6240\u6709\u65e7\u4f9d\u8d56\u9879\uff1a  rm -rf node-modules\nnpm install\ngulp transpile",
            "title": "\u786e\u4fdd\u4f60\u7684\u4ee3\u7801\u662f\u6700\u65b0\u7684"
        },
        {
            "location": "/cn/contributing-to-appium/appium-from-source/#_2",
            "text": "\u9996\u5148\uff0c\u8bf7\u67e5\u770b\u6211\u4eec\u5173\u4e8e running tests in\ngeneral  \u7684\u6587\u6863\uff0c\u786e\u4fdd\u60a8\u7684\u7cfb\u7edf\u6b63\u786e\u8bbe\u7f6e\u4e3a\u60a8\u5e0c\u671b\u6d4b\u8bd5\u7684\u5e73\u53f0\u3002  \u4e00\u65e6\u60a8\u7684\u7cfb\u7edf\u914d\u7f6e\u5b8c\u6bd5\uff0c\u60a8\u7684\u4ee3\u7801\u662f\u6700\u65b0\u7684\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\uff1a  gulp once  \u60a8\u53ef\u4ee5\u5bf9\u6240\u6709\u53d7\u652f\u6301\u7684\u5e73\u53f0\u8fd0\u884c\u529f\u80fd\u6d4b\u8bd5\uff08\u786e\u4fdd\u5728\u53e6\u4e00\u4e2a\u7a97\u53e3\u4e2d\u8fd0\u884cAppium  node . \uff09\u4e0e\uff1a  gulp e2e-test  \u5728\u63d0\u4ea4\u4ee3\u7801\u4e4b\u524d\uff0c\u8bf7\u8fd0\u884c  gulp once  \u4e00\u4e9b\u57fa\u672c\u6d4b\u8bd5\uff0c\u5e76\u6839\u636e\u4ee3\u7801\u8d28\u91cf\u6807\u51c6\u68c0\u67e5\u60a8\u7684\u66f4\u6539\u3002  \u672c\u6587\u7531  \u6821\u957f  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u8fd0\u884c\u6d4b\u8bd5"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/",
            "text": "Appium \u7b80\u8ff0\n\n\n\n\nappium\n\n\n\n\n\u8fd0\u884c\u65f6\u7684\u57fa\u672c\u68c0\u67e5\n\n\n\u8282\u70b9\u7248\u672c\uff08>= 4\uff09\n\n\nCLI \u53c2\u6570\u68c0\u67e5\n\n\n\u5305\u542b\u6240\u6709\u53ef\u7528\u548c\u652f\u6301\u7684CLI\u53c2\u6570\n\n\n\u68c0\u662f\u5426\u6709\u51b2\u7a81\u548c\u5f03\u7528\n\n\n\n\n\n\n\u7edf\u4e00\u5b58\u653e\u65e5\u5fd7\n\n\n\u7edf\u4e00\u5b58\u653enpmlog, winston\u548cappium-logger\n\n\n\u542f\u52a8AppiumDriver\uff08\u7ee7\u627fBasedriver\uff09\n\n\n\u4e3aiOS/Android/Selendroid/Fake Driver \u5efa\u7acb\u4f1a\u8bdd\n\n\n\u521b\u5efa/\u5220\u9664Appium\u4f1a\u8bdd\n\n\n\u542f\u52a8baseServer (appium-express)\n\n\n\u901a\u8fc7\u9a71\u52a8\u7ed9\u51fa\u7684\u8def\u5f84 \n\n\n\n\nappium-express (\u90e8\u5206appium basedriver)\n\n\n\n\n\u542f\u52a8express server\uff08\u5141\u8bb8x-domain-origin\uff09\n\n\n\u4eceAppiumDriver\u521d\u59cb\u5316\n\n\n\u8d85\u65f6\u5904\u7406\n\n\n\u63d0\u4f9b\u4e00\u4e2a\u7528\u4e8e\u6d4b\u8bd5\u7684\u9759\u6001\u9875\u9762\n\n\n\u5c06req/res\u4e8b\u4ef6\u8bb0\u5165\u65e5\u5fd7\n\n\n\n\nmobile-json-wire-protocol (\u90e8\u5206appium basedriver)\n\n\n\n\n\u63d0\u4f9b\u4e86Appium\u547d\u4ee4\u5217\u8868\n\n\n\u901a\u8fc7\u534f\u8bae\u7684\u9a71\u52a8\u5b50\u7c7b\n  -\u5ba2\u6237\u7aef\u548c\u9a71\u52a8\u7a0b\u5e8f\u4e4b\u95f4\u7684\u4e2d\u95f4\u4ef6\n\n\n\u5904\u7406\u9a71\u52a8\u7a0b\u5e8f\u7684jwp\u4ee3\u7406\n\n\n\u5305\u542b\u6240\u6709\u7c7b\u578b\u9519\u8bef\u7684\u9519\u8bef\u7c7b\n\n\n\u6d88\u9664\u9519\u8bef\u54cd\u5e94\n\n\n\u5c06\u53c2\u6570\u5c01\u88c5/\u89e3\u5c01\u5230\u547d\u4ee4\u4e2d\n\n\n\u68c0\u67e5\u6240\u9700\u53c2\u6570\uff0c\u9a8c\u8bc1\u53c2\u6570\n\n\n\n\nappium basedriver\n\n\n\n\n\u6bcf\u4e2a\u5b9e\u4f8b\u5316\u90fd\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u6d4b\u8bd5\u4f1a\u8bdd\n\n\n\u5305\u542b\u5bf9caps\u7684\u7ea6\u675f \uff08platformName\u5fc5\u987b\u5b58\u5728\u7b49\uff09\n\n\n\u9a8c\u8bc1\u529f\u80fd\n\n\n\u8fd0\u884c\u5177\u6709\u5355\u4e2a\u5e76\u53d1\u6027\u7684\u547d\u4ee4\n\n\n\u5904\u7406\u4f1a\u8bdd\u91cd\u542f\n\n\n\u5904\u7406\u6ed1\u52a8\u9009\u9879\n\n\nDeviceSettings\u8d1f\u8d23\u8bbe\u5907\u7684get/update\u7ba1\u7406\n\n\n\u5305\u542b\u57fa\u672c\u547d\u4ee4\n\n\n\u627e\u5230\u5143\u7d20\n\n\n\u521b\u5efa/\u5220\u9664\u4f1a\u8bdd\n\n\n\u5904\u7406\u8d85\u65f6\n\n\n\u8bbe\u5907\u7684set/update\u8bbe\u7f6e\n\n\n\u4e3a\u547d\u4ee4\u63d0\u4f9b\u5e2e\u52a9\u65b9\u6cd5\n\n\n\n\nappiium iosdriver\n\n\n\n\n\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u72ec\u7acb\u670d\u52a1\u5668\u8fd0\u884c\uff08\u4eceappium-express\u7ee7\u627f\u4e86\u5c0f\u90e8\u5206\u670d\u52a1\uff09\n\n\n\u652f\u6301\u7684\u7b56\u7565\uff1a\u201cname\u201d\uff0c\u201cxpath\u201d\uff0c\u201cid\u201d\uff0c\u201c-ios uiautomation\u201d\uff0c\u201cclass name\u201d\uff0c\u201caccessibility id\u201d\n\n\n\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a\u6a21\u62df\u5668\u6216\u4e00\u4e2a\u771f\u5b9e\u7684\u8bbe\u5907\uff08\u9700\u8981\u6807\u660eudid\uff09\n\n\n\u6bcf\u4e2a\u7c7b\u578b\u7684\u8bf4\u660e\n\n\nremoveInstrumentsSocket\n\n\nsetBundleIdFromApp\n\n\ncreateInstruments\n\n\nrunSimReset, isolateSimDevice, setLocale || runRealDeviceReset\n\n\nsetPreferences || runRealDeviceReset\n\n\nstartLogCapture\n\n\nprelaunchSimulator || (noop)\n\n\nstartInstruments\n\n\nonInstrumentsLaunch\n\n\nconfigureBootstrap\n\n\nsetBundleId\n\n\nsetInitialOrientation\n\n\ninitAutoWebview\n\n\nwaitForAppLaunched\n\n\n\n\n\n\n\u6240\u6709\u5e2e\u52a9\u8bf4\u660e\u90fd\u5728driver.js\u4e2d\n\n\n\u5305\u542b\u4e00\u7ec4\u66f4\u5177\u4f53\u7684\u529f\u80fd\u7ea6\u675f\n\n\n\u6709\u4f7f\u7528appium-xcode\u6784\u5efa\u548c\u8fd0\u884cSafari\uff08safari-launcher\uff09\u7684\u903b\u8f91\n\n\n\u5b9e\u73b0iOSdriver\u7684\u547d\u4ee4\n\n\nSelenium\u547d\u4ee4\u88ab\u7f16\u8bd1\u4e3aui-automator\u547d\u4ee4\n\n\n\u547d\u4ee4\u5c06\u4f1a\u53d1\u9001\u5230uiAutoClient\uff08appium-uiauto\uff09\n\n\n\u8fde\u63a5\u5230appium\u8fdc\u7a0b\u8c03\u8bd5\u5668\n\n\n\n\nappium-xcode\n\n\n\n\n\u8fd0\u884cshell\u547d\u4ee4\u4eceXcode\u8fd4\u56de\u6709\u7528\u7684\u6570\u636e\uff0c\u6bd4\u5982\n\n\ngetPath\n\n\ngetVersion\n\n\ngetAutomationTraceTemplatePath\n\n\ngetMaxIOSSDK\n\n\n\u2026\n\n\n\u5185\u7f6e\u81ea\u52a8\u91cd\u8bd5\n\n\n\n\nappium-uiauto\n\n\n\n\n\u5c01\u88c5 iOS UI Automation \u6846\u67b6\u7684\n\n\n\u901a\u8fc7socket\u8fde\u63a5\u8fdb\u884c\u901a\u4fe1\n\n\n\u8fd0\u884c\u7531sendCommand\u51fd\u6570\u586b\u5145\u7684\u547d\u4ee4\u961f\u5217\n\n\n\u5904\u7406\u6765\u81eaui-automation\u7684\u54cd\u5e94\uff08\u4f5c\u4e3a\u7f13\u51b2\u533a\uff09\n\n\n\u4f7f\u7528osascript\u65cb\u8f6c\u5c4f\u5e55\u622a\u56fe\n\n\n\u63d0\u4f9bbootstrap simulator/realdevice (dynamic-bootstrap)\u7684\u65b9\u6cd5\n\n\n\u5728iOS UI\u81ea\u52a8\u5316\u4e0a\u4e0b\u6587\uff08\u975e\u8282\u70b9\uff09\u4e2d\u8fd0\u884c\u7684JavaScript\u6587\u4ef6\n\n\n\u8d1f\u8d23\u6267\u884c\u5b9e\u9645\u7684iOS UI Automation\u547d\u4ee4\n\n\n\u53c2\u8003 \nUIAutomation docs\n\n\n\u547d\u4ee4\u6d41\u7a0b\u5c31\u50cf\n\n\nWebdriver \u547d\u4ee4-> iOS driver \u547d\u4ee4 -> uiauto-\u547d\u4ee4\n\n\n\n\n\n\n\n\nappium-instruments\n\n\n\n\n\u5c01\u88c5\u8fd0\u884cinstruments\u7684\u547d\u4ee4\n\n\n\u5f88\u591aexec\u8c03\u7528\u4e0einstruments\u4e8c\u8fdb\u5236\u4e49\u4e92\n\n\n\u6240\u6709\u8fd9\u4e9b\u90fd\u91c7\u53d6\u56de\u8c03\u6765\u83b7\u53d6\u7ed3\u679c\n\n\n\u5fc5\u987b\u4f7f\u7528\u201ciwd\u201d\u5305\u7f16\u8bd1\u8f6f\u4ef6\u5305\n\n\n\u7279\u6b8a\u7684Instruments\u5305\u4e0d\u5b58\u5728\u547d\u4ee4\u5ef6\u8fdf\n  -\u00a0\u8fd8\u5305\u542b\u8f83\u65e7\u7248\u672c\u7684iwd instrument\uff08v4 - v7\uff09\n\n\n\n\nappium-ios\u65e5\u5fd7\n\n\n\n\n\u6355\u83b7iOS\u6a21\u62df\u5668\u6216\u5b9e\u9645\u8bbe\u5907\u7684\u63a7\u5236\u53f0\uff0c\u6027\u80fd\u548c\u5d29\u6e83\u65e5\u5fd7\n\n\n\u901a\u8fc7\u8c03\u7528tail\u6765\u4ece\u7cfb\u7edf\u8def\u5f84\u83b7\u53d6\u65e5\u5fd7\uff08\u6a21\u62df\u5668\u8bbe\u5907\uff09\n\n\n\u6216\u901a\u8fc7\u8c03\u7528deviceconsole\uff08\u5b9e\u9645\u8bbe\u5907\uff09 \n\n\n\u4f7f\u7528\u8fdc\u7a0b\u8c03\u8bd5\u5668\u6765\u6293\u53d6\u6027\u80fd\u65e5\u5fd7\n\n\n\u5d29\u6e83\u65e5\u5fd7\u4fdd\u7559\u5728\u7cfb\u7edf\u4e0a\u7684\u201c.crash\u201d\u6587\u4ef6\u4e2d\n\n\n\n\nappium-iOS-\u6a21\u62df\u5668\n\n\n\n\n\u5c01\u88c5iOS\u6a21\u62df\u5668\u5e94\u7528\u7a0b\u5e8f\n\n\n\u542f\u52a8\u548c\u5173\u95ed\uff08\u6740\u6b7b\u6240\u6709\uff09\u6a21\u62df\u5668\n\n\n\u66f4\u65b0\u8bbe\u7f6e\u548c\u672c\u5730\n\n\n\u66f4\u65b0/\u6e05\u9664 safari\n\n\n\u83b7\u53d6\u6709\u5173\u6a21\u62df\u5668\u8bbe\u5907\u7684\u5143\u6570\u636e\n\n\n\u4f7f\u7528simctl\u4e0e\u6a21\u62df\u5668\u901a\u4fe1\n\n\n\u9002\u7528\u4e8eXcode 6\u548c7\n\n\n\n\nauthorize-iOS\n\n\n\n\n\u7a0b\u5e8f\u9884\u5148\u6388\u6743Instruments\u9488\u5bf9iOS\u8bbe\u5907\u8fd0\u884cUIAutomation\u811a\u672c\n\n\n\u901a\u8fc7\u8c03\u7528\u201cDevToolsSecurity -enable\u201d\u6765\u542f\u7528\u5f00\u53d1\u4eba\u5458\u5de5\u5177\n\n\n\u6388\u6743\u7528\u6237\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\u8c03\u7528\u201cauthorizationdb\u201d\n\n\n\u6539\u53d8\u6a21\u62df\u5668\u76ee\u5f55\u7684\u6240\u6709\u6743\n\n\n\n\nnode-simctl\n\n\n\n\n\u5c01\u88c5simctl\u4e8c\u8fdb\u5236\uff08cli\u5b9e\u7528\u7a0b\u5e8f\u6765\u63a7\u5236iOS\u6a21\u62df\u5668\uff09\n\n\n\u4f5c\u4e3axcrun\u7684\u5b50\u547d\u4ee4\u6267\u884c\uff08\u4ece\u547d\u4ee4\u884c\u67e5\u627e\u6216\u8c03\u7528\u5f00\u53d1\u4eba\u5458\u5de5\u5177\uff09\n\n\n\u5305\u542b\u529f\u80fd\n\n\n\u5b89\u88c5/\u5220\u9664\u5e94\u7528\u7a0b\u5e8f \n\n\n\u542f\u52a8\u548c\u5173\u95ed\u6a21\u62df\u5668\n\n\n\u521b\u5efa/\u6e05\u9664/\u5220\u9664\u8bbe\u5907\n\n\n\u83b7\u53d6\u8bbe\u5907\u5217\u8868\n\n\n\n\nappium-cookies\n\n\n\n\n\u7b80\u5355\u7684\u5305\u6765\u521b\u5efa\u548c\u63a5\u6536cookie\n\n\n\u5728appium-iosdriver\u4e2d\u4f7f\u7528\uff0c\u4ee5\u5728Web\u4e0a\u4e0b\u6587\u4e2d\u5b9e\u73b0jswonwire cookie\u547d\u4ee4\n\n\n\n\nappium-chromedriver\n\n\n\n\n\u5c01\u88c5 chromedriver\n\n\n\u4e0b\u8f7d\u5e76\u5b89\u88c5chromedriver\u4e8c\u8fdb\u5236\u6587\u4ef6\n\n\n\u542f\u52a8\uff0c\u91cd\u65b0\u542f\u52a8\u5e76\u505c\u6b62\uff08\u6216\u6740\u6b7b\u6240\u6709\uff09chrome\u5b9e\u4f8b\n\n\n\u4f7f\u7528appium-jsonwp-proxy\u5411\u9a71\u52a8\u7a0b\u5e8f\u53d1\u9001json wire protocol\u547d\u4ee4\n\n\n\n\njsonwp-proxy (\u90e8\u5206appium basedriver)\n\n\n\n\n\u5141\u8bb8\u5c06json wire\u534f\u8bae\u547d\u4ee4\u53d1\u9001\u5230\u4e86\u89e3\u5b83\u7684\u670d\u52a1\u5668\uff08\u6d4f\u89c8\u5668\u9a71\u52a8\u7a0b\u5e8f\uff09\n\n\n\u89e3\u6790json\u7684\u54cd\u5e94\n\n\n\u5141\u8bb8\u4ee3\u7406\u670d\u52a1\u5668\u7684\u8bf7\u6c42\n\n\n\u7528\u4e8e\u5728Chromium-Chromedriver\u548cappium-selendroiddriver\u4e2d\u8fdb\u884c\u901a\u4fe1\n\n\n\n\nappium-androiddriver\n\n\n\n\n\u7c7b\u4f3c\u4e8eappium-iosdriver\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u72ec\u7acb\u670d\u52a1\u8fd0\u884c\n\n\n\u81ea\u52a8\u5316\u6a21\u62df\u5668\u548c\u5b9e\u9645\u8bbe\u5907\u4e0a\u7684\u672c\u5730\uff0c\u6df7\u5408\u548c\u79fb\u52a8Web\u5e94\u7528\u7a0b\u5e8f\n\n\n\u8d1f\u8d23\u5b89\u88c5Android\u8f6f\u4ef6\u5305\u5230\u8bbe\u5907\n\n\n\u5982\u679c\u9700\u8981\uff0c\u8fd0\u884cchromedriver\u4f1a\u8bdd\n\n\n\u5305\u542b\u4e00\u7ec4\u66f4\u5177\u4f53\u7684\u529f\u80fd\u7ea6\u675f\n\n\n\u4f7f\u7528appium-adb\u4e0eemulator/simulator/realdevice\u8fdb\u884c\u4ea4\u4e92\n\n\n\u548cappium-android-bootstrap\u6765\u6267\u884c\u5b9e\u9645\u7684\u547d\u4ee4\n\n\n\u5305\u542b\u5e2e\u5fd9\u627e\u51fa\u54ea\u4e2a\u7f51\u9875\u89c6\u56fe\u5c5e\u4e8e\u54ea\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5305\uff0c\u53cd\u4e4b\u4ea6\u7136\n\n\n\n\nappium-adb\n\n\n\n\n\u5c01\u88c5 Android Debug Bridge\uff08adb\uff09\n\n\n\u5305\u542b\u4e00\u4e9b\u57fa\u672c\u7684rpc\u5230adb\u4e8c\u8fdb\u5236\u7684\u547d\u4ee4\n\n\n\u5bb9\u7eb3jar\u6587\u4ef6\u6765\u8fd0\u884c\u7279\u6b8a\u7528\u4f8b\uff0c\u4f8b\u5982\u7b7e\u540d\uff0c\u9a8c\u8bc1\u5e94\u7528\u7a0b\u5e8f\u6216\u79fb\u52a8\u6e05\u5355\n\n\n\u5141\u8bb8\u4e0ewebdriver\u534f\u8bae\u65e0\u5173\u7684\u7279\u6b8a\uff08\u79fb\u52a8\u4e13\u7528\uff09\u6a21\u62df\u5668\u547d\u4ee4\n\n\n\u9501\u5b9a\u5c4f\u5e55\n\n\n\u6309\u8fd4\u56de\u6309\u94ae\n\n\n\u6309home\u6309\u94ae\n\n\n\u8bbe\u7f6e/\u83b7\u53d6\u98de\u884c\u6a21\u5f0f\n\n\n\u8bbe\u7f6e/\u83b7\u53d6wifi\u72b6\u6001\n\n\n\u6355\u83b7logcat\n\n\n\u5904\u7406\u6a21\u62df\u5668/\u6a21\u62df\u5668\u52a8\u4f5c\uff08\u4f8b\u5982\u91cd\u542f\uff09\n\n\n\n\nappium-androidbootstrap\n\n\n\n\nJavaScript\u754c\u9762\u200b\u200b\u548cJava\u4ee3\u7801\uff0c\u7528\u4e8e\u4e0eAndroid UI Automator\u8fdb\u884c\u4ea4\u4e92\n\n\n\u6784\u5efa\u5305\u542b\u6267\u884c\u547d\u4ee4\u7684\u903b\u8f91\u7684AppiumBootstrap.jar\n\n\n\u5bf9\u5e94\u7684 iOS \u4e0a\u7684 appium-uiauto\n\n\n\u4e00\u65e6\u542f\u52a8\uff0c\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u5230\u8bbe\u5907\u7684web scoket\u8fde\u63a5\n\n\n\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u542f\u52a8/\u5173\u95ed/\u53d1\u9001\u547d\u4ee4\u63a5\u53e3\n\n\n\u547d\u4ee4\u6d41\u7a0b\u5982\u4e0b\uff1a\n\n\nSelenium \u547d\u4ee4 - > appium-adb - > appium-androidbootstrap - > \u4f7f\u7528Android UI Automator \u6846\u67b6\u7684 Java \u4ee3\u7801\n\n\n\n\nappium-uiautomator\n\n\n\n\n\u542f\u52a8\u548c\u5173\u95eduiautomator\u670d\u52a1\u5668\u7531appium-android-bootstrap jar\u5efa\u7acb\n\n\n\u547d\u4ee4\u6d41\u7a0b\u5c31\u50cf\n\n\nappium-android-bootstrap:start -> appium-uiautomator:start -> appium-adb:install bootstrap\n\n\n\n\nappium-selendroiddriver\n\n\n\n\n\u7c7b\u4f3c\u4e8eappium-androiddriver\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u72ec\u7acb\u670d\u52a1\u8fd0\u884c\n\n\n\u4f7f\u7528appium-selendroid-installer\u4e0b\u8f7d\u5e76\u5b89\u88c5Selendroid\n\n\n\u5305\u542b\u51e0\u4e2aSelendroid\u7279\u5b9a\u7684\u903b\u8f91\uff0c\u4ee5\u786e\u4fdd\u65e0\u7f1d\u96c6\u6210\n\n\n\u5305\u542b\u4e00\u7ec4\u66f4\u5177\u4f53\u7684\u529f\u80fd\u7ea6\u675f\n\n\n\u4f7f\u7528jsonwp-proxy\u4e0e\u670d\u52a1\u5668\u4ea4\u4e92\n\n\n\u4f7f\u7528appium-adb\u542f\u7528\u5728Selendroid\u4e2d\u672a\u5b9e\u73b0\u7684\u547d\u4ee4\n\n\n\n\nappium-selendroid \u5b89\u88c5\u7a0b\u5e8f\n\n\n\n\n\u5305\u542b\u5e76\u5bfc\u51fa\u8bbe\u7f6e\u903b\u8f91\n\n\n\u4e0b\u8f7dSelendroid\n\n\n\u786e\u5b9aAndroidManifest\u7684\u4f4d\u7f6e\n\n\n\u786e\u5b9aServer APK\u7684\u4f4d\u7f6e\n\n\n\u63d0\u53d6\u8fd9\u4e24\u4e2a\u6587\u4ef6\n\n\n\u590d\u5236\u548c\u6e05\u7406\u6587\u4ef6\n\n\n\n\nappium-android-ime\n\n\n\n\n\u5141\u8bb8\u4ece Android \u8bbe\u5907\u53d1\u9001\u548c\u63a5\u6536 unicode \u5b57\u7b26\n\n\n\u5c06\u6587\u672c\u7f16\u7801\u4e3aUTF-7\u5c06\u5176\u53d1\u9001\u5230\u8bbe\u5907\u5e76\u5c06\u5176\u91cd\u65b0\u7f16\u7801\u4e3a Unicode\n\n\n\u7531 appium-androiddriver \u548c appium-selendroiddriver \u4f7f\u7528\n\n\n\n\nappium-doctor\n\n\n\n\n\u5728\u542f\u52a8Appium\u4e4b\u524d\u8bca\u65ad\uff0c\u62a5\u544a\u548c\u4fee\u590d\u5e38\u89c1\u7684Node\uff0ciOS\u548cAndroid\u914d\u7f6e\u95ee\u9898\n\n\n\u66b4\u9732cli\u547d\u4ee4\u201cappium-doctor\u201d\n\n\n\u5b83\u68c0\u67e5\n\n\nAndroid:\n\n\nandroid sdk\u5b58\u5728\u5e76\u6b63\u786e\u914d\u7f6e\n\n\nenv\u53d8\u91cf\u548c\u8def\u5f84\u68c0\u67e5\n\n\n\n\n\n\niOS:\n\n\n\u5b89\u88c5\u4e86xcode\uff08\u4f7f\u7528\u547d\u4ee4\u884c\u5de5\u5177\uff09\n\n\n\u5f00\u53d1\u5de5\u5177\u5b89\u5168\u68c0\u67e5\n\n\nauth\u68c0\u67e5\n\n\nnodejs \u68c0\u67e5\n\n\n\n\n\n\n\n\nappium-gulp-plugins\n\n\n\n\n\u5177\u6709\u5b9a\u5236\u63d2\u4ef6\u7684\u5f00\u53d1\u5305\u4f7f\u7528\u4ea4\u53c9\u5e94\u7528\u6a21\u5757\uff08\u4ec5\u9002\u7528\u4e8eAppium\u5f00\u53d1\uff09\n\n\n\u5305\u542b\u4efb\u52a1\n\n\ne2e\u548c\u5355\u5143\u6d4b\u8bd5\uff08\u8986\u76d6\u7387\u62a5\u544a\uff09\n\n\n\u5c06ES2016 \u8f6c\u6362\u6210 ES5 \n\n\n\u9759\u6001\u4ee3\u7801\u5206\u6790\uff08jshint\uff09\n\n\n\u5f00\u53d1\u4eba\u5458\u7684\u4efb\u52a1\n\n\n\n\nappium-remote-debugger\n\n\n\n\nRPC\u5ba2\u6237\u7aef\u5c06Appium\u8fde\u63a5\u5230iOS\u7f51\u9875\u6d4f\u89c8\n\n\n\u53ef\u4ee5\u8fde\u63a5\u5230WebKit devtools\n\n\n\u4ec5\u9002\u7528\u4e8eiOS\n\n\n\u6709\u4e24\u4e2arpc\u5ba2\u6237\u7aef\u7c7b\n\n\nremote-debugger-rpc-client\uff1a\u4f7f\u7528\u8fde\u63a5\u5230localhost\u7684tcp6\uff1a27753\n\n\nwebkit-rpc-client\uff1a\u4f7f\u7528WebSockets\u8fde\u63a5\u5230ws\uff1a// localhost\uff1a27753 / devtools / page / $ {pageId}\n\n\n\n\nnode-teen_process\n\n\n\n\n\u52a9\u624b\u6a21\u5757\u66b4\u9732\uff1a\n\n\nexec\uff1a\u5728\u5f15\u64ce\u76d6\u4e0b\u4f7f\u7528spawn\u7684exec\u7684ES7\uff08async / await\uff09\u5b9e\u73b0\n\n\nSubProcess\uff1a\u5728\u4f7f\u7528spawn\u65f6\u51cf\u5c11\u6837\u677f\uff08\u7279\u522b\u662f\u5728async / await\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u65f6\uff09\n\n\n\n\nappium \u65e5\u5fd7\n\n\n\n\n\u8fd0\u884c\u65f6\uff0c\u65e5\u5fd7\u5668\u9ed8\u8ba4\u4e3a npmlog\uff0c\n\n\n\u66b4\u9732\u4e86\u51e0\u4e4e\u6240\u6709\u7684Appium\u8f6f\u4ef6\u5305\u4f7f\u7528\u7684getLogger\u51fd\u6570\n\n\n\u5982\u679c\u6709\u4e00\u4e2a\u5df2\u7ecf\u8fd0\u884c\u7684\u8bb0\u5f55\u5668\uff0c\u90a3\u4e48\u6240\u6709\u7684\u4e1c\u897f\u90fd\u4f1a\u8bb0\u5f55\n\n\n\n\nappium-support\n\n\n\n\n\u7528\u4e8e\u652f\u6301\u8de8\u5e94\u7528\u7a0b\u5e8f\u5305\u7684\u5e93\u7684\u5b9e\u7528\u7a0b\u5e8f\u51fd\u6570\u3002\n\n\n\u4e3a\u4e00\u4e9b\u5e38\u89c1\u7684\u64cd\u4f5c\u63d0\u4f9b\u5c01\u88c5\uff0c\u5982\n\n\n\u7cfb\u7edf\u65b9\u6cd5\uff08isWindows\uff0cisLinux ...\uff09\n\n\n\u5b9e\u7528\u7a0b\u5e8f\u65b9\u6cd5\uff0c\u5982hasValue\uff0cescapeSpace\n\n\n\u4e00\u5806fs\u65b9\u6cd5\n\n\nplist\u5e2e\u52a9\u89e3\u6790\u548c\u66f4\u65b0plist\u6587\u4ef6\n\n\n\n\n\u672c\u6587\u7531 \n\u6821\u957f\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Appium packages"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium",
            "text": "",
            "title": "Appium \u7b80\u8ff0"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium_1",
            "text": "\u8fd0\u884c\u65f6\u7684\u57fa\u672c\u68c0\u67e5  \u8282\u70b9\u7248\u672c\uff08>= 4\uff09  CLI \u53c2\u6570\u68c0\u67e5  \u5305\u542b\u6240\u6709\u53ef\u7528\u548c\u652f\u6301\u7684CLI\u53c2\u6570  \u68c0\u662f\u5426\u6709\u51b2\u7a81\u548c\u5f03\u7528    \u7edf\u4e00\u5b58\u653e\u65e5\u5fd7  \u7edf\u4e00\u5b58\u653enpmlog, winston\u548cappium-logger  \u542f\u52a8AppiumDriver\uff08\u7ee7\u627fBasedriver\uff09  \u4e3aiOS/Android/Selendroid/Fake Driver \u5efa\u7acb\u4f1a\u8bdd  \u521b\u5efa/\u5220\u9664Appium\u4f1a\u8bdd  \u542f\u52a8baseServer (appium-express)  \u901a\u8fc7\u9a71\u52a8\u7ed9\u51fa\u7684\u8def\u5f84",
            "title": "appium"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-express-appium-basedriver",
            "text": "\u542f\u52a8express server\uff08\u5141\u8bb8x-domain-origin\uff09  \u4eceAppiumDriver\u521d\u59cb\u5316  \u8d85\u65f6\u5904\u7406  \u63d0\u4f9b\u4e00\u4e2a\u7528\u4e8e\u6d4b\u8bd5\u7684\u9759\u6001\u9875\u9762  \u5c06req/res\u4e8b\u4ef6\u8bb0\u5165\u65e5\u5fd7",
            "title": "appium-express (\u90e8\u5206appium basedriver)"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#mobile-json-wire-protocol-appium-basedriver",
            "text": "\u63d0\u4f9b\u4e86Appium\u547d\u4ee4\u5217\u8868  \u901a\u8fc7\u534f\u8bae\u7684\u9a71\u52a8\u5b50\u7c7b\n  -\u5ba2\u6237\u7aef\u548c\u9a71\u52a8\u7a0b\u5e8f\u4e4b\u95f4\u7684\u4e2d\u95f4\u4ef6  \u5904\u7406\u9a71\u52a8\u7a0b\u5e8f\u7684jwp\u4ee3\u7406  \u5305\u542b\u6240\u6709\u7c7b\u578b\u9519\u8bef\u7684\u9519\u8bef\u7c7b  \u6d88\u9664\u9519\u8bef\u54cd\u5e94  \u5c06\u53c2\u6570\u5c01\u88c5/\u89e3\u5c01\u5230\u547d\u4ee4\u4e2d  \u68c0\u67e5\u6240\u9700\u53c2\u6570\uff0c\u9a8c\u8bc1\u53c2\u6570",
            "title": "mobile-json-wire-protocol (\u90e8\u5206appium basedriver)"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-basedriver",
            "text": "\u6bcf\u4e2a\u5b9e\u4f8b\u5316\u90fd\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u6d4b\u8bd5\u4f1a\u8bdd  \u5305\u542b\u5bf9caps\u7684\u7ea6\u675f \uff08platformName\u5fc5\u987b\u5b58\u5728\u7b49\uff09  \u9a8c\u8bc1\u529f\u80fd  \u8fd0\u884c\u5177\u6709\u5355\u4e2a\u5e76\u53d1\u6027\u7684\u547d\u4ee4  \u5904\u7406\u4f1a\u8bdd\u91cd\u542f  \u5904\u7406\u6ed1\u52a8\u9009\u9879  DeviceSettings\u8d1f\u8d23\u8bbe\u5907\u7684get/update\u7ba1\u7406  \u5305\u542b\u57fa\u672c\u547d\u4ee4  \u627e\u5230\u5143\u7d20  \u521b\u5efa/\u5220\u9664\u4f1a\u8bdd  \u5904\u7406\u8d85\u65f6  \u8bbe\u5907\u7684set/update\u8bbe\u7f6e  \u4e3a\u547d\u4ee4\u63d0\u4f9b\u5e2e\u52a9\u65b9\u6cd5",
            "title": "appium basedriver"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appiium-iosdriver",
            "text": "\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u72ec\u7acb\u670d\u52a1\u5668\u8fd0\u884c\uff08\u4eceappium-express\u7ee7\u627f\u4e86\u5c0f\u90e8\u5206\u670d\u52a1\uff09  \u652f\u6301\u7684\u7b56\u7565\uff1a\u201cname\u201d\uff0c\u201cxpath\u201d\uff0c\u201cid\u201d\uff0c\u201c-ios uiautomation\u201d\uff0c\u201cclass name\u201d\uff0c\u201caccessibility id\u201d  \u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a\u6a21\u62df\u5668\u6216\u4e00\u4e2a\u771f\u5b9e\u7684\u8bbe\u5907\uff08\u9700\u8981\u6807\u660eudid\uff09  \u6bcf\u4e2a\u7c7b\u578b\u7684\u8bf4\u660e  removeInstrumentsSocket  setBundleIdFromApp  createInstruments  runSimReset, isolateSimDevice, setLocale || runRealDeviceReset  setPreferences || runRealDeviceReset  startLogCapture  prelaunchSimulator || (noop)  startInstruments  onInstrumentsLaunch  configureBootstrap  setBundleId  setInitialOrientation  initAutoWebview  waitForAppLaunched    \u6240\u6709\u5e2e\u52a9\u8bf4\u660e\u90fd\u5728driver.js\u4e2d  \u5305\u542b\u4e00\u7ec4\u66f4\u5177\u4f53\u7684\u529f\u80fd\u7ea6\u675f  \u6709\u4f7f\u7528appium-xcode\u6784\u5efa\u548c\u8fd0\u884cSafari\uff08safari-launcher\uff09\u7684\u903b\u8f91  \u5b9e\u73b0iOSdriver\u7684\u547d\u4ee4  Selenium\u547d\u4ee4\u88ab\u7f16\u8bd1\u4e3aui-automator\u547d\u4ee4  \u547d\u4ee4\u5c06\u4f1a\u53d1\u9001\u5230uiAutoClient\uff08appium-uiauto\uff09  \u8fde\u63a5\u5230appium\u8fdc\u7a0b\u8c03\u8bd5\u5668",
            "title": "appiium iosdriver"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-xcode",
            "text": "\u8fd0\u884cshell\u547d\u4ee4\u4eceXcode\u8fd4\u56de\u6709\u7528\u7684\u6570\u636e\uff0c\u6bd4\u5982  getPath  getVersion  getAutomationTraceTemplatePath  getMaxIOSSDK  \u2026  \u5185\u7f6e\u81ea\u52a8\u91cd\u8bd5",
            "title": "appium-xcode"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-uiauto",
            "text": "\u5c01\u88c5 iOS UI Automation \u6846\u67b6\u7684  \u901a\u8fc7socket\u8fde\u63a5\u8fdb\u884c\u901a\u4fe1  \u8fd0\u884c\u7531sendCommand\u51fd\u6570\u586b\u5145\u7684\u547d\u4ee4\u961f\u5217  \u5904\u7406\u6765\u81eaui-automation\u7684\u54cd\u5e94\uff08\u4f5c\u4e3a\u7f13\u51b2\u533a\uff09  \u4f7f\u7528osascript\u65cb\u8f6c\u5c4f\u5e55\u622a\u56fe  \u63d0\u4f9bbootstrap simulator/realdevice (dynamic-bootstrap)\u7684\u65b9\u6cd5  \u5728iOS UI\u81ea\u52a8\u5316\u4e0a\u4e0b\u6587\uff08\u975e\u8282\u70b9\uff09\u4e2d\u8fd0\u884c\u7684JavaScript\u6587\u4ef6  \u8d1f\u8d23\u6267\u884c\u5b9e\u9645\u7684iOS UI Automation\u547d\u4ee4  \u53c2\u8003  UIAutomation docs  \u547d\u4ee4\u6d41\u7a0b\u5c31\u50cf  Webdriver \u547d\u4ee4-> iOS driver \u547d\u4ee4 -> uiauto-\u547d\u4ee4",
            "title": "appium-uiauto"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-instruments",
            "text": "\u5c01\u88c5\u8fd0\u884cinstruments\u7684\u547d\u4ee4  \u5f88\u591aexec\u8c03\u7528\u4e0einstruments\u4e8c\u8fdb\u5236\u4e49\u4e92  \u6240\u6709\u8fd9\u4e9b\u90fd\u91c7\u53d6\u56de\u8c03\u6765\u83b7\u53d6\u7ed3\u679c  \u5fc5\u987b\u4f7f\u7528\u201ciwd\u201d\u5305\u7f16\u8bd1\u8f6f\u4ef6\u5305  \u7279\u6b8a\u7684Instruments\u5305\u4e0d\u5b58\u5728\u547d\u4ee4\u5ef6\u8fdf\n  -\u00a0\u8fd8\u5305\u542b\u8f83\u65e7\u7248\u672c\u7684iwd instrument\uff08v4 - v7\uff09",
            "title": "appium-instruments"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-ios",
            "text": "\u6355\u83b7iOS\u6a21\u62df\u5668\u6216\u5b9e\u9645\u8bbe\u5907\u7684\u63a7\u5236\u53f0\uff0c\u6027\u80fd\u548c\u5d29\u6e83\u65e5\u5fd7  \u901a\u8fc7\u8c03\u7528tail\u6765\u4ece\u7cfb\u7edf\u8def\u5f84\u83b7\u53d6\u65e5\u5fd7\uff08\u6a21\u62df\u5668\u8bbe\u5907\uff09  \u6216\u901a\u8fc7\u8c03\u7528deviceconsole\uff08\u5b9e\u9645\u8bbe\u5907\uff09   \u4f7f\u7528\u8fdc\u7a0b\u8c03\u8bd5\u5668\u6765\u6293\u53d6\u6027\u80fd\u65e5\u5fd7  \u5d29\u6e83\u65e5\u5fd7\u4fdd\u7559\u5728\u7cfb\u7edf\u4e0a\u7684\u201c.crash\u201d\u6587\u4ef6\u4e2d",
            "title": "appium-ios\u65e5\u5fd7"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-ios-",
            "text": "\u5c01\u88c5iOS\u6a21\u62df\u5668\u5e94\u7528\u7a0b\u5e8f  \u542f\u52a8\u548c\u5173\u95ed\uff08\u6740\u6b7b\u6240\u6709\uff09\u6a21\u62df\u5668  \u66f4\u65b0\u8bbe\u7f6e\u548c\u672c\u5730  \u66f4\u65b0/\u6e05\u9664 safari  \u83b7\u53d6\u6709\u5173\u6a21\u62df\u5668\u8bbe\u5907\u7684\u5143\u6570\u636e  \u4f7f\u7528simctl\u4e0e\u6a21\u62df\u5668\u901a\u4fe1  \u9002\u7528\u4e8eXcode 6\u548c7",
            "title": "appium-iOS-\u6a21\u62df\u5668"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#authorize-ios",
            "text": "\u7a0b\u5e8f\u9884\u5148\u6388\u6743Instruments\u9488\u5bf9iOS\u8bbe\u5907\u8fd0\u884cUIAutomation\u811a\u672c  \u901a\u8fc7\u8c03\u7528\u201cDevToolsSecurity -enable\u201d\u6765\u542f\u7528\u5f00\u53d1\u4eba\u5458\u5de5\u5177  \u6388\u6743\u7528\u6237\u4f5c\u4e3a\u5f00\u53d1\u4eba\u5458\u8c03\u7528\u201cauthorizationdb\u201d  \u6539\u53d8\u6a21\u62df\u5668\u76ee\u5f55\u7684\u6240\u6709\u6743",
            "title": "authorize-iOS"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#node-simctl",
            "text": "\u5c01\u88c5simctl\u4e8c\u8fdb\u5236\uff08cli\u5b9e\u7528\u7a0b\u5e8f\u6765\u63a7\u5236iOS\u6a21\u62df\u5668\uff09  \u4f5c\u4e3axcrun\u7684\u5b50\u547d\u4ee4\u6267\u884c\uff08\u4ece\u547d\u4ee4\u884c\u67e5\u627e\u6216\u8c03\u7528\u5f00\u53d1\u4eba\u5458\u5de5\u5177\uff09  \u5305\u542b\u529f\u80fd  \u5b89\u88c5/\u5220\u9664\u5e94\u7528\u7a0b\u5e8f   \u542f\u52a8\u548c\u5173\u95ed\u6a21\u62df\u5668  \u521b\u5efa/\u6e05\u9664/\u5220\u9664\u8bbe\u5907  \u83b7\u53d6\u8bbe\u5907\u5217\u8868",
            "title": "node-simctl"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-cookies",
            "text": "\u7b80\u5355\u7684\u5305\u6765\u521b\u5efa\u548c\u63a5\u6536cookie  \u5728appium-iosdriver\u4e2d\u4f7f\u7528\uff0c\u4ee5\u5728Web\u4e0a\u4e0b\u6587\u4e2d\u5b9e\u73b0jswonwire cookie\u547d\u4ee4",
            "title": "appium-cookies"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-chromedriver",
            "text": "\u5c01\u88c5 chromedriver  \u4e0b\u8f7d\u5e76\u5b89\u88c5chromedriver\u4e8c\u8fdb\u5236\u6587\u4ef6  \u542f\u52a8\uff0c\u91cd\u65b0\u542f\u52a8\u5e76\u505c\u6b62\uff08\u6216\u6740\u6b7b\u6240\u6709\uff09chrome\u5b9e\u4f8b  \u4f7f\u7528appium-jsonwp-proxy\u5411\u9a71\u52a8\u7a0b\u5e8f\u53d1\u9001json wire protocol\u547d\u4ee4",
            "title": "appium-chromedriver"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#jsonwp-proxy-appium-basedriver",
            "text": "\u5141\u8bb8\u5c06json wire\u534f\u8bae\u547d\u4ee4\u53d1\u9001\u5230\u4e86\u89e3\u5b83\u7684\u670d\u52a1\u5668\uff08\u6d4f\u89c8\u5668\u9a71\u52a8\u7a0b\u5e8f\uff09  \u89e3\u6790json\u7684\u54cd\u5e94  \u5141\u8bb8\u4ee3\u7406\u670d\u52a1\u5668\u7684\u8bf7\u6c42  \u7528\u4e8e\u5728Chromium-Chromedriver\u548cappium-selendroiddriver\u4e2d\u8fdb\u884c\u901a\u4fe1",
            "title": "jsonwp-proxy (\u90e8\u5206appium basedriver)"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-androiddriver",
            "text": "\u7c7b\u4f3c\u4e8eappium-iosdriver\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u72ec\u7acb\u670d\u52a1\u8fd0\u884c  \u81ea\u52a8\u5316\u6a21\u62df\u5668\u548c\u5b9e\u9645\u8bbe\u5907\u4e0a\u7684\u672c\u5730\uff0c\u6df7\u5408\u548c\u79fb\u52a8Web\u5e94\u7528\u7a0b\u5e8f  \u8d1f\u8d23\u5b89\u88c5Android\u8f6f\u4ef6\u5305\u5230\u8bbe\u5907  \u5982\u679c\u9700\u8981\uff0c\u8fd0\u884cchromedriver\u4f1a\u8bdd  \u5305\u542b\u4e00\u7ec4\u66f4\u5177\u4f53\u7684\u529f\u80fd\u7ea6\u675f  \u4f7f\u7528appium-adb\u4e0eemulator/simulator/realdevice\u8fdb\u884c\u4ea4\u4e92  \u548cappium-android-bootstrap\u6765\u6267\u884c\u5b9e\u9645\u7684\u547d\u4ee4  \u5305\u542b\u5e2e\u5fd9\u627e\u51fa\u54ea\u4e2a\u7f51\u9875\u89c6\u56fe\u5c5e\u4e8e\u54ea\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5305\uff0c\u53cd\u4e4b\u4ea6\u7136",
            "title": "appium-androiddriver"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-adb",
            "text": "\u5c01\u88c5 Android Debug Bridge\uff08adb\uff09  \u5305\u542b\u4e00\u4e9b\u57fa\u672c\u7684rpc\u5230adb\u4e8c\u8fdb\u5236\u7684\u547d\u4ee4  \u5bb9\u7eb3jar\u6587\u4ef6\u6765\u8fd0\u884c\u7279\u6b8a\u7528\u4f8b\uff0c\u4f8b\u5982\u7b7e\u540d\uff0c\u9a8c\u8bc1\u5e94\u7528\u7a0b\u5e8f\u6216\u79fb\u52a8\u6e05\u5355  \u5141\u8bb8\u4e0ewebdriver\u534f\u8bae\u65e0\u5173\u7684\u7279\u6b8a\uff08\u79fb\u52a8\u4e13\u7528\uff09\u6a21\u62df\u5668\u547d\u4ee4  \u9501\u5b9a\u5c4f\u5e55  \u6309\u8fd4\u56de\u6309\u94ae  \u6309home\u6309\u94ae  \u8bbe\u7f6e/\u83b7\u53d6\u98de\u884c\u6a21\u5f0f  \u8bbe\u7f6e/\u83b7\u53d6wifi\u72b6\u6001  \u6355\u83b7logcat  \u5904\u7406\u6a21\u62df\u5668/\u6a21\u62df\u5668\u52a8\u4f5c\uff08\u4f8b\u5982\u91cd\u542f\uff09",
            "title": "appium-adb"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-androidbootstrap",
            "text": "JavaScript\u754c\u9762\u200b\u200b\u548cJava\u4ee3\u7801\uff0c\u7528\u4e8e\u4e0eAndroid UI Automator\u8fdb\u884c\u4ea4\u4e92  \u6784\u5efa\u5305\u542b\u6267\u884c\u547d\u4ee4\u7684\u903b\u8f91\u7684AppiumBootstrap.jar  \u5bf9\u5e94\u7684 iOS \u4e0a\u7684 appium-uiauto  \u4e00\u65e6\u542f\u52a8\uff0c\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u5230\u8bbe\u5907\u7684web scoket\u8fde\u63a5  \u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u542f\u52a8/\u5173\u95ed/\u53d1\u9001\u547d\u4ee4\u63a5\u53e3  \u547d\u4ee4\u6d41\u7a0b\u5982\u4e0b\uff1a  Selenium \u547d\u4ee4 - > appium-adb - > appium-androidbootstrap - > \u4f7f\u7528Android UI Automator \u6846\u67b6\u7684 Java \u4ee3\u7801",
            "title": "appium-androidbootstrap"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-uiautomator",
            "text": "\u542f\u52a8\u548c\u5173\u95eduiautomator\u670d\u52a1\u5668\u7531appium-android-bootstrap jar\u5efa\u7acb  \u547d\u4ee4\u6d41\u7a0b\u5c31\u50cf  appium-android-bootstrap:start -> appium-uiautomator:start -> appium-adb:install bootstrap",
            "title": "appium-uiautomator"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-selendroiddriver",
            "text": "\u7c7b\u4f3c\u4e8eappium-androiddriver\uff0c\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u72ec\u7acb\u670d\u52a1\u8fd0\u884c  \u4f7f\u7528appium-selendroid-installer\u4e0b\u8f7d\u5e76\u5b89\u88c5Selendroid  \u5305\u542b\u51e0\u4e2aSelendroid\u7279\u5b9a\u7684\u903b\u8f91\uff0c\u4ee5\u786e\u4fdd\u65e0\u7f1d\u96c6\u6210  \u5305\u542b\u4e00\u7ec4\u66f4\u5177\u4f53\u7684\u529f\u80fd\u7ea6\u675f  \u4f7f\u7528jsonwp-proxy\u4e0e\u670d\u52a1\u5668\u4ea4\u4e92  \u4f7f\u7528appium-adb\u542f\u7528\u5728Selendroid\u4e2d\u672a\u5b9e\u73b0\u7684\u547d\u4ee4",
            "title": "appium-selendroiddriver"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-selendroid",
            "text": "\u5305\u542b\u5e76\u5bfc\u51fa\u8bbe\u7f6e\u903b\u8f91  \u4e0b\u8f7dSelendroid  \u786e\u5b9aAndroidManifest\u7684\u4f4d\u7f6e  \u786e\u5b9aServer APK\u7684\u4f4d\u7f6e  \u63d0\u53d6\u8fd9\u4e24\u4e2a\u6587\u4ef6  \u590d\u5236\u548c\u6e05\u7406\u6587\u4ef6",
            "title": "appium-selendroid \u5b89\u88c5\u7a0b\u5e8f"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-android-ime",
            "text": "\u5141\u8bb8\u4ece Android \u8bbe\u5907\u53d1\u9001\u548c\u63a5\u6536 unicode \u5b57\u7b26  \u5c06\u6587\u672c\u7f16\u7801\u4e3aUTF-7\u5c06\u5176\u53d1\u9001\u5230\u8bbe\u5907\u5e76\u5c06\u5176\u91cd\u65b0\u7f16\u7801\u4e3a Unicode  \u7531 appium-androiddriver \u548c appium-selendroiddriver \u4f7f\u7528",
            "title": "appium-android-ime"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-doctor",
            "text": "\u5728\u542f\u52a8Appium\u4e4b\u524d\u8bca\u65ad\uff0c\u62a5\u544a\u548c\u4fee\u590d\u5e38\u89c1\u7684Node\uff0ciOS\u548cAndroid\u914d\u7f6e\u95ee\u9898  \u66b4\u9732cli\u547d\u4ee4\u201cappium-doctor\u201d  \u5b83\u68c0\u67e5  Android:  android sdk\u5b58\u5728\u5e76\u6b63\u786e\u914d\u7f6e  env\u53d8\u91cf\u548c\u8def\u5f84\u68c0\u67e5    iOS:  \u5b89\u88c5\u4e86xcode\uff08\u4f7f\u7528\u547d\u4ee4\u884c\u5de5\u5177\uff09  \u5f00\u53d1\u5de5\u5177\u5b89\u5168\u68c0\u67e5  auth\u68c0\u67e5  nodejs \u68c0\u67e5",
            "title": "appium-doctor"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-gulp-plugins",
            "text": "\u5177\u6709\u5b9a\u5236\u63d2\u4ef6\u7684\u5f00\u53d1\u5305\u4f7f\u7528\u4ea4\u53c9\u5e94\u7528\u6a21\u5757\uff08\u4ec5\u9002\u7528\u4e8eAppium\u5f00\u53d1\uff09  \u5305\u542b\u4efb\u52a1  e2e\u548c\u5355\u5143\u6d4b\u8bd5\uff08\u8986\u76d6\u7387\u62a5\u544a\uff09  \u5c06ES2016 \u8f6c\u6362\u6210 ES5   \u9759\u6001\u4ee3\u7801\u5206\u6790\uff08jshint\uff09  \u5f00\u53d1\u4eba\u5458\u7684\u4efb\u52a1",
            "title": "appium-gulp-plugins"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-remote-debugger",
            "text": "RPC\u5ba2\u6237\u7aef\u5c06Appium\u8fde\u63a5\u5230iOS\u7f51\u9875\u6d4f\u89c8  \u53ef\u4ee5\u8fde\u63a5\u5230WebKit devtools  \u4ec5\u9002\u7528\u4e8eiOS  \u6709\u4e24\u4e2arpc\u5ba2\u6237\u7aef\u7c7b  remote-debugger-rpc-client\uff1a\u4f7f\u7528\u8fde\u63a5\u5230localhost\u7684tcp6\uff1a27753  webkit-rpc-client\uff1a\u4f7f\u7528WebSockets\u8fde\u63a5\u5230ws\uff1a// localhost\uff1a27753 / devtools / page / $ {pageId}",
            "title": "appium-remote-debugger"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#node-teen_process",
            "text": "\u52a9\u624b\u6a21\u5757\u66b4\u9732\uff1a  exec\uff1a\u5728\u5f15\u64ce\u76d6\u4e0b\u4f7f\u7528spawn\u7684exec\u7684ES7\uff08async / await\uff09\u5b9e\u73b0  SubProcess\uff1a\u5728\u4f7f\u7528spawn\u65f6\u51cf\u5c11\u6837\u677f\uff08\u7279\u522b\u662f\u5728async / await\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u65f6\uff09",
            "title": "node-teen_process"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium_2",
            "text": "\u8fd0\u884c\u65f6\uff0c\u65e5\u5fd7\u5668\u9ed8\u8ba4\u4e3a npmlog\uff0c  \u66b4\u9732\u4e86\u51e0\u4e4e\u6240\u6709\u7684Appium\u8f6f\u4ef6\u5305\u4f7f\u7528\u7684getLogger\u51fd\u6570  \u5982\u679c\u6709\u4e00\u4e2a\u5df2\u7ecf\u8fd0\u884c\u7684\u8bb0\u5f55\u5668\uff0c\u90a3\u4e48\u6240\u6709\u7684\u4e1c\u897f\u90fd\u4f1a\u8bb0\u5f55",
            "title": "appium \u65e5\u5fd7"
        },
        {
            "location": "/cn/contributing-to-appium/appium-packages/#appium-support",
            "text": "\u7528\u4e8e\u652f\u6301\u8de8\u5e94\u7528\u7a0b\u5e8f\u5305\u7684\u5e93\u7684\u5b9e\u7528\u7a0b\u5e8f\u51fd\u6570\u3002  \u4e3a\u4e00\u4e9b\u5e38\u89c1\u7684\u64cd\u4f5c\u63d0\u4f9b\u5c01\u88c5\uff0c\u5982  \u7cfb\u7edf\u65b9\u6cd5\uff08isWindows\uff0cisLinux ...\uff09  \u5b9e\u7528\u7a0b\u5e8f\u65b9\u6cd5\uff0c\u5982hasValue\uff0cescapeSpace  \u4e00\u5806fs\u65b9\u6cd5  plist\u5e2e\u52a9\u89e3\u6790\u548c\u66f4\u65b0plist\u6587\u4ef6   \u672c\u6587\u7531  \u6821\u957f  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "appium-support"
        },
        {
            "location": "/cn/contributing-to-appium/credits/",
            "text": "\u9e23\u8c22\n\n\n\u4ee5\u4e0b\u662f\u5728Appium\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e88\u6211\u4eec\u4ee5\u542f\u793a\uff0c\u6216\u662f\u4e3aAppium\u9526\u4e0a\u6dfb\u82b1\u7684\u9879\u76ee\n\n\n\n\nApple UIAutomation\n\n\nGhostDriver\n\n\nIOS Auto\n\n\nIOS Driver\n\n\nMechanic.js\n\n\nnode-webkit\n\n\nRemote Debug\n\n\nSelenium Project\n\n\nios-webkit-debug-proxy\n\n\ninstruments-without-delay\n\n\ndeviceconsole\n\n\nWinAppDriver\n\n\nWebDriverAgent\n\n\n\n\n\u672c\u6587\u7531 \nZhaoC\n \u7ffb\u8bd1\uff0c\u7531 \noscarxie\n \u6821\u9a8c\u3002",
            "title": "Credits"
        },
        {
            "location": "/cn/contributing-to-appium/credits/#_1",
            "text": "",
            "title": "\u9e23\u8c22"
        },
        {
            "location": "/cn/contributing-to-appium/credits/#appiumappium",
            "text": "Apple UIAutomation  GhostDriver  IOS Auto  IOS Driver  Mechanic.js  node-webkit  Remote Debug  Selenium Project  ios-webkit-debug-proxy  instruments-without-delay  deviceconsole  WinAppDriver  WebDriverAgent   \u672c\u6587\u7531  ZhaoC  \u7ffb\u8bd1\uff0c\u7531  oscarxie  \u6821\u9a8c\u3002",
            "title": "\u4ee5\u4e0b\u662f\u5728Appium\u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e88\u6211\u4eec\u4ee5\u542f\u793a\uff0c\u6216\u662f\u4e3aAppium\u9526\u4e0a\u6dfb\u82b1\u7684\u9879\u76ee"
        },
        {
            "location": "/cn/contributing-to-appium/developers-overview/",
            "text": "\u4e00\u4e2a\u5f00\u53d1\u4eba\u5458\u5bf9\u4e8eAppium\u7684\u6982\u8ff0\n\n\n\u5728\u9605\u8bfb\u8fd9\u4e2a\u6b64\u6587\u6863\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u4f60\u5df2\u7ecf\u9605\u8bfb\u5e76\u7406\u89e3\u4e86\u5173\u4e8e\nAppium\u7684\u57fa\u672c\u6982\u5ff5\n\uff0c\n\u4ee5\u53ca\u5173\u4e8e\u5982\u4f55\u53c2\u4e0e\nAppium\u8d21\u732e\u8bf4\u660e\n\n\n\u6280\u672f\u613f\u666f\n\n\nAppium\u81f4\u529b\u4e8e\u6210\u4e3a\u4e00\u4e2a\u79fb\u52a8JSONWP\u524d\u7aef\uff0c\u5b9e\u73b0\u6700\u4f73\u7684\u5e94\u7528\u81ea\u52a8\u5316\u6280\u672f\u3002\u4ec5\u6b64\u800c\u5df2\u3002\u6211\u4eec\u60f3\u8981\u91c7\u7528\u6240\u6709\u4e0d\u540c\u7684\n\u4f46\u81ea\u5e26\u4eae\u70b9\u7684\u81ea\u52a8\u5316\u5f15\u64ce\uff0c\u901a\u8fc7\u5236\u4f5cAppium\u9a71\u52a8\u7a0b\u5e8f\u6765\u5e73\u6ed1\u5b83\u4eec\u7684\u5dee\u5f02\u548c\u7455\u75b5\uff0c\u540c\u65f6\u5c06\u5b83\u4eec\u7eb3\u5165Appium\u3002\u8fd9\u4e0e\nSelenium\u9879\u76ee\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\u3002\u5bf9\u4e8e\u6211\u4eec\u800c\u8a00\uff0c\u6211\u4eec\u60f3\u8981\u6bcf\u4e00\u4e2a\u9a71\u52a8\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5b9e\u4f53\uff08\u5355\u72ec\u7684repo\uff0c \u6d4b\u8bd5\uff0c\n\u7b49\u7b49\uff09\u5373\u4fbf\u5b83\u4eec\u4f7f\u7528\u5171\u4eab\u5e93\uff0c\u8fd9\u4e00\u4e3e\u63aa\u4f1a\u4f7fAppium\u9a71\u52a8\u7a0b\u5e8f\u7684\u5f00\u53d1\u53d8\u5f97\u5c3d\u53ef\u80fd\u7b80\u5355\uff0c\u800c\u4e14\u4e0d\u62d8\u6ce5\u4e8e\u6837\u677f\u3002\u6211\u4eec\u4e4b\u6240\u4ee5\n\u4f7f\u7528\u73b0\u4eca\u6d41\u884c\u7684JavaScript\uff0c\u56e0\u4e3a\u5b83\u4eec\u65e0\u5904\u4e0d\u5728\uff0c\u800c\u4e14\u5bf9\u4e8e\u5f88\u591a\u5f00\u53d1\u4eba\u5458\u800c\u8a00\u5bb9\u6613\u7406\u89e3\u5e76\u6613\u4e8e\u8d21\u732e\u3002\n\n\n\u5f00\u53d1\u8005\u793e\u533a\n\n\n\u6b22\u8fce\u4efb\u4f55\u4eba\u6210\u4e3aAppium\u5f00\u53d1\u4eba\u5458\uff0c\u4f60\u4ec5\u9700\u8981\u9605\u8bfb\u6b64\u6307\u5357\u5e76\u628a\u4f60\u7684\u4e00\u4e9b\u4ee3\u7801\u5408\u5e76\u8fdb\u6765\uff0c\u90a3\u4e48\u4f60\u5c31\u6210\u4e3a\u4e86\u6211\u4eec\u4e00\u5458\u3002\n\u5982\u679c\u4f60\u575a\u6301\u4e0d\u61c8\u5e76\u4e14\u5e7f\u65bd\u5584\u7f18\uff0c\u6211\u4eec\u5c06\u4f1a\u628a\u4f60\u5347\u7ea7\u4e3a\u4e00\u540d\u63d0\u4ea4\u8005\uff0c\u8fd9\u6837\u4f60\u80fd\u7ee7\u7eed\u5e2e\u52a9\u793e\u533a\u53d1\u5c55\u800c\u4e14\u7701\u53bb\u5f88\u591a\u7eb7\u7e41\u590d\u6742\u3002\n\u5982\u679c\u4f60\u5728\u5f00\u53d1Appium\u7684\u65f6\u5019\u9047\u5230\u7591\u95ee\uff0c\u8bf7\u524d\u5f80\u6211\u4eec\u7684\u5f00\u53d1\u4eba\u5458\u793e\u533a\nappium-developers@googlegroups.com\n.\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e3a_\u5f00\u53d1_\u7591\u95ee\u800c\u8bbe\u7684\u90ae\u4ef6\u5217\u8868\uff0c\u800c\u4e0d\u662f\u5173\u4e8e_\u4f7f\u7528_\u7591\u95ee\u6216bug\u63d0\u4ea4\u3002 \u6709\u5173\u4f7f\u7528\u95ee\u9898\u8bf7\u524d\u5f80\ndiscuss.appium.io\n\nGithub\u95ee\u9898\u8ddf\u8e2a\u53ea\u662f\u7528\u4e8ebug\u63d0\u4ea4\u548c\u529f\u80fd\u9700\u6c42\u3002\n\n\n\u654f\u6377\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b\n\n\nAppium\u56e2\u961f\u6839\u636e\u8f7b\u91cf\u5316\u7684scrum\u7248\u672c\u6765\u8fd0\u884c\u5f00\u53d1\u3002\u6bcf\u4e24\u4e2a\u661f\u671f\u6211\u4eec\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u201csprint\u201d\uff0c\u6216\u8005\u6bcf\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u4eec\n\u4f1a\u51b3\u5b9a\u56e2\u961f\u4e0b\u4e00\u9636\u6bb5\u9700\u8981\u5b8c\u6210\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u6b22\u8fce\u4efb\u4f55\u719f\u6089Appium\u4ee3\u7801\u5e93\u7684\u4eba\u53c2\u52a0\u6211\u4eec\u7684sprint\u8ba1\u5212\uff0c\u5e76\u5c06\u89c6\u4f5cSCRUM\u53c2\u4e0e\u56e2\u961f\u6210\u5458\u3002\n\u53c2\u4e0e\u8005\u65e0\u9700\u662f\u4ee3\u7801\u957f\u671f\u63d0\u4ea4\u8005\u3002sprint\u671f\u95f4\uff0c\u6211\u4eec\u5c06\u5728\nAppium slack \u56e2\u961f\n\u7684\n\n#standup\n \u804a\u5929\u5ba4\u66f4\u65b0\u6211\u4eec\u6bcf\u4e2a\u4eba\u7684\u8fdb\u7a0b\uff08\u6ca1\u6709\u5b9e\u65f6\u7684\u6bcf\u5929\u7ad9\u7acb\u4f1a\u8bae\uff09\u3002sprint\u7ed3\u675f\u65f6\uff0c\u6211\u4eec\u5c06\u4e3e\u884c\u201c\u56de\u987e\u201d\u6d3b\u52a8\uff0c\u4ee5\u6b64\u6765\n\u5e86\u795d\u6211\u4eec\u53d6\u5f97\u7684\u6210\u5c31\u5e76\u603b\u7ed3\u6d3b\u52a8\u8fdb\u5c55\u5982\u4f55\uff0c\u8fd9\u53ef\u80fd\u4f1a\u751f\u6210\u4e00\u4e2a\u5173\u4e8e\u5982\u4f55\u8fdb\u884c\u4e0d\u540c\u5c1d\u8bd5\u53c8\u6216\u8005\u5982\u4f55\u505a\u7684\u66f4\u597d\u7684\u603b\u7ed3\u5217\u8868\u3002\n\n\n\u6700\u7ec8\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u5728\u6bcf\u4e00\u4e2asprint\u7ed3\u675f\u65f6\u53d1\u5e03\u4e00\u4e2aAppium\u7248\u672c\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e24\u4e2a\u661f\u671f\u4e00\u4e2a\u5468\u671f\u3002\u6211\u4eec\u8fd8\u6ca1\u6709\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\uff0c\u4f46\u5e0c\u671b\n\u6211\u4eec\u80fd\u5f88\u5feb\u8fbe\u6210\u3002\n\n\n\u5f53\u524d\u4f1a\u8bae\u65f6\u95f4\uff1a\n\n sprint\u8ba1\u5212\uff1a \u6bcf\u4e24\u4e2a\u5468\u4e00 10:00 AM - 10:45 AM \uff08\u592a\u5e73\u6d0b\u65f6\u95f4\uff09\n\n sprint\u56de\u987e\uff1a \u6bcf\u4e09\u4e2a\u5468\u4e94 1:00 PM -  1:30 PM\uff08\u592a\u5e73\u6d0b\u65f6\u95f4\uff09\n\n\n\u6211\u4eec\u4f7f\u7528\nZoom\n\u89c6\u8baf\u6765\u4e3e\u884c\u4f1a\u8bae\n\n\n\u5173\u4e8e\u9879\u76ee\u7ba1\u7406\uff0c\u6211\u4eec\u4f7f\u7528\nZenHub\n \u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u5b83\u5411GitHub\u63a5\u53e3\u63d0\u4f9b\u4e86\u4f8b\u5982\nKanban boards \u548c Epics \u8fd9\u4e9b\u529f\u80fd\u3002\u8981\u5b8c\u5168\u53c2\u4e0e\u5230Appium SCRUM\uff0c\u4f60\u9700\u8981\u5b89\u88c5\u4e0a\u8ff0\u7684\u8fd9\u4e9b\u6d4f\u89c8\u5668\u63d2\u4ef6\u3002\n\n\n\u5982\u679c\u4f60\u6709\u610f\u53c2\u52a0sprint\uff0c\u4f60\u53ef\u4ee5\u5728Appium Slack\u7fa4\u7ec4\u91cc\u8054\u7cfb\n@jlipps\n \u6216\u8005 \n@isaac\n\uff0c\u53c8\u6216\u8005\u76f4\u63a5\u5728\u63a8\u7279\n\u4e0a\u8054\u7cfb\n@jlipps\n\uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u4e0b\u4e00\u6b21sprint\u91cc\u5206\u4eab\u5982\u4f55\u52a0\u5165\u89c6\u9891\u804a\u5929\u3002\n\n\n\u6784\u9020\n\n\nAppium\u4e3b\u8981\u662f\u4e00\u4e2a\nnode.js\n\u5305\u7684\u96c6\u5408\uff0c\u4ee5\u6b64\u7ec4\u5408\u5f62\u6210\u4e00\u4e2a\u8fd0\u884c\u7684node.js\u670d\u52a1\u5668\u3002\n\u8fd9\u4e9b\u5305\u90fd\u88ab\u5355\u72ec\u7ef4\u62a4\u5e76\u62e5\u6709\u5404\u81ea\u7684GitHub repo, CI\u548c\u53d1\u5e03\u6d41\u7a0b\u3002\u4e00\u4e9b\u8f6f\u4ef6\u5305(\u6bd4\u5982 \nappium-ios-driver\n)\n\u5f88\u5927\uff0c\u5e76\u4e14\u7ed9Appinum\u6dfb\u52a0\u4e86\u5f88\u91cd\u8981\u7684\u529f\u80fd\u3002\u76f8\u6bd4\u800c\u8a00\uff0c\u5176\u4ed6\u8f6f\u4ef6\u5305\u5219\u626e\u6f14\u7740\u4e00\u4e2a\u8f85\u52a9\u7684\u89d2\u8272\uff0c\u800c\u4e14\u9ad8\u5ea6\u66dd\u5149\u5176\u67d0\u4e2a\n\u7279\u5b9a\u5e76\u88ab\u53cd\u590d\u4f7f\u7528\u7684\u529f\u80fd\u3002\n\n\n\u6709\u5173\u8f6f\u4ef6\u5305\u7684\u5c42\u6b21\u7ed3\u6784\u548c\u6bcf\u4e00\u4e2a\u5305\u6240\u8d77\u7684\u4f5c\u7528\uff0c\u8bf7\u524d\u5f80\u6211\u4eec\n\u5305\u7684\u6982\u8ff0\n\u6587\u6863\u3002\n\n\n\u8f6c\u5316\n\n\nAppium\u662f\u7528JavaScript\u7684\u65b0\u5f62\u5f0f\u7f16\u5199\u7684\uff0c\u79f0\u4e3aES6\uff08\u6216\u73b0\u5728\u7684ES2015\uff09\u3002\u56e0\u4e3a\u8fd9\u4e2a\u7248\u672c\u7684\u8bed\u8a00\u5c1a\u672a\u88ab\u8001\u7248\u672c\nnode.js\u7684\u539f\u751f\u652f\u6301\uff0cAppium\u4ee3\u7801\u662f_\u88ab\u79fb\u690d_\u5230ES5\uff08JS\u66f4\u4e3a\u5e7f\u6cdb\u652f\u6301\u7684\u7248\u672c\uff09\u3002\u8fd9\u4e2a\u8f6c\u5316\u8fc7\u7a0b\u5fc5\u987b\u53d1\u751f\u5728\u6240\u6709\n\u4ee3\u7801\u8fd0\u884c\u4e4b\u524d\u3002\u9664\u4e86ES6\u7684\u65b0\u8bed\u8a00\u7279\u6027\uff0c\u6211\u4eec\u4e5f\u4eceJS\u7684_\u540e\u7eed_\u7248\u672c\u4e2d\u91c7\u7528\u4e86\u5f88\u91cd\u8981\u7684\u5173\u952e\u8bcd\uff0c\nasync\n \u548c \nawait\n,\n\u8fd9\u6709\u52a9\u4e8e\u7f16\u5199\u6574\u6d01\u7684\u5f02\u6b65\u4ee3\u7801\u3002\u56e0\u4e3a\u8fd9\u4e2a\u4ee3\u6362\u7684\u6b65\u9aa4\uff0cAppium\u8f6f\u4ef6\u5305\u56ca\u62ec\u4e86\u89c2\u5bdf\u4ee3\u7801\u53d8\u5316\u548c\u91cd\u65b0\u7f16\u6392\u4ee3\u7801\u7684\u5de5\u5177\u3002\n\u901a\u5e38\u800c\u8a00\uff0c\u540c\u6837\u7684\u5de5\u5177\u4f1a\u81ea\u52a8\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u540c\u65f6\u786e\u4fdd\u6ca1\u6709\u4efb\u4f55\u5c0f\u7684\u7eb0\u6f0f\u3002\u5927\u591aAppium\u8f6f\u4ef6\u5305\u5728\u8fd0\u884c\ngulp\n\u7684\u65f6\u5019\n\u628a\u4e0a\u8ff0\u8fc7\u7a0b\u5f53\u505a\u9ed8\u8ba4\u884c\u4e3a\u3002\n\n\n\u6392\u67e5\u548c\u4ee3\u7801\u98ce\u683c\n\n\n\u5bf9\u4e8e\u6240\u6709Appium\u7684JS\u800c\u8a00\uff0c\u4ee3\u7801\u5916\u89c2\u548c\u4f7f\u7528\u611f\u89c9\u540c\u6837\u91cd\u8981\u3002\u8fd9\u5305\u62ec\u6837\u5f0f\u5e38\u89c4\uff0c\u7f16\u7801\u6a21\u5f0f\u4ee5\u53ca\u6211\u4eec\u89e3\u51b3\u5404\u79cd\u95ee\u9898\u65f6\u4f7f\u7528\u7684\n\u5e93\u3002\u4f60\u5e94\u8be5\u719f\u6089\u6211\u4eec\u65b0\u7684\nES2015 \u98ce\u683c\u6307\u5357\n\u3002\n\u5f53\u8f6c\u5316\u65f6\uff0cAppium\u5305\u5c06\u81ea\u52a8\u8fd0\u884cJSHint\u6216\u5176\u4ed6lint\u5de5\u5177\uff0c\u5e76\u5728\u4ee3\u7801\u4e0d\u7b26\u5408\u6211\u4eec\u89c4\u8303\u7684\u65f6\u5019\u63d0\u4f9b\u8b66\u544a\u6216\u9519\u8bef\u53cd\u9988\u3002\n\u8fd9\u4e9b\u5de5\u5177\u4e0d\u4e00\u5b9a\u80fd\u987e\u5168\u6211\u4eec\u5173\u5fc3\u7684\u79cd\u79cd\u98ce\u683c\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u5728review\u4ee3\u7801\u7684\u65f6\u5019\u4e5f\u5e94\u8be5\u6ce8\u610f\u4ee3\u7801\u89c4\u8303\u95ee\u9898\u3002\u8fd9\u4e0d\u662f\n\u5439\u6bdb\u6c42\u75b5\uff0c\u800c\u662f\u4e3a\u4e86\u6709\u4e00\u4e2a\u6574\u6d01\uff0c\u4e00\u81f4\u5e76\u4e14\u53ef\u8bfb\u7684\u4ee3\u7801\u5e93\u3002\n\n\n\u63d0\u4ea4\u4ee3\u7801\n\n\n\u5c06\u4f60\u7684\u4ee3\u7801\u63d0\u4ea4\u5230Appium\u5f88\u5bb9\u6613\uff1a\u4f60\u53ea\u9700\u8981\u63d0\u4ea4\u4e00\u4e2apull\u8bf7\u6c42\u5230\u6211\u4eec\u7684repos\u5e76\u5728\u4ee3\u7801review\u7684\u8fc7\u7a0b\u4e2d\u4e0e\u6211\u4eec\u7684\n\u7ef4\u62a4\u8005\u8fdb\u884c\u4e92\u52a8\u3002\u6211\u4eec\u5bf9\u4ee3\u7801\u63d0\u4ea4\u6709\u4e00\u7cfb\u5217\u7684\u8981\u6c42\uff08\u4f46\u662f\u4e0d\u7528\u62c5\u5fc3\uff01\u5982\u679c\u4e0b\u9762\u6240\u5217\u7684\u592a\u8fc7\u7e41\u590d\uff0c\u6211\u4eec\u5c06\u4f1a\u4e3a\u4f60\u4e00\u4e00\u9053\u6765\uff09\u3002\n\u90a3\u6211\u4eec\u5c31\u4ece\u4f60\u63d0\u4ea4PR\u7684\u90a3\u4e00\u6b65\u5f00\u59cb\u5427\uff1a\n\n\n\n\n\u53c2\u8003\u5176\u4ed6\u4ee3\u7801\u7684\u6837\u5f0f\u548c\u6211\u4eec\u7684\u6837\u5f0f\u6307\u5357\n\n\nAtomic \u63d0\u4ea4 -- \u6bcf\u4e2a\u903b\u8f91\u53d8\u5316\u8fdb\u884c\u4e00\u6b21\u63d0\u4ea4\uff08\u4f8b\u5982\uff1a\u786e\u4fdd\u4f60\u7684\u63d0\u4ea4\u4e0d\u7528\u8fdb\u5165\u7ec4\u8bba\u5373\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c,\u800c\u4e14\u5b83\u5728\u4efb\u4f55\u6307\u5b9a\u63d0\u4ea4\u4e0b\u90fd\u5e94\u8be5\u6b63\u5e38\u8fd0\u884c\uff09\u8fd9\u901a\u5e38\u610f\u5473\u7740\u6bcf\u4e2aPR\u4e00\u4e2a\u63d0\u4ea4\u3002\u4f60\u5c06\u60f3\u8981\u975e\u5e38\u719f\u6089\u7684\ngit rebase -i\n \u548c\u538b\u7f29\u3002\n\n\n\u6ca1\u6709\u5408\u5e76\u63d0\u4ea4\uff1a\u5728\u63d0\u4ea4\u4f60\u7684PR\u4e4b\u524d\uff0c\u901a\u5e38\u5728\u6700\u65b0\u7684master\u4e4b\u4e0a\u8fdb\u884crebase\uff08\u6216\u8005\u5176\u5b83\u4f60\u60f3\u8981merge\u8fdb\u53bb\u7684branch\uff09\u3002\n\n\n\u51e0\u4e4e\u6240\u6709\u7684\u66f4\u6539\u90fd\u5e94\u8be5\u6709\u6d4b\u8bd5\u3002\u5173\u4e8e\u6f0f\u6d1e\u4fee\u590d\uff0c\u81f3\u5c11\u5e94\u8be5\u6709\u5355\u5143\u6d4b\u8bd5\u4ee5\u8bc1\u660e\u8fd9\u4e2abug\u5df2\u88ab\u4fee\u590d\u3002\u65b0\u529f\u80fd\u5e94\u8be5\u6709\u5355\u5143\u6d4b\u8bd5\uff0c\u5e76\u4e14\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u8fdb\u884ce2e\u6d4b\u8bd5\uff0c\u4ee5\u8bc1\u660e\u8be5\u529f\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u6211\u4eec\u5c06\u4e50\u610f\u5e26\u4f60\u6d4f\u89c8\u6d4b\u8bd5\u7684\u521b\u5efa\u8fc7\u7a0b\u3002\u9605\u8bfb\u5176\u4ed6\u7684\u6d4b\u8bd5\u4ee3\u7801\u4f1a\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5f00\u59cb\u3002\u6211\u4eec\u7684CI\u7cfb\u7edf\u901a\u5e38\u8fd0\u884c\u6d4b\u8bd5\u8986\u76d6\u7387\u7edf\u8ba1\uff0c\u800c\u4e14\u6211\u4eec\u4e0d\u5927\u53ef\u80fd\u53bb\u5408\u5e76\u90a3\u4e9b\u4f1a\u964d\u4f4e\u6d4b\u8bd5\u8986\u76d6\u7387\u7684\u4ee3\u7801\u3002\n\n\n\n\n\u5982\u679c\u4f60\u5728\u63d0\u4ea4\u4e4b\u524d\u505a\u4e86\u6240\u6709\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u4f60\u7684\u4ee3\u7801\u5c06\u53ef\u80fd\u5f88\u5feb\u88ab\u63a5\u53d7\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u6253\u7b97\u5bf9Appium\u8fdb\u884c\u5927\u91cf\u7684\u6539\u9020\u5de5\u4f5c\uff0c\u4f60\u53ef\u4ee5\u8054\u7cfb\u5f00\u53d1\u4eba\u5458\uff0c\u4ee5\u786e\u4fdd\u8fd9\u4e9b\u6539\u53d8\u7b26\u5408\u6211\u4eec\u7684\u7406\u5ff5\uff0c\u8fd9\u6837\u5728\u4f60\u5f00\u52a8\u4e4b\u524d\u786e\u4fdd\u6211\u4eec\u4f1a\u63a5\u53d7\u8fd9\u4e9b\u6539\u52a8\u3002\n\n\n\u6d4b\u8bd5\n\n\n\u59cb\u7ec8\u786e\u4fdd\u4f60\u7684\u66f4\u6539\u5df2\u7ecf\u88ab\u6d4b\u8bd5\u8fc7\uff01 \u9664\u4e86\u5355\u6d4b\u8bd5\u548ce2e\u6d4b\u8bd5\uff0c\u8bf7\u786e\u4fdd\u5728\u4f60\u5f00\u59cb\u8fdb\u884c\u66f4\u6539\u548c\u63d0\u4ea4review\u4e4b\u524d\uff0c\u6240\u6709\u73b0\u6709\u6d4b\u8bd5\u90fd\u88ab\u8fd0\u884c\u3002\n\u6211\u4eec\u6709\u4e3a\u6bcf\u4e00\u4e2aAppium repo\u8bbe\u7f6eCI\u4f5c\u4e3a\u5b89\u5168\u7f51\uff0c\u8fd9\u6837\u4fbf\u4e8e\u5ba1\u9605\u8005\u77e5\u6653\u4ee3\u7801\u662f\u5426\u5df2\u7ecf\u901a\u8fc7\u6d4b\u8bd5\u3002\u5728\u4efb\u4f55Appium\u5305\u8fd0\u884c\u6d4b\u8bd5\u90fd\u5f88\u5bb9\u6613\uff01\n\u4ee5\u4e0b\u662f\u4f60\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\uff08\u9664\u975eREADME\u53e6\u6709\u8bf4\u660e\uff09\uff1a\n\n\ngulp                    # \u76d1\u6d4b\u76ee\u5f55\u4e0b\u91cd\u7f16\u8bd1\u4ee3\u7801\u66f4\u6539\uff0c\u4ee5\u53ca\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\ngulp once               # \u540c\u4e0a\uff0c\u5f53\u4e0d\u63d0\u4f9b\u76d1\u6d4b\ngulp unit-test          # \u8f6c\u5316\u548c\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\ngulp e2e-test           # \u8f6c\u5316\u4ee5\u53ca\u8fd0\u884c\u7aef\u5230\u7aef\uff0f\u529f\u80fd\u6d4b\u8bd5\n_FORCE_LOGS=1 <command> # \u663e\u793a\u6d4b\u8bd5\u8fd0\u884c\u671f\u95f4\u7684\u6a21\u5757\u65e5\u5fd7\u8f93\u51fa\n\n\n\n\n\u8bf7\u6ce8\u610f\uff0c\u5355\u5143\u6d4b\u8bd5\u7684\u6587\u4ef6\u540e\u7f00\u901a\u5e38\u4e3a \n-specs.js\n \uff0c\u800ce2e\u6d4b\u8bd5\u6587\u4ef6\u540e\u7f00\u5219\u4e3a\n-e2e-specs.js\n.\n\n\n\u53d1\u5e03\n\n\n\u4efb\u4f55\u975eAppium\u4e3b\u5305\u7684\u53d1\u5e03\u6d41\u7a0b\u90fd\u662f\u975e\u5e38\u7b80\u6d01\u660e\u4e86\u7684\uff08\u8bf7\u6ce8\u610f\uff1a\u5982\u679c\u4f60\u60f3\u8981\u53d1\u5e03\u5b83\uff0c\u4f60\u9700\u8981\u6210\u4e3a\u4e00\u4e2aNPM\u7684\u6240\u6709\u8005\u3002\n\u6240\u6709\u6743\u7531Appium\u63d0\u4ea4\u8005\u7ba1\u7406\uff1b \u5982\u679c\u4f60\u5bf9\u6240\u6709\u8005\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb@jlipps \u6216\u8005 @imurchie\uff09\u3002\n\n\n\n\nrm -rf node_modules && npm install\n \u5e76\u8fd0\u884c\u6d4b\u8bd5\u4ee5\u786e\u4fdd\u5168\u65b0\u5b89\u88c5\u6b63\u5e38\u5de5\u4f5c\n\n\n\u6839\u636e\nSemVer\n \u89c4\u5219\u51b3\u5b9a\u6211\u4eec\u662f\u5426\u9700\u8981\u53d1\u5e03\u4e00\u4e2a\u8865\u4e01\uff08\u6f0f\u6d1e\u4fee\u590d\uff09\uff0c\u5fae\u8c03\uff08\u529f\u80fd\uff09\u6216\u8005\u662f\u4e3b\u8981\uff08\u8fed\u4ee3\uff09(\u8bf7\u53c2\u8003 \nhow SemVer works with NPM\n.\n\n\n\u901a\u8fc7\u4efb\u4f55\u9002\u5f53\u7684\u66f4\u6539\u548c\u63d0\u4ea4\u6765\u66f4\u65b0CHANGELOG\u4ee5README\u6587\u4ef6\u3002\u5927\u591a\u6570\u5b50\u5305\u6ca1\u6709CHANGELOG\u3002\n\n\n\u901a\u8fc7\u9002\u5f53\u7684\u7248\u672c\u7c7b\u578b\u8fd0\u884c \nnpm version <version-type>\n \n\n\n\u5c06\u9002\u5f53\u7684\u5206\u652f\u63a8\u9001\u5230GitHub, \u4e0d\u8981\u5fd8\u8bb0\u52a0\u5165\n--tags\n \u6765\u6807\u8bb0\u521a\u7531 \nnpm version\n\u521b\u5efa\u7684\u6807\u5fd7.\n\n\n\u8fd0\u884c \nnpm publish\n (\u5982\u679c\u4e0d\u662f\u6b63\u5f0f\u7248\uff0c \u8bf7\u4f7f\u7528\n--tag beta\n).\n\n\n\n\n\u5bf9\u4e8eAppium\u7684\u4e3b\u5305\u53d1\u5e03\uff0c\u4e0a\u8ff0\u6b65\u9aa4\u5fc5\u987b\u6267\u884c\uff0c\u4f46\u6709\u4ee5\u4e0b\u6539\u53d8\u3002\u4e00\u4e2a\u539f\u56e0\u662f\u5bf9\u4e8e\u4e3b\u5305\uff0c\u6211\u4eec\u4f7f\u7528NPM\u6536\u7f29\u5305\u88c5\n\u4ee5\u786e\u4fdd\u4f9d\u8d56\u5728\u5b89\u88c5\u7684\u65f6\u5019\u4e0d\u66f4\u6539\u3002\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u6211\u4eec\u5728master\u4e0a\u5f00\u53d1\u548c\u5404\u79cd\u5206\u652f\u4e0a\u53d1\u5e03\u3002\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\n\u5982\u4e0b\uff1a\u6211\u4eec\u7ecf\u5e38\u5728master\u4e0a\u5f00\u53d1\u548c\u589e\u52a0\u65b0\u7684\u4ee3\u7801\u3002 \u5f53\u6211\u4eec\u51c6\u5907\u597d\u4e86\u505a\u4e00\u4e2a\u65b0\u7684\u6b21\u8981\u6216\u4e3b\u8981\u7248\u672c\uff08\u4f8b\u5982\n1.5.0\n\n\u6216\n2.0.0\n\uff09\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u53d1\u5e03\u5206\u652f\uff08\u5206\u522b\u4e3a\n1.5\n\u6216\n2.0\n\uff09\u3002\u7136\u540e\u6211\u4eec\u53d1\u5e03\u8be5\u5206\u652f\u3002 \u4e00\u65e6\u6211\u4eec\u8ba4\u4e3a\u9700\u8981\u4fee\u590d\u8865\u4e01\uff0c\n\u6211\u4eec\u9996\u5148\u5c06\u8865\u4e01\u62c9\u5230master\u4e2d\uff0c\u7136\u540e\u5c06\u5355\u4e2a\u8865\u4e01\u6311\u9009\u5230\u53d1\u5e03\u5206\u652f\uff08\u751a\u81f3\u662f\u591a\u4e2a\u53d1\u5e03\u5206\u652f\uff09\u3002 \u7136\u540e\u6211\u4eec\u518d\u6b21\n\u4ece\u8fd9\u4e9b\u5206\u652f\u53d1\u5e03\u66f4\u65b0\u7684\u8865\u4e01\u7248\u672c\uff08\u4f8b\u5982\n1.5.1\n\u6216\n2.0.1\n\uff09\u3002\n\n\n\u5173\u4e8e \nnpm shrinkwrap\n\u7684\u6ce8\u91ca\uff1a\n \u6211\u4eec\u4f7f\u7528\nnpm shrinkwrap\n\u662f\u4e3a\u4e86\u5728\u53d1\u5e03\u65f6\u9501\u5b9a\u4f9d\u8d56\u5173\u7cfb\u3002\n\u6ca1\u6709\u5b83\uff0c\u4efb\u4f55\u4f9d\u8d56\u5305\u4e0a\u7684\u5f00\u53d1\u5c06\u5728\u5b89\u88c5Appium\u65f6\u53cd\u5e94\u51fa\u6765\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u95ee\u9898\u3002 \u7531\u4e8e\u914d\u7f6e\u6587\u4ef6\nnpm-shrinkwrap.json\n\u4ec5\u5b58\u5728\u4e8e\u53d1\u5e03\u5206\u652f\u4e0a\uff0c\n\u56e0\u6b64\u6709\u5fc5\u8981\u5728\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u624b\u52a8\u7ba1\u7406\u5b83\u3002 \u5b83\u9700\u8981\u4e0e\u5bf9\npackage.json\n\u7684\u66f4\u6539\u4e00\u8d77\u63d0\u4ea4\u5230GitHub\u3002\n\n\n\n\n\u5982\u679c NPM shrinkwrap JSON \u6587\u4ef6\u5b58\u5728\uff0c\u8bf7\u79fb\u9664.\n\n\nrm -rf node_modules && npm install\n \u5e76\u8fd0\u884c\u6d4b\u8bd5\u4ee5\u786e\u4fdd\u5168\u65b0\u5b89\u88c5\u6b63\u5e38\u5de5\u4f5c\n\n\nrm -rf node_modules && npm install --production\n \u4ee5\u83b7\u53d6\u4ec5production\u90e8\u5206.\n\n\nnpm shrinkwrap\n \u6765\u7f16\u5199\u65b0\u7684 NPM shrinkwrap JSON \u6587\u4ef6.\n\n\n\u6839\u636eSemVer\u6765\u51b3\u5b9a\u6211\u4eec\u662f\u5426\u9700\u8981\u53d1\u5e03\u4e00\u4e2a\u8865\u4e01\uff08\u6f0f\u6d1e\u4fee\u590d\uff09\uff0c\u5fae\u8c03\uff08\u529f\u80fd\uff09\u6216\u8005\u662f\u4e3b\u8981\uff08\u8fed\u4ee3\uff09\n\n\n\u7528\u5408\u9002\u7684\u65b0\u7248\u672c\u4fe1\u606f\u6765\u66f4\u65b0\npackage.json\n \n\n\n\u5bf9CHANGELOG/README\u8fdb\u884c\u5408\u9002\u7684\u66f4\u6539\uff0c\u540cshrinkwrap \u548c \npackage.json\n\u7684\u6539\u53d8\u4e00\u8d77\u4ee5PR\u7684\u5f62\u5f0f\u8fdb\u884c\u63d0\u4ea4\u5ba1\u6838\u3002\u5f85\u5b83\u88ab\u5408\u5e76\u4e4b\u540e\uff0c\u628a\u5b83\npull\n\u8fdb\nrelease\n\u5206\u652f\u3002\n\n\n\u5728\u53d1\u5e03\u5206\u652f\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u5c0f\u5206\u652f\uff0c\u5982\n1.5\n\u6216\n1.4\n\uff09\u4e0a\u521b\u5efa\u4e00\u4e2a\u5f62\u5f0f\u4e3a\nv <version>\n\u7684\u6807\u7b7e\uff1a\ngit tag -av <version>\n\uff0c\u4f8b\u5982\ngit tag -a 1.5.0\n\u3002 \u8fd9\u5bf9\u6d4b\u8bd5\u7248\u672c\u4e0d\u662f\u5fc5\u9700\u7684\u3002\n\n\n\u628a\u6807\u7b7e\u63a8\u9001\u5230\u4e0a\u6e38\u5206\u652f\uff1a \ngit push --tags <remote> <branch>\n\n\n\u5b89\u88c5dev\u4f9d\u8d56 \uff08\u6216\u8005\u81f3\u5c11\ngulp\n \u548c \nappium-gulp-plugins\n\uff09\n\n\n\u8fd0\u884c\nnpm publish\n\uff08\u5982\u679c\u8fd9\u4e0d\u662f\u6b63\u5f0f\u7248\u672c\uff0c\u8bf7\u4f7f\u7528\n--tag beta\n \uff09\u3002\n\n\n\u5728appium.io\u66f4\u65b0\u6587\u6863\u3002 \u4ecegithub\u7684check out appium.io repo\uff0ccheck out\ngh-pages\n\u5206\u652f\u548c\u5e76\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\u3002 \u7136\u540e\u8fd0\u884c\nrake publish\n\u3002\n\n\n\u5728GitHub\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7248\u672c\uff1a\u8f6c\u5230\nhttps://github.com/appium/appium/releases/tag/v <VERSION>\n\u5e76\u70b9\u51fb\u201c\u7f16\u8f91\u6807\u7b7e\u201d\u3002 \u8f93\u5165\u53d1\u5e03\u540d\u79f0\u4e3a\n<VERSION>\n\uff08\u4f8b\u5982\uff0c\n2.0.5\n\uff09\uff0c\u7136\u540e\u7c98\u8d34\u5230\u66f4\u6539\u65e5\u5fd7\uff08\u4f46\u4e0d\u662f\u6b64\u7248\u672c\u7684changelog\u6807\u9898\uff09\u3002 \u5982\u679c\u662f\u8bd5\u7528\u7248\uff0c\u8bf7\u6807\u8bb0\u4e3a\u9884\u53d1\u5e03\u3002\n\n\n\u5728 discuss.appium.io \u521b\u5efa\u65b0\u7684\u5e16\u5b50\u6765\u5ba3\u5e03release. \u8bf7\u521b\u5efa\u4e8e \"News\"\u7c7b\u522b. \u7c98\u8d34\u5728changelog\u548c\u4efb\u4f55\u53ef\u9009\u7684\u8bc4\u8bba\u3002 \u7f6e\u9876\u5f53\u524d\u5e16\u5b50\u5e76\u53d6\u6d88\u7f6e\u9876\u4e0a\u4e00\u4e2arelease\u5e16\u5b50\u3002\n\n\n\u5f00\u59cb\u53d1\u5e03\nappium-desktop\n\u3002\n\n\n\u8bf7\u544a\u77e5 @jlipps\uff0c\u4ee5\u4fbf\u4ed6\u53ef\u4ee5\u53d1\u5e03\u4e00\u4e2a\u94fe\u63a5\u5230\u8ba8\u8bba\u5e16\u5b50\u3002\n\n\n\n\n\u672c\u6587\u7531 \nZhaoC\n \u7ffb\u8bd1\uff0c\u7531 \noscarxie\n \u6821\u9a8c\u3002",
            "title": "Developers overview"
        },
        {
            "location": "/cn/contributing-to-appium/developers-overview/#appium",
            "text": "\u5728\u9605\u8bfb\u8fd9\u4e2a\u6b64\u6587\u6863\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u4f60\u5df2\u7ecf\u9605\u8bfb\u5e76\u7406\u89e3\u4e86\u5173\u4e8e Appium\u7684\u57fa\u672c\u6982\u5ff5 \uff0c\n\u4ee5\u53ca\u5173\u4e8e\u5982\u4f55\u53c2\u4e0e Appium\u8d21\u732e\u8bf4\u660e",
            "title": "\u4e00\u4e2a\u5f00\u53d1\u4eba\u5458\u5bf9\u4e8eAppium\u7684\u6982\u8ff0"
        },
        {
            "location": "/cn/contributing-to-appium/developers-overview/#_1",
            "text": "Appium\u81f4\u529b\u4e8e\u6210\u4e3a\u4e00\u4e2a\u79fb\u52a8JSONWP\u524d\u7aef\uff0c\u5b9e\u73b0\u6700\u4f73\u7684\u5e94\u7528\u81ea\u52a8\u5316\u6280\u672f\u3002\u4ec5\u6b64\u800c\u5df2\u3002\u6211\u4eec\u60f3\u8981\u91c7\u7528\u6240\u6709\u4e0d\u540c\u7684\n\u4f46\u81ea\u5e26\u4eae\u70b9\u7684\u81ea\u52a8\u5316\u5f15\u64ce\uff0c\u901a\u8fc7\u5236\u4f5cAppium\u9a71\u52a8\u7a0b\u5e8f\u6765\u5e73\u6ed1\u5b83\u4eec\u7684\u5dee\u5f02\u548c\u7455\u75b5\uff0c\u540c\u65f6\u5c06\u5b83\u4eec\u7eb3\u5165Appium\u3002\u8fd9\u4e0e\nSelenium\u9879\u76ee\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\u3002\u5bf9\u4e8e\u6211\u4eec\u800c\u8a00\uff0c\u6211\u4eec\u60f3\u8981\u6bcf\u4e00\u4e2a\u9a71\u52a8\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u5b9e\u4f53\uff08\u5355\u72ec\u7684repo\uff0c \u6d4b\u8bd5\uff0c\n\u7b49\u7b49\uff09\u5373\u4fbf\u5b83\u4eec\u4f7f\u7528\u5171\u4eab\u5e93\uff0c\u8fd9\u4e00\u4e3e\u63aa\u4f1a\u4f7fAppium\u9a71\u52a8\u7a0b\u5e8f\u7684\u5f00\u53d1\u53d8\u5f97\u5c3d\u53ef\u80fd\u7b80\u5355\uff0c\u800c\u4e14\u4e0d\u62d8\u6ce5\u4e8e\u6837\u677f\u3002\u6211\u4eec\u4e4b\u6240\u4ee5\n\u4f7f\u7528\u73b0\u4eca\u6d41\u884c\u7684JavaScript\uff0c\u56e0\u4e3a\u5b83\u4eec\u65e0\u5904\u4e0d\u5728\uff0c\u800c\u4e14\u5bf9\u4e8e\u5f88\u591a\u5f00\u53d1\u4eba\u5458\u800c\u8a00\u5bb9\u6613\u7406\u89e3\u5e76\u6613\u4e8e\u8d21\u732e\u3002",
            "title": "\u6280\u672f\u613f\u666f"
        },
        {
            "location": "/cn/contributing-to-appium/developers-overview/#_2",
            "text": "\u6b22\u8fce\u4efb\u4f55\u4eba\u6210\u4e3aAppium\u5f00\u53d1\u4eba\u5458\uff0c\u4f60\u4ec5\u9700\u8981\u9605\u8bfb\u6b64\u6307\u5357\u5e76\u628a\u4f60\u7684\u4e00\u4e9b\u4ee3\u7801\u5408\u5e76\u8fdb\u6765\uff0c\u90a3\u4e48\u4f60\u5c31\u6210\u4e3a\u4e86\u6211\u4eec\u4e00\u5458\u3002\n\u5982\u679c\u4f60\u575a\u6301\u4e0d\u61c8\u5e76\u4e14\u5e7f\u65bd\u5584\u7f18\uff0c\u6211\u4eec\u5c06\u4f1a\u628a\u4f60\u5347\u7ea7\u4e3a\u4e00\u540d\u63d0\u4ea4\u8005\uff0c\u8fd9\u6837\u4f60\u80fd\u7ee7\u7eed\u5e2e\u52a9\u793e\u533a\u53d1\u5c55\u800c\u4e14\u7701\u53bb\u5f88\u591a\u7eb7\u7e41\u590d\u6742\u3002\n\u5982\u679c\u4f60\u5728\u5f00\u53d1Appium\u7684\u65f6\u5019\u9047\u5230\u7591\u95ee\uff0c\u8bf7\u524d\u5f80\u6211\u4eec\u7684\u5f00\u53d1\u4eba\u5458\u793e\u533a appium-developers@googlegroups.com .\n\u8bf7\u6ce8\u610f\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e3a_\u5f00\u53d1_\u7591\u95ee\u800c\u8bbe\u7684\u90ae\u4ef6\u5217\u8868\uff0c\u800c\u4e0d\u662f\u5173\u4e8e_\u4f7f\u7528_\u7591\u95ee\u6216bug\u63d0\u4ea4\u3002 \u6709\u5173\u4f7f\u7528\u95ee\u9898\u8bf7\u524d\u5f80 discuss.appium.io \nGithub\u95ee\u9898\u8ddf\u8e2a\u53ea\u662f\u7528\u4e8ebug\u63d0\u4ea4\u548c\u529f\u80fd\u9700\u6c42\u3002",
            "title": "\u5f00\u53d1\u8005\u793e\u533a"
        },
        {
            "location": "/cn/contributing-to-appium/developers-overview/#_3",
            "text": "Appium\u56e2\u961f\u6839\u636e\u8f7b\u91cf\u5316\u7684scrum\u7248\u672c\u6765\u8fd0\u884c\u5f00\u53d1\u3002\u6bcf\u4e24\u4e2a\u661f\u671f\u6211\u4eec\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u201csprint\u201d\uff0c\u6216\u8005\u6bcf\u4e00\u6bb5\u65f6\u95f4\uff0c\u6211\u4eec\n\u4f1a\u51b3\u5b9a\u56e2\u961f\u4e0b\u4e00\u9636\u6bb5\u9700\u8981\u5b8c\u6210\u7684\u4e8b\u60c5\u3002\u6211\u4eec\u6b22\u8fce\u4efb\u4f55\u719f\u6089Appium\u4ee3\u7801\u5e93\u7684\u4eba\u53c2\u52a0\u6211\u4eec\u7684sprint\u8ba1\u5212\uff0c\u5e76\u5c06\u89c6\u4f5cSCRUM\u53c2\u4e0e\u56e2\u961f\u6210\u5458\u3002\n\u53c2\u4e0e\u8005\u65e0\u9700\u662f\u4ee3\u7801\u957f\u671f\u63d0\u4ea4\u8005\u3002sprint\u671f\u95f4\uff0c\u6211\u4eec\u5c06\u5728 Appium slack \u56e2\u961f \u7684 #standup  \u804a\u5929\u5ba4\u66f4\u65b0\u6211\u4eec\u6bcf\u4e2a\u4eba\u7684\u8fdb\u7a0b\uff08\u6ca1\u6709\u5b9e\u65f6\u7684\u6bcf\u5929\u7ad9\u7acb\u4f1a\u8bae\uff09\u3002sprint\u7ed3\u675f\u65f6\uff0c\u6211\u4eec\u5c06\u4e3e\u884c\u201c\u56de\u987e\u201d\u6d3b\u52a8\uff0c\u4ee5\u6b64\u6765\n\u5e86\u795d\u6211\u4eec\u53d6\u5f97\u7684\u6210\u5c31\u5e76\u603b\u7ed3\u6d3b\u52a8\u8fdb\u5c55\u5982\u4f55\uff0c\u8fd9\u53ef\u80fd\u4f1a\u751f\u6210\u4e00\u4e2a\u5173\u4e8e\u5982\u4f55\u8fdb\u884c\u4e0d\u540c\u5c1d\u8bd5\u53c8\u6216\u8005\u5982\u4f55\u505a\u7684\u66f4\u597d\u7684\u603b\u7ed3\u5217\u8868\u3002  \u6700\u7ec8\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u5728\u6bcf\u4e00\u4e2asprint\u7ed3\u675f\u65f6\u53d1\u5e03\u4e00\u4e2aAppium\u7248\u672c\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e24\u4e2a\u661f\u671f\u4e00\u4e2a\u5468\u671f\u3002\u6211\u4eec\u8fd8\u6ca1\u6709\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\uff0c\u4f46\u5e0c\u671b\n\u6211\u4eec\u80fd\u5f88\u5feb\u8fbe\u6210\u3002  \u5f53\u524d\u4f1a\u8bae\u65f6\u95f4\uff1a  sprint\u8ba1\u5212\uff1a \u6bcf\u4e24\u4e2a\u5468\u4e00 10:00 AM - 10:45 AM \uff08\u592a\u5e73\u6d0b\u65f6\u95f4\uff09  sprint\u56de\u987e\uff1a \u6bcf\u4e09\u4e2a\u5468\u4e94 1:00 PM -  1:30 PM\uff08\u592a\u5e73\u6d0b\u65f6\u95f4\uff09  \u6211\u4eec\u4f7f\u7528 Zoom \u89c6\u8baf\u6765\u4e3e\u884c\u4f1a\u8bae  \u5173\u4e8e\u9879\u76ee\u7ba1\u7406\uff0c\u6211\u4eec\u4f7f\u7528 ZenHub  \u6d4f\u89c8\u5668\u63d2\u4ef6\uff0c\u5b83\u5411GitHub\u63a5\u53e3\u63d0\u4f9b\u4e86\u4f8b\u5982\nKanban boards \u548c Epics \u8fd9\u4e9b\u529f\u80fd\u3002\u8981\u5b8c\u5168\u53c2\u4e0e\u5230Appium SCRUM\uff0c\u4f60\u9700\u8981\u5b89\u88c5\u4e0a\u8ff0\u7684\u8fd9\u4e9b\u6d4f\u89c8\u5668\u63d2\u4ef6\u3002  \u5982\u679c\u4f60\u6709\u610f\u53c2\u52a0sprint\uff0c\u4f60\u53ef\u4ee5\u5728Appium Slack\u7fa4\u7ec4\u91cc\u8054\u7cfb @jlipps  \u6216\u8005  @isaac \uff0c\u53c8\u6216\u8005\u76f4\u63a5\u5728\u63a8\u7279\n\u4e0a\u8054\u7cfb @jlipps \uff0c\u6211\u4eec\u5c06\u4f1a\u5728\u4e0b\u4e00\u6b21sprint\u91cc\u5206\u4eab\u5982\u4f55\u52a0\u5165\u89c6\u9891\u804a\u5929\u3002",
            "title": "\u654f\u6377\u5f00\u53d1\u5de5\u4f5c\u6d41\u7a0b"
        },
        {
            "location": "/cn/contributing-to-appium/developers-overview/#_4",
            "text": "Appium\u4e3b\u8981\u662f\u4e00\u4e2a node.js \u5305\u7684\u96c6\u5408\uff0c\u4ee5\u6b64\u7ec4\u5408\u5f62\u6210\u4e00\u4e2a\u8fd0\u884c\u7684node.js\u670d\u52a1\u5668\u3002\n\u8fd9\u4e9b\u5305\u90fd\u88ab\u5355\u72ec\u7ef4\u62a4\u5e76\u62e5\u6709\u5404\u81ea\u7684GitHub repo, CI\u548c\u53d1\u5e03\u6d41\u7a0b\u3002\u4e00\u4e9b\u8f6f\u4ef6\u5305(\u6bd4\u5982  appium-ios-driver )\n\u5f88\u5927\uff0c\u5e76\u4e14\u7ed9Appinum\u6dfb\u52a0\u4e86\u5f88\u91cd\u8981\u7684\u529f\u80fd\u3002\u76f8\u6bd4\u800c\u8a00\uff0c\u5176\u4ed6\u8f6f\u4ef6\u5305\u5219\u626e\u6f14\u7740\u4e00\u4e2a\u8f85\u52a9\u7684\u89d2\u8272\uff0c\u800c\u4e14\u9ad8\u5ea6\u66dd\u5149\u5176\u67d0\u4e2a\n\u7279\u5b9a\u5e76\u88ab\u53cd\u590d\u4f7f\u7528\u7684\u529f\u80fd\u3002  \u6709\u5173\u8f6f\u4ef6\u5305\u7684\u5c42\u6b21\u7ed3\u6784\u548c\u6bcf\u4e00\u4e2a\u5305\u6240\u8d77\u7684\u4f5c\u7528\uff0c\u8bf7\u524d\u5f80\u6211\u4eec \u5305\u7684\u6982\u8ff0 \u6587\u6863\u3002",
            "title": "\u6784\u9020"
        },
        {
            "location": "/cn/contributing-to-appium/developers-overview/#_5",
            "text": "Appium\u662f\u7528JavaScript\u7684\u65b0\u5f62\u5f0f\u7f16\u5199\u7684\uff0c\u79f0\u4e3aES6\uff08\u6216\u73b0\u5728\u7684ES2015\uff09\u3002\u56e0\u4e3a\u8fd9\u4e2a\u7248\u672c\u7684\u8bed\u8a00\u5c1a\u672a\u88ab\u8001\u7248\u672c\nnode.js\u7684\u539f\u751f\u652f\u6301\uff0cAppium\u4ee3\u7801\u662f_\u88ab\u79fb\u690d_\u5230ES5\uff08JS\u66f4\u4e3a\u5e7f\u6cdb\u652f\u6301\u7684\u7248\u672c\uff09\u3002\u8fd9\u4e2a\u8f6c\u5316\u8fc7\u7a0b\u5fc5\u987b\u53d1\u751f\u5728\u6240\u6709\n\u4ee3\u7801\u8fd0\u884c\u4e4b\u524d\u3002\u9664\u4e86ES6\u7684\u65b0\u8bed\u8a00\u7279\u6027\uff0c\u6211\u4eec\u4e5f\u4eceJS\u7684_\u540e\u7eed_\u7248\u672c\u4e2d\u91c7\u7528\u4e86\u5f88\u91cd\u8981\u7684\u5173\u952e\u8bcd\uff0c async  \u548c  await ,\n\u8fd9\u6709\u52a9\u4e8e\u7f16\u5199\u6574\u6d01\u7684\u5f02\u6b65\u4ee3\u7801\u3002\u56e0\u4e3a\u8fd9\u4e2a\u4ee3\u6362\u7684\u6b65\u9aa4\uff0cAppium\u8f6f\u4ef6\u5305\u56ca\u62ec\u4e86\u89c2\u5bdf\u4ee3\u7801\u53d8\u5316\u548c\u91cd\u65b0\u7f16\u6392\u4ee3\u7801\u7684\u5de5\u5177\u3002\n\u901a\u5e38\u800c\u8a00\uff0c\u540c\u6837\u7684\u5de5\u5177\u4f1a\u81ea\u52a8\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u540c\u65f6\u786e\u4fdd\u6ca1\u6709\u4efb\u4f55\u5c0f\u7684\u7eb0\u6f0f\u3002\u5927\u591aAppium\u8f6f\u4ef6\u5305\u5728\u8fd0\u884c gulp \u7684\u65f6\u5019\n\u628a\u4e0a\u8ff0\u8fc7\u7a0b\u5f53\u505a\u9ed8\u8ba4\u884c\u4e3a\u3002",
            "title": "\u8f6c\u5316"
        },
        {
            "location": "/cn/contributing-to-appium/developers-overview/#_6",
            "text": "\u5bf9\u4e8e\u6240\u6709Appium\u7684JS\u800c\u8a00\uff0c\u4ee3\u7801\u5916\u89c2\u548c\u4f7f\u7528\u611f\u89c9\u540c\u6837\u91cd\u8981\u3002\u8fd9\u5305\u62ec\u6837\u5f0f\u5e38\u89c4\uff0c\u7f16\u7801\u6a21\u5f0f\u4ee5\u53ca\u6211\u4eec\u89e3\u51b3\u5404\u79cd\u95ee\u9898\u65f6\u4f7f\u7528\u7684\n\u5e93\u3002\u4f60\u5e94\u8be5\u719f\u6089\u6211\u4eec\u65b0\u7684 ES2015 \u98ce\u683c\u6307\u5357 \u3002\n\u5f53\u8f6c\u5316\u65f6\uff0cAppium\u5305\u5c06\u81ea\u52a8\u8fd0\u884cJSHint\u6216\u5176\u4ed6lint\u5de5\u5177\uff0c\u5e76\u5728\u4ee3\u7801\u4e0d\u7b26\u5408\u6211\u4eec\u89c4\u8303\u7684\u65f6\u5019\u63d0\u4f9b\u8b66\u544a\u6216\u9519\u8bef\u53cd\u9988\u3002\n\u8fd9\u4e9b\u5de5\u5177\u4e0d\u4e00\u5b9a\u80fd\u987e\u5168\u6211\u4eec\u5173\u5fc3\u7684\u79cd\u79cd\u98ce\u683c\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u5728review\u4ee3\u7801\u7684\u65f6\u5019\u4e5f\u5e94\u8be5\u6ce8\u610f\u4ee3\u7801\u89c4\u8303\u95ee\u9898\u3002\u8fd9\u4e0d\u662f\n\u5439\u6bdb\u6c42\u75b5\uff0c\u800c\u662f\u4e3a\u4e86\u6709\u4e00\u4e2a\u6574\u6d01\uff0c\u4e00\u81f4\u5e76\u4e14\u53ef\u8bfb\u7684\u4ee3\u7801\u5e93\u3002",
            "title": "\u6392\u67e5\u548c\u4ee3\u7801\u98ce\u683c"
        },
        {
            "location": "/cn/contributing-to-appium/developers-overview/#_7",
            "text": "\u5c06\u4f60\u7684\u4ee3\u7801\u63d0\u4ea4\u5230Appium\u5f88\u5bb9\u6613\uff1a\u4f60\u53ea\u9700\u8981\u63d0\u4ea4\u4e00\u4e2apull\u8bf7\u6c42\u5230\u6211\u4eec\u7684repos\u5e76\u5728\u4ee3\u7801review\u7684\u8fc7\u7a0b\u4e2d\u4e0e\u6211\u4eec\u7684\n\u7ef4\u62a4\u8005\u8fdb\u884c\u4e92\u52a8\u3002\u6211\u4eec\u5bf9\u4ee3\u7801\u63d0\u4ea4\u6709\u4e00\u7cfb\u5217\u7684\u8981\u6c42\uff08\u4f46\u662f\u4e0d\u7528\u62c5\u5fc3\uff01\u5982\u679c\u4e0b\u9762\u6240\u5217\u7684\u592a\u8fc7\u7e41\u590d\uff0c\u6211\u4eec\u5c06\u4f1a\u4e3a\u4f60\u4e00\u4e00\u9053\u6765\uff09\u3002\n\u90a3\u6211\u4eec\u5c31\u4ece\u4f60\u63d0\u4ea4PR\u7684\u90a3\u4e00\u6b65\u5f00\u59cb\u5427\uff1a   \u53c2\u8003\u5176\u4ed6\u4ee3\u7801\u7684\u6837\u5f0f\u548c\u6211\u4eec\u7684\u6837\u5f0f\u6307\u5357  Atomic \u63d0\u4ea4 -- \u6bcf\u4e2a\u903b\u8f91\u53d8\u5316\u8fdb\u884c\u4e00\u6b21\u63d0\u4ea4\uff08\u4f8b\u5982\uff1a\u786e\u4fdd\u4f60\u7684\u63d0\u4ea4\u4e0d\u7528\u8fdb\u5165\u7ec4\u8bba\u5373\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c,\u800c\u4e14\u5b83\u5728\u4efb\u4f55\u6307\u5b9a\u63d0\u4ea4\u4e0b\u90fd\u5e94\u8be5\u6b63\u5e38\u8fd0\u884c\uff09\u8fd9\u901a\u5e38\u610f\u5473\u7740\u6bcf\u4e2aPR\u4e00\u4e2a\u63d0\u4ea4\u3002\u4f60\u5c06\u60f3\u8981\u975e\u5e38\u719f\u6089\u7684 git rebase -i  \u548c\u538b\u7f29\u3002  \u6ca1\u6709\u5408\u5e76\u63d0\u4ea4\uff1a\u5728\u63d0\u4ea4\u4f60\u7684PR\u4e4b\u524d\uff0c\u901a\u5e38\u5728\u6700\u65b0\u7684master\u4e4b\u4e0a\u8fdb\u884crebase\uff08\u6216\u8005\u5176\u5b83\u4f60\u60f3\u8981merge\u8fdb\u53bb\u7684branch\uff09\u3002  \u51e0\u4e4e\u6240\u6709\u7684\u66f4\u6539\u90fd\u5e94\u8be5\u6709\u6d4b\u8bd5\u3002\u5173\u4e8e\u6f0f\u6d1e\u4fee\u590d\uff0c\u81f3\u5c11\u5e94\u8be5\u6709\u5355\u5143\u6d4b\u8bd5\u4ee5\u8bc1\u660e\u8fd9\u4e2abug\u5df2\u88ab\u4fee\u590d\u3002\u65b0\u529f\u80fd\u5e94\u8be5\u6709\u5355\u5143\u6d4b\u8bd5\uff0c\u5e76\u4e14\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u8fdb\u884ce2e\u6d4b\u8bd5\uff0c\u4ee5\u8bc1\u660e\u8be5\u529f\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u6211\u4eec\u5c06\u4e50\u610f\u5e26\u4f60\u6d4f\u89c8\u6d4b\u8bd5\u7684\u521b\u5efa\u8fc7\u7a0b\u3002\u9605\u8bfb\u5176\u4ed6\u7684\u6d4b\u8bd5\u4ee3\u7801\u4f1a\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5f00\u59cb\u3002\u6211\u4eec\u7684CI\u7cfb\u7edf\u901a\u5e38\u8fd0\u884c\u6d4b\u8bd5\u8986\u76d6\u7387\u7edf\u8ba1\uff0c\u800c\u4e14\u6211\u4eec\u4e0d\u5927\u53ef\u80fd\u53bb\u5408\u5e76\u90a3\u4e9b\u4f1a\u964d\u4f4e\u6d4b\u8bd5\u8986\u76d6\u7387\u7684\u4ee3\u7801\u3002   \u5982\u679c\u4f60\u5728\u63d0\u4ea4\u4e4b\u524d\u505a\u4e86\u6240\u6709\u8fd9\u4e9b\u4e8b\u60c5\uff0c\u4f60\u7684\u4ee3\u7801\u5c06\u53ef\u80fd\u5f88\u5feb\u88ab\u63a5\u53d7\u3002\u5f53\u7136\uff0c\u5982\u679c\u4f60\u6253\u7b97\u5bf9Appium\u8fdb\u884c\u5927\u91cf\u7684\u6539\u9020\u5de5\u4f5c\uff0c\u4f60\u53ef\u4ee5\u8054\u7cfb\u5f00\u53d1\u4eba\u5458\uff0c\u4ee5\u786e\u4fdd\u8fd9\u4e9b\u6539\u53d8\u7b26\u5408\u6211\u4eec\u7684\u7406\u5ff5\uff0c\u8fd9\u6837\u5728\u4f60\u5f00\u52a8\u4e4b\u524d\u786e\u4fdd\u6211\u4eec\u4f1a\u63a5\u53d7\u8fd9\u4e9b\u6539\u52a8\u3002",
            "title": "\u63d0\u4ea4\u4ee3\u7801"
        },
        {
            "location": "/cn/contributing-to-appium/developers-overview/#_8",
            "text": "\u59cb\u7ec8\u786e\u4fdd\u4f60\u7684\u66f4\u6539\u5df2\u7ecf\u88ab\u6d4b\u8bd5\u8fc7\uff01 \u9664\u4e86\u5355\u6d4b\u8bd5\u548ce2e\u6d4b\u8bd5\uff0c\u8bf7\u786e\u4fdd\u5728\u4f60\u5f00\u59cb\u8fdb\u884c\u66f4\u6539\u548c\u63d0\u4ea4review\u4e4b\u524d\uff0c\u6240\u6709\u73b0\u6709\u6d4b\u8bd5\u90fd\u88ab\u8fd0\u884c\u3002\n\u6211\u4eec\u6709\u4e3a\u6bcf\u4e00\u4e2aAppium repo\u8bbe\u7f6eCI\u4f5c\u4e3a\u5b89\u5168\u7f51\uff0c\u8fd9\u6837\u4fbf\u4e8e\u5ba1\u9605\u8005\u77e5\u6653\u4ee3\u7801\u662f\u5426\u5df2\u7ecf\u901a\u8fc7\u6d4b\u8bd5\u3002\u5728\u4efb\u4f55Appium\u5305\u8fd0\u884c\u6d4b\u8bd5\u90fd\u5f88\u5bb9\u6613\uff01\n\u4ee5\u4e0b\u662f\u4f60\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\uff08\u9664\u975eREADME\u53e6\u6709\u8bf4\u660e\uff09\uff1a  gulp                    # \u76d1\u6d4b\u76ee\u5f55\u4e0b\u91cd\u7f16\u8bd1\u4ee3\u7801\u66f4\u6539\uff0c\u4ee5\u53ca\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\ngulp once               # \u540c\u4e0a\uff0c\u5f53\u4e0d\u63d0\u4f9b\u76d1\u6d4b\ngulp unit-test          # \u8f6c\u5316\u548c\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\ngulp e2e-test           # \u8f6c\u5316\u4ee5\u53ca\u8fd0\u884c\u7aef\u5230\u7aef\uff0f\u529f\u80fd\u6d4b\u8bd5\n_FORCE_LOGS=1 <command> # \u663e\u793a\u6d4b\u8bd5\u8fd0\u884c\u671f\u95f4\u7684\u6a21\u5757\u65e5\u5fd7\u8f93\u51fa  \u8bf7\u6ce8\u610f\uff0c\u5355\u5143\u6d4b\u8bd5\u7684\u6587\u4ef6\u540e\u7f00\u901a\u5e38\u4e3a  -specs.js  \uff0c\u800ce2e\u6d4b\u8bd5\u6587\u4ef6\u540e\u7f00\u5219\u4e3a -e2e-specs.js .",
            "title": "\u6d4b\u8bd5"
        },
        {
            "location": "/cn/contributing-to-appium/developers-overview/#_9",
            "text": "\u4efb\u4f55\u975eAppium\u4e3b\u5305\u7684\u53d1\u5e03\u6d41\u7a0b\u90fd\u662f\u975e\u5e38\u7b80\u6d01\u660e\u4e86\u7684\uff08\u8bf7\u6ce8\u610f\uff1a\u5982\u679c\u4f60\u60f3\u8981\u53d1\u5e03\u5b83\uff0c\u4f60\u9700\u8981\u6210\u4e3a\u4e00\u4e2aNPM\u7684\u6240\u6709\u8005\u3002\n\u6240\u6709\u6743\u7531Appium\u63d0\u4ea4\u8005\u7ba1\u7406\uff1b \u5982\u679c\u4f60\u5bf9\u6240\u6709\u8005\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u8054\u7cfb@jlipps \u6216\u8005 @imurchie\uff09\u3002   rm -rf node_modules && npm install  \u5e76\u8fd0\u884c\u6d4b\u8bd5\u4ee5\u786e\u4fdd\u5168\u65b0\u5b89\u88c5\u6b63\u5e38\u5de5\u4f5c  \u6839\u636e SemVer  \u89c4\u5219\u51b3\u5b9a\u6211\u4eec\u662f\u5426\u9700\u8981\u53d1\u5e03\u4e00\u4e2a\u8865\u4e01\uff08\u6f0f\u6d1e\u4fee\u590d\uff09\uff0c\u5fae\u8c03\uff08\u529f\u80fd\uff09\u6216\u8005\u662f\u4e3b\u8981\uff08\u8fed\u4ee3\uff09(\u8bf7\u53c2\u8003  how SemVer works with NPM .  \u901a\u8fc7\u4efb\u4f55\u9002\u5f53\u7684\u66f4\u6539\u548c\u63d0\u4ea4\u6765\u66f4\u65b0CHANGELOG\u4ee5README\u6587\u4ef6\u3002\u5927\u591a\u6570\u5b50\u5305\u6ca1\u6709CHANGELOG\u3002  \u901a\u8fc7\u9002\u5f53\u7684\u7248\u672c\u7c7b\u578b\u8fd0\u884c  npm version <version-type>    \u5c06\u9002\u5f53\u7684\u5206\u652f\u63a8\u9001\u5230GitHub, \u4e0d\u8981\u5fd8\u8bb0\u52a0\u5165 --tags  \u6765\u6807\u8bb0\u521a\u7531  npm version \u521b\u5efa\u7684\u6807\u5fd7.  \u8fd0\u884c  npm publish  (\u5982\u679c\u4e0d\u662f\u6b63\u5f0f\u7248\uff0c \u8bf7\u4f7f\u7528 --tag beta ).   \u5bf9\u4e8eAppium\u7684\u4e3b\u5305\u53d1\u5e03\uff0c\u4e0a\u8ff0\u6b65\u9aa4\u5fc5\u987b\u6267\u884c\uff0c\u4f46\u6709\u4ee5\u4e0b\u6539\u53d8\u3002\u4e00\u4e2a\u539f\u56e0\u662f\u5bf9\u4e8e\u4e3b\u5305\uff0c\u6211\u4eec\u4f7f\u7528NPM\u6536\u7f29\u5305\u88c5\n\u4ee5\u786e\u4fdd\u4f9d\u8d56\u5728\u5b89\u88c5\u7684\u65f6\u5019\u4e0d\u66f4\u6539\u3002\u53e6\u4e00\u4e2a\u539f\u56e0\u662f\u6211\u4eec\u5728master\u4e0a\u5f00\u53d1\u548c\u5404\u79cd\u5206\u652f\u4e0a\u53d1\u5e03\u3002\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\n\u5982\u4e0b\uff1a\u6211\u4eec\u7ecf\u5e38\u5728master\u4e0a\u5f00\u53d1\u548c\u589e\u52a0\u65b0\u7684\u4ee3\u7801\u3002 \u5f53\u6211\u4eec\u51c6\u5907\u597d\u4e86\u505a\u4e00\u4e2a\u65b0\u7684\u6b21\u8981\u6216\u4e3b\u8981\u7248\u672c\uff08\u4f8b\u5982 1.5.0 \n\u6216 2.0.0 \uff09\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u53d1\u5e03\u5206\u652f\uff08\u5206\u522b\u4e3a 1.5 \u6216 2.0 \uff09\u3002\u7136\u540e\u6211\u4eec\u53d1\u5e03\u8be5\u5206\u652f\u3002 \u4e00\u65e6\u6211\u4eec\u8ba4\u4e3a\u9700\u8981\u4fee\u590d\u8865\u4e01\uff0c\n\u6211\u4eec\u9996\u5148\u5c06\u8865\u4e01\u62c9\u5230master\u4e2d\uff0c\u7136\u540e\u5c06\u5355\u4e2a\u8865\u4e01\u6311\u9009\u5230\u53d1\u5e03\u5206\u652f\uff08\u751a\u81f3\u662f\u591a\u4e2a\u53d1\u5e03\u5206\u652f\uff09\u3002 \u7136\u540e\u6211\u4eec\u518d\u6b21\n\u4ece\u8fd9\u4e9b\u5206\u652f\u53d1\u5e03\u66f4\u65b0\u7684\u8865\u4e01\u7248\u672c\uff08\u4f8b\u5982 1.5.1 \u6216 2.0.1 \uff09\u3002  \u5173\u4e8e  npm shrinkwrap \u7684\u6ce8\u91ca\uff1a  \u6211\u4eec\u4f7f\u7528 npm shrinkwrap \u662f\u4e3a\u4e86\u5728\u53d1\u5e03\u65f6\u9501\u5b9a\u4f9d\u8d56\u5173\u7cfb\u3002\n\u6ca1\u6709\u5b83\uff0c\u4efb\u4f55\u4f9d\u8d56\u5305\u4e0a\u7684\u5f00\u53d1\u5c06\u5728\u5b89\u88c5Appium\u65f6\u53cd\u5e94\u51fa\u6765\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u95ee\u9898\u3002 \u7531\u4e8e\u914d\u7f6e\u6587\u4ef6 npm-shrinkwrap.json \u4ec5\u5b58\u5728\u4e8e\u53d1\u5e03\u5206\u652f\u4e0a\uff0c\n\u56e0\u6b64\u6709\u5fc5\u8981\u5728\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u624b\u52a8\u7ba1\u7406\u5b83\u3002 \u5b83\u9700\u8981\u4e0e\u5bf9 package.json \u7684\u66f4\u6539\u4e00\u8d77\u63d0\u4ea4\u5230GitHub\u3002   \u5982\u679c NPM shrinkwrap JSON \u6587\u4ef6\u5b58\u5728\uff0c\u8bf7\u79fb\u9664.  rm -rf node_modules && npm install  \u5e76\u8fd0\u884c\u6d4b\u8bd5\u4ee5\u786e\u4fdd\u5168\u65b0\u5b89\u88c5\u6b63\u5e38\u5de5\u4f5c  rm -rf node_modules && npm install --production  \u4ee5\u83b7\u53d6\u4ec5production\u90e8\u5206.  npm shrinkwrap  \u6765\u7f16\u5199\u65b0\u7684 NPM shrinkwrap JSON \u6587\u4ef6.  \u6839\u636eSemVer\u6765\u51b3\u5b9a\u6211\u4eec\u662f\u5426\u9700\u8981\u53d1\u5e03\u4e00\u4e2a\u8865\u4e01\uff08\u6f0f\u6d1e\u4fee\u590d\uff09\uff0c\u5fae\u8c03\uff08\u529f\u80fd\uff09\u6216\u8005\u662f\u4e3b\u8981\uff08\u8fed\u4ee3\uff09  \u7528\u5408\u9002\u7684\u65b0\u7248\u672c\u4fe1\u606f\u6765\u66f4\u65b0 package.json    \u5bf9CHANGELOG/README\u8fdb\u884c\u5408\u9002\u7684\u66f4\u6539\uff0c\u540cshrinkwrap \u548c  package.json \u7684\u6539\u53d8\u4e00\u8d77\u4ee5PR\u7684\u5f62\u5f0f\u8fdb\u884c\u63d0\u4ea4\u5ba1\u6838\u3002\u5f85\u5b83\u88ab\u5408\u5e76\u4e4b\u540e\uff0c\u628a\u5b83 pull \u8fdb release \u5206\u652f\u3002  \u5728\u53d1\u5e03\u5206\u652f\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u5c0f\u5206\u652f\uff0c\u5982 1.5 \u6216 1.4 \uff09\u4e0a\u521b\u5efa\u4e00\u4e2a\u5f62\u5f0f\u4e3a v <version> \u7684\u6807\u7b7e\uff1a git tag -av <version> \uff0c\u4f8b\u5982 git tag -a 1.5.0 \u3002 \u8fd9\u5bf9\u6d4b\u8bd5\u7248\u672c\u4e0d\u662f\u5fc5\u9700\u7684\u3002  \u628a\u6807\u7b7e\u63a8\u9001\u5230\u4e0a\u6e38\u5206\u652f\uff1a  git push --tags <remote> <branch>  \u5b89\u88c5dev\u4f9d\u8d56 \uff08\u6216\u8005\u81f3\u5c11 gulp  \u548c  appium-gulp-plugins \uff09  \u8fd0\u884c npm publish \uff08\u5982\u679c\u8fd9\u4e0d\u662f\u6b63\u5f0f\u7248\u672c\uff0c\u8bf7\u4f7f\u7528 --tag beta  \uff09\u3002  \u5728appium.io\u66f4\u65b0\u6587\u6863\u3002 \u4ecegithub\u7684check out appium.io repo\uff0ccheck out gh-pages \u5206\u652f\u548c\u5e76\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\u3002 \u7136\u540e\u8fd0\u884c rake publish \u3002  \u5728GitHub\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7248\u672c\uff1a\u8f6c\u5230 https://github.com/appium/appium/releases/tag/v <VERSION> \u5e76\u70b9\u51fb\u201c\u7f16\u8f91\u6807\u7b7e\u201d\u3002 \u8f93\u5165\u53d1\u5e03\u540d\u79f0\u4e3a <VERSION> \uff08\u4f8b\u5982\uff0c 2.0.5 \uff09\uff0c\u7136\u540e\u7c98\u8d34\u5230\u66f4\u6539\u65e5\u5fd7\uff08\u4f46\u4e0d\u662f\u6b64\u7248\u672c\u7684changelog\u6807\u9898\uff09\u3002 \u5982\u679c\u662f\u8bd5\u7528\u7248\uff0c\u8bf7\u6807\u8bb0\u4e3a\u9884\u53d1\u5e03\u3002  \u5728 discuss.appium.io \u521b\u5efa\u65b0\u7684\u5e16\u5b50\u6765\u5ba3\u5e03release. \u8bf7\u521b\u5efa\u4e8e \"News\"\u7c7b\u522b. \u7c98\u8d34\u5728changelog\u548c\u4efb\u4f55\u53ef\u9009\u7684\u8bc4\u8bba\u3002 \u7f6e\u9876\u5f53\u524d\u5e16\u5b50\u5e76\u53d6\u6d88\u7f6e\u9876\u4e0a\u4e00\u4e2arelease\u5e16\u5b50\u3002  \u5f00\u59cb\u53d1\u5e03 appium-desktop \u3002  \u8bf7\u544a\u77e5 @jlipps\uff0c\u4ee5\u4fbf\u4ed6\u53ef\u4ee5\u53d1\u5e03\u4e00\u4e2a\u94fe\u63a5\u5230\u8ba8\u8bba\u5e16\u5b50\u3002   \u672c\u6587\u7531  ZhaoC  \u7ffb\u8bd1\uff0c\u7531  oscarxie  \u6821\u9a8c\u3002",
            "title": "\u53d1\u5e03"
        },
        {
            "location": "/cn/contributing-to-appium/gulp/",
            "text": "Appium gulp\u547d\u4ee4\n\n\nGulp\n\u5c31\u50cfNode.js\u7684\nmake\n\u4e00\u6837\uff01\u6211\u4eec\u4f7f\u7528\u5b83\u6765\u81ea\u52a8\u5316\u5404\u79cd\u5e94\u7528\u5f00\u53d1\u4efb\u52a1\u3002\n\u4ee5\u4e0b\u662f\u4f60\u53ef\u4ee5\u6267\u884c\u7684\u64cd\u4f5c\uff1a\n\n\n\n\n\n\n\n\n\u4efb\u52a1\n\n\n\u8bf4\u660e\n\n\n\n\n\n\n\n\n\n\ngulp once\n\n\n\u6e05\u7406\uff0c\u9a8c\u9519\uff0c\u8f6c\u8bd1\u4ee5\u53ca\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\n\n\n\n\n\n\ngulp watch\n\n\n\u5f53\u4ee3\u7801\u66f4\u6539\u65f6\uff0c\u81ea\u52a8\u8fd0\u884c\ngulp once\n\n\n\n\n\n\ngulp lint\n\n\n\u8fd0\u884c JSLint\n\n\n\n\n\n\ngulp jshint\n\n\n\u8fd0\u884c JSHint\n\n\n\n\n\n\ngulp transpile\n\n\n\u5c06\u6211\u4eec\u7684ES7/ES2015\u4ee3\u7801\u8f6c\u8bd1\u4e3aES5\uff0c\u751f\u6210\n/build\n\u76ee\u5f55+\u5185\u5bb9\n\n\n\n\n\n\ngulp unit-test\n\n\n\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\n\n\n\n\n\n\ngulp e2e-test\n\n\n\u8fd0\u884ce2e \u6d4b\u8bd5\n\n\n\n\n\n\ngulp docs\n\n\n\u751f\u6210 docs/en/writing-running-appium/server-args.md \u6587\u6863\n\n\n\n\n\n\n\n\n\u672c\u6587\u7531 \nZhaoC\n \u7ffb\u8bd1\uff0c\u7531 \noscarxie\n \u6821\u9a8c\u3002",
            "title": "Gulp"
        },
        {
            "location": "/cn/contributing-to-appium/gulp/#appium-gulp",
            "text": "Gulp \u5c31\u50cfNode.js\u7684 make \u4e00\u6837\uff01\u6211\u4eec\u4f7f\u7528\u5b83\u6765\u81ea\u52a8\u5316\u5404\u79cd\u5e94\u7528\u5f00\u53d1\u4efb\u52a1\u3002\n\u4ee5\u4e0b\u662f\u4f60\u53ef\u4ee5\u6267\u884c\u7684\u64cd\u4f5c\uff1a     \u4efb\u52a1  \u8bf4\u660e      gulp once  \u6e05\u7406\uff0c\u9a8c\u9519\uff0c\u8f6c\u8bd1\u4ee5\u53ca\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5    gulp watch  \u5f53\u4ee3\u7801\u66f4\u6539\u65f6\uff0c\u81ea\u52a8\u8fd0\u884c gulp once    gulp lint  \u8fd0\u884c JSLint    gulp jshint  \u8fd0\u884c JSHint    gulp transpile  \u5c06\u6211\u4eec\u7684ES7/ES2015\u4ee3\u7801\u8f6c\u8bd1\u4e3aES5\uff0c\u751f\u6210 /build \u76ee\u5f55+\u5185\u5bb9    gulp unit-test  \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5    gulp e2e-test  \u8fd0\u884ce2e \u6d4b\u8bd5    gulp docs  \u751f\u6210 docs/en/writing-running-appium/server-args.md \u6587\u6863     \u672c\u6587\u7531  ZhaoC  \u7ffb\u8bd1\uff0c\u7531  oscarxie  \u6821\u9a8c\u3002",
            "title": "Appium gulp\u547d\u4ee4"
        },
        {
            "location": "/cn/contributing-to-appium/how-to-write-docs/",
            "text": "\u5982\u4f55\u7f16\u5199\u6587\u6863\n\n\n##\n\u7528\u4e8e\u5199\u4e00\u4e2ah2\u5934\u3002 \u6bcf\u4e2a\u6587\u6863\u5fc5\u987b\u4ee5h2\u5f00\u5934\u3002\u8fd9\u662f\u4e3a\u4e86\u652f\u6301appium.io\u6587\u6863\u751f\u6210\u3002\u4e0d\u8981\u4f7f\u7528\n---\n\u4e0b\u5212\u7ebf\u65b9\u6cd5\u521b\u5efa\u6807\u9898\u3002\n\u4e0d\u8981\u5bf9\u6807\u9898\u4f7f\u7528h1\n#\n\u6216\n===\n\uff0c\u56e0\u4e3a\u5b83\u4e0d\u652f\u6301\u76ee\u5f55\uff08\u6587\u4ef6\u5939\u540d\u79f0\u7528\u4f5ch1\uff09\u3002\n\n\n\u526f\u6807\u9898\n\n\n###\n \u7528\u4e8e\u7f16\u5199\u526f\u6807\u9898\n\n\n\u5e38\u89c4\u6807\u9898\n\n\n####\n \u7528\u4e8e\u4e0d\u51fa\u73b0\u5728\u76ee\u5f55\u91cc\u7684\u6807\u9898\u3002 \n\u4e0d\u8981\u4f7f\u7528h5 \n#####\n\u6216\u8005h6\n######\n\n\n\u6362\u884c\u7b26\n\n\n\u4e0d\u8981\u4f7f\u7528 \n--\n \u6216\u8005 \n---\n\u8fd9\u6837\u7684\u6362\u884c\u7b26\u3002 \u8fd9\u6837\u4f1a\u6df7\u6dc6\u7248\u9762\u3002\n\n\n\u94fe\u63a5\n\n\n\u94fe\u63a5\u5230 readme :\n\n\n[readme](../../README.md)\n\n\n\u94fe\u63a5\u5230\u8d21\u732e\u699c\uff1a\n\n\n[contributing](../../CONTRIBUTING.md)\n\n\n\u94fe\u63a5\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6\n\n\n[link text](filename.md)\n\n\n\u5982\u679c\u60f3\u94fe\u63a5\u6587\u4ef6\u5185\u90e8\uff0c\u8bf7\u4f7f\u7528\n#\n \u4f5c\u4e3a\u7248\u9762URL\n\n\n[go direct to json](filename.md#json-wire-protocol-server-extensions)\n\n\n\u8bf7\u6ce8\u610f\uff0c\u5f53\u6807\u9898\u6539\u53d8\u65f6\uff0c\u54c8\u5e0c\u94fe\u63a5\u4f1a\u88ab\u7834\u574f\u6389\u3002\u6240\u4ee5\u66f4\u597d\u7684\u9009\u62e9\u662f\u94fe\u63a5\u5230\u6587\u4ef6\u7684\u5f00\u5934\uff08\u7528\nother.md\n \u53d6\u4ee3 \nother.md#something\n\uff09\n\n\n\u4e0eappium.io\u7684\u517c\u5bb9\u6027\n\n\n\u5728appium.io\u91cc\u4e2d\u5c45\u5bf9\u9f50\u4ee3\u7801\n\n\nAppium.io\u6587\u6863\u4f7f\u7528[slate]\uff08https://github.com/tripit/slate\uff09\u83b7\u53d6\u6587\u6863\u3002\n\u5982\u679c\u6587\u6863\u4e2d\u7684\u4ee3\u7801\u6bb5\u4e0d\u662f\u7279\u5b9a\u7684\u8bed\u8a00\uff0c\u6216\u8005\u4f60\u5e0c\u671b\u4ee3\u7801\u6bb5\u4fdd\u7559\u5728appium.io\u6587\u6863\u7684\u5c45\u4e2d\u90e8\u5206\uff0c\u8bf7\u4f7f\u7528\ncenter\n\u4f5c\u4e3a\u4ee3\u7801\u533a\u7684\u540e\u7f00\u3002\n\n\n\u4f8b\u5982\uff1a\n\n\n```center\n\u4ee3\u7801\u6bb5\u653e\u7f6e\u4e8e\u6b64\u3002\n```\n\n\n\n\u51fa\u7248\n\n\n\u8981\u5728appium.io\u4e0a\u53d1\u5e03\u6587\u6863\uff0c\u8bf7\u53c2\u9605\napi-docs\n \u548c \nappium.io\n.\n\n\n\u672c\u6587\u7531 \nZhaoC\n \u7ffb\u8bd1\uff0c\u7531 \noscarxie\n \u6821\u9a8c\u3002",
            "title": "How to write docs"
        },
        {
            "location": "/cn/contributing-to-appium/how-to-write-docs/#_1",
            "text": "## \u7528\u4e8e\u5199\u4e00\u4e2ah2\u5934\u3002 \u6bcf\u4e2a\u6587\u6863\u5fc5\u987b\u4ee5h2\u5f00\u5934\u3002\u8fd9\u662f\u4e3a\u4e86\u652f\u6301appium.io\u6587\u6863\u751f\u6210\u3002\u4e0d\u8981\u4f7f\u7528 --- \u4e0b\u5212\u7ebf\u65b9\u6cd5\u521b\u5efa\u6807\u9898\u3002\n\u4e0d\u8981\u5bf9\u6807\u9898\u4f7f\u7528h1 # \u6216 === \uff0c\u56e0\u4e3a\u5b83\u4e0d\u652f\u6301\u76ee\u5f55\uff08\u6587\u4ef6\u5939\u540d\u79f0\u7528\u4f5ch1\uff09\u3002",
            "title": "\u5982\u4f55\u7f16\u5199\u6587\u6863"
        },
        {
            "location": "/cn/contributing-to-appium/how-to-write-docs/#_2",
            "text": "###  \u7528\u4e8e\u7f16\u5199\u526f\u6807\u9898",
            "title": "\u526f\u6807\u9898"
        },
        {
            "location": "/cn/contributing-to-appium/how-to-write-docs/#_3",
            "text": "####  \u7528\u4e8e\u4e0d\u51fa\u73b0\u5728\u76ee\u5f55\u91cc\u7684\u6807\u9898\u3002 \n\u4e0d\u8981\u4f7f\u7528h5  ##### \u6216\u8005h6 ######",
            "title": "\u5e38\u89c4\u6807\u9898"
        },
        {
            "location": "/cn/contributing-to-appium/how-to-write-docs/#_4",
            "text": "\u4e0d\u8981\u4f7f\u7528  --  \u6216\u8005  --- \u8fd9\u6837\u7684\u6362\u884c\u7b26\u3002 \u8fd9\u6837\u4f1a\u6df7\u6dc6\u7248\u9762\u3002",
            "title": "\u6362\u884c\u7b26"
        },
        {
            "location": "/cn/contributing-to-appium/how-to-write-docs/#_5",
            "text": "\u94fe\u63a5\u5230 readme :  [readme](../../README.md)  \u94fe\u63a5\u5230\u8d21\u732e\u699c\uff1a  [contributing](../../CONTRIBUTING.md)  \u94fe\u63a5\u5230\u53e6\u4e00\u4e2a\u6587\u4ef6  [link text](filename.md)  \u5982\u679c\u60f3\u94fe\u63a5\u6587\u4ef6\u5185\u90e8\uff0c\u8bf7\u4f7f\u7528 #  \u4f5c\u4e3a\u7248\u9762URL  [go direct to json](filename.md#json-wire-protocol-server-extensions)  \u8bf7\u6ce8\u610f\uff0c\u5f53\u6807\u9898\u6539\u53d8\u65f6\uff0c\u54c8\u5e0c\u94fe\u63a5\u4f1a\u88ab\u7834\u574f\u6389\u3002\u6240\u4ee5\u66f4\u597d\u7684\u9009\u62e9\u662f\u94fe\u63a5\u5230\u6587\u4ef6\u7684\u5f00\u5934\uff08\u7528 other.md  \u53d6\u4ee3  other.md#something \uff09",
            "title": "\u94fe\u63a5"
        },
        {
            "location": "/cn/contributing-to-appium/how-to-write-docs/#appiumio",
            "text": "",
            "title": "\u4e0eappium.io\u7684\u517c\u5bb9\u6027"
        },
        {
            "location": "/cn/contributing-to-appium/how-to-write-docs/#appiumio_1",
            "text": "Appium.io\u6587\u6863\u4f7f\u7528[slate]\uff08https://github.com/tripit/slate\uff09\u83b7\u53d6\u6587\u6863\u3002\n\u5982\u679c\u6587\u6863\u4e2d\u7684\u4ee3\u7801\u6bb5\u4e0d\u662f\u7279\u5b9a\u7684\u8bed\u8a00\uff0c\u6216\u8005\u4f60\u5e0c\u671b\u4ee3\u7801\u6bb5\u4fdd\u7559\u5728appium.io\u6587\u6863\u7684\u5c45\u4e2d\u90e8\u5206\uff0c\u8bf7\u4f7f\u7528 center \u4f5c\u4e3a\u4ee3\u7801\u533a\u7684\u540e\u7f00\u3002  \u4f8b\u5982\uff1a  ```center\n\u4ee3\u7801\u6bb5\u653e\u7f6e\u4e8e\u6b64\u3002\n```",
            "title": "\u5728appium.io\u91cc\u4e2d\u5c45\u5bf9\u9f50\u4ee3\u7801"
        },
        {
            "location": "/cn/contributing-to-appium/how-to-write-docs/#_6",
            "text": "\u8981\u5728appium.io\u4e0a\u53d1\u5e03\u6587\u6863\uff0c\u8bf7\u53c2\u9605 api-docs  \u548c  appium.io .  \u672c\u6587\u7531  ZhaoC  \u7ffb\u8bd1\uff0c\u7531  oscarxie  \u6821\u9a8c\u3002",
            "title": "\u51fa\u7248"
        },
        {
            "location": "/cn/contributing-to-appium/style-guide-2.0/",
            "text": "\u7ed9\u8d21\u732e\u8005\u7684\u98ce\u683c\u6307\u5357\n\n\n\u611f\u8c22\u60a8\u5bf9Appium\u7684\u8d21\u732e\uff01\u4ee5\u4e0b\u662f\u6211\u4eec\u7f16\u5199javascript\u4ee3\u7801\u65f6\u9700\u8981\u9075\u5b88\u7684\u51c6\u5219\uff0c\u8bf7\u786e\u8ba4\u4f60\u7684\u63d0\u4ea4\u80fd\u7b26\u5408\u8fd9\u4e9b\u89c4\u8303\uff0c\u8fd9\u6709\u5229\u4e8e\u6211\u4eec\u5408\u5e76\u4f60\u7684\u4ee3\u7801\u65f6\u80fd\u4fdd\u6301\u826f\u597d\u7684\u7f16\u7801\u98ce\u683c\u3002\u5176\u4e2d\u6700\u6838\u5fc3\u7684\u51c6\u5219\u662f\uff1a\n\u4f7f\u4f60\u7684\u4ee3\u7801\u4e0e\u5176\u4ed6\u4ee3\u7801\u7684\u7f16\u7801\u98ce\u683c\u4fdd\u6301\u4e00\u81f4\n\u3002\n\n\n\u884d\u5408\uff08Rebasing\uff09\n\n\n\u6bcf\u4e2a pull \u8bf7\u6c42\u4e2d\u7684\u63d0\u4ea4\uff08commits\uff09\u90fd\u5e94\u8be5\u5305\u542b\n\u903b\u8f91\u53d8\u66f4(logical changes)\n\u3002\n\u5982\u679c\u6709\u591a\u4f4d\u8d21\u732e\u8005\uff0c\u8bf7\u786e\u4fdd\u4ed6\u4eec\u5404\u81ea\u90fd\u6709\u81ea\u5df1\u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u4fee\u6539\u4f5c\u8005\u4fe1\u606f\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\u5408\u5e76\uff08merge\uff09\u63d0\u4ea4\u5fc5\u987b\u4ece pull \u8bf7\u6c42\u4e2d rebase \u3002\n\n\n\u68c0\u9519\uff08Linting\uff09\n\n\n\u6240\u6709\u7684\u4ee3\u7801\uff08\u9664\u4e86\u4f7f\u7528\u4e86 Apple \u79c1\u6709\u65b9\u6cd5\u7684\nbootstrap.js\n\u4ee3\u7801\uff09\u5fc5\u987b\u901a\u8fc7 JSLint \u7684\u68c0\u9519\u6d4b\u8bd5\u3002\u4f60\u53ef\u4ee5\u5728 Appium \u5b58\u50a8\u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c\ngrunt lint\n\u6765\u68c0\u67e5\u4f60\u7684\u4ee3\u7801\u3002\u5982\u679c\u4f60\u5df2\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 .js \u6587\u4ef6\uff0c\u8bf7\u786e\u8ba4\u5b83\u5728\ngrunt.js\n\u4e2d\u88ab\u901a\u914d\u7b26\u8986\u76d6\uff0c\u6216\u8005\u88ab\u4e13\u95e8\u6dfb\u52a0\u3002\n\n\n\u7f16\u8f91\u5668\u7684\u5373\u65f6\u68c0\u9519\u96c6\u6210\u5f88\u7b80\u5355\uff0c\u5e76\u4e14\u8fd9\u4f1a\u4f7f\u5f97\u6574\u4e2a\u7f16\u7801\u8fc7\u7a0b\u66f4\u52a0\u987a\u5229\u3002 \u6211\u4eec\u559c\u6b22 \njshint\n, \u56e0\u4e3a\u5b83\u5df2\u7ecf\u4e0e\u8bb8\u591a\u6e90\u4ee3\u7801\u7f16\u8f91\u5668\u96c6\u6210\u4e86\u3002\u5c06\u6587\u4ef6\n.jshintrc\n\u52a0\u5165\u5230\u4ed3\u5e93\u4e2d\uff0c\u5f53\u901a\u8fc7\u6dfb\u52a0jshint\u5230\u4f60\u7684\u7f16\u8f91\u5668\u65f6\uff0c\u4f60\u5c06\u5927\u53d7\u5373\u65f6\u68c0\u9519\u7684\u88e8\u76ca\u3002\n\n\n\u56e0\u4e3ajshint\u4e0d\u518d\u5f3a\u5236\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\uff0c\u6211\u4eec\u4e5f\u4f7f\u7528 \njscs\n\uff0c\u5b83\u4e5f\u96c6\u6210\u5728\u4e00\u4e9b\u6e90\u4ee3\u7801\u7f16\u8f91\u5668\u4e2d\u3002\n\n\n\u8fd9\u4e9b\u914d\u7f6e\u6587\u4ef6\u5b9a\u4e49\u4e86\u54ea\u4e9b\u8b66\u544a\u7c7b\u578b\u5c06\u4f1a\u51fa\u73b0\u5728\u4f60\u7684\u7f16\u8f91\u5668\u4e2d\u3002 \u67e5\u770b \nthis page for jshint\n \u548c \nthis page for jscs\n \uff0c\u627e\u5230\u5b83\u4eec\u5404\u81ea\u652f\u6301\u7684\u7f16\u8f91\u5668\u548c\u5e73\u53f0\u7684\u5217\u8868\uff0c\u4ee5\u53ca\u5982\u4f55\u8bbe\u7f6e\u4f60\u7684\u7f16\u8f91\u5668\u4f7f\u4e4b\u80fd\u81ea\u52a8\u5316\u68c0\u9519\u3002\n\n\n\u98ce\u683c\u6ce8\u91ca\uff08Style notes\uff09\n\n\n\u6211\u4eec\u4f7f\u7528\u524d\u6cbf\u7248\u672c\u7684 JavaScript\uff0c\u5e76\u5229\u7528Babel\u5c06\u5176\u6e32\u67d3\u5230\u652f\u6301\u5f53\u524d\u7248\u672c\u7684 Node.js\u3002\u6211\u4eec\u4f7f\u7528 \nES2015\n\uff08\u4ee5\u524d\u79f0\u4e3aES6\uff09\u4e2d\u7684\u4e00\u4e9b\u975e\u6807\u51c6\u7279\u6027\uff0c\u5982\nasync / await\n\u3002\u5728\u6240\u6709Appium\u7684\u8d21\u732e\u4e2d\u5fc5\u987b\u4e25\u683c\u9075\u5faa\u5982\u4e0b\u7f16\u7801\u98ce\u683c\uff01\n\n\n\n\n\u4f7f\u7528\u4e24\u4e2a\u7a7a\u683c\u6765\u7f29\u8fdb, \n\u4e0d\u8981\u4f7f\u7528 tabs\n\n\n\n\n\u5728\u8fd0\u7b97\u7b26\u4e24\u8fb9\uff0c\u5206\u522b\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff1a\n\n\njavascript\nvar x = 1;\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nvar x=1;\n\n\n\n\n\n\n\u5728\u5217\u8868\uff08lists\uff09,\u5bf9\u8c61\uff08objects\uff09,\u51fd\u6570\u8c03\u7528\uff08function calls\uff09\u7b49\u8bed\u53e5\u5757\u4e2d\uff0c\u9017\u53f7\u548c\u5192\u53f7\u540e\u9762\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff1a\n\n\njavascript\nvar x = myFunc(\"lol\", {foo: bar, baz: boo});\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nvar x = myFunc(\"lol\",{foo:bar,baz:boo});\n\n\n\n\n\n\n\u4ee3\u7801\u59cb\u7ec8\u4ee5\u5206\u53f7\u7ed3\u5c3e\n\n\n\n\n\n\n\u4ee5\u9017\u53f7\u5f00\u5934\n\n\njavascript\nvar x = {\n  foo: 'bar'\n, baz: 'boo'\n, wuz: 'foz'\n};\n\n\n\n\n\n\n\u5de6\u82b1\u62ec\u53f7\u5e94\u8be5\u548c\nfunction\n,\nif\n\u7b49\u5199\u5728\u540c\u4e00\u884c\uff0c\nelse\n\u5e94\u8be5\u88ab\u5939\u5728\u4e24\u4e2a\u82b1\u62ec\u53f7\u4e2d\u95f4\uff1a\n\n\njavascript\nif (foo === bar) {    \n  // do something\n} else {\n  // do something else\n}\n\n\n\n\n\n\nif\n,\nfor\n, \u548c\nfunction\n\u4e4b\u540e\u9700\u8981\u6dfb\u52a0\u7a7a\u683c\uff1a\n\n\njavascript\nif (foo === bar) {\n\n\njavascript\nfor (var i = 0; i < 10; i ++) {\n\n\njavascript\nvar lol = function (foo) {\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nif(foo === bar) {\n\n\njavascript\nfor(var i = 0; i < 10; i ++) {\n\n\njavascript\nvar lol = function(foo) {\n\n\n\n\n\n\n\u53ea\u6709\u4e00\u884c\u4ee3\u7801\u65f6\uff0c\nif\n\u8bed\u53e5\u5757\u7684\u82b1\u62ec\u53f7\u4e5f\u5e94\u8be5\u6dfb\u52a0\u4e0a\uff1a\n\n\njavascript\nif (foo === bar) {\n  foo++;\n}\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nif (foo === bar)\n  foo++;\n\n\n\u9664\u4e86\u51fa\u9519\u540e\u76f4\u63a5\u8c03\u7528\u56de\u8c03\u51fd\u6570\uff08callback\uff09\u5904\u7406\u9519\u8bef\uff08error\uff09\u7684\u8bed\u53e5\n\n\njavascript\nif (err) return cb(err);\n\n\n\n\n\n\n\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\n===\n, \u800c\u4e0d\u662f\n==\n\uff1b\u4f7f\u7528\n!==\n, \u800c\u4e0d\u662f\n!=\n\uff1b\n\n\n\n\n\u5355\u884c\u957f\u5ea6\u4e0d\u5e94\u8d85\u8fc779\u4e2a\u5b57\u7b26\uff1b\n\n\n\n\n\u622a\u65ad\u957f\u5b57\u7b26\u4e32\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\uff1a\n\n\njavascript\nmyFunc(\"This is a really long string that's longer \" +\n        \"than 79 characters so I broke it up, woo\");\n\n\n\n\n\n\n\u6ce8\u91ca\u9700\u8981\u548c\u4e0a\u4e00\u884c\u4ee3\u7801\u5de6\u5bf9\u9f50\uff1a\n\n\njavascript\nif (foo === 5) {\n  myFunc(foo);\n  // foo++;\n}\n\n\nnot\n\u800c\u4e0d\u662f\n\n\njavascript\nif (foo === 5) {\n  myFunc(foo);\n//foo++;\n}\n\n\n\n\n\n\n\u901a\u8fc7\u62d3\u5c55\u539f\u578b\uff0c\u6765\u521b\u5efa\u5b50\u7c7b\uff1a\n\n\n```javascript\nvar _ = require('underscore');\n\n\nvar SuperClass = function () {\n  this.init();\n};\n\n\nSuperClass.prototype.init = function () {\n  // initialize\n};\n\n\n// Create a subclass\n\n\nvar SubClass = function () {\n    this.init();\n};\n\n\n_.extend(SubClass.prototype, SuperClass.prototype);\n```\n\n\n\n\n\n\n\u51fd\u6570\u5b9a\u4e49\u4e2d\uff0c\u6700\u540e\u4f7f\u7528\u56de\u8c03\u51fd\u6570\uff1a\n\n\njavascript\nvar foo = function (arg1, arg2, cb) {\n  ...\n};\n\n\n\n\n\n\n\u4f7f\u7528\u53d8\u91cf\u6765\u5b9a\u4e49\u51fd\u6570\uff1a\n\n\njavascript\nvar myFunc = function (a, b, c) {};\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nfunction myFunc (a, b, c) {}\n\n\n\n\n\n\n\u53d8\u91cf\u540d\u5e94\u8be5\u662f\u9a7c\u5cf0\u5f0f\u5927\u5c0f\u5199\u98ce\u683c\uff1a\n\n\njavascript\nvar myVariable = 42;\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nvar my_variable = 42;\n\n\n\n\n\n\n\u68c0\u67e5\u662f\u5426\u6709\u672a\u5b9a\u4e49\u7684\u53d8\u91cf\uff1a\n\n\njavascript\ntypeof myVariable === \"undefined\"\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nmyVariable === undefined\n\n\n\n\n\n\n\u7ed9\u53d8\u91cf\u5b9a\u4e49\u9ed8\u8ba4\u503c\uff1a\n\n\njavascript\nvar x = y || z;\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nvar x = y ? y : z;\n\n\n\n\n\n\n\u6d4b\u8bd5\u4ee3\u7801\u98ce\u683c\uff08Test Style\uff09:\n\n\n\u5728\u4ee3\u7801\u8bed\u4e49\u901a\u987a\u548c\u957f\u5ea6\u8bb8\u53ef\u4e0b\uff0c\u53ef\u4ee5\u4fdd\u6301\u5728\u540c\u4e00\u884c\uff1a\n\n\n\u6837\u4f8b\uff1a\n\n\n  driver.elementByTagName('el1').should.become(\"123\")\n    .nodeify(done);\n\n  driver\n    .elementsByTagName('el1').should.eventually.have.length(0)\n    .nodeify(done);\n\n\n\n\n\u6216\u8005\u4f7f\u7528\u7f29\u8fdb\u6765\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff1a\n\n\nh.driver\n  .elementById('comments')\n    .clear()\n    .click()\n    .keys(\"hello world\")\n    .getValue()\n    .should.become(\"hello world\")\n  .elementById('comments')\n    .getValue().should.become(\"hello world\")\n  .nodeify(done);\n\nh.driver\n  .execute(\"'nan'--\")\n    .should.be.rejectedWith(\"status: 13\")\n  .nodeify(done);\n\n\n\n\n\u672c\u6587\u7531 \nwanyukang\n \u7ffb\u8bd1\uff0c\u7531 \noscarxie\n \u6821\u9a8c\u3002",
            "title": "Style guide 2.0"
        },
        {
            "location": "/cn/contributing-to-appium/style-guide-2.0/#_1",
            "text": "\u611f\u8c22\u60a8\u5bf9Appium\u7684\u8d21\u732e\uff01\u4ee5\u4e0b\u662f\u6211\u4eec\u7f16\u5199javascript\u4ee3\u7801\u65f6\u9700\u8981\u9075\u5b88\u7684\u51c6\u5219\uff0c\u8bf7\u786e\u8ba4\u4f60\u7684\u63d0\u4ea4\u80fd\u7b26\u5408\u8fd9\u4e9b\u89c4\u8303\uff0c\u8fd9\u6709\u5229\u4e8e\u6211\u4eec\u5408\u5e76\u4f60\u7684\u4ee3\u7801\u65f6\u80fd\u4fdd\u6301\u826f\u597d\u7684\u7f16\u7801\u98ce\u683c\u3002\u5176\u4e2d\u6700\u6838\u5fc3\u7684\u51c6\u5219\u662f\uff1a \u4f7f\u4f60\u7684\u4ee3\u7801\u4e0e\u5176\u4ed6\u4ee3\u7801\u7684\u7f16\u7801\u98ce\u683c\u4fdd\u6301\u4e00\u81f4 \u3002",
            "title": "\u7ed9\u8d21\u732e\u8005\u7684\u98ce\u683c\u6307\u5357"
        },
        {
            "location": "/cn/contributing-to-appium/style-guide-2.0/#rebasing",
            "text": "\u6bcf\u4e2a pull \u8bf7\u6c42\u4e2d\u7684\u63d0\u4ea4\uff08commits\uff09\u90fd\u5e94\u8be5\u5305\u542b \u903b\u8f91\u53d8\u66f4(logical changes) \u3002\n\u5982\u679c\u6709\u591a\u4f4d\u8d21\u732e\u8005\uff0c\u8bf7\u786e\u4fdd\u4ed6\u4eec\u5404\u81ea\u90fd\u6709\u81ea\u5df1\u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u4fee\u6539\u4f5c\u8005\u4fe1\u606f\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\u5408\u5e76\uff08merge\uff09\u63d0\u4ea4\u5fc5\u987b\u4ece pull \u8bf7\u6c42\u4e2d rebase \u3002",
            "title": "\u884d\u5408\uff08Rebasing\uff09"
        },
        {
            "location": "/cn/contributing-to-appium/style-guide-2.0/#linting",
            "text": "\u6240\u6709\u7684\u4ee3\u7801\uff08\u9664\u4e86\u4f7f\u7528\u4e86 Apple \u79c1\u6709\u65b9\u6cd5\u7684 bootstrap.js \u4ee3\u7801\uff09\u5fc5\u987b\u901a\u8fc7 JSLint \u7684\u68c0\u9519\u6d4b\u8bd5\u3002\u4f60\u53ef\u4ee5\u5728 Appium \u5b58\u50a8\u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c grunt lint \u6765\u68c0\u67e5\u4f60\u7684\u4ee3\u7801\u3002\u5982\u679c\u4f60\u5df2\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 .js \u6587\u4ef6\uff0c\u8bf7\u786e\u8ba4\u5b83\u5728 grunt.js \u4e2d\u88ab\u901a\u914d\u7b26\u8986\u76d6\uff0c\u6216\u8005\u88ab\u4e13\u95e8\u6dfb\u52a0\u3002  \u7f16\u8f91\u5668\u7684\u5373\u65f6\u68c0\u9519\u96c6\u6210\u5f88\u7b80\u5355\uff0c\u5e76\u4e14\u8fd9\u4f1a\u4f7f\u5f97\u6574\u4e2a\u7f16\u7801\u8fc7\u7a0b\u66f4\u52a0\u987a\u5229\u3002 \u6211\u4eec\u559c\u6b22  jshint , \u56e0\u4e3a\u5b83\u5df2\u7ecf\u4e0e\u8bb8\u591a\u6e90\u4ee3\u7801\u7f16\u8f91\u5668\u96c6\u6210\u4e86\u3002\u5c06\u6587\u4ef6 .jshintrc \u52a0\u5165\u5230\u4ed3\u5e93\u4e2d\uff0c\u5f53\u901a\u8fc7\u6dfb\u52a0jshint\u5230\u4f60\u7684\u7f16\u8f91\u5668\u65f6\uff0c\u4f60\u5c06\u5927\u53d7\u5373\u65f6\u68c0\u9519\u7684\u88e8\u76ca\u3002  \u56e0\u4e3ajshint\u4e0d\u518d\u5f3a\u5236\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\uff0c\u6211\u4eec\u4e5f\u4f7f\u7528  jscs \uff0c\u5b83\u4e5f\u96c6\u6210\u5728\u4e00\u4e9b\u6e90\u4ee3\u7801\u7f16\u8f91\u5668\u4e2d\u3002  \u8fd9\u4e9b\u914d\u7f6e\u6587\u4ef6\u5b9a\u4e49\u4e86\u54ea\u4e9b\u8b66\u544a\u7c7b\u578b\u5c06\u4f1a\u51fa\u73b0\u5728\u4f60\u7684\u7f16\u8f91\u5668\u4e2d\u3002 \u67e5\u770b  this page for jshint  \u548c  this page for jscs  \uff0c\u627e\u5230\u5b83\u4eec\u5404\u81ea\u652f\u6301\u7684\u7f16\u8f91\u5668\u548c\u5e73\u53f0\u7684\u5217\u8868\uff0c\u4ee5\u53ca\u5982\u4f55\u8bbe\u7f6e\u4f60\u7684\u7f16\u8f91\u5668\u4f7f\u4e4b\u80fd\u81ea\u52a8\u5316\u68c0\u9519\u3002",
            "title": "\u68c0\u9519\uff08Linting\uff09"
        },
        {
            "location": "/cn/contributing-to-appium/style-guide-2.0/#style-notes",
            "text": "\u6211\u4eec\u4f7f\u7528\u524d\u6cbf\u7248\u672c\u7684 JavaScript\uff0c\u5e76\u5229\u7528Babel\u5c06\u5176\u6e32\u67d3\u5230\u652f\u6301\u5f53\u524d\u7248\u672c\u7684 Node.js\u3002\u6211\u4eec\u4f7f\u7528  ES2015 \uff08\u4ee5\u524d\u79f0\u4e3aES6\uff09\u4e2d\u7684\u4e00\u4e9b\u975e\u6807\u51c6\u7279\u6027\uff0c\u5982 async / await \u3002\u5728\u6240\u6709Appium\u7684\u8d21\u732e\u4e2d\u5fc5\u987b\u4e25\u683c\u9075\u5faa\u5982\u4e0b\u7f16\u7801\u98ce\u683c\uff01   \u4f7f\u7528\u4e24\u4e2a\u7a7a\u683c\u6765\u7f29\u8fdb,  \u4e0d\u8981\u4f7f\u7528 tabs   \u5728\u8fd0\u7b97\u7b26\u4e24\u8fb9\uff0c\u5206\u522b\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff1a  javascript\nvar x = 1;  \u800c\u4e0d\u662f  javascript\nvar x=1;    \u5728\u5217\u8868\uff08lists\uff09,\u5bf9\u8c61\uff08objects\uff09,\u51fd\u6570\u8c03\u7528\uff08function calls\uff09\u7b49\u8bed\u53e5\u5757\u4e2d\uff0c\u9017\u53f7\u548c\u5192\u53f7\u540e\u9762\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff1a  javascript\nvar x = myFunc(\"lol\", {foo: bar, baz: boo});  \u800c\u4e0d\u662f  javascript\nvar x = myFunc(\"lol\",{foo:bar,baz:boo});    \u4ee3\u7801\u59cb\u7ec8\u4ee5\u5206\u53f7\u7ed3\u5c3e    \u4ee5\u9017\u53f7\u5f00\u5934  javascript\nvar x = {\n  foo: 'bar'\n, baz: 'boo'\n, wuz: 'foz'\n};    \u5de6\u82b1\u62ec\u53f7\u5e94\u8be5\u548c function , if \u7b49\u5199\u5728\u540c\u4e00\u884c\uff0c else \u5e94\u8be5\u88ab\u5939\u5728\u4e24\u4e2a\u82b1\u62ec\u53f7\u4e2d\u95f4\uff1a  javascript\nif (foo === bar) {    \n  // do something\n} else {\n  // do something else\n}    if , for , \u548c function \u4e4b\u540e\u9700\u8981\u6dfb\u52a0\u7a7a\u683c\uff1a  javascript\nif (foo === bar) {  javascript\nfor (var i = 0; i < 10; i ++) {  javascript\nvar lol = function (foo) {  \u800c\u4e0d\u662f  javascript\nif(foo === bar) {  javascript\nfor(var i = 0; i < 10; i ++) {  javascript\nvar lol = function(foo) {    \u53ea\u6709\u4e00\u884c\u4ee3\u7801\u65f6\uff0c if \u8bed\u53e5\u5757\u7684\u82b1\u62ec\u53f7\u4e5f\u5e94\u8be5\u6dfb\u52a0\u4e0a\uff1a  javascript\nif (foo === bar) {\n  foo++;\n}  \u800c\u4e0d\u662f  javascript\nif (foo === bar)\n  foo++;  \u9664\u4e86\u51fa\u9519\u540e\u76f4\u63a5\u8c03\u7528\u56de\u8c03\u51fd\u6570\uff08callback\uff09\u5904\u7406\u9519\u8bef\uff08error\uff09\u7684\u8bed\u53e5  javascript\nif (err) return cb(err);    \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 === , \u800c\u4e0d\u662f == \uff1b\u4f7f\u7528 !== , \u800c\u4e0d\u662f != \uff1b   \u5355\u884c\u957f\u5ea6\u4e0d\u5e94\u8d85\u8fc779\u4e2a\u5b57\u7b26\uff1b   \u622a\u65ad\u957f\u5b57\u7b26\u4e32\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\uff1a  javascript\nmyFunc(\"This is a really long string that's longer \" +\n        \"than 79 characters so I broke it up, woo\");    \u6ce8\u91ca\u9700\u8981\u548c\u4e0a\u4e00\u884c\u4ee3\u7801\u5de6\u5bf9\u9f50\uff1a  javascript\nif (foo === 5) {\n  myFunc(foo);\n  // foo++;\n}  not\n\u800c\u4e0d\u662f  javascript\nif (foo === 5) {\n  myFunc(foo);\n//foo++;\n}    \u901a\u8fc7\u62d3\u5c55\u539f\u578b\uff0c\u6765\u521b\u5efa\u5b50\u7c7b\uff1a  ```javascript\nvar _ = require('underscore');  var SuperClass = function () {\n  this.init();\n};  SuperClass.prototype.init = function () {\n  // initialize\n};  // Create a subclass  var SubClass = function () {\n    this.init();\n};  _.extend(SubClass.prototype, SuperClass.prototype);\n```    \u51fd\u6570\u5b9a\u4e49\u4e2d\uff0c\u6700\u540e\u4f7f\u7528\u56de\u8c03\u51fd\u6570\uff1a  javascript\nvar foo = function (arg1, arg2, cb) {\n  ...\n};    \u4f7f\u7528\u53d8\u91cf\u6765\u5b9a\u4e49\u51fd\u6570\uff1a  javascript\nvar myFunc = function (a, b, c) {};  \u800c\u4e0d\u662f  javascript\nfunction myFunc (a, b, c) {}    \u53d8\u91cf\u540d\u5e94\u8be5\u662f\u9a7c\u5cf0\u5f0f\u5927\u5c0f\u5199\u98ce\u683c\uff1a  javascript\nvar myVariable = 42;  \u800c\u4e0d\u662f  javascript\nvar my_variable = 42;    \u68c0\u67e5\u662f\u5426\u6709\u672a\u5b9a\u4e49\u7684\u53d8\u91cf\uff1a  javascript\ntypeof myVariable === \"undefined\"  \u800c\u4e0d\u662f  javascript\nmyVariable === undefined    \u7ed9\u53d8\u91cf\u5b9a\u4e49\u9ed8\u8ba4\u503c\uff1a  javascript\nvar x = y || z;  \u800c\u4e0d\u662f  javascript\nvar x = y ? y : z;",
            "title": "\u98ce\u683c\u6ce8\u91ca\uff08Style notes\uff09"
        },
        {
            "location": "/cn/contributing-to-appium/style-guide-2.0/#test-style",
            "text": "\u5728\u4ee3\u7801\u8bed\u4e49\u901a\u987a\u548c\u957f\u5ea6\u8bb8\u53ef\u4e0b\uff0c\u53ef\u4ee5\u4fdd\u6301\u5728\u540c\u4e00\u884c\uff1a  \u6837\u4f8b\uff1a    driver.elementByTagName('el1').should.become(\"123\")\n    .nodeify(done);\n\n  driver\n    .elementsByTagName('el1').should.eventually.have.length(0)\n    .nodeify(done);  \u6216\u8005\u4f7f\u7528\u7f29\u8fdb\u6765\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff1a  h.driver\n  .elementById('comments')\n    .clear()\n    .click()\n    .keys(\"hello world\")\n    .getValue()\n    .should.become(\"hello world\")\n  .elementById('comments')\n    .getValue().should.become(\"hello world\")\n  .nodeify(done);\n\nh.driver\n  .execute(\"'nan'--\")\n    .should.be.rejectedWith(\"status: 13\")\n  .nodeify(done);  \u672c\u6587\u7531  wanyukang  \u7ffb\u8bd1\uff0c\u7531  oscarxie  \u6821\u9a8c\u3002",
            "title": "\u6d4b\u8bd5\u4ee3\u7801\u98ce\u683c\uff08Test Style\uff09:"
        },
        {
            "location": "/cn/contributing-to-appium/style-guide/",
            "text": "\u7ed9\u8d21\u732e\u8005\u7684\u98ce\u683c\u6307\u5357\n\n\n\u611f\u8c22\u60a8\u5bf9Appium\u7684\u8d21\u732e\uff01\u4ee5\u4e0b\u662f\u6211\u4eec\u7f16\u5199javascript\u4ee3\u7801\u65f6\u9700\u8981\u9075\u5b88\u7684\u51c6\u5219\uff0c\u8bf7\u786e\u8ba4\u4f60\u7684\u63d0\u4ea4\u80fd\u7b26\u5408\u8fd9\u4e9b\u89c4\u8303\uff0c\u8fd9\u6709\u5229\u4e8e\u6211\u4eec\u5408\u5e76\u4f60\u7684\u4ee3\u7801\u65f6\u80fd\u4fdd\u6301\u826f\u597d\u7684\u7f16\u7801\u98ce\u683c\u3002\u5176\u4e2d\u6700\u6838\u5fc3\u7684\u51c6\u5219\u662f\uff1a\n\u4f7f\u4f60\u7684\u4ee3\u7801\u4e0e\u5176\u4ed6\u4ee3\u7801\u7684\u7f16\u7801\u98ce\u683c\u4fdd\u6301\u4e00\u81f4\n\u3002\n\n\n\u884d\u5408\uff08Rebasing\uff09\n\n\n\u6bcf\u4e2a pull \u8bf7\u6c42\u4e2d\u7684\u63d0\u4ea4\uff08commits\uff09\u90fd\u5e94\u8be5\u5305\u542b\n\u903b\u8f91\u53d8\u66f4(logical changes)\n\u3002\n\u5982\u679c\u6709\u591a\u4f4d\u8d21\u732e\u8005\uff0c\u8bf7\u786e\u4fdd\u4ed6\u4eec\u5404\u81ea\u90fd\u6709\u81ea\u5df1\u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u4fee\u6539\u4f5c\u8005\u4fe1\u606f\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\u5408\u5e76\uff08merge\uff09\u63d0\u4ea4\u5fc5\u987b\u4ece pull \u8bf7\u6c42\u4e2d rebase \u3002\n\n\n\u68c0\u9519\uff08Linting\uff09\n\n\n\u6240\u6709\u7684\u4ee3\u7801\uff08\u9664\u4e86\u4f7f\u7528\u4e86 Apple \u79c1\u6709\u65b9\u6cd5\u7684\nbootstrap.js\n\u4ee3\u7801\uff09\u5fc5\u987b\u901a\u8fc7 JSLint \u7684\u68c0\u9519\u6d4b\u8bd5\u3002\u4f60\u53ef\u4ee5\u5728 Appium \u5b58\u50a8\u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c\ngrunt lint\n\u6765\u68c0\u67e5\u4f60\u7684\u4ee3\u7801\u3002\u5982\u679c\u4f60\u5df2\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 .js \u6587\u4ef6\uff0c\u8bf7\u786e\u8ba4\u5b83\u5728\ngrunt.js\n\u4e2d\u88ab\u901a\u914d\u7b26\u8986\u76d6\uff0c\u6216\u8005\u88ab\u4e13\u95e8\u6dfb\u52a0\u3002\n\n\n\u7f16\u8f91\u5668\u7684\u5373\u65f6\u68c0\u9519\u96c6\u6210\u5f88\u7b80\u5355\uff0c\u5e76\u4e14\u8fd9\u4f1a\u4f7f\u5f97\u6574\u4e2a\u7f16\u7801\u8fc7\u7a0b\u66f4\u52a0\u987a\u5229\u3002 \u6211\u4eec\u559c\u6b22 \njshint\n, \u56e0\u4e3a\u5b83\u5df2\u7ecf\u4e0e\u8bb8\u591a\u6e90\u4ee3\u7801\u7f16\u8f91\u5668\u96c6\u6210\u4e86\u3002\u5c06\u6587\u4ef6\n.jshintrc\n\u52a0\u5165\u5230\u4ed3\u5e93\u4e2d\uff0c\u5b83\u7684\u5185\u5bb9\u662f\uff1a\n\n\n{\n  \"laxcomma\": true,\n  \"strict\": true,\n  \"undef\": true,\n  \"unused\": true,\n  \"node\": true,\n  \"eqeqeq\": true,\n  \"trailing\": true,\n  \"indent\": 2\n}\n\n\n\n\n\u56e0\u4e3ajshint\u4e0d\u518d\u5f3a\u5236\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\uff0c\u6211\u4eec\u4e5f\u4f7f\u7528 \njscs\n\uff0c\u5b83\u4e5f\u96c6\u6210\u5728\u4e00\u4e9b\u6e90\u4ee3\u7801\u7f16\u8f91\u5668\u4e2d\u3002\u914d\u7f6e\u6587\u4ef6\u4e3a\uff1a\n\n\n{\n  \"excludeFiles\": [\"submodules/**\", \"node_modules/**\",\n    \"./lib/server/static/**\", \"./lib/devices/firefoxos/atoms/*.js\",\n    \"./test/harmony/**/*.js\", \"./sample-code/examples/node/**/*-yiewd.js\",\n    \"./sample-code/apps/**\", \"./sample-code/examples/php/vendor/**\"],\n  \"requireCurlyBraces\": [\"for\", \"while\", \"do\", \"try\", \"catch\"],\n  \"requireSpaceAfterKeywords\": [\"if\", \"else\", \"for\", \"while\", \"do\", \"switch\",\n    \"return\", \"try\", \"catch\", \"function\"],\n  \"disallowMixedSpacesAndTabs\": true,\n  \"disallowTrailingWhitespace\": true,\n  \"requireSpacesInFunctionExpression\": {\n    \"beforeOpeningCurlyBrace\": true\n  }\n}\n\n\n\n\n\u8fd9\u4e9b\u914d\u7f6e\u6587\u4ef6\u5b9a\u4e49\u4e86\u54ea\u4e9b\u8b66\u544a\u7c7b\u578b\u5c06\u4f1a\u51fa\u73b0\u5728\u4f60\u7684\u7f16\u8f91\u5668\u4e2d\u3002 \u67e5\u770b \nthis page for jshint\n \u548c \nthis page for jscs\n \uff0c\u627e\u5230\u5b83\u4eec\u5404\u81ea\u652f\u6301\u7684\u7f16\u8f91\u5668\u548c\u5e73\u53f0\u7684\u5217\u8868\uff0c\u4ee5\u53ca\u5982\u4f55\u8bbe\u7f6e\u4f60\u7684\u7f16\u8f91\u5668\u4f7f\u4e4b\u80fd\u81ea\u52a8\u5316\u68c0\u9519\u3002\n\n\n\u98ce\u683c\u6ce8\u91ca\uff08Style notes\uff09\n\n\n\n\n\u4f7f\u7528\u4e24\u4e2a\u7a7a\u683c\u6765\u7f29\u8fdb, \n\u4e0d\u8981\u4f7f\u7528 tabs\n\n\n\n\n\u5728\u8fd0\u7b97\u7b26\u4e24\u8fb9\uff0c\u5206\u522b\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff1a\n\n\njavascript\nvar x = 1;\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nvar x=1;\n\n\n\n\n\n\n\u5728\u5217\u8868\uff08lists\uff09,\u5bf9\u8c61\uff08objects\uff09,\u51fd\u6570\u8c03\u7528\uff08function calls\uff09\u7b49\u8bed\u53e5\u5757\u4e2d\uff0c\u9017\u53f7\u548c\u5192\u53f7\u540e\u9762\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff1a\n\n\njavascript\nvar x = myFunc(\"lol\", {foo: bar, baz: boo});\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nvar x = myFunc(\"lol\",{foo:bar,baz:boo});\n\n\n\n\n\n\n\u4ee3\u7801\u59cb\u7ec8\u4ee5\u5206\u53f7\u7ed3\u5c3e\n\u00d7   \u4ee5\u9017\u53f7\u5f00\u5934\n\n\njavascript\nvar x = {\n  foo: 'bar'\n, baz: 'boo'\n, wuz: 'foz'\n};\n\n\n\n\n\n\n\u5de6\u82b1\u62ec\u53f7\u5e94\u8be5\u548c\nfunction\n,\nif\n\u7b49\u5199\u5728\u540c\u4e00\u884c\uff0c\nelse\n\u5e94\u8be5\u88ab\u5939\u5728\u4e24\u4e2a\u82b1\u62ec\u53f7\u4e2d\u95f4\uff1a\n\n\njavascript\nif (foo === bar) {\n  // do something\n} else {\n  // do something else\n}\n\n\n\n\n\n\nif\n,\nfor\n, \u548c\nfunction\n\u4e4b\u540e\u9700\u8981\u6dfb\u52a0\u7a7a\u683c\uff1a\n\n\njavascript\nif (foo === bar) {\n\n\njavascript\nfor (var i = 0; i < 10; i ++) {\n\n\njavascript\nvar lol = function (foo) {\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nif(foo === bar) {\n\n\njavascript\nfor(var i = 0; i < 10; i ++) {\n\n\njavascript\nvar lol = function(foo) {\n\n\n\n\n\n\n\u53ea\u6709\u4e00\u884c\u4ee3\u7801\u65f6\uff0c\nif\n\u8bed\u53e5\u5757\u7684\u82b1\u62ec\u53f7\u4e5f\u5e94\u8be5\u6dfb\u52a0\u4e0a\uff1a\n\n\njavascript\nif (foo === bar) {\n  foo++;\n}\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nif (foo === bar)\n  foo++;\n\n\n\u9664\u4e86\u51fa\u9519\u540e\u76f4\u63a5\u8c03\u7528\u56de\u8c03\u51fd\u6570\uff08callback\uff09\u5904\u7406\u9519\u8bef\uff08error\uff09\u7684\u8bed\u53e5\n\n\njavascript\nif (err) return cb(err);\n\n\n\n\n\n\n\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\n===\n, \u800c\u4e0d\u662f\n==\n\uff1b\u4f7f\u7528\n!==\n, \u800c\u4e0d\u662f\n!=\n\uff1b\n\n\n\n\n\u5355\u884c\u957f\u5ea6\u4e0d\u5e94\u8d85\u8fc779\u4e2a\u5b57\u7b26\uff1b\n\n\n\n\n\u622a\u65ad\u957f\u5b57\u7b26\u4e32\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\uff1a\n\n\njavascript\nmyFunc(\"This is a really long string that's longer \" +\n        \"than 79 characters so I broke it up, woo\");\n\n\n\n\n\n\n\u6ce8\u91ca\u9700\u8981\u548c\u4e0a\u4e00\u884c\u4ee3\u7801\u5de6\u5bf9\u9f50\uff1a\n\n\njavascript\nif (foo === 5) {\n  myFunc(foo);\n  // foo++;\n}\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nif (foo === 5) {\n  myFunc(foo);\n//foo++;\n}\n\n\n\n\n\n\n\u901a\u8fc7\u62d3\u5c55\u539f\u578b\uff0c\u6765\u521b\u5efa\u5b50\u7c7b\uff1a\n\n\n```javascript\nvar _ = require('underscore');\n\n\nvar SuperClass = function () {\n  this.init();\n};\n\n\nSuperClass.prototype.init = function () {\n  // initialize\n};\n\n\n// Create a subclass\n\n\nvar SubClass = function () {\n    this.init();\n};\n\n\n_.extend(SubClass.prototype, SuperClass.prototype);\n```\n\n\n\n\n\n\n\u51fd\u6570\u5b9a\u4e49\u4e2d\uff0c\u6700\u540e\u4f7f\u7528\u56de\u8c03\u51fd\u6570\uff1a\n\n\njavascript\nvar foo = function (arg1, arg2, cb) {\n  ...\n};\n\n\n\n\n\n\n\u4f7f\u7528\u53d8\u91cf\u6765\u5b9a\u4e49\u51fd\u6570\uff1a\n\n\njavascript\nvar myFunc = function (a, b, c) {};\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nfunction myFunc (a, b, c) {}\n\n\n\n\n\n\n\u53d8\u91cf\u540d\u5e94\u8be5\u662f\u9a7c\u5cf0\u5f0f\u5927\u5c0f\u5199\u98ce\u683c\uff1a\n\n\njavascript\nvar myVariable = 42;\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nvar my_variable = 42;\n\n\n\n\n\n\n\u68c0\u67e5\u662f\u5426\u6709\u672a\u5b9a\u4e49\u7684\u53d8\u91cf\uff1a\n\n\njavascript\ntypeof myVariable === \"undefined\"\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nmyVariable === undefined\n\n\n\n\n\n\n\u7ed9\u53d8\u91cf\u5b9a\u4e49\u9ed8\u8ba4\u503c\uff1a\n\n\njavascript\nvar x = y || z;\n\n\n\u800c\u4e0d\u662f\n\n\njavascript\nvar x = y ? y : z;\n\n\n\n\n\n\n\u6d4b\u8bd5\u4ee3\u7801\u98ce\u683c\uff08Test Style\uff09:\n\n\n\u5728\u4ee3\u7801\u8bed\u4e49\u901a\u987a\u548c\u957f\u5ea6\u8bb8\u53ef\u4e0b\uff0c\u53ef\u4ee5\u4fdd\u6301\u5728\u540c\u4e00\u884c\uff1a\n\n\n\u6837\u4f8b\uff1a\n\n\n  driver.elementByTagName('el1').should.become(\"123\")\n    .nodeify(done);\n\n  driver\n    .elementsByTagName('el1').should.eventually.have.length(0)\n    .nodeify(done);\n\n\n\n\n\u6216\u8005\u4f7f\u7528\u7f29\u8fdb\u6765\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff1a\n\n\nh.driver\n  .elementById('comments')\n    .clear()\n    .click()\n    .keys(\"hello world\")\n    .getValue()\n    .should.become(\"hello world\")\n  .elementById('comments')\n    .getValue().should.become(\"hello world\")\n  .nodeify(done);\n\nh.driver\n  .execute(\"'nan'--\")\n    .should.be.rejectedWith(\"status: 13\")\n  .nodeify(done);\n\n\n\n\n\u672c\u6587\u7531 \nwanyukang\n \u7ffb\u8bd1\uff0c\u7531 \noscarxie\n \u6821\u9a8c\u3002",
            "title": "Style guide"
        },
        {
            "location": "/cn/contributing-to-appium/style-guide/#_1",
            "text": "\u611f\u8c22\u60a8\u5bf9Appium\u7684\u8d21\u732e\uff01\u4ee5\u4e0b\u662f\u6211\u4eec\u7f16\u5199javascript\u4ee3\u7801\u65f6\u9700\u8981\u9075\u5b88\u7684\u51c6\u5219\uff0c\u8bf7\u786e\u8ba4\u4f60\u7684\u63d0\u4ea4\u80fd\u7b26\u5408\u8fd9\u4e9b\u89c4\u8303\uff0c\u8fd9\u6709\u5229\u4e8e\u6211\u4eec\u5408\u5e76\u4f60\u7684\u4ee3\u7801\u65f6\u80fd\u4fdd\u6301\u826f\u597d\u7684\u7f16\u7801\u98ce\u683c\u3002\u5176\u4e2d\u6700\u6838\u5fc3\u7684\u51c6\u5219\u662f\uff1a \u4f7f\u4f60\u7684\u4ee3\u7801\u4e0e\u5176\u4ed6\u4ee3\u7801\u7684\u7f16\u7801\u98ce\u683c\u4fdd\u6301\u4e00\u81f4 \u3002",
            "title": "\u7ed9\u8d21\u732e\u8005\u7684\u98ce\u683c\u6307\u5357"
        },
        {
            "location": "/cn/contributing-to-appium/style-guide/#rebasing",
            "text": "\u6bcf\u4e2a pull \u8bf7\u6c42\u4e2d\u7684\u63d0\u4ea4\uff08commits\uff09\u90fd\u5e94\u8be5\u5305\u542b \u903b\u8f91\u53d8\u66f4(logical changes) \u3002\n\u5982\u679c\u6709\u591a\u4f4d\u8d21\u732e\u8005\uff0c\u8bf7\u786e\u4fdd\u4ed6\u4eec\u5404\u81ea\u90fd\u6709\u81ea\u5df1\u7684\u63d0\u4ea4\u8bb0\u5f55\uff0c\u4fee\u6539\u4f5c\u8005\u4fe1\u606f\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002\u5408\u5e76\uff08merge\uff09\u63d0\u4ea4\u5fc5\u987b\u4ece pull \u8bf7\u6c42\u4e2d rebase \u3002",
            "title": "\u884d\u5408\uff08Rebasing\uff09"
        },
        {
            "location": "/cn/contributing-to-appium/style-guide/#linting",
            "text": "\u6240\u6709\u7684\u4ee3\u7801\uff08\u9664\u4e86\u4f7f\u7528\u4e86 Apple \u79c1\u6709\u65b9\u6cd5\u7684 bootstrap.js \u4ee3\u7801\uff09\u5fc5\u987b\u901a\u8fc7 JSLint \u7684\u68c0\u9519\u6d4b\u8bd5\u3002\u4f60\u53ef\u4ee5\u5728 Appium \u5b58\u50a8\u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c grunt lint \u6765\u68c0\u67e5\u4f60\u7684\u4ee3\u7801\u3002\u5982\u679c\u4f60\u5df2\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 .js \u6587\u4ef6\uff0c\u8bf7\u786e\u8ba4\u5b83\u5728 grunt.js \u4e2d\u88ab\u901a\u914d\u7b26\u8986\u76d6\uff0c\u6216\u8005\u88ab\u4e13\u95e8\u6dfb\u52a0\u3002  \u7f16\u8f91\u5668\u7684\u5373\u65f6\u68c0\u9519\u96c6\u6210\u5f88\u7b80\u5355\uff0c\u5e76\u4e14\u8fd9\u4f1a\u4f7f\u5f97\u6574\u4e2a\u7f16\u7801\u8fc7\u7a0b\u66f4\u52a0\u987a\u5229\u3002 \u6211\u4eec\u559c\u6b22  jshint , \u56e0\u4e3a\u5b83\u5df2\u7ecf\u4e0e\u8bb8\u591a\u6e90\u4ee3\u7801\u7f16\u8f91\u5668\u96c6\u6210\u4e86\u3002\u5c06\u6587\u4ef6 .jshintrc \u52a0\u5165\u5230\u4ed3\u5e93\u4e2d\uff0c\u5b83\u7684\u5185\u5bb9\u662f\uff1a  {\n  \"laxcomma\": true,\n  \"strict\": true,\n  \"undef\": true,\n  \"unused\": true,\n  \"node\": true,\n  \"eqeqeq\": true,\n  \"trailing\": true,\n  \"indent\": 2\n}  \u56e0\u4e3ajshint\u4e0d\u518d\u5f3a\u5236\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\uff0c\u6211\u4eec\u4e5f\u4f7f\u7528  jscs \uff0c\u5b83\u4e5f\u96c6\u6210\u5728\u4e00\u4e9b\u6e90\u4ee3\u7801\u7f16\u8f91\u5668\u4e2d\u3002\u914d\u7f6e\u6587\u4ef6\u4e3a\uff1a  {\n  \"excludeFiles\": [\"submodules/**\", \"node_modules/**\",\n    \"./lib/server/static/**\", \"./lib/devices/firefoxos/atoms/*.js\",\n    \"./test/harmony/**/*.js\", \"./sample-code/examples/node/**/*-yiewd.js\",\n    \"./sample-code/apps/**\", \"./sample-code/examples/php/vendor/**\"],\n  \"requireCurlyBraces\": [\"for\", \"while\", \"do\", \"try\", \"catch\"],\n  \"requireSpaceAfterKeywords\": [\"if\", \"else\", \"for\", \"while\", \"do\", \"switch\",\n    \"return\", \"try\", \"catch\", \"function\"],\n  \"disallowMixedSpacesAndTabs\": true,\n  \"disallowTrailingWhitespace\": true,\n  \"requireSpacesInFunctionExpression\": {\n    \"beforeOpeningCurlyBrace\": true\n  }\n}  \u8fd9\u4e9b\u914d\u7f6e\u6587\u4ef6\u5b9a\u4e49\u4e86\u54ea\u4e9b\u8b66\u544a\u7c7b\u578b\u5c06\u4f1a\u51fa\u73b0\u5728\u4f60\u7684\u7f16\u8f91\u5668\u4e2d\u3002 \u67e5\u770b  this page for jshint  \u548c  this page for jscs  \uff0c\u627e\u5230\u5b83\u4eec\u5404\u81ea\u652f\u6301\u7684\u7f16\u8f91\u5668\u548c\u5e73\u53f0\u7684\u5217\u8868\uff0c\u4ee5\u53ca\u5982\u4f55\u8bbe\u7f6e\u4f60\u7684\u7f16\u8f91\u5668\u4f7f\u4e4b\u80fd\u81ea\u52a8\u5316\u68c0\u9519\u3002",
            "title": "\u68c0\u9519\uff08Linting\uff09"
        },
        {
            "location": "/cn/contributing-to-appium/style-guide/#style-notes",
            "text": "\u4f7f\u7528\u4e24\u4e2a\u7a7a\u683c\u6765\u7f29\u8fdb,  \u4e0d\u8981\u4f7f\u7528 tabs   \u5728\u8fd0\u7b97\u7b26\u4e24\u8fb9\uff0c\u5206\u522b\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff1a  javascript\nvar x = 1;  \u800c\u4e0d\u662f  javascript\nvar x=1;    \u5728\u5217\u8868\uff08lists\uff09,\u5bf9\u8c61\uff08objects\uff09,\u51fd\u6570\u8c03\u7528\uff08function calls\uff09\u7b49\u8bed\u53e5\u5757\u4e2d\uff0c\u9017\u53f7\u548c\u5192\u53f7\u540e\u9762\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff1a  javascript\nvar x = myFunc(\"lol\", {foo: bar, baz: boo});  \u800c\u4e0d\u662f  javascript\nvar x = myFunc(\"lol\",{foo:bar,baz:boo});    \u4ee3\u7801\u59cb\u7ec8\u4ee5\u5206\u53f7\u7ed3\u5c3e\n\u00d7   \u4ee5\u9017\u53f7\u5f00\u5934  javascript\nvar x = {\n  foo: 'bar'\n, baz: 'boo'\n, wuz: 'foz'\n};    \u5de6\u82b1\u62ec\u53f7\u5e94\u8be5\u548c function , if \u7b49\u5199\u5728\u540c\u4e00\u884c\uff0c else \u5e94\u8be5\u88ab\u5939\u5728\u4e24\u4e2a\u82b1\u62ec\u53f7\u4e2d\u95f4\uff1a  javascript\nif (foo === bar) {\n  // do something\n} else {\n  // do something else\n}    if , for , \u548c function \u4e4b\u540e\u9700\u8981\u6dfb\u52a0\u7a7a\u683c\uff1a  javascript\nif (foo === bar) {  javascript\nfor (var i = 0; i < 10; i ++) {  javascript\nvar lol = function (foo) {  \u800c\u4e0d\u662f  javascript\nif(foo === bar) {  javascript\nfor(var i = 0; i < 10; i ++) {  javascript\nvar lol = function(foo) {    \u53ea\u6709\u4e00\u884c\u4ee3\u7801\u65f6\uff0c if \u8bed\u53e5\u5757\u7684\u82b1\u62ec\u53f7\u4e5f\u5e94\u8be5\u6dfb\u52a0\u4e0a\uff1a  javascript\nif (foo === bar) {\n  foo++;\n}  \u800c\u4e0d\u662f  javascript\nif (foo === bar)\n  foo++;  \u9664\u4e86\u51fa\u9519\u540e\u76f4\u63a5\u8c03\u7528\u56de\u8c03\u51fd\u6570\uff08callback\uff09\u5904\u7406\u9519\u8bef\uff08error\uff09\u7684\u8bed\u53e5  javascript\nif (err) return cb(err);    \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528 === , \u800c\u4e0d\u662f == \uff1b\u4f7f\u7528 !== , \u800c\u4e0d\u662f != \uff1b   \u5355\u884c\u957f\u5ea6\u4e0d\u5e94\u8d85\u8fc779\u4e2a\u5b57\u7b26\uff1b   \u622a\u65ad\u957f\u5b57\u7b26\u4e32\u4f7f\u7528\u5982\u4e0b\u65b9\u6cd5\uff1a  javascript\nmyFunc(\"This is a really long string that's longer \" +\n        \"than 79 characters so I broke it up, woo\");    \u6ce8\u91ca\u9700\u8981\u548c\u4e0a\u4e00\u884c\u4ee3\u7801\u5de6\u5bf9\u9f50\uff1a  javascript\nif (foo === 5) {\n  myFunc(foo);\n  // foo++;\n}  \u800c\u4e0d\u662f  javascript\nif (foo === 5) {\n  myFunc(foo);\n//foo++;\n}    \u901a\u8fc7\u62d3\u5c55\u539f\u578b\uff0c\u6765\u521b\u5efa\u5b50\u7c7b\uff1a  ```javascript\nvar _ = require('underscore');  var SuperClass = function () {\n  this.init();\n};  SuperClass.prototype.init = function () {\n  // initialize\n};  // Create a subclass  var SubClass = function () {\n    this.init();\n};  _.extend(SubClass.prototype, SuperClass.prototype);\n```    \u51fd\u6570\u5b9a\u4e49\u4e2d\uff0c\u6700\u540e\u4f7f\u7528\u56de\u8c03\u51fd\u6570\uff1a  javascript\nvar foo = function (arg1, arg2, cb) {\n  ...\n};    \u4f7f\u7528\u53d8\u91cf\u6765\u5b9a\u4e49\u51fd\u6570\uff1a  javascript\nvar myFunc = function (a, b, c) {};  \u800c\u4e0d\u662f  javascript\nfunction myFunc (a, b, c) {}    \u53d8\u91cf\u540d\u5e94\u8be5\u662f\u9a7c\u5cf0\u5f0f\u5927\u5c0f\u5199\u98ce\u683c\uff1a  javascript\nvar myVariable = 42;  \u800c\u4e0d\u662f  javascript\nvar my_variable = 42;    \u68c0\u67e5\u662f\u5426\u6709\u672a\u5b9a\u4e49\u7684\u53d8\u91cf\uff1a  javascript\ntypeof myVariable === \"undefined\"  \u800c\u4e0d\u662f  javascript\nmyVariable === undefined    \u7ed9\u53d8\u91cf\u5b9a\u4e49\u9ed8\u8ba4\u503c\uff1a  javascript\nvar x = y || z;  \u800c\u4e0d\u662f  javascript\nvar x = y ? y : z;",
            "title": "\u98ce\u683c\u6ce8\u91ca\uff08Style notes\uff09"
        },
        {
            "location": "/cn/contributing-to-appium/style-guide/#test-style",
            "text": "\u5728\u4ee3\u7801\u8bed\u4e49\u901a\u987a\u548c\u957f\u5ea6\u8bb8\u53ef\u4e0b\uff0c\u53ef\u4ee5\u4fdd\u6301\u5728\u540c\u4e00\u884c\uff1a  \u6837\u4f8b\uff1a    driver.elementByTagName('el1').should.become(\"123\")\n    .nodeify(done);\n\n  driver\n    .elementsByTagName('el1').should.eventually.have.length(0)\n    .nodeify(done);  \u6216\u8005\u4f7f\u7528\u7f29\u8fdb\u6765\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff1a  h.driver\n  .elementById('comments')\n    .clear()\n    .click()\n    .keys(\"hello world\")\n    .getValue()\n    .should.become(\"hello world\")\n  .elementById('comments')\n    .getValue().should.become(\"hello world\")\n  .nodeify(done);\n\nh.driver\n  .execute(\"'nan'--\")\n    .should.be.rejectedWith(\"status: 13\")\n  .nodeify(done);  \u672c\u6587\u7531  wanyukang  \u7ffb\u8bd1\uff0c\u7531  oscarxie  \u6821\u9a8c\u3002",
            "title": "\u6d4b\u8bd5\u4ee3\u7801\u98ce\u683c\uff08Test Style\uff09:"
        },
        {
            "location": "/cn/contributing-to-appium/version-branch-release/",
            "text": "Appium \u7248\u672c, \u5206\u652f\u548c\u53d1\u5e03\u6a21\u5f0f\n\n\n\u7248\u672c\u63a7\u5236\n\n\n1.3.6\u7248\u672c\u4e4b\u540e, Appium \u4f7f\u7528\u8bed\u4e49\u7248\u672c\u63a7\u5236\uff1a \nmajor | minor | patch | [-beta{N}]\n. \u4f8b\u5982, \n1.4.1\n or \n2.4.0-Beta4\n.\n\n Major: API \u7a81\u7834\u6027\u53d8\u5316\uff1b\u65b0\u529f\u80fd\n\n Minor: \u5411\u540e\u517c\u5bb9\u7684\u53d8\u5316; \u53ef\u80fd\u5305\u542b\u6216\u4e0d\u5305\u62ec\u65b0\u529f\u80fd\n* Patch: \u5feb\u901f\u4fee\u590d\u5de5\u7a0b; \u6ca1\u6709\u65b0\u529f\u80fd\n\n\n\u8fd9\u4f7f\u5f97 Appium \u7684\u7248\u672c\u4e0e NPM \u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6\u4e3b\u8981\u9879\u76ee\u4e00\u81f4\u3002\u5b83\u4e5f\u9002\u7528\u4e8e\u4e0b\u9762\u63cf\u8ff0\u7684\u57fa\u4e8e\u4e3b\u5e72\u7684\u5f00\u53d1\u6a21\u5f0f\u3002\n\n\n\u5206\u652f\u548c\u53d1\u5e03\u6a21\u5f0f\n\n\nAppium \u4f7f\u7528 \nTrunk Based Development\n\u3002\u6b63\u5982 Paul Hammant \u6240\u8bf4,\n\n\n\n\nTrunk Based Development (TBD) \u662f\u6240\u6709\u5f00\u53d1\u4eba\u5458\uff08\u9488\u5bf9\u7279\u5b9a\u53ef\u90e8\u7f72\u5355\u5143\uff09\u5728\u6e90\u63a7\u5236\u4e0b\u63d0\u4ea4\u5230\u4e00\u4e2a\u5171\u4eab\u5206\u652f\u3002\u90a3\u4e2a\u5206\u652f\u4fd7\u79f0\u4e3a trunk\u3002\n\n\n\u22ef \u5206\u652f\u662f\u4e3a\u4e86\u53d1\u5e03\u800c\u521b\u5efa\u7684\u3002\u5f00\u53d1\u4eba\u5458\u4e0d\u5f97\u5728\u5171\u4eab\u7684\u5730\u65b9\u5efa\u7acb\u5206\u652f\u3002\u53ea\u6709\u53d1\u5e03\u5de5\u7a0b\u5e08\u624d\u80fd\u5bf9\u8fd9\u4e9b\u5206\u652f\u8fdb\u884c commit\uff0c\u5e76\u4e14\u5b9e\u9645\u4e0a\u5f97\u53bb\u521b\u5efa\u8fd9\u4e9b\u5206\u652f\u3002\u5982\u679c\u6709\u5fc5\u8981\u7684\u8bdd\uff0c\u53d1\u5e03\u5de5\u7a0b\u5e08\u53ef\u80fd\u4f1a cherry-pick \u4e00\u4e9b\u63d0\u4ea4\u5230\u53d1\u5e03\u5206\u652f\u3002\n\n\n\u22ef \u53d1\u5e03\u5206\u652f\u5c06\u5728\u77ed\u65f6\u95f4\u5185\u88ab\u53e6\u4e00\u4e2a\u53d1\u5e03\u5206\u652f\u66ff\u4ee3\uff0c\u6bcf\u4e2a\u53d1\u5e03\u5206\u652f\u5728\u521b\u5efa\u65f6\u8981\u4ece trunk \u4e2d\u83b7\u53d6\u6240\u6709\u5185\u5bb9\u3002\u5728\u5408\u5e76\u65b9\u9762\uff0c\u53ea\u652f\u6301\u4ece\u4e3b\u5e72\u5230\u53d1\u5e03\u5206\u652f\u7684 cherry-pick\u3002\n\n\n\n\n\u91cc\u7a0b\u7891\n\n\n\u6211\u4eec\u6839\u636e\u7248\u672c\u63a7\u5236\u548c\u53d1\u5e03\u6a21\u5f0f\u6765\u8bbe\u5b9a Appium \u7684\u91cc\u7a0b\u7891. \u4e0b\u4e00\u4e2a\u91cc\u7a0b\u7891\u4e00\u76f4\u4f1a\u662f Major.Minor \u7684\u53d1\u5e03\u3002 \u4e0e\u63a5\u4e0b\u6765\u8981\u53d1\u5e03\u7684 Major.Minor \u7248\u672c\u4e0d\u76f8\u5e72\u7684\u4ea7\u54c1\u7f3a\u9677\u4fee\u590d\u548c\u65b0\u529f\u80fd\uff0c\u5c06\u4f1a\u88ab\u79ef\u538b\u5230\u4e0b\u4e00\u4e2a\u4ee5\u4fee\u590d BUG \u6216\u8005\u65b0\u529f\u80fd\u7684\u547d\u540d\u5206\u652f\u4e0a\u53d1\u5e03\uff08\u5373 Bugs \u548c Features\uff09\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u6bcf\u6b21\u7684 minor \u53d1\u5e03\u5468\u671f\u4e3a 8 \u5230 10 \u5468\u4e00\u6b21\u3002\u8fd9\u5305\u62ec\u5927\u7ea6\u4e00\u5468\u7684 Beta \u6d4b\u8bd5\u548c\u53e6\u5916\u4e00\u5468\u7684\u4fee\u590d\u548c\u6700\u7ec8\u66f4\u6539\u3002 \u4fee\u8865\u7a0b\u5e8f\u5728 Major.Minor \u7248\u672c\u4e4b\u95f4\u6839\u636e\u9700\u8981\u53d1\u5e03\uff08Major.Minor.Patch\uff09\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u89e3\u51b3\u95ee\u9898\uff0c\u540c\u65f6\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u56de\u5f52\u7684\u98ce\u9669\u3002\n\n\nWorkflow\n\n\n\u5bf9\u4e8eAppium\uff0c\u57fa\u672c\u6d41\u7a0b\u5982\u4e0b\u6240\u793a\uff1a\n\n\n\n\n\u6240\u6709 PRs \u90fd\u63d0\u4ea4\u5230 \nmaster\n (aka \ntrunk\n).\n\n\n\u7531\u53d1\u5e03\u5de5\u7a0b\u5e08\uff08Release engineer\uff0c\u7b80\u79f0RE\uff09\u6765\u4e3b\u5bfc\u53d1\u5e03\u884c\u4e3a\u3002 \u5f53\u53d1\u5e03\u5206\u652f\u5df2\u7ecf\u51c6\u5907\u597d\u5171\u4eab\uff08\u201cBeta\u201d\u72b6\u6001\u6216\u66f4\u597d\uff09\u65f6\uff0cRE\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5206\u652fv[Major].[Minor].[Patch]-branch\u3002\n\n\nPRs \u6301\u7eed\u63d0\u4ea4\u5230 \nmaster\n.\n\n\n\u5982\u679c\u6709\u4fee\u590d\u76f8\u5173\u7684\u53d1\u5e03\u63d0\u4ea4\u5230 \nmaster\n, RE\u5c06\u8fd9\u4e9b\u63d0\u4ea4\u5230\u53d1\u5e03\u5206\u652f\u3002\n\n\n\u53d1\u5e03\u5206\u652f\u53ef\u4ee5\u4fee\u6539\u4e0e\u540e\u7eed\u8865\u4e01\u4fee\u8865\u7a0b\u5e8f\u53d1\u5e03\u3002 \u8fd9\u4f7f\u5f97\u56e2\u961f\u53ef\u4ee5\u5c0f\u5fc3\u5730\u5c06\u5c0f\u578b\u53d8\u66f4\u96c6\u653e\u5728\u4e00\u8d77\uff0c\u4ee5\u4fbf\u5feb\u901f\u53d1\u5e03\u3002\u4fee\u590d\u4e5f\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u88ab\u5e76\u5165\u4ee5\u524d\u7684\u5206\u652f\u3002\n\n\n\u51b2\u6d17\uff0c\u91cd\u590d\u3002\n\n\n\n\n\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u968f\u4ed6\u4eec\u7684\u610f\u613f\u7ef4\u62a4\u4ed6\u4eec\u5f00\u53d1\u4e2d\u7684\u5206\u652f\uff0c\u8fd9\u4e9b\u4ec5\u662f\u4e2a\u4eba\u4f7f\u7528\u3002\u4f46\u6240\u6709\u201c\u5b98\u65b9\u201d\u5206\u652f\u673a\u6784\u5747\u5e94\u7b26\u5408\u4e0a\u8ff0\u89c4\u5b9a\u3002\n\n\n\u4f8b\u5982\n\n\n\n\n\u4eca\u5929 6 \u6708 1 \u65e5\uff0c Appium \u56e2\u961f\u8ba1\u5212\u4e8e7\u670815\u65e5\u53d1\u5e03 20.1-beta\uff0c8 \u6708 1 \u65e5\u53d1\u5e03\u5168\u9762\u7684 20.1 \u7248\u672c\u3002\n\n\n\u5728\u63a5\u4e0b\u6765\u7684\u516d\u4e2a\u661f\u671f\u91cc\uff0c\u8fd9\u4e2a\u56e2\u961f\u5c06\u4ed6\u4eec\u7684\u4ee3\u7801\u63d0\u4ea4\u5230 \nmaster\n.\n\n\n7\u670815\u65e5\uff0c\u6267\u884c RE \u521b\u5efa 20.1-branch\u3002\u7b2c\u4e00\u4e2a\u8282\u70b9\u88ab\u6807\u8bb0\u4e3a \u201c20.1.0 Beta\u201d\u3002\n\n\n\u4e00\u4e2a\u56e2\u961f\u6210\u5458\u5f00\u59cb\u4fee\u590d\u6d4b\u8bd5\u7248\u4e2d\u7684\u9519\u8bef\u3002\u8fd9\u4e9b\u4fee\u590d\u4f1a\u88ab\u63d0\u4ea4\u5230 \nmaster\n.\n\n\n\u5176\u4ed6\u8d21\u732e\u8005\u5f00\u59cb\u6309\u8ba1\u5212\u63d0\u4ea4\u4ee3\u7801\u5230 \n20.2\n \u4e2d\u53bb\u3002\u8fd9\u4e9b\u5185\u5bb9\u4e5f\u4f1a\u88ab\u63d0\u4ea4\u5230 \nmaster\n\u3002 \n\n\nRE\u628a\u4fee\u590d\u7684\u5185\u5bb9cherry picks\u5230 \n20.1-branch\n, \u5e76\u4fdd\u7559 \nmaster\n \u7684\u5176\u4ed6\u53d8\u66f4\u3002\n\n\n\u8be5\u56e2\u961f\u5e86\u795d 8 \u6708 1 \u65e5\u53d1\u5e03\u7684\u6240\u6709\u6d4b\u8bd5\u7248\u672c\u90fd\u5df2\u4fee\u590d\u3002\n\n\nRE \u6807\u7b7e\u7684 HEAD 20.1-branch \u4e3a 20.1.0 \u53d1\u5e03\u7248\u672c\u3002\n\n\n\u51e0\u5468\u540e\uff0c\u53d1\u73b0 20.1.0 \u5b58\u5728\u5d29\u6e83\uff0c\u7528\u6237\u73b0\u5728\u9700\u8981\u4fee\u590d\u3002\n\n\n\u6267\u884c RE \u5c06\u4e3b\u673a\u7684\u5d29\u6e83\u4fee\u590d\u7a0b\u5e8f\u62c9\u5165 20.1-branch\uff0c\u5c06 HEAD \u6807\u8bb0\u4e3a 20.1.1 \u5e76\u53d1\u5e03\u4fee\u8865\u7a0b\u5e8f\u3002\n\n\n\u4e00\u65e6 20.2 \u53d1\u5e03\u5b8c\u6bd5\uff0c\u5faa\u73af\u5c31\u4f1a\u91cd\u590d\u3002\n\n\n\n\n\u672c\u6587\u7531 \n\u5927\u4e1c\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Version branch release"
        },
        {
            "location": "/cn/contributing-to-appium/version-branch-release/#appium",
            "text": "",
            "title": "Appium \u7248\u672c, \u5206\u652f\u548c\u53d1\u5e03\u6a21\u5f0f"
        },
        {
            "location": "/cn/contributing-to-appium/version-branch-release/#_1",
            "text": "1.3.6\u7248\u672c\u4e4b\u540e, Appium \u4f7f\u7528\u8bed\u4e49\u7248\u672c\u63a7\u5236\uff1a  major | minor | patch | [-beta{N}] . \u4f8b\u5982,  1.4.1  or  2.4.0-Beta4 .  Major: API \u7a81\u7834\u6027\u53d8\u5316\uff1b\u65b0\u529f\u80fd  Minor: \u5411\u540e\u517c\u5bb9\u7684\u53d8\u5316; \u53ef\u80fd\u5305\u542b\u6216\u4e0d\u5305\u62ec\u65b0\u529f\u80fd\n* Patch: \u5feb\u901f\u4fee\u590d\u5de5\u7a0b; \u6ca1\u6709\u65b0\u529f\u80fd  \u8fd9\u4f7f\u5f97 Appium \u7684\u7248\u672c\u4e0e NPM \u751f\u6001\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6\u4e3b\u8981\u9879\u76ee\u4e00\u81f4\u3002\u5b83\u4e5f\u9002\u7528\u4e8e\u4e0b\u9762\u63cf\u8ff0\u7684\u57fa\u4e8e\u4e3b\u5e72\u7684\u5f00\u53d1\u6a21\u5f0f\u3002",
            "title": "\u7248\u672c\u63a7\u5236"
        },
        {
            "location": "/cn/contributing-to-appium/version-branch-release/#_2",
            "text": "Appium \u4f7f\u7528  Trunk Based Development \u3002\u6b63\u5982 Paul Hammant \u6240\u8bf4,   Trunk Based Development (TBD) \u662f\u6240\u6709\u5f00\u53d1\u4eba\u5458\uff08\u9488\u5bf9\u7279\u5b9a\u53ef\u90e8\u7f72\u5355\u5143\uff09\u5728\u6e90\u63a7\u5236\u4e0b\u63d0\u4ea4\u5230\u4e00\u4e2a\u5171\u4eab\u5206\u652f\u3002\u90a3\u4e2a\u5206\u652f\u4fd7\u79f0\u4e3a trunk\u3002  \u22ef \u5206\u652f\u662f\u4e3a\u4e86\u53d1\u5e03\u800c\u521b\u5efa\u7684\u3002\u5f00\u53d1\u4eba\u5458\u4e0d\u5f97\u5728\u5171\u4eab\u7684\u5730\u65b9\u5efa\u7acb\u5206\u652f\u3002\u53ea\u6709\u53d1\u5e03\u5de5\u7a0b\u5e08\u624d\u80fd\u5bf9\u8fd9\u4e9b\u5206\u652f\u8fdb\u884c commit\uff0c\u5e76\u4e14\u5b9e\u9645\u4e0a\u5f97\u53bb\u521b\u5efa\u8fd9\u4e9b\u5206\u652f\u3002\u5982\u679c\u6709\u5fc5\u8981\u7684\u8bdd\uff0c\u53d1\u5e03\u5de5\u7a0b\u5e08\u53ef\u80fd\u4f1a cherry-pick \u4e00\u4e9b\u63d0\u4ea4\u5230\u53d1\u5e03\u5206\u652f\u3002  \u22ef \u53d1\u5e03\u5206\u652f\u5c06\u5728\u77ed\u65f6\u95f4\u5185\u88ab\u53e6\u4e00\u4e2a\u53d1\u5e03\u5206\u652f\u66ff\u4ee3\uff0c\u6bcf\u4e2a\u53d1\u5e03\u5206\u652f\u5728\u521b\u5efa\u65f6\u8981\u4ece trunk \u4e2d\u83b7\u53d6\u6240\u6709\u5185\u5bb9\u3002\u5728\u5408\u5e76\u65b9\u9762\uff0c\u53ea\u652f\u6301\u4ece\u4e3b\u5e72\u5230\u53d1\u5e03\u5206\u652f\u7684 cherry-pick\u3002",
            "title": "\u5206\u652f\u548c\u53d1\u5e03\u6a21\u5f0f"
        },
        {
            "location": "/cn/contributing-to-appium/version-branch-release/#_3",
            "text": "\u6211\u4eec\u6839\u636e\u7248\u672c\u63a7\u5236\u548c\u53d1\u5e03\u6a21\u5f0f\u6765\u8bbe\u5b9a Appium \u7684\u91cc\u7a0b\u7891. \u4e0b\u4e00\u4e2a\u91cc\u7a0b\u7891\u4e00\u76f4\u4f1a\u662f Major.Minor \u7684\u53d1\u5e03\u3002 \u4e0e\u63a5\u4e0b\u6765\u8981\u53d1\u5e03\u7684 Major.Minor \u7248\u672c\u4e0d\u76f8\u5e72\u7684\u4ea7\u54c1\u7f3a\u9677\u4fee\u590d\u548c\u65b0\u529f\u80fd\uff0c\u5c06\u4f1a\u88ab\u79ef\u538b\u5230\u4e0b\u4e00\u4e2a\u4ee5\u4fee\u590d BUG \u6216\u8005\u65b0\u529f\u80fd\u7684\u547d\u540d\u5206\u652f\u4e0a\u53d1\u5e03\uff08\u5373 Bugs \u548c Features\uff09\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u6bcf\u6b21\u7684 minor \u53d1\u5e03\u5468\u671f\u4e3a 8 \u5230 10 \u5468\u4e00\u6b21\u3002\u8fd9\u5305\u62ec\u5927\u7ea6\u4e00\u5468\u7684 Beta \u6d4b\u8bd5\u548c\u53e6\u5916\u4e00\u5468\u7684\u4fee\u590d\u548c\u6700\u7ec8\u66f4\u6539\u3002 \u4fee\u8865\u7a0b\u5e8f\u5728 Major.Minor \u7248\u672c\u4e4b\u95f4\u6839\u636e\u9700\u8981\u53d1\u5e03\uff08Major.Minor.Patch\uff09\u3002\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u89e3\u51b3\u95ee\u9898\uff0c\u540c\u65f6\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u56de\u5f52\u7684\u98ce\u9669\u3002",
            "title": "\u91cc\u7a0b\u7891"
        },
        {
            "location": "/cn/contributing-to-appium/version-branch-release/#workflow",
            "text": "\u5bf9\u4e8eAppium\uff0c\u57fa\u672c\u6d41\u7a0b\u5982\u4e0b\u6240\u793a\uff1a   \u6240\u6709 PRs \u90fd\u63d0\u4ea4\u5230  master  (aka  trunk ).  \u7531\u53d1\u5e03\u5de5\u7a0b\u5e08\uff08Release engineer\uff0c\u7b80\u79f0RE\uff09\u6765\u4e3b\u5bfc\u53d1\u5e03\u884c\u4e3a\u3002 \u5f53\u53d1\u5e03\u5206\u652f\u5df2\u7ecf\u51c6\u5907\u597d\u5171\u4eab\uff08\u201cBeta\u201d\u72b6\u6001\u6216\u66f4\u597d\uff09\u65f6\uff0cRE\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5206\u652fv[Major].[Minor].[Patch]-branch\u3002  PRs \u6301\u7eed\u63d0\u4ea4\u5230  master .  \u5982\u679c\u6709\u4fee\u590d\u76f8\u5173\u7684\u53d1\u5e03\u63d0\u4ea4\u5230  master , RE\u5c06\u8fd9\u4e9b\u63d0\u4ea4\u5230\u53d1\u5e03\u5206\u652f\u3002  \u53d1\u5e03\u5206\u652f\u53ef\u4ee5\u4fee\u6539\u4e0e\u540e\u7eed\u8865\u4e01\u4fee\u8865\u7a0b\u5e8f\u53d1\u5e03\u3002 \u8fd9\u4f7f\u5f97\u56e2\u961f\u53ef\u4ee5\u5c0f\u5fc3\u5730\u5c06\u5c0f\u578b\u53d8\u66f4\u96c6\u653e\u5728\u4e00\u8d77\uff0c\u4ee5\u4fbf\u5feb\u901f\u53d1\u5e03\u3002\u4fee\u590d\u4e5f\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u88ab\u5e76\u5165\u4ee5\u524d\u7684\u5206\u652f\u3002  \u51b2\u6d17\uff0c\u91cd\u590d\u3002   \u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u968f\u4ed6\u4eec\u7684\u610f\u613f\u7ef4\u62a4\u4ed6\u4eec\u5f00\u53d1\u4e2d\u7684\u5206\u652f\uff0c\u8fd9\u4e9b\u4ec5\u662f\u4e2a\u4eba\u4f7f\u7528\u3002\u4f46\u6240\u6709\u201c\u5b98\u65b9\u201d\u5206\u652f\u673a\u6784\u5747\u5e94\u7b26\u5408\u4e0a\u8ff0\u89c4\u5b9a\u3002",
            "title": "Workflow"
        },
        {
            "location": "/cn/contributing-to-appium/version-branch-release/#_4",
            "text": "\u4eca\u5929 6 \u6708 1 \u65e5\uff0c Appium \u56e2\u961f\u8ba1\u5212\u4e8e7\u670815\u65e5\u53d1\u5e03 20.1-beta\uff0c8 \u6708 1 \u65e5\u53d1\u5e03\u5168\u9762\u7684 20.1 \u7248\u672c\u3002  \u5728\u63a5\u4e0b\u6765\u7684\u516d\u4e2a\u661f\u671f\u91cc\uff0c\u8fd9\u4e2a\u56e2\u961f\u5c06\u4ed6\u4eec\u7684\u4ee3\u7801\u63d0\u4ea4\u5230  master .  7\u670815\u65e5\uff0c\u6267\u884c RE \u521b\u5efa 20.1-branch\u3002\u7b2c\u4e00\u4e2a\u8282\u70b9\u88ab\u6807\u8bb0\u4e3a \u201c20.1.0 Beta\u201d\u3002  \u4e00\u4e2a\u56e2\u961f\u6210\u5458\u5f00\u59cb\u4fee\u590d\u6d4b\u8bd5\u7248\u4e2d\u7684\u9519\u8bef\u3002\u8fd9\u4e9b\u4fee\u590d\u4f1a\u88ab\u63d0\u4ea4\u5230  master .  \u5176\u4ed6\u8d21\u732e\u8005\u5f00\u59cb\u6309\u8ba1\u5212\u63d0\u4ea4\u4ee3\u7801\u5230  20.2  \u4e2d\u53bb\u3002\u8fd9\u4e9b\u5185\u5bb9\u4e5f\u4f1a\u88ab\u63d0\u4ea4\u5230  master \u3002   RE\u628a\u4fee\u590d\u7684\u5185\u5bb9cherry picks\u5230  20.1-branch , \u5e76\u4fdd\u7559  master  \u7684\u5176\u4ed6\u53d8\u66f4\u3002  \u8be5\u56e2\u961f\u5e86\u795d 8 \u6708 1 \u65e5\u53d1\u5e03\u7684\u6240\u6709\u6d4b\u8bd5\u7248\u672c\u90fd\u5df2\u4fee\u590d\u3002  RE \u6807\u7b7e\u7684 HEAD 20.1-branch \u4e3a 20.1.0 \u53d1\u5e03\u7248\u672c\u3002  \u51e0\u5468\u540e\uff0c\u53d1\u73b0 20.1.0 \u5b58\u5728\u5d29\u6e83\uff0c\u7528\u6237\u73b0\u5728\u9700\u8981\u4fee\u590d\u3002  \u6267\u884c RE \u5c06\u4e3b\u673a\u7684\u5d29\u6e83\u4fee\u590d\u7a0b\u5e8f\u62c9\u5165 20.1-branch\uff0c\u5c06 HEAD \u6807\u8bb0\u4e3a 20.1.1 \u5e76\u53d1\u5e03\u4fee\u8865\u7a0b\u5e8f\u3002  \u4e00\u65e6 20.2 \u53d1\u5e03\u5b8c\u6bd5\uff0c\u5faa\u73af\u5c31\u4f1a\u91cd\u590d\u3002   \u672c\u6587\u7531  \u5927\u4e1c  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u4f8b\u5982"
        },
        {
            "location": "/cn/writing-running-appium/android_coverage/",
            "text": "Android Coverage Guide\n\n\n\u8981\u6c42\n\n\n\n\n\u786c\u4ef6\u8981\u6c42\uff1aAndroid \u8986\u76d6\u7387\u9700\u8981\u4f7f\u7528\u6a21\u62df\u5668\u6216\u8005 root \u8fc7\u7684\u673a\u5668\u3002\n\n\n\u4f60\u9700\u8981\u4f7f\u7528UiAutomator2\u6784\u5efa\u4f60\u7684\u5e94\u7528\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u8981\u5728\u4f60\u7684Android\u9879\u76ee\u4e2d\u5b9e\u73b0Instrumentation\u7684\u5b50\u7c7b\u3002Instrumentation\u5c06\u5b9e\u73b0\u5bf9\u4ee3\u7801\u8986\u76d6\u60c5\u51b5\u7684\u6536\u96c6\u3002\n\n\n\u7531\u4e8eInstrumentation\u7684\u6570\u636e\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64\u4f60\u8fd8\u9700\u8981\u5b9e\u73b0\u4e00\u4e2aBroadCastReceiver\uff0c\u7528\u4e8e\u5728Instrumentation\u7ed3\u675f\u65f6\u5c06Instrument\u7ed3\u679c\u8f93\u51fa\u5230\u624b\u673a\u5b58\u50a8\u5668\u7684\u6587\u4ef6\u4e2d\u3002\n\n\n\n\n\u9879\u76ee\u7ed3\u6784\n\n\n\u4f60\u7684\u9879\u76ee\u9700\u8981\u770b\u8d77\u6765\u7c7b\u4f3c\u5982\u4e0b\u7684\u7ed3\u6784\n\n\nsrc/main/java/com/example/pkg\n   |____ MainActivity.java \u4f60\u7684\u4e3bActivity\n   |____ InstrumentActivityListener.java \u81ea\u5b9a\u4e49\u7684\u7528\u4e8e\u5b9e\u73b0\u8986\u76d6\u7387\u5bfc\u51fa\u5230\u6587\u4ef6\u7684\u63a5\u53e3\n   |____ InstrumentActivity.java \u4e13\u95e8\u7528\u4e8e\u8986\u76d6\u7387\u8c03\u8bd5\u7684Activity\uff0c\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528MainActivity\u3002\u5b83\u5c06\u5305\u542b\u4e00\u4e2aInstrumentActivityListener\uff0c\u5e76\u4e14\u5728Activity\u7ed3\u675f\u65f6\u8c03\u7528\u8fd9\u4e2aListener\u4ee5\u5bfc\u51fa\u8986\u76d6\u7387\u3002\u4f60\u5728\u8c03\u8bd5\u65f6\u53ef\u4ee5\u4f7f\u7528\n   |____ JacocoInstrumentation.java  \u4f60\u81ea\u5df1\u7684Instrumentation\u6587\u4ef6\uff0c\u5fc5\u987b\u5b9e\u73b0InstrumentActivityListener\n   |____ EndEmmaBroadCast.java \u7528\u4e8e\u63a5\u53d7\u7ed3\u675f\u4fe1\u53f7\u5e7f\u64ad\u7684\u63a5\u6536\u5668\uff0c\u5b83\u5c06\u8c03\u7528InstrumentActivityListener\u5e76\u5bfc\u51fa\u8986\u76d6\u7387\u3002\n\n\n\n\n\u4f60\u5728\u914d\u7f6eCaps\u65f6\u8981\u505a\u5982\u4e0b\u8bbe\u7f6e\n\n * automationName \uff1a \nuiautomator2\n (\u65e0\u89c6\u5927\u5c0f\u5199)\n\n * androidCoverage \uff1a {package}/{instrumentation class}, \u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662fcom.example.pkg/com.example.pkg.JacocoInstrumentation\n\n * appWaitActivity \uff1a \u7528\u4f5cInsutrment\u7684Activity\u7684\u5168\u540d\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662fcom.example.pkg.InstrumentActivity\n * appWaitPackage \uff1a {package}\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662fcom.example.pkg\n\n * androidCoverageEndIntent \uff1a \u7528\u4f5c\u5c06\u5f53\u524dcoverage\u8f93\u51fa\u81f3\u6587\u4ef6\u4e2d\u7684BroadCasterReceiver\u7684Action\u540d\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662f \ncom.example.pkg.END_EMMA\n  \n\n\n\u5de5\u4f5c\u539f\u7406\n\n Appium \u4f1a\u7528\u7c7b\u4f3c\u7684\u547d\u4ee4\u542f\u52a8\u5e94\u7528\uff1a\nadb shell am instrument -e coverage true -w com.example.pkg/com.example.pkg.JacocoInstrumentation\n\n \u5728\u6d4b\u8bd5\u5b8c\u6210\u540e\uff0c\u4f1a\u7528\nadb shell am broadcast -a com.example.pkg.END_EMMA\n \u4f7f\u8986\u76d6\u7387\u53ef\u4ee5\u88ab\u6536\u96c6\uff08\u524d\u63d0\u662f\u4f60\u4eb2\u81ea\u5b9e\u73b0\u5b83\uff09\n\n\n\u4f8b\u5b50\uff1a\u5b9e\u73b0\u6d41\u7a0b\n\n\n[1] Appium\u6d4b\u8bd5\u9879\u76ee - \u8bbe\u7f6eCaps\n\n\n\u8bf7\u53c2\u8003 \n\u300e\u9879\u76ee\u7ed3\u6784\u300f -> \u300e\u4f60\u5728\u914d\u7f6eCaps\u65f6\u8981\u505a\u5982\u4e0b\u8bbe\u7f6e\u300f\n\n\n[2] Android\u9879\u76ee - AndroidManifest.xml\n\n\n\u5728 \nAndroidManifest.xml\n \u91cc\u5b9a\u4e49 instrumentation \u548c broadcast \u63a5\u6536\u5668\u3002\n\n\n    <instrumentation\n        android:name=\"com.example.pkg.instrumentation.JacocoInstrumentation\"\n        android:targetPackage=\"com.example.pkg\" >\n    </instrumentation>\n\n    <!-- adb shell am broadcast -a com.example.pkg.END_EMMA -->\n    <receiver android:name=\"com.example.pkg.EndEmmaBroadcast\" >\n       <intent-filter>\n           <action android:name=\"com.example.pkg.END_EMMA\" />\n       </intent-filter>\n    </receiver>\n\n\n\n\n\u63a5\u4e0b\u6765\uff0c\u7f16\u5199 \nEndEmmaBroadcast.java\n \uff1a\n\n\npackage com.example.pkg;\n\nimport android.content.BroadcastReceiver;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Process;\n\n// adb shell am broadcast -a com.example.pkg.END_EMMA\npublic class EndEmmaBroadcast extends BroadcastReceiver {\n    InstrumentActivityListener activityListener;\n\n    public void setInstrumentActivityListener(InstrumentActivityListener listener){\n        this.activityListener = listener;\n    }\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        if(this.activityListener!=null){\n          activityListener.onActivityEnd();\n        }\n        // once coverage is dumped, the processes is ended.\n        Process.killProcess(Process.myPid());\n    }\n}\n\n\n\n\n\u4e4b\u540e\uff0c\u7f16\u5199 \nJacocoInstrumentation.java\n\uff1a\n\n\npackage com.example.pkg;\n\nimport android.app.Activity;\nimport android.app.Instrumentation;\nimport android.content.Intent;\nimport android.content.IntentFilter;\nimport android.os.Bundle;\nimport android.os.Looper;\nimport android.util.Log;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\npublic class JacocoInstrumentation  extends Instrumentation implements InstrumentActivityListener {\n    public static String TAG = \"JacocoInstrumentation:\";\n    private static String DEFAULT_COVERAGE_FILE_PATH = null;\n    private final Bundle mResults = new Bundle();\n    private Intent mIntent;\n    private static final boolean LOGD = true;\n    private boolean mCoverage = true;\n    private String mCoverageFilePath;\n\n    public JacocoInstrumentation() {\n    }\n    @Override\n    public void onCreate(Bundle arguments) {\n        Log.d(TAG, \"onCreate(\" + arguments + \")\");\n        super.onCreate(arguments);\n        // bad notation, better use NAME+TimeSeed because you might generate more than 1 corage file\n        DEFAULT_COVERAGE_FILE_PATH = getContext().getFilesDir().getPath().toString() + \"/coverage.ec\";\n        File file = new File(DEFAULT_COVERAGE_FILE_PATH);\n        if(!file.exists()){\n            try{\n                file.createNewFile();\n            }catch (IOException e){\n                Log.d(TAG,\"File Exception \uff1a\"+e);\n                e.printStackTrace();}\n        }\n        if(arguments != null) {\n            mCoverageFilePath = arguments.getString(\"coverageFile\");\n        }\n        mIntent = new Intent(getTargetContext(), InstrumentActivity.class);\n        mIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        start();\n    }\n    @Override\n    public void onStart() {\n        super.onStart();\n        Looper.prepare();\n        // Register broadcast receiver and start InstrumentActivity\n        InstrumentActivity activity = (InstrumentActivity) startActivitySync(mIntent);\n        EndEmmaBroadcast broadcast = new EndEmmaBroadcast();\n        activity.setInstrumentActivityListener(this);\n        broadcast.setInstrumentActivityListener(this);\n        activity.registerReceiver(broadcast, new IntentFilter(\"com.example.pkg.END_EMMA\"));\n    }\n    private String getCoverageFilePath() {\n        if (mCoverageFilePath == null) {\n            return DEFAULT_COVERAGE_FILE_PATH;\n        } else {\n            return mCoverageFilePath;\n        }\n    }\n    private void generateCoverageReport() {\n        Log.d(TAG, \"generateCoverageReport():\" + getCoverageFilePath());\n        OutputStream out = null;\n        try {\n            out = new FileOutputStream(getCoverageFilePath(), false);\n            Object agent = Class.forName(\"org.jacoco.agent.rt.RT\")\n                    .getMethod(\"getAgent\")\n                    .invoke(null);\n            out.write((byte[]) agent.getClass().getMethod(\"getExecutionData\", boolean.class)\n                    .invoke(agent, false));\n        } catch (Exception e) {\n            Log.d(TAG, e.toString(), e);\n        } finally {\n            if (out != null) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n\n    @Override\n    public void onActivityEnd() {\n        if (LOGD)      Log.d(TAG, \"onActivityFinished()\");\n        if (mCoverage) {\n            generateCoverageReport();\n        }\n        finish(Activity.RESULT_OK, mResults);\n    }\n}\n\n\n\n\n\n\u4e4b\u540e\u662f\nInstrumentActivityListener.java\n\n\npackage com.example.pkg;\n\npublic interface InstrumentActivityListener {\n    void onActivityEnd();\n}\n\n\n\n\n\u53ef\u9009\u7684 \nInstrumentActivity.java\n\n\npackage com.example.pkg;\nimport android.app.Instrumentation;\nimport android.os.Bundle;\nimport android.util.Log;\n\n\npublic class InstrumentActivity extends MainActivity {\n    public static String TAG = \"IntrumentedActivity\";\n    private InstrumentActivityListener listener;\n\n    public void setInstrumentActivityListener(InstrumentActivityListener listener) {\n        this.listener = listener;\n    }\n\n    // Generate output report when the activity is destroyed\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        Log.d(TAG, \"onDestroy()\");\n        super.finish();\n        if (listener != null) {\n            listener.onActivityEnd();\n        }\n    }\n}\n\n\n\n\n\u6700\u540e\uff0c\u6700\u91cd\u8981\u7684\u662f\ngradle\n:\n\n\n....\n\n\napply plugin: 'jacoco' // add plugin for jacoco\n\n...\n\nandroid {\n    ...\n    defaultConfig {\n        ...\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            ...\n        }\n        debug{\n            testCoverageEnabled = true\n        }\n    }\n}\n\ndependencies {\n    ...\n    //uiautomator\n    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.0'\n}\n\n\n\n\n\n[3] \u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u6784\u5efaapk\uff0c\u5e76\u62ff\u6765\u8dd1\u4f60\u7684\u81ea\u52a8\u6d4b\u8bd5\u5427\uff01\uff01\n\n\n\u6d4b\u8bd5\u5b8c\u6210\u540e\uff0c\u5c31\u4f1a\u5728/data/data/com.example.pkg/files\u4e2d\u751f\u6210coverage.ec\u6587\u4ef6\uff0c\u5c06\u5176pull\u51fa\u3002\n\n\n[4] \u5173\u4e8e\u62c9\u51faHTML\u62a5\u544a\n\n\n\u5f53\u4f60\u8dd1\u5b8c\u6d4b\u8bd5\u540e\uff0c\u7a0b\u5e8f\u4f1a\u5728\u4f60\u624b\u673a\u7684app\u91cc\u4ea7\u751fcoverage.ec\u8fd9\u6837\u7684\u6587\u4ef6\u3002\n\n [1] \u9996\u5148\uff0c\u5229\u7528adb pull\u628acoverage.ec\u62c9\u51fa\u624b\u673a\n\n [2] \u5173\u4e8e\u5982\u4f55\u628aec\u8f6c\u5316\u6210HTML\uff0c\u4f60\u53ef\u4ee5\u5728gradle\u91cc\u52a0\u5165\u4e0b\u5217task\uff1a\n\n\ndef coverageSourceDirs = [\n        './src/main/java'\n]\n\ntask jacocoTestReport(type: JacocoReport) {\n    group = \"Reporting\"\n    description = \"Generate Jacoco coverage reports after running tests.\"\n    reports {\n        xml.enabled = true\n        html.enabled = true\n    }\n    classDirectories = fileTree(\n            dir: './build/intermediates/classes/debug',\n            excludes: ['**/R*.class',\n                       '**/*$InjectAdapter.class',\n                       '**/*$ModuleAdapter.class',\n                       '**/*$ViewInjector*.class'\n            ])\n    sourceDirectories = files(coverageSourceDirs)\n    // NOTE: Put your ec file here\n    executionData = files(\"SOME PATH/coverage.ec\")\n\n    doFirst {\n        new File(\"$buildDir/intermediates/classes/\").eachFileRecurse { file ->\n            if (file.name.contains('$$')) {\n                file.renameTo(file.path.replace('$$', '$'))\n            }\n        }\n    }\n}",
            "title": "Android coverage"
        },
        {
            "location": "/cn/writing-running-appium/android_coverage/#android-coverage-guide",
            "text": "",
            "title": "Android Coverage Guide"
        },
        {
            "location": "/cn/writing-running-appium/android_coverage/#_1",
            "text": "\u786c\u4ef6\u8981\u6c42\uff1aAndroid \u8986\u76d6\u7387\u9700\u8981\u4f7f\u7528\u6a21\u62df\u5668\u6216\u8005 root \u8fc7\u7684\u673a\u5668\u3002  \u4f60\u9700\u8981\u4f7f\u7528UiAutomator2\u6784\u5efa\u4f60\u7684\u5e94\u7528\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u8981\u5728\u4f60\u7684Android\u9879\u76ee\u4e2d\u5b9e\u73b0Instrumentation\u7684\u5b50\u7c7b\u3002Instrumentation\u5c06\u5b9e\u73b0\u5bf9\u4ee3\u7801\u8986\u76d6\u60c5\u51b5\u7684\u6536\u96c6\u3002  \u7531\u4e8eInstrumentation\u7684\u6570\u636e\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\uff0c\u56e0\u6b64\u4f60\u8fd8\u9700\u8981\u5b9e\u73b0\u4e00\u4e2aBroadCastReceiver\uff0c\u7528\u4e8e\u5728Instrumentation\u7ed3\u675f\u65f6\u5c06Instrument\u7ed3\u679c\u8f93\u51fa\u5230\u624b\u673a\u5b58\u50a8\u5668\u7684\u6587\u4ef6\u4e2d\u3002",
            "title": "\u8981\u6c42"
        },
        {
            "location": "/cn/writing-running-appium/android_coverage/#_2",
            "text": "\u4f60\u7684\u9879\u76ee\u9700\u8981\u770b\u8d77\u6765\u7c7b\u4f3c\u5982\u4e0b\u7684\u7ed3\u6784  src/main/java/com/example/pkg\n   |____ MainActivity.java \u4f60\u7684\u4e3bActivity\n   |____ InstrumentActivityListener.java \u81ea\u5b9a\u4e49\u7684\u7528\u4e8e\u5b9e\u73b0\u8986\u76d6\u7387\u5bfc\u51fa\u5230\u6587\u4ef6\u7684\u63a5\u53e3\n   |____ InstrumentActivity.java \u4e13\u95e8\u7528\u4e8e\u8986\u76d6\u7387\u8c03\u8bd5\u7684Activity\uff0c\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528MainActivity\u3002\u5b83\u5c06\u5305\u542b\u4e00\u4e2aInstrumentActivityListener\uff0c\u5e76\u4e14\u5728Activity\u7ed3\u675f\u65f6\u8c03\u7528\u8fd9\u4e2aListener\u4ee5\u5bfc\u51fa\u8986\u76d6\u7387\u3002\u4f60\u5728\u8c03\u8bd5\u65f6\u53ef\u4ee5\u4f7f\u7528\n   |____ JacocoInstrumentation.java  \u4f60\u81ea\u5df1\u7684Instrumentation\u6587\u4ef6\uff0c\u5fc5\u987b\u5b9e\u73b0InstrumentActivityListener\n   |____ EndEmmaBroadCast.java \u7528\u4e8e\u63a5\u53d7\u7ed3\u675f\u4fe1\u53f7\u5e7f\u64ad\u7684\u63a5\u6536\u5668\uff0c\u5b83\u5c06\u8c03\u7528InstrumentActivityListener\u5e76\u5bfc\u51fa\u8986\u76d6\u7387\u3002  \u4f60\u5728\u914d\u7f6eCaps\u65f6\u8981\u505a\u5982\u4e0b\u8bbe\u7f6e \n * automationName \uff1a  uiautomator2  (\u65e0\u89c6\u5927\u5c0f\u5199) \n * androidCoverage \uff1a {package}/{instrumentation class}, \u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662fcom.example.pkg/com.example.pkg.JacocoInstrumentation \n * appWaitActivity \uff1a \u7528\u4f5cInsutrment\u7684Activity\u7684\u5168\u540d\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662fcom.example.pkg.InstrumentActivity\n * appWaitPackage \uff1a {package}\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662fcom.example.pkg \n * androidCoverageEndIntent \uff1a \u7528\u4f5c\u5c06\u5f53\u524dcoverage\u8f93\u51fa\u81f3\u6587\u4ef6\u4e2d\u7684BroadCasterReceiver\u7684Action\u540d\uff0c\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\u662f  com.example.pkg.END_EMMA     \u5de5\u4f5c\u539f\u7406 \n Appium \u4f1a\u7528\u7c7b\u4f3c\u7684\u547d\u4ee4\u542f\u52a8\u5e94\u7528\uff1a adb shell am instrument -e coverage true -w com.example.pkg/com.example.pkg.JacocoInstrumentation \n \u5728\u6d4b\u8bd5\u5b8c\u6210\u540e\uff0c\u4f1a\u7528 adb shell am broadcast -a com.example.pkg.END_EMMA  \u4f7f\u8986\u76d6\u7387\u53ef\u4ee5\u88ab\u6536\u96c6\uff08\u524d\u63d0\u662f\u4f60\u4eb2\u81ea\u5b9e\u73b0\u5b83\uff09",
            "title": "\u9879\u76ee\u7ed3\u6784"
        },
        {
            "location": "/cn/writing-running-appium/android_coverage/#_3",
            "text": "",
            "title": "\u4f8b\u5b50\uff1a\u5b9e\u73b0\u6d41\u7a0b"
        },
        {
            "location": "/cn/writing-running-appium/android_coverage/#1-appium-caps",
            "text": "\u8bf7\u53c2\u8003  \u300e\u9879\u76ee\u7ed3\u6784\u300f -> \u300e\u4f60\u5728\u914d\u7f6eCaps\u65f6\u8981\u505a\u5982\u4e0b\u8bbe\u7f6e\u300f",
            "title": "[1] Appium\u6d4b\u8bd5\u9879\u76ee - \u8bbe\u7f6eCaps"
        },
        {
            "location": "/cn/writing-running-appium/android_coverage/#2-android-androidmanifestxml",
            "text": "\u5728  AndroidManifest.xml  \u91cc\u5b9a\u4e49 instrumentation \u548c broadcast \u63a5\u6536\u5668\u3002      <instrumentation\n        android:name=\"com.example.pkg.instrumentation.JacocoInstrumentation\"\n        android:targetPackage=\"com.example.pkg\" >\n    </instrumentation>\n\n    <!-- adb shell am broadcast -a com.example.pkg.END_EMMA -->\n    <receiver android:name=\"com.example.pkg.EndEmmaBroadcast\" >\n       <intent-filter>\n           <action android:name=\"com.example.pkg.END_EMMA\" />\n       </intent-filter>\n    </receiver>  \u63a5\u4e0b\u6765\uff0c\u7f16\u5199  EndEmmaBroadcast.java  \uff1a  package com.example.pkg;\n\nimport android.content.BroadcastReceiver;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Process;\n\n// adb shell am broadcast -a com.example.pkg.END_EMMA\npublic class EndEmmaBroadcast extends BroadcastReceiver {\n    InstrumentActivityListener activityListener;\n\n    public void setInstrumentActivityListener(InstrumentActivityListener listener){\n        this.activityListener = listener;\n    }\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        if(this.activityListener!=null){\n          activityListener.onActivityEnd();\n        }\n        // once coverage is dumped, the processes is ended.\n        Process.killProcess(Process.myPid());\n    }\n}  \u4e4b\u540e\uff0c\u7f16\u5199  JacocoInstrumentation.java \uff1a  package com.example.pkg;\n\nimport android.app.Activity;\nimport android.app.Instrumentation;\nimport android.content.Intent;\nimport android.content.IntentFilter;\nimport android.os.Bundle;\nimport android.os.Looper;\nimport android.util.Log;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\npublic class JacocoInstrumentation  extends Instrumentation implements InstrumentActivityListener {\n    public static String TAG = \"JacocoInstrumentation:\";\n    private static String DEFAULT_COVERAGE_FILE_PATH = null;\n    private final Bundle mResults = new Bundle();\n    private Intent mIntent;\n    private static final boolean LOGD = true;\n    private boolean mCoverage = true;\n    private String mCoverageFilePath;\n\n    public JacocoInstrumentation() {\n    }\n    @Override\n    public void onCreate(Bundle arguments) {\n        Log.d(TAG, \"onCreate(\" + arguments + \")\");\n        super.onCreate(arguments);\n        // bad notation, better use NAME+TimeSeed because you might generate more than 1 corage file\n        DEFAULT_COVERAGE_FILE_PATH = getContext().getFilesDir().getPath().toString() + \"/coverage.ec\";\n        File file = new File(DEFAULT_COVERAGE_FILE_PATH);\n        if(!file.exists()){\n            try{\n                file.createNewFile();\n            }catch (IOException e){\n                Log.d(TAG,\"File Exception \uff1a\"+e);\n                e.printStackTrace();}\n        }\n        if(arguments != null) {\n            mCoverageFilePath = arguments.getString(\"coverageFile\");\n        }\n        mIntent = new Intent(getTargetContext(), InstrumentActivity.class);\n        mIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        start();\n    }\n    @Override\n    public void onStart() {\n        super.onStart();\n        Looper.prepare();\n        // Register broadcast receiver and start InstrumentActivity\n        InstrumentActivity activity = (InstrumentActivity) startActivitySync(mIntent);\n        EndEmmaBroadcast broadcast = new EndEmmaBroadcast();\n        activity.setInstrumentActivityListener(this);\n        broadcast.setInstrumentActivityListener(this);\n        activity.registerReceiver(broadcast, new IntentFilter(\"com.example.pkg.END_EMMA\"));\n    }\n    private String getCoverageFilePath() {\n        if (mCoverageFilePath == null) {\n            return DEFAULT_COVERAGE_FILE_PATH;\n        } else {\n            return mCoverageFilePath;\n        }\n    }\n    private void generateCoverageReport() {\n        Log.d(TAG, \"generateCoverageReport():\" + getCoverageFilePath());\n        OutputStream out = null;\n        try {\n            out = new FileOutputStream(getCoverageFilePath(), false);\n            Object agent = Class.forName(\"org.jacoco.agent.rt.RT\")\n                    .getMethod(\"getAgent\")\n                    .invoke(null);\n            out.write((byte[]) agent.getClass().getMethod(\"getExecutionData\", boolean.class)\n                    .invoke(agent, false));\n        } catch (Exception e) {\n            Log.d(TAG, e.toString(), e);\n        } finally {\n            if (out != null) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n\n    @Override\n    public void onActivityEnd() {\n        if (LOGD)      Log.d(TAG, \"onActivityFinished()\");\n        if (mCoverage) {\n            generateCoverageReport();\n        }\n        finish(Activity.RESULT_OK, mResults);\n    }\n}  \u4e4b\u540e\u662f InstrumentActivityListener.java  package com.example.pkg;\n\npublic interface InstrumentActivityListener {\n    void onActivityEnd();\n}  \u53ef\u9009\u7684  InstrumentActivity.java  package com.example.pkg;\nimport android.app.Instrumentation;\nimport android.os.Bundle;\nimport android.util.Log;\n\n\npublic class InstrumentActivity extends MainActivity {\n    public static String TAG = \"IntrumentedActivity\";\n    private InstrumentActivityListener listener;\n\n    public void setInstrumentActivityListener(InstrumentActivityListener listener) {\n        this.listener = listener;\n    }\n\n    // Generate output report when the activity is destroyed\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        Log.d(TAG, \"onDestroy()\");\n        super.finish();\n        if (listener != null) {\n            listener.onActivityEnd();\n        }\n    }\n}  \u6700\u540e\uff0c\u6700\u91cd\u8981\u7684\u662f gradle :  ....\n\n\napply plugin: 'jacoco' // add plugin for jacoco\n\n...\n\nandroid {\n    ...\n    defaultConfig {\n        ...\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            ...\n        }\n        debug{\n            testCoverageEnabled = true\n        }\n    }\n}\n\ndependencies {\n    ...\n    //uiautomator\n    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.0'\n}",
            "title": "[2] Android\u9879\u76ee - AndroidManifest.xml"
        },
        {
            "location": "/cn/writing-running-appium/android_coverage/#3-apk",
            "text": "\u6d4b\u8bd5\u5b8c\u6210\u540e\uff0c\u5c31\u4f1a\u5728/data/data/com.example.pkg/files\u4e2d\u751f\u6210coverage.ec\u6587\u4ef6\uff0c\u5c06\u5176pull\u51fa\u3002",
            "title": "[3] \u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u6784\u5efaapk\uff0c\u5e76\u62ff\u6765\u8dd1\u4f60\u7684\u81ea\u52a8\u6d4b\u8bd5\u5427\uff01\uff01"
        },
        {
            "location": "/cn/writing-running-appium/android_coverage/#4-html",
            "text": "\u5f53\u4f60\u8dd1\u5b8c\u6d4b\u8bd5\u540e\uff0c\u7a0b\u5e8f\u4f1a\u5728\u4f60\u624b\u673a\u7684app\u91cc\u4ea7\u751fcoverage.ec\u8fd9\u6837\u7684\u6587\u4ef6\u3002  [1] \u9996\u5148\uff0c\u5229\u7528adb pull\u628acoverage.ec\u62c9\u51fa\u624b\u673a  [2] \u5173\u4e8e\u5982\u4f55\u628aec\u8f6c\u5316\u6210HTML\uff0c\u4f60\u53ef\u4ee5\u5728gradle\u91cc\u52a0\u5165\u4e0b\u5217task\uff1a  def coverageSourceDirs = [\n        './src/main/java'\n]\n\ntask jacocoTestReport(type: JacocoReport) {\n    group = \"Reporting\"\n    description = \"Generate Jacoco coverage reports after running tests.\"\n    reports {\n        xml.enabled = true\n        html.enabled = true\n    }\n    classDirectories = fileTree(\n            dir: './build/intermediates/classes/debug',\n            excludes: ['**/R*.class',\n                       '**/*$InjectAdapter.class',\n                       '**/*$ModuleAdapter.class',\n                       '**/*$ViewInjector*.class'\n            ])\n    sourceDirectories = files(coverageSourceDirs)\n    // NOTE: Put your ec file here\n    executionData = files(\"SOME PATH/coverage.ec\")\n\n    doFirst {\n        new File(\"$buildDir/intermediates/classes/\").eachFileRecurse { file ->\n            if (file.name.contains('$$')) {\n                file.renameTo(file.path.replace('$$', '$'))\n            }\n        }\n    }\n}",
            "title": "[4] \u5173\u4e8e\u62c9\u51faHTML\u62a5\u544a"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/",
            "text": "Appium \u5ba2\u6237\u7aef\u7c7b\u5e93\n\n\nAppium \u652f\u6301\u4ee5\u4e0b\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u7c7b\u5e93\uff1a\n\n\n\n\n\n\n\n\n\u8bed\u8a00\n\n\n\u6e90\u7801\n\n\n\n\n\n\n\n\n\n\nRuby\n\n\nGitHub\n\n\n\n\n\n\nPython\n\n\nGitHub\n\n\n\n\n\n\nJava\n\n\nGitHub\n\n\n\n\n\n\nJavaScript\n\n\nGitHub\n\n\n\n\n\n\nPHP\n\n\nGitHub\n\n\n\n\n\n\nC#\n\n\nGitHub\n\n\n\n\n\n\nObjective-C\n\n\nGitHub\n\n\n\n\n\n\n\n\n\u6ce8\u610f\uff0c\u4e00\u4e9b\u65b9\u6cd5\u7c7b\u4f3c \nendTestCoverage()\n \u76ee\u524d\u5e76\u4e0d\u80fd\u5b8c\u5168\u652f\u6301\u3002\u5f53\n\u8fd9\u4e2a\u95ee\u9898\n\u88ab\u89e3\u51b3\u540e\uff0c\u8986\u76d6\u7387\u652f\u6301\u624d\u4f1a\u88ab\u6dfb\u52a0\u3002\u5982\u679c\u4f60\u4ecd\u7136\u60f3\u4f7f\u7528\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u8bf7\u53c2\u8003 GitHub \u4e0a\u5173\u4e8e bindings \u7684\u6587\u6863\u3002\n\n\n\u9501\u5b9a\n\n\n\u9501\u5b9a\u5c4f\u5e55\u3002\n\n\n# ruby\nlock 5\n\n\n\n\n# python\ndriver.lock(5)\n\n\n\n\n// java\ndriver.lockScreen(3);\n\n\n\n\n// javascript\ndriver.lock(3)\n\n\n\n\n// php\n$this->lock(3);\n\n\n\n\n// c#\ndriver.LockDevice(3);\n\n\n\n\n// objective c\n[driver lockDeviceScreen:3];\n\n\n\n\n\u5c06\u5e94\u7528\u5207\u6362\u81f3\u540e\u53f0\n\n\n\u5c06\u5f53\u524d\u7684\u5e94\u7528\u5207\u6362\u5230\u540e\u53f0\uff0c\u7136\u540e\u53ef\u4ee5\u8ba9\u5176\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u56de\u5230\u524d\u53f0\uff0c\u6216\u8005\u8ba9\u5b83\u4e00\u76f4\u7559\u5728\u540e\u53f0\u3002\n\n\n\u4f20\u9012\u7ed9\u8fd9\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570\u6709\u4e24\u79cd\u7c7b\u578b\uff1a\n\n\n\n\n\u4e00\u4e2a\u6574\u578b\uff08\u79d2\uff09\uff1a\u8868\u793a\u540e\u53f0\u72b6\u6001\u7ef4\u6301\u591a\u4e45\u3002-1 \u8868\u793a\u6301\u7eed\u7f6e\u4e8e\u540e\u53f0\u3002\u8fd9\u79cd\u98ce\u683c\u7684\u53c2\u6570\u5df2\u7ecf\u88ab\u5e9f\u5f03\u3002\n\n\n\u4e00\u4e2a\u770b\u8d77\u6765\u50cf \n{\"timeout\": secs}\n \u7684\u5bf9\u8c61\u3002\u91cc\u9762\u7684 \nsecs\n \u662f\u542b\u4e49\u548c\u7b2c\u4e00\u4e2a\u7c7b\u578b\u4e00\u6837\u7684\u6574\u578b\u6570\u5b57\uff08\u5373\u8868\u793a\u7f6e\u4e8e\u540e\u53f0\u591a\u5c11\u79d2\uff09\uff0c\u6216\u8005\u4e3a \nnull\n \uff08\u8868\u793a\u6301\u7eed\u7f6e\u4e8e\u540e\u53f0\uff09\u3002\n\n\n\n\n# ruby\nbackground_app 5  # \u7f6e\u4e8e\u540e\u53f0\uff0c\u6301\u7eed5\u79d2\nbackground_app -1  # \u6301\u7eed\u7f6e\u4e8e\u540e\u53f0\n\n\n\n\n# python\ndriver.background_app(5)  # \u7f6e\u4e8e\u540e\u53f0\uff0c\u6301\u7eed5\u79d2\ndriver.background_app(-1) # \u6301\u7eed\u7f6e\u4e8e\u540e\u53f0\ndriver.background_app({'timeout': None}) # \u6301\u7eed\u7f6e\u4e8e\u540e\u53f0\n\n\n\n\n// java\ndriver.runAppInBackground(5);  // \u7f6e\u4e8e\u540e\u53f0\uff0c\u6301\u7eed5\u79d2\ndriver.runAppInBackground(-1);  // \u6301\u7eed\u7f6e\u4e8e\u540e\u53f0\n\n\n\n\n// javascript\ndriver.backgroundApp(5);  // \u7f6e\u4e8e\u540e\u53f0\uff0c\u6301\u7eed5\u79d2\ndriver.backgroundApp(-1); // \u6301\u7eed\u7f6e\u4e8e\u540e\u53f0\ndriver.backgroundApp({timeout: null}); // \u6301\u7eed\u7f6e\u4e8e\u540e\u53f0\n\n\n\n\n// php\n$this->backgroundApp(5);\n$this->backgroundApp(-1);\n\n\n\n\n// c#\ndriver.BackgroundApp(5);\ndriver.BackgroundApp(-1);\n\n\n\n\n// objective c\n[driver runAppInBackground:3];\n[driver runAppInBackground:-1];\n\n\n\n\n\u6536\u8d77\u952e\u76d8\n\n\n\u6536\u8d77\u952e\u76d8\u3002\n\n\u6ce8\u610f\n: \u5728 iOS\uff0c\u8fd9\u8f85\u52a9\u529f\u80fd\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4e00\u5b9a\u6709\u6548\u3002\u56e0\u4e3a\u6ca1\u6709\u7528\u4e8e\u9690\u85cf\u952e\u76d8\u7684\u81ea\u52a8\u5316\u94a9\u5b50\u65b9\u6cd5\uff08\u8bd1\u8005\u6ce8\uff1a\u53ef\u4ee5\u7406\u89e3\u4e3a iOS \u6ca1\u6709\u63d0\u4f9b\u9690\u85cf\u952e\u76d8\u7684 API\uff09\uff0c\u800c\u4e14\u5e94\u7528\u662f\u5141\u8bb8\u7528\u6237\u53bb\u4f7f\u7528\u5404\u79cd\u7b56\u7565\u53bb\u6536\u8d77\u952e\u76d8\u7684\uff0c\u65e0\u8bba\u662f\u70b9\u51fb\u952e\u76d8\u4ee5\u5916\u7684\u533a\u57df\uff0c\u8fd8\u662f\u5411\u4e0b\u6ed1\u52a8\u8bf8\u5982\u6b64\u7c7b...\u76f8\u6bd4\u4e8e\u4f7f\u7528\u8be5\u65b9\u6cd5\uff0c\u6211\u4eec\u66f4\u52a0\u9f13\u52b1\u4f60\u53bb\u601d\u8003 \n\u7528\u6237\n \u5728\u5e94\u7528\u4e2d\u662f\u5982\u4f55\u6536\u8d77\u952e\u76d8\uff08\u5982\u6ed1\u52a8\uff0c\u70b9\u51fb\u4e00\u4e2a\u56fa\u5b9a\u7684\u5750\u6807\uff0c\u7b49\u7b49...\uff09\uff0c\u5e76\u8ba9 Appium \u53bb\u6267\u884c\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u8c03\u7528\u8fd9\u4e2a API \u3002\u8bdd\u867d\u5982\u6b64\uff0c\u4f46\u8fd9\u91cc\u9ed8\u8ba4\u7684\u884c\u4e3a\u8fd8\u662f\u53ef\u80fd\u5e2e\u52a9\u5230\u4f60\u7684\u3002\n\n\n# ruby\nhide_keyboard\n\n\n\n\n# python\ndriver.hide_keyboard()\n\n\n\n\n// java\ndriver.hideKeyboard();\n\n\n\n\n// javascript\ndriver.hideKeyboard()\n\n\n\n\n// php\n$this->hideKeyboard();\n$this->hideKeyboard(array('strategy' => 'pressKey', 'key' => 'Done'));\n\n\n\n\n// c#\ndriver.HideKeyboard(\"Done\");\n\n\n\n\n// objective c\n[driver hideKeyboard];\n\n\n\n\n\u542f\u52a8 Activity\n\n\n\u5728\u5f53\u524d app \u6253\u5f00\u4e00\u4e2a activity\uff0c\u6216\u8005\u65b0\u6253\u5f00\u4e00\u4e2a\u5e94\u7528\u5e76\u542f\u52a8\u4e00\u4e2a acticity\uff0c \n\u4ec5\u652f\u6301 Android\n\u3002\n\n\n// java\ndriver.startActivity(\"appPackage\",\"com.example.android.apis\", null, null);\n\n\n\n\n// javascript\ndriver.startActivity({appPackage: 'com.example.android.apis', appActivity: '.Foo'}, cb);\n\n\n\n\n# python\ndriver.start_activity('com.example.android.apis', '.Foo')\n\n\n\n\n# ruby\nstart_activity app_package: 'io.appium.android.apis', app_activity: '.accessibility.AccessibilityNodeProviderActivity'\n\n\n\n\n// c#\ndriver.StartActivity(\"com.example.android.apis\", \".Foo\");\n\n\n\n\n// php\n$this->startActivity(array(\"appPackage\" => \"com.example.android.apis\",\n                            \"appActivity\" => \".Foo\"));\n\n\n\n\n// objective c\n[driver startActivity:@\"com.example.android.apis\" package:@\".Foo\"];\n\n\n\n\n\u6253\u5f00\u901a\u77e5\u680f\n\n\n\u6253\u5f00\u901a\u77e5\u680f\uff0c\n\u4ec5\u652f\u6301 Android\n\u3002\n\n\n// java\ndriver.openNotifications();\n\n\n\n\n// javascript\ndriver.openNotifications(cb);\n\n\n\n\n# python\ndriver.open_notifications()\n\n\n\n\n# ruby\nopen_notifications\n\n\n\n\n// c#\ndriver.OpenNotifications();\n\n\n\n\n// php\n$this->openNotifications();\n\n\n\n\n// objective c\n[driver openNotifications];\n\n\n\n\n\u5e94\u7528\u662f\u5426\u5df2\u5b89\u88c5\n\n\n\u68c0\u6d4b\u5e94\u7528\u662f\u5426\u5df2\u88ab\u5b89\u88c5\u3002\n\n\n# ruby\nis_installed? \"com.example.android.apis\"\n\n\n\n\n# python\ndriver.is_app_installed('com.example.android.apis')\n\n\n\n\n// java\ndriver.isAppInstalled(\"com.example.android.apis\")\n\n\n\n\n// javascript\ndriver.isAppInstalled(\"com.example.android.apis\")\n  .then(function (isAppInstalled) { /*...*/ })\n\n\n\n\n// php\n$this->isAppInstalled('com.example.android.apis');\n\n\n\n\n// c#\ndriver.IsAppInstalled(\"com.example.android.apis-\");\n\n\n\n\n// objective c\n[driver isAppInstalled:@\"com.example.android.apis-\"];\n\n\n\n\n\u5b89\u88c5\u5e94\u7528\n\n\n\u5728\u8bbe\u5907\u4e0a\u5b89\u88c5\u5e94\u7528\u3002\n\n\n# ruby\ninstall 'path/to/my.apk'\n\n\n\n\n# python\ndriver.install_app('path/to/my.apk')\n\n\n\n\n// java\ndriver.installApp(\"path/to/my.apk\")\n\n\n\n\n// javascript\ndriver.installApp(\"path/to/my.apk\")\n\n\n\n\n// php\n$this->installApp('path/to/my.apk');\n\n\n\n\n// c#\ndriver.InstallApp(\"path/to/my.apk\");\n\n\n\n\n// objective c\n[driver installAppAtPath:@\"path/to/my.apk\"];\n\n\n\n\n\u5378\u8f7d\u5e94\u7528\n\n\n\u5378\u8f7d\u8bbe\u5907\u4e0a\u7684\u5e94\u7528\u3002\n\n\n# ruby\nremove 'com.example.android.apis'\n\n\n\n\n# python\ndriver.remove_app('com.example.android.apis')\n\n\n\n\n// java\ndriver.removeApp(\"com.example.android.apis\")\n\n\n\n\n// javascript\ndriver.removeApp(\"com.example.android.apis\")\n\n\n\n\n// php\n$this->removeApp('com.example.android.apis');\n\n\n\n\n// c#\ndriver.RemoveApp(\"com.example.android.apis\");\n\n\n\n\n// objective c\n[driver removeApp:@\"com.example.android.apis\"];\n\n\n\n\n\u6447\u4e00\u6447\n\n\n\u6a21\u62df\u6447\u6643\u8bbe\u5907\u7684\u64cd\u4f5c\u3002\n\n\n# ruby\nshake\n\n\n\n\n# python\ndriver.shake()\n\n\n\n\n// java\ndriver.shake()\n\n\n\n\n// javascript\ndriver.shake()\n\n\n\n\n// php\n$this->shake();\n\n\n\n\n// c#\ndriver.ShakeDevice();\n\n\n\n\n// objective c\n[driver shakeDevice];\n\n\n\n\n\u5173\u95ed\u5e94\u7528\n\n\n\u5173\u95ed\u5e94\u7528\u3002\n\n\n# ruby\nclose_app\n\n\n\n\n# python\ndriver.close_app();\n\n\n\n\n// java\ndriver.closeApp()\n\n\n\n\n// javascript\ndriver.closeApp()\n\n\n\n\n// php\n$this->closeApp();\n\n\n\n\n// c#\ndriver.CloseApp();\n\n\n\n\n// objective c\n[driver closeApp];\n\n\n\n\n\u542f\u52a8\uff08Launch\uff09\n\n\n\u4e3a desired capabilities \u542f\u52a8\u4e00\u4e2a session\u3002\u8bf7\u6ce8\u610f\u53ea\u6709\u8bbe\u7f6e\u4e86 autoLaunch=false \u5173\u952e\u5b57\u65f6\u624d\u4f1a\u751f\u6548\u3002\u8fd9\u4e0d\u662f\u4e3a\u4e86\u968f\u610f\u542f\u52a8\u4e00\u4e2a\u5e94\u7528\u6216 activities \u2014\u2014\u5982\u679c\u4f60\u60f3\u8fd9\u4e48\u505a\uff0c\u8bf7\u4f7f\u7528 \nstart_activity\n \u8fd9\u4e2a desired capability \u7684\u53c2\u6570\u3002\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4f7f\u7528\u573a\u666f\u662f\u5728\u4f60\u8bbe\u7f6e\u4e86 autoLaunch=false \u540e\uff0c\u7528\u6765\u7ee7\u7eed\u6267\u884c\u521d\u59cb\u5316\uff08\"launch\"\uff09\u6d41\u7a0b\u7684\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u56fd\u4ea7\u7cfb\u7edf\u7ecf\u5e38\u4f1a\u5728\u5e94\u7528\u5b89\u88c5\u65f6\u5f39\u51fa\u63d0\u793a\u7a97\u963b\u788d\u5b89\u88c5\uff0c\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7 autoLaunch=false \u6765\u8ba9\u5e94\u7528\u5b89\u88c5\u540e\u5148\u6267\u884c\u4f60\u7684\u811a\u672c\u6765\u5173\u6389\u5f39\u7a97\uff0c\u7136\u540e\u518d\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u7ee7\u7eed\u542f\u52a8\u5e94\u7528\u3002\uff09\n\n\n# ruby\nlaunch_app\n\n\n\n\n# python\ndriver.launch_app()\n\n\n\n\n// java\ndriver.launchApp()\n\n\n\n\n// javascript\ndriver.launchApp()\n\n\n\n\n// php\n$this->launchApp();\n\n\n\n\n// c#\ndriver.LaunchApp();\n\n\n\n\n// objective c\n[driver launchApp];\n\n\n\n\n\u91cd\u7f6e\n\n\n\u91cd\u7f6e\u5e94\u7528\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u7c7b\u4f3c\u4e8e\u6e05\u9664\u7f13\u5b58\uff09\n\n\n# ruby\ndriver.reset\n\n\n\n\n# python\ndriver.reset()\n\n\n\n\n// java\ndriver.resetApp()\n\n\n\n\n// javascript\ndriver.resetApp()\n\n\n\n\n// php\n$this->reset();\n\n\n\n\n// c#\ndriver.ResetApp();\n\n\n\n\n// objective c\n[driver resetApp];\n\n\n\n\n\u53ef\u7528\u7684\u4e0a\u4e0b\u6587\uff08Contexts\uff09\n\n\n\u5217\u51fa\u6240\u6709\u53ef\u7528\u7684\u4e0a\u4e0b\u6587\uff08contexts\uff09\u3002\n\n\n# ruby\ncontext_array = available_contexts\n\n\n\n\n# python\ndriver.contexts\n\n\n\n\n// java\ndriver.getContextHandles()\n\n\n\n\n// javascript\ndriver.contexts().then(function (contexts) { /*...*/ })\n\n\n\n\n// php\n$this->contexts();\n\n\n\n\n// c#\ndriver.GetContexts()\n\n\n\n\n// objective c\nNSArray *contexts = driver.allContexts;\n\n\n\n\n\u5f53\u524d\u4e0a\u4e0b\u6587\uff08context\uff09\n\n\n\u5217\u51fa\u5f53\u524d\u7684\u4e0a\u4e0b\u6587\uff08context\uff09\u3002\n\n\n# ruby\ncontext = current_context\n\n\n\n\n# python\ndriver.current_context\n\n\n\n\n// java\ndriver.getContext()\n\n\n\n\n// javascript\ndriver.currentContext().then(function (context) { /*...*/ })\n\n\n\n\n// php\n$this->context();\n\n\n\n\n// c#\ndriver.GetContext()\n\n\n\n\n// objective c\nNSString *context = driver.context;\n\n\n\n\n\u5207\u6362\u81f3\u9ed8\u8ba4\u7684\u4e0a\u4e0b\u6587\uff08context\uff09\n\n\n\u5207\u6362\u56de\u9ed8\u8ba4\u7684\u4e0a\u4e0b\u6587\uff08context\uff09\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u4e00\u822c\u5c31\u662f\u539f\u751f\u4e0a\u4e0b\u6587 \u201cNATIVE_APP\u201d\uff09\n\n\n# ruby\nswitch_to_default_context\n\n\n\n\n# python\ndriver.switch_to.context(None)\n\n\n\n\n// java\ndriver.context();\n\n\n\n\n// javascript\ndriver.context()\n\n\n\n\n// php\n$this->context(NULL);\n\n\n\n\n// c#\ndriver.SetContext();\n\n\n\n\n// objective c\n[driver setContext:nil];\n\n\n\n\n\u5e94\u7528\u7684\u5b57\u7b26\u4e32\n\n\n\u83b7\u5f97\u5e94\u7528\u7684\u5b57\u7b26\u4e32\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u8fd9\u91cc\u5b9e\u9645\u6307\u7684\u662f\u8fd4\u56de\u5e94\u7528\u7684\u591a\u8bed\u8a00\u6587\u672c\uff0c\u5373\u6bcf\u4e2a string \u53d8\u91cf\u53ca\u5728\u6307\u5b9a\u8bed\u8a00\u4e0a\u7684\u663e\u793a\u5185\u5bb9\u3002\u4f8b\u5982 \n{\"action_forgot_password\":\"Forgot your password?\"}\n \u3002\u5728 android \u4e0a\u5bf9\u5e94\u7684\u662f\u9879\u76ee\u4e2d\u7684 \nstrings.xml\n \u591a\u8bed\u8a00\u914d\u7f6e\u6587\u4ef6\uff09\n\n\n# ruby\napp_strings\n\n\n\n\n# python\ndriver.app_strings\n\n\n\n\n// java\ndriver.getAppStrings();\n\n\n\n\n// javascript\ndriver.getAppStrings().then(function (appStrings) { /*...*/ })\n\n\n\n\n// php\n$this->appStrings();\n$this->appStrings('ru');\n\n\n\n\n// c#\ndriver.GetAppStrings();\n\n\n\n\n// objective c\n[driver appStrings];\n[driver appStringsForLanguage:\"@ru\"];\n\n\n\n\n\u6309\u952e\u4e8b\u4ef6\n\n\n\u7ed9\u8bbe\u5907\u53d1\u9001\u6309\u952e\u4e8b\u4ef6\u3002\n\n\n# ruby\nkey_event 176\n\n\n\n\n# python\ndriver.keyevent(176)\n\n\n\n\n// java\ndriver.sendKeyEvent(AndroidKeyCode.HOME);\n\n\n\n\n// javascript\ndriver.deviceKeyEvent(wd.SPECIAL_KEYS.Home)\n\n\n\n\n// php\n$this->keyEvent('176');\n\n\n\n\n// c#\ndriver.KeyEvent(\"176\");\n\n\n\n\n// objective c\nNSError *err;\n[driver triggerKeyEvent:176 metastate:0 error:&err];\n\n\n\n\n\u5f53\u524d Activity\n\n\n\u83b7\u53d6\u5f53\u524d\u7684 Acticity\u3002\u4ec5\u652f\u6301 Android\u3002\n\n\n# ruby\ncurrent_activity\n\n\n\n\n# python\ndriver.current_activity\n\n\n\n\n// java\ndriver.currentActivity();\n\n\n\n\n// javascript\ndriver.getCurrentActivity().then(function (activity) { /*...*/ })\n\n\n\n\n// php\n$this->currentActivity();\n\n\n\n\n// c#\ndriver.GetCurrentActivity();\n\n\n\n\n// objective c\nNSError *err;\n[driver currentActivity];\n\n\n\n\n\u5f53\u524d\u5305\u540d\uff08package\uff09\n\n\n\u83b7\u53d6\u5f53\u524d\u5305\u540d\uff08package\uff09\u3002\u4ec5\u652f\u6301 Android \u3002\n\n\n# ruby\ncurrent_package\n\n\n\n\n# python\ndriver.current_package\n\n\n\n\n// java\ndriver.getCurrentPackage();\n\n\n\n\n// javascript\ndriver.getCurrentPackage().then(function (package) { /*...*/ })\n\n\n\n\n// php\n$this->currentPackage();\n\n\n\n\n// c#\ndriver.GetCurrentPackage();\n\n\n\n\n\u70b9\u51fb\u64cd\u4f5c / \u591a\u70b9\u89e6\u63a7\u64cd\u4f5c\n\n\n\u7528\u4e8e\u751f\u6210\u70b9\u51fb\u64cd\u4f5c\u7684 API\u3002\u8fd9\u90e8\u5206\u6587\u6863\u7684\u5185\u5bb9\u5c06\u4f1a\u5f88\u5feb\u88ab\u8865\u5145\u8fdb\u6765\u3002\n\n\n# ruby\ntouch_action = Appium::TouchAction.new\nelement  = find_element :accessibility_id, 'Buttons, Various uses of UIButton'\ntouch_action.press(element: element, x: 10, y: 10).perform\n\n\n\n\n# python\naction = TouchAction(driver)\naction.press(element=el, x=10, y=10).release().perform()\n\n\n\n\n// java\nTouchAction action = new TouchAction(driver)\n.press(mapview, 10, 10)\n.release().\nperform();\n\n\n\n\n// javascript\nvar action = new wd.TouchAction(driver);\naction\n  .tap({el: el, x: 10, y: 10})\n  .release();\nreturn action.perform(); // returns a promise\n\n\n\n\n// php\n$action = $this->initiateTouchAction();\n               ->press(array('element' => $el))\n               ->release()\n               ->perform();\n\n$action1 = $this->initiateTouchAction();\n$action1->press(array('element' => $els[0]))\n        ->moveTo(array('x' => 10, 'y' => 0))\n        ->moveTo(array('x' => 10, 'y' => -75))\n        ->moveTo(array('x' => 10, 'y' => -600))\n        ->release();\n\n$action2 = $this->initiateTouchAction();\n$action2->press(array('element' => $els[1]))\n        ->moveTo(array('x' => 10, 'y' => 10))\n        ->moveTo(array('x' => 10, 'y' => -300))\n        ->moveTo(array('x' => 10, 'y' => -600))\n        ->release();\n\n$multiAction = $this->initiateMultiAction();\n$multiAction->add($action1);\n$multiAction->add($action2);\n$multiAction->perform();\n\n\n\n\n// c#\nITouchAction action = new TouchAction(driver);\naction.Press(el, 10, 10).Release();\naction.Perform ();\n\n\n\n\n\u6ed1\u52a8\u5c4f\u5e55\n\n\n\u6a21\u62df\u7528\u6237\u6ed1\u52a8\u5c4f\u5e55\u7684\u64cd\u4f5c\u3002\n\n\n# ruby\nswipe start_x: 75, start_y: 500, end_x: 75, end_y: 0, duration: 0.8\n\n\n\n\n# python\ndriver.swipe(start_x=75, start_y=500, end_x=75, end_y=0, duration=800)\n\n\n\n\n// java\ndriver.swipe(75, 500, 75, 0, 0.8)\n\n\n\n\n// javascript\nfunction swipe(opts) {\n  var action = new wd.TouchAction(this);\n  action\n    .press({x: opts.startX, y: opts.startY})\n    .wait(opts.duration)\n    .moveTo({x: opts.endX, y: opts.endY})\n    .release();\n  return action.perform();\n}\nwd.addPromiseChainMethod('swipe', swipe);\n// ...\nreturn driver.swipe({ startX: 75, startY: 500,\n  endX: 75,  endY: 0, duration: 800 });\n\n\n\n\n// php\n$this->swipe(75, 500, 75, 0, 800);\n\n\n\n\n// c#\ntodo: c#\n\n\n\n\n\u634f\uff08Pinch\uff09\u624b\u52bf\n\n\n\u5728\u5c4f\u5e55\u4e0a\u4f7f\u7528\u634f\uff08Pinch\uff09\u624b\u52bf\u3002\n\n\n# ruby\npinch 75\n\n\n\n\n# python\ndriver.pinch(element=el)\n\n\n\n\n// java\ndriver.pinch(element);\n\n\n\n\n// javascript\nfunction pinch(el) {\n  return Q.all([\n    el.getSize(),\n    el.getLocation(),\n  ]).then(function(res) {\n    var size = res[0];\n    var loc = res[1];\n    var center = {\n      x: loc.x + size.width / 2,\n      y: loc.y + size.height / 2\n    };\n    var a1 = new wd.TouchAction(this);\n    a1.press({el: el, x: center.x, y:center.y - 100}).moveTo({el: el}).release();\n    var a2 = new wd.TouchAction(this);\n    a2.press({el: el, x: center.x, y: center.y + 100}).moveTo({el: el}).release();\n    var m = new wd.MultiAction(this);\n    m.add(a1, a2);\n    return m.perform();\n  }.bind(this));\n};\nwd.addPromiseChainMethod('pinch', pinch);\nwd.addElementPromiseChainMethod('pinch', function() {\n  return this.browser.pinch(this);\n});\n// ...\nreturn driver.pinch(el);\n// ...\nreturn el.pinch();\n\n\n\n\n$this->pinch($el);\n\n\n\n\n// c#\ndriver.Pinch(25, 25)\n\n\n\n\n\u653e\u5927\u5c4f\u5e55\uff08Zoom\uff09\n\n\n\u5728\u5c4f\u5e55\u4e0a\u4f7f\u7528\u653e\u5927\u624b\u52bf\u3002\n\n\n# ruby\nzoom 200\n\n\n\n\n# python\ndriver.zoom(element=el)\n\n\n\n\n// java\ndriver.zoom(element);\n\n\n\n\n// javascript\nfunction zoom(el) {\n  return Q.all([\n    this.getWindowSize(),\n    this.getLocation(el),\n  ]).then(function(res) {\n    var size = res[0];\n    var loc = res[1];\n    var center = {\n      x: loc.x + size.width / 2,\n      y: loc.y + size.height / 2\n    };\n    var a1 = new wd.TouchAction(this);\n    a1.press({el: el}).moveTo({el: el, x: center.x, y: center.y - 100}).release();\n    var a2 = new wd.TouchAction(this);\n    a2.press({el: el}).moveTo({el: el, x: center.x, y: center.y + 100}).release();\n    var m = new wd.MultiAction(this);\n    m.add(a1, a2);\n    return m.perform();\n  }.bind(this));\n};\nwd.addPromiseChainMethod('zoom', zoom);\nwd.addElementPromiseChainMethod('zoom', function() {\n  return this.browser.zoom(this);\n});\n// ...\nreturn driver.zoom(el);\n// ...\nreturn el.zoom();\n\n\n\n\n// php\n$this->zoom($el);\n\n\n\n\n// c#\ndriver.Zoom(100, 200);\n\n\n\n\n\u6eda\u52a8\u5230\n\n\n\u6eda\u52a8\u5230\u6307\u5b9a\u7684\u5143\u7d20\u3002\n\n\n# ruby\nelement = find_element :accessibility_id, \"Element ID\"\nexecute_script \"mobile: scroll\", direction: \"down\", element: element.ref\n\n\n\n\n# python\ndriver.execute_script(\"mobile: scroll\", {\"direction\": \"down\", \"element\": element.id})\n\n\n\n\n// java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nHashMap<String, String> scrollObject = new HashMap<String, String>();\nscrollObject.put(\"direction\", \"down\");\nscrollObject.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: scroll\", scrollObject);\n\n\n\n\n// javascript\nreturn driver.elementByAccessibilityId().then(function (el) {\n  driver.execute(\"mobile: scroll\", [{direction: \"down\", element: el.value}]);\n});\n\n\n\n\n// php\n$els = $this->elements($this->using('class name')->value('android.widget.TextView'));\n$this->scroll($els[count($els) - 1], $els[0]);\n\n\n\n\n// c#\nDictionary<string, string> scrollObject = new Dictionary<string, string>();\nscrollObject.Add(\"direction\", \"down\");\nscrollObject.Add(\"element\", <element_id>);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: scroll\", scrollObject));\n\n\n\n\n\u62c9\u53d6\uff08pull\uff09\u6587\u4ef6\n\n\n\u4ece\u8bbe\u5907\u4e0a\u62c9\u53d6\u6587\u4ef6\u3002\n\n\n# ruby\npull_file 'Library/AddressBook/AddressBook.sqlitedb'\n\n\n\n\n# python\ndriver.pull_file('Library/AddressBook/AddressBook.sqlitedb')\n\n\n\n\n// java\ndriver.pullFile(\"Library/AddressBook/AddressBook.sqlitedb\");\n\n\n\n\n// javascript\ndriver.pullFile(\"Library/AddressBook/AddressBook.sqlitedb\")\n  .then(function (base64File) { /*...*/ })\n\n\n\n\n// php\n$this->pullFile('Library/AddressBook/AddressBook.sqlitedb');\n\n\n\n\n// c#\ndriver.PullFile(\"Library/AddressBook/AddressBook.sqlitedb\");\n\n\n\n\n\u63a8\u9001\uff08push\uff09\u6587\u4ef6\n\n\n\u63a8\u9001\u6587\u4ef6\u5230\u8bbe\u5907\u3002\n\n\n# ruby\ndata = \"some data for the file\"\npath = \"/data/local/tmp/file.txt\"\npush_file path, data\n\n\n\n\n# python\ndata = \"some data for the file\"\npath = \"/data/local/tmp/file.txt\"\ndriver.push_file(path, data.encode('base64'))\n\n\n\n\n// java\nbyte[] data = Base64.encodeBase64(\"some data for the file\".getBytes());\nString path = \"/data/local/tmp/file.txt\";\ndriver.pushFile(path, data)\n\n\n\n\n// javascript\ndriver.pushFile(path, data)\n\n\n\n\n// php\n$path = 'data/local/tmp/test_push_file.txt';\n$data = 'This is the contents of the file to push to the device.';\n$this->pushFile($path, base64_encode($data));\n\n\n\n\n// c#\ndriver.PushFile(\"/data/local/tmp/file.txt\", \"some data for the file\");\n\n\n\n\n\u8bbe\u7f6e\n\n\n\u5728\u8fd9\u4f60\u4f1a\u627e\u5230\u5173\u4e8e\u83b7\u53d6\u6216\u8bbe\u7f6e appium \u670d\u52a1\u5668\u8bbe\u7f6e\u7684\u793a\u4f8b\u4ee3\u7801\u3002\u5982\u679c\u60f3\u4e86\u89e3\u5de5\u4f5c\u539f\u7406\uff0c\u4ee5\u53ca\u652f\u6301\u54ea\u4e9b\u8bbe\u7f6e\uff0c\u8bf7\u67e5\u770b\n\u8bbe\u7f6e\u6587\u6863\n\n\n# ruby\ncurrent_settings = get_settings\nupdate_settings someSetting: true\n\n\n\n\n# python\ncurrent_settings = driver.get_settings()\ndriver.update_settings({\"someSetting\": true})\n\n\n\n\n// java\nJsonObject settings = driver.getSettings()\n// java \u5ba2\u6237\u7aef\u4e0d\u652f\u6301\u8bbe\u7f6e\u4efb\u610f\u7684\u8bbe\u7f6e\u9879\uff0c\u53ea\u80fd\u8bbe\u7f6e appium \u5f53\u524d\u652f\u6301\u7684\u90e8\u5206\u3002\n// \u6240\u4ee5\u5bf9\u4e8e `ignoreUnimportantViews`\uff08\u8bd1\u8005\u6ce8\uff1a\u5ffd\u7565\u4e0d\u91cd\u8981\u7684\u89c6\u56fe\uff0c\u5373 android uiautomator \u4e0a\u7684\u538b\u7f29\u540e xml \uff09\u8fd9\u4e2a\u8bbe\u7f6e\u9879\uff0c\u5bf9\u5e94\u5b58\u5728\u4e0b\u9762\u8fd9\u4e2a\u8bbe\u7f6e\u65b9\u6cd5\uff1a\ndriver.ignoreUnimportantViews(true);\n\n\n\n\n// javascript\nvar settings = driver.settings();\nbrowser.updateSettings({'someSetting': true});\n\n\n\n\n// php\n$settings = $this->getSettings();\n$this->updateSettings(array('cyberdelia' => \"open\"));\n\n\n\n\n// c#\nDictionary<String, Object>settings = driver.GetSettings();\n// .net \u5ba2\u6237\u7aef\u4e0d\u652f\u6301\u8bbe\u7f6e\u4efb\u610f\u7684\u8bbe\u7f6e\u9879\uff0c\u53ea\u80fd\u8bbe\u7f6e appium \u5f53\u524d\u652f\u6301\u7684\u90e8\u5206\u3002\n// \u6240\u4ee5\u5bf9\u4e8e `ignoreUnimportantViews`\uff08\u8bd1\u8005\u6ce8\uff1a\u5ffd\u7565\u4e0d\u91cd\u8981\u7684\u89c6\u56fe\uff0c\u5373 android uiautomator \u4e0a\u7684\u538b\u7f29\u540e xml \uff09\u8fd9\u4e2a\u8bbe\u7f6e\u9879\uff0c\u5bf9\u5e94\u5b58\u5728\u4e0b\u9762\u8fd9\u4e2a\u8bbe\u7f6e\u65b9\u6cd5\uff1a\ndriver.IgnoreUnimportantViews(true);\n\n\n\n\nAppium \u684c\u9762\u5e94\u7528\n\n\nAppium \u7684\u684c\u9762\u5e94\u7528\u652f\u6301 OS X, Windows \u53ca Linux.\n\n\n\n\nAppium Desktop\n\n\n\n\n\u672c\u6587\u7531 \nthanksdanny\n \u7ffb\u8bd1\uff0c\u7531 \nchenhengjie123\n \u6821\u9a8c\u3002",
            "title": "Appium bindings"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#appium",
            "text": "Appium \u652f\u6301\u4ee5\u4e0b\u8bed\u8a00\u7684\u5ba2\u6237\u7aef\u7c7b\u5e93\uff1a     \u8bed\u8a00  \u6e90\u7801      Ruby  GitHub    Python  GitHub    Java  GitHub    JavaScript  GitHub    PHP  GitHub    C#  GitHub    Objective-C  GitHub     \u6ce8\u610f\uff0c\u4e00\u4e9b\u65b9\u6cd5\u7c7b\u4f3c  endTestCoverage()  \u76ee\u524d\u5e76\u4e0d\u80fd\u5b8c\u5168\u652f\u6301\u3002\u5f53 \u8fd9\u4e2a\u95ee\u9898 \u88ab\u89e3\u51b3\u540e\uff0c\u8986\u76d6\u7387\u652f\u6301\u624d\u4f1a\u88ab\u6dfb\u52a0\u3002\u5982\u679c\u4f60\u4ecd\u7136\u60f3\u4f7f\u7528\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u8bf7\u53c2\u8003 GitHub \u4e0a\u5173\u4e8e bindings \u7684\u6587\u6863\u3002",
            "title": "Appium \u5ba2\u6237\u7aef\u7c7b\u5e93"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_1",
            "text": "\u9501\u5b9a\u5c4f\u5e55\u3002  # ruby\nlock 5  # python\ndriver.lock(5)  // java\ndriver.lockScreen(3);  // javascript\ndriver.lock(3)  // php\n$this->lock(3);  // c#\ndriver.LockDevice(3);  // objective c\n[driver lockDeviceScreen:3];",
            "title": "\u9501\u5b9a"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_2",
            "text": "\u5c06\u5f53\u524d\u7684\u5e94\u7528\u5207\u6362\u5230\u540e\u53f0\uff0c\u7136\u540e\u53ef\u4ee5\u8ba9\u5176\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u56de\u5230\u524d\u53f0\uff0c\u6216\u8005\u8ba9\u5b83\u4e00\u76f4\u7559\u5728\u540e\u53f0\u3002  \u4f20\u9012\u7ed9\u8fd9\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570\u6709\u4e24\u79cd\u7c7b\u578b\uff1a   \u4e00\u4e2a\u6574\u578b\uff08\u79d2\uff09\uff1a\u8868\u793a\u540e\u53f0\u72b6\u6001\u7ef4\u6301\u591a\u4e45\u3002-1 \u8868\u793a\u6301\u7eed\u7f6e\u4e8e\u540e\u53f0\u3002\u8fd9\u79cd\u98ce\u683c\u7684\u53c2\u6570\u5df2\u7ecf\u88ab\u5e9f\u5f03\u3002  \u4e00\u4e2a\u770b\u8d77\u6765\u50cf  {\"timeout\": secs}  \u7684\u5bf9\u8c61\u3002\u91cc\u9762\u7684  secs  \u662f\u542b\u4e49\u548c\u7b2c\u4e00\u4e2a\u7c7b\u578b\u4e00\u6837\u7684\u6574\u578b\u6570\u5b57\uff08\u5373\u8868\u793a\u7f6e\u4e8e\u540e\u53f0\u591a\u5c11\u79d2\uff09\uff0c\u6216\u8005\u4e3a  null  \uff08\u8868\u793a\u6301\u7eed\u7f6e\u4e8e\u540e\u53f0\uff09\u3002   # ruby\nbackground_app 5  # \u7f6e\u4e8e\u540e\u53f0\uff0c\u6301\u7eed5\u79d2\nbackground_app -1  # \u6301\u7eed\u7f6e\u4e8e\u540e\u53f0  # python\ndriver.background_app(5)  # \u7f6e\u4e8e\u540e\u53f0\uff0c\u6301\u7eed5\u79d2\ndriver.background_app(-1) # \u6301\u7eed\u7f6e\u4e8e\u540e\u53f0\ndriver.background_app({'timeout': None}) # \u6301\u7eed\u7f6e\u4e8e\u540e\u53f0  // java\ndriver.runAppInBackground(5);  // \u7f6e\u4e8e\u540e\u53f0\uff0c\u6301\u7eed5\u79d2\ndriver.runAppInBackground(-1);  // \u6301\u7eed\u7f6e\u4e8e\u540e\u53f0  // javascript\ndriver.backgroundApp(5);  // \u7f6e\u4e8e\u540e\u53f0\uff0c\u6301\u7eed5\u79d2\ndriver.backgroundApp(-1); // \u6301\u7eed\u7f6e\u4e8e\u540e\u53f0\ndriver.backgroundApp({timeout: null}); // \u6301\u7eed\u7f6e\u4e8e\u540e\u53f0  // php\n$this->backgroundApp(5);\n$this->backgroundApp(-1);  // c#\ndriver.BackgroundApp(5);\ndriver.BackgroundApp(-1);  // objective c\n[driver runAppInBackground:3];\n[driver runAppInBackground:-1];",
            "title": "\u5c06\u5e94\u7528\u5207\u6362\u81f3\u540e\u53f0"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_3",
            "text": "\u6536\u8d77\u952e\u76d8\u3002 \u6ce8\u610f : \u5728 iOS\uff0c\u8fd9\u8f85\u52a9\u529f\u80fd\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u4e00\u5b9a\u6709\u6548\u3002\u56e0\u4e3a\u6ca1\u6709\u7528\u4e8e\u9690\u85cf\u952e\u76d8\u7684\u81ea\u52a8\u5316\u94a9\u5b50\u65b9\u6cd5\uff08\u8bd1\u8005\u6ce8\uff1a\u53ef\u4ee5\u7406\u89e3\u4e3a iOS \u6ca1\u6709\u63d0\u4f9b\u9690\u85cf\u952e\u76d8\u7684 API\uff09\uff0c\u800c\u4e14\u5e94\u7528\u662f\u5141\u8bb8\u7528\u6237\u53bb\u4f7f\u7528\u5404\u79cd\u7b56\u7565\u53bb\u6536\u8d77\u952e\u76d8\u7684\uff0c\u65e0\u8bba\u662f\u70b9\u51fb\u952e\u76d8\u4ee5\u5916\u7684\u533a\u57df\uff0c\u8fd8\u662f\u5411\u4e0b\u6ed1\u52a8\u8bf8\u5982\u6b64\u7c7b...\u76f8\u6bd4\u4e8e\u4f7f\u7528\u8be5\u65b9\u6cd5\uff0c\u6211\u4eec\u66f4\u52a0\u9f13\u52b1\u4f60\u53bb\u601d\u8003  \u7528\u6237  \u5728\u5e94\u7528\u4e2d\u662f\u5982\u4f55\u6536\u8d77\u952e\u76d8\uff08\u5982\u6ed1\u52a8\uff0c\u70b9\u51fb\u4e00\u4e2a\u56fa\u5b9a\u7684\u5750\u6807\uff0c\u7b49\u7b49...\uff09\uff0c\u5e76\u8ba9 Appium \u53bb\u6267\u884c\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u800c\u4e0d\u662f\u8c03\u7528\u8fd9\u4e2a API \u3002\u8bdd\u867d\u5982\u6b64\uff0c\u4f46\u8fd9\u91cc\u9ed8\u8ba4\u7684\u884c\u4e3a\u8fd8\u662f\u53ef\u80fd\u5e2e\u52a9\u5230\u4f60\u7684\u3002  # ruby\nhide_keyboard  # python\ndriver.hide_keyboard()  // java\ndriver.hideKeyboard();  // javascript\ndriver.hideKeyboard()  // php\n$this->hideKeyboard();\n$this->hideKeyboard(array('strategy' => 'pressKey', 'key' => 'Done'));  // c#\ndriver.HideKeyboard(\"Done\");  // objective c\n[driver hideKeyboard];",
            "title": "\u6536\u8d77\u952e\u76d8"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#activity",
            "text": "\u5728\u5f53\u524d app \u6253\u5f00\u4e00\u4e2a activity\uff0c\u6216\u8005\u65b0\u6253\u5f00\u4e00\u4e2a\u5e94\u7528\u5e76\u542f\u52a8\u4e00\u4e2a acticity\uff0c  \u4ec5\u652f\u6301 Android \u3002  // java\ndriver.startActivity(\"appPackage\",\"com.example.android.apis\", null, null);  // javascript\ndriver.startActivity({appPackage: 'com.example.android.apis', appActivity: '.Foo'}, cb);  # python\ndriver.start_activity('com.example.android.apis', '.Foo')  # ruby\nstart_activity app_package: 'io.appium.android.apis', app_activity: '.accessibility.AccessibilityNodeProviderActivity'  // c#\ndriver.StartActivity(\"com.example.android.apis\", \".Foo\");  // php\n$this->startActivity(array(\"appPackage\" => \"com.example.android.apis\",\n                            \"appActivity\" => \".Foo\"));  // objective c\n[driver startActivity:@\"com.example.android.apis\" package:@\".Foo\"];",
            "title": "\u542f\u52a8 Activity"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_4",
            "text": "\u6253\u5f00\u901a\u77e5\u680f\uff0c \u4ec5\u652f\u6301 Android \u3002  // java\ndriver.openNotifications();  // javascript\ndriver.openNotifications(cb);  # python\ndriver.open_notifications()  # ruby\nopen_notifications  // c#\ndriver.OpenNotifications();  // php\n$this->openNotifications();  // objective c\n[driver openNotifications];",
            "title": "\u6253\u5f00\u901a\u77e5\u680f"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_5",
            "text": "\u68c0\u6d4b\u5e94\u7528\u662f\u5426\u5df2\u88ab\u5b89\u88c5\u3002  # ruby\nis_installed? \"com.example.android.apis\"  # python\ndriver.is_app_installed('com.example.android.apis')  // java\ndriver.isAppInstalled(\"com.example.android.apis\")  // javascript\ndriver.isAppInstalled(\"com.example.android.apis\")\n  .then(function (isAppInstalled) { /*...*/ })  // php\n$this->isAppInstalled('com.example.android.apis');  // c#\ndriver.IsAppInstalled(\"com.example.android.apis-\");  // objective c\n[driver isAppInstalled:@\"com.example.android.apis-\"];",
            "title": "\u5e94\u7528\u662f\u5426\u5df2\u5b89\u88c5"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_6",
            "text": "\u5728\u8bbe\u5907\u4e0a\u5b89\u88c5\u5e94\u7528\u3002  # ruby\ninstall 'path/to/my.apk'  # python\ndriver.install_app('path/to/my.apk')  // java\ndriver.installApp(\"path/to/my.apk\")  // javascript\ndriver.installApp(\"path/to/my.apk\")  // php\n$this->installApp('path/to/my.apk');  // c#\ndriver.InstallApp(\"path/to/my.apk\");  // objective c\n[driver installAppAtPath:@\"path/to/my.apk\"];",
            "title": "\u5b89\u88c5\u5e94\u7528"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_7",
            "text": "\u5378\u8f7d\u8bbe\u5907\u4e0a\u7684\u5e94\u7528\u3002  # ruby\nremove 'com.example.android.apis'  # python\ndriver.remove_app('com.example.android.apis')  // java\ndriver.removeApp(\"com.example.android.apis\")  // javascript\ndriver.removeApp(\"com.example.android.apis\")  // php\n$this->removeApp('com.example.android.apis');  // c#\ndriver.RemoveApp(\"com.example.android.apis\");  // objective c\n[driver removeApp:@\"com.example.android.apis\"];",
            "title": "\u5378\u8f7d\u5e94\u7528"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_8",
            "text": "\u6a21\u62df\u6447\u6643\u8bbe\u5907\u7684\u64cd\u4f5c\u3002  # ruby\nshake  # python\ndriver.shake()  // java\ndriver.shake()  // javascript\ndriver.shake()  // php\n$this->shake();  // c#\ndriver.ShakeDevice();  // objective c\n[driver shakeDevice];",
            "title": "\u6447\u4e00\u6447"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_9",
            "text": "\u5173\u95ed\u5e94\u7528\u3002  # ruby\nclose_app  # python\ndriver.close_app();  // java\ndriver.closeApp()  // javascript\ndriver.closeApp()  // php\n$this->closeApp();  // c#\ndriver.CloseApp();  // objective c\n[driver closeApp];",
            "title": "\u5173\u95ed\u5e94\u7528"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#launch",
            "text": "\u4e3a desired capabilities \u542f\u52a8\u4e00\u4e2a session\u3002\u8bf7\u6ce8\u610f\u53ea\u6709\u8bbe\u7f6e\u4e86 autoLaunch=false \u5173\u952e\u5b57\u65f6\u624d\u4f1a\u751f\u6548\u3002\u8fd9\u4e0d\u662f\u4e3a\u4e86\u968f\u610f\u542f\u52a8\u4e00\u4e2a\u5e94\u7528\u6216 activities \u2014\u2014\u5982\u679c\u4f60\u60f3\u8fd9\u4e48\u505a\uff0c\u8bf7\u4f7f\u7528  start_activity  \u8fd9\u4e2a desired capability \u7684\u53c2\u6570\u3002\u8fd9\u4e2a\u65b9\u6cd5\u7684\u4f7f\u7528\u573a\u666f\u662f\u5728\u4f60\u8bbe\u7f6e\u4e86 autoLaunch=false \u540e\uff0c\u7528\u6765\u7ee7\u7eed\u6267\u884c\u521d\u59cb\u5316\uff08\"launch\"\uff09\u6d41\u7a0b\u7684\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u56fd\u4ea7\u7cfb\u7edf\u7ecf\u5e38\u4f1a\u5728\u5e94\u7528\u5b89\u88c5\u65f6\u5f39\u51fa\u63d0\u793a\u7a97\u963b\u788d\u5b89\u88c5\uff0c\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7 autoLaunch=false \u6765\u8ba9\u5e94\u7528\u5b89\u88c5\u540e\u5148\u6267\u884c\u4f60\u7684\u811a\u672c\u6765\u5173\u6389\u5f39\u7a97\uff0c\u7136\u540e\u518d\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u7ee7\u7eed\u542f\u52a8\u5e94\u7528\u3002\uff09  # ruby\nlaunch_app  # python\ndriver.launch_app()  // java\ndriver.launchApp()  // javascript\ndriver.launchApp()  // php\n$this->launchApp();  // c#\ndriver.LaunchApp();  // objective c\n[driver launchApp];",
            "title": "\u542f\u52a8\uff08Launch\uff09"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_10",
            "text": "\u91cd\u7f6e\u5e94\u7528\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u7c7b\u4f3c\u4e8e\u6e05\u9664\u7f13\u5b58\uff09  # ruby\ndriver.reset  # python\ndriver.reset()  // java\ndriver.resetApp()  // javascript\ndriver.resetApp()  // php\n$this->reset();  // c#\ndriver.ResetApp();  // objective c\n[driver resetApp];",
            "title": "\u91cd\u7f6e"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#contexts",
            "text": "\u5217\u51fa\u6240\u6709\u53ef\u7528\u7684\u4e0a\u4e0b\u6587\uff08contexts\uff09\u3002  # ruby\ncontext_array = available_contexts  # python\ndriver.contexts  // java\ndriver.getContextHandles()  // javascript\ndriver.contexts().then(function (contexts) { /*...*/ })  // php\n$this->contexts();  // c#\ndriver.GetContexts()  // objective c\nNSArray *contexts = driver.allContexts;",
            "title": "\u53ef\u7528\u7684\u4e0a\u4e0b\u6587\uff08Contexts\uff09"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#context",
            "text": "\u5217\u51fa\u5f53\u524d\u7684\u4e0a\u4e0b\u6587\uff08context\uff09\u3002  # ruby\ncontext = current_context  # python\ndriver.current_context  // java\ndriver.getContext()  // javascript\ndriver.currentContext().then(function (context) { /*...*/ })  // php\n$this->context();  // c#\ndriver.GetContext()  // objective c\nNSString *context = driver.context;",
            "title": "\u5f53\u524d\u4e0a\u4e0b\u6587\uff08context\uff09"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#context_1",
            "text": "\u5207\u6362\u56de\u9ed8\u8ba4\u7684\u4e0a\u4e0b\u6587\uff08context\uff09\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u4e00\u822c\u5c31\u662f\u539f\u751f\u4e0a\u4e0b\u6587 \u201cNATIVE_APP\u201d\uff09  # ruby\nswitch_to_default_context  # python\ndriver.switch_to.context(None)  // java\ndriver.context();  // javascript\ndriver.context()  // php\n$this->context(NULL);  // c#\ndriver.SetContext();  // objective c\n[driver setContext:nil];",
            "title": "\u5207\u6362\u81f3\u9ed8\u8ba4\u7684\u4e0a\u4e0b\u6587\uff08context\uff09"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_11",
            "text": "\u83b7\u5f97\u5e94\u7528\u7684\u5b57\u7b26\u4e32\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u8fd9\u91cc\u5b9e\u9645\u6307\u7684\u662f\u8fd4\u56de\u5e94\u7528\u7684\u591a\u8bed\u8a00\u6587\u672c\uff0c\u5373\u6bcf\u4e2a string \u53d8\u91cf\u53ca\u5728\u6307\u5b9a\u8bed\u8a00\u4e0a\u7684\u663e\u793a\u5185\u5bb9\u3002\u4f8b\u5982  {\"action_forgot_password\":\"Forgot your password?\"}  \u3002\u5728 android \u4e0a\u5bf9\u5e94\u7684\u662f\u9879\u76ee\u4e2d\u7684  strings.xml  \u591a\u8bed\u8a00\u914d\u7f6e\u6587\u4ef6\uff09  # ruby\napp_strings  # python\ndriver.app_strings  // java\ndriver.getAppStrings();  // javascript\ndriver.getAppStrings().then(function (appStrings) { /*...*/ })  // php\n$this->appStrings();\n$this->appStrings('ru');  // c#\ndriver.GetAppStrings();  // objective c\n[driver appStrings];\n[driver appStringsForLanguage:\"@ru\"];",
            "title": "\u5e94\u7528\u7684\u5b57\u7b26\u4e32"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_12",
            "text": "\u7ed9\u8bbe\u5907\u53d1\u9001\u6309\u952e\u4e8b\u4ef6\u3002  # ruby\nkey_event 176  # python\ndriver.keyevent(176)  // java\ndriver.sendKeyEvent(AndroidKeyCode.HOME);  // javascript\ndriver.deviceKeyEvent(wd.SPECIAL_KEYS.Home)  // php\n$this->keyEvent('176');  // c#\ndriver.KeyEvent(\"176\");  // objective c\nNSError *err;\n[driver triggerKeyEvent:176 metastate:0 error:&err];",
            "title": "\u6309\u952e\u4e8b\u4ef6"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#activity_1",
            "text": "\u83b7\u53d6\u5f53\u524d\u7684 Acticity\u3002\u4ec5\u652f\u6301 Android\u3002  # ruby\ncurrent_activity  # python\ndriver.current_activity  // java\ndriver.currentActivity();  // javascript\ndriver.getCurrentActivity().then(function (activity) { /*...*/ })  // php\n$this->currentActivity();  // c#\ndriver.GetCurrentActivity();  // objective c\nNSError *err;\n[driver currentActivity];",
            "title": "\u5f53\u524d Activity"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#package",
            "text": "\u83b7\u53d6\u5f53\u524d\u5305\u540d\uff08package\uff09\u3002\u4ec5\u652f\u6301 Android \u3002  # ruby\ncurrent_package  # python\ndriver.current_package  // java\ndriver.getCurrentPackage();  // javascript\ndriver.getCurrentPackage().then(function (package) { /*...*/ })  // php\n$this->currentPackage();  // c#\ndriver.GetCurrentPackage();",
            "title": "\u5f53\u524d\u5305\u540d\uff08package\uff09"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_13",
            "text": "\u7528\u4e8e\u751f\u6210\u70b9\u51fb\u64cd\u4f5c\u7684 API\u3002\u8fd9\u90e8\u5206\u6587\u6863\u7684\u5185\u5bb9\u5c06\u4f1a\u5f88\u5feb\u88ab\u8865\u5145\u8fdb\u6765\u3002  # ruby\ntouch_action = Appium::TouchAction.new\nelement  = find_element :accessibility_id, 'Buttons, Various uses of UIButton'\ntouch_action.press(element: element, x: 10, y: 10).perform  # python\naction = TouchAction(driver)\naction.press(element=el, x=10, y=10).release().perform()  // java\nTouchAction action = new TouchAction(driver)\n.press(mapview, 10, 10)\n.release().\nperform();  // javascript\nvar action = new wd.TouchAction(driver);\naction\n  .tap({el: el, x: 10, y: 10})\n  .release();\nreturn action.perform(); // returns a promise  // php\n$action = $this->initiateTouchAction();\n               ->press(array('element' => $el))\n               ->release()\n               ->perform();\n\n$action1 = $this->initiateTouchAction();\n$action1->press(array('element' => $els[0]))\n        ->moveTo(array('x' => 10, 'y' => 0))\n        ->moveTo(array('x' => 10, 'y' => -75))\n        ->moveTo(array('x' => 10, 'y' => -600))\n        ->release();\n\n$action2 = $this->initiateTouchAction();\n$action2->press(array('element' => $els[1]))\n        ->moveTo(array('x' => 10, 'y' => 10))\n        ->moveTo(array('x' => 10, 'y' => -300))\n        ->moveTo(array('x' => 10, 'y' => -600))\n        ->release();\n\n$multiAction = $this->initiateMultiAction();\n$multiAction->add($action1);\n$multiAction->add($action2);\n$multiAction->perform();  // c#\nITouchAction action = new TouchAction(driver);\naction.Press(el, 10, 10).Release();\naction.Perform ();",
            "title": "\u70b9\u51fb\u64cd\u4f5c / \u591a\u70b9\u89e6\u63a7\u64cd\u4f5c"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_14",
            "text": "\u6a21\u62df\u7528\u6237\u6ed1\u52a8\u5c4f\u5e55\u7684\u64cd\u4f5c\u3002  # ruby\nswipe start_x: 75, start_y: 500, end_x: 75, end_y: 0, duration: 0.8  # python\ndriver.swipe(start_x=75, start_y=500, end_x=75, end_y=0, duration=800)  // java\ndriver.swipe(75, 500, 75, 0, 0.8)  // javascript\nfunction swipe(opts) {\n  var action = new wd.TouchAction(this);\n  action\n    .press({x: opts.startX, y: opts.startY})\n    .wait(opts.duration)\n    .moveTo({x: opts.endX, y: opts.endY})\n    .release();\n  return action.perform();\n}\nwd.addPromiseChainMethod('swipe', swipe);\n// ...\nreturn driver.swipe({ startX: 75, startY: 500,\n  endX: 75,  endY: 0, duration: 800 });  // php\n$this->swipe(75, 500, 75, 0, 800);  // c#\ntodo: c#",
            "title": "\u6ed1\u52a8\u5c4f\u5e55"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#pinch",
            "text": "\u5728\u5c4f\u5e55\u4e0a\u4f7f\u7528\u634f\uff08Pinch\uff09\u624b\u52bf\u3002  # ruby\npinch 75  # python\ndriver.pinch(element=el)  // java\ndriver.pinch(element);  // javascript\nfunction pinch(el) {\n  return Q.all([\n    el.getSize(),\n    el.getLocation(),\n  ]).then(function(res) {\n    var size = res[0];\n    var loc = res[1];\n    var center = {\n      x: loc.x + size.width / 2,\n      y: loc.y + size.height / 2\n    };\n    var a1 = new wd.TouchAction(this);\n    a1.press({el: el, x: center.x, y:center.y - 100}).moveTo({el: el}).release();\n    var a2 = new wd.TouchAction(this);\n    a2.press({el: el, x: center.x, y: center.y + 100}).moveTo({el: el}).release();\n    var m = new wd.MultiAction(this);\n    m.add(a1, a2);\n    return m.perform();\n  }.bind(this));\n};\nwd.addPromiseChainMethod('pinch', pinch);\nwd.addElementPromiseChainMethod('pinch', function() {\n  return this.browser.pinch(this);\n});\n// ...\nreturn driver.pinch(el);\n// ...\nreturn el.pinch();  $this->pinch($el);  // c#\ndriver.Pinch(25, 25)",
            "title": "\u634f\uff08Pinch\uff09\u624b\u52bf"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#zoom",
            "text": "\u5728\u5c4f\u5e55\u4e0a\u4f7f\u7528\u653e\u5927\u624b\u52bf\u3002  # ruby\nzoom 200  # python\ndriver.zoom(element=el)  // java\ndriver.zoom(element);  // javascript\nfunction zoom(el) {\n  return Q.all([\n    this.getWindowSize(),\n    this.getLocation(el),\n  ]).then(function(res) {\n    var size = res[0];\n    var loc = res[1];\n    var center = {\n      x: loc.x + size.width / 2,\n      y: loc.y + size.height / 2\n    };\n    var a1 = new wd.TouchAction(this);\n    a1.press({el: el}).moveTo({el: el, x: center.x, y: center.y - 100}).release();\n    var a2 = new wd.TouchAction(this);\n    a2.press({el: el}).moveTo({el: el, x: center.x, y: center.y + 100}).release();\n    var m = new wd.MultiAction(this);\n    m.add(a1, a2);\n    return m.perform();\n  }.bind(this));\n};\nwd.addPromiseChainMethod('zoom', zoom);\nwd.addElementPromiseChainMethod('zoom', function() {\n  return this.browser.zoom(this);\n});\n// ...\nreturn driver.zoom(el);\n// ...\nreturn el.zoom();  // php\n$this->zoom($el);  // c#\ndriver.Zoom(100, 200);",
            "title": "\u653e\u5927\u5c4f\u5e55\uff08Zoom\uff09"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_15",
            "text": "\u6eda\u52a8\u5230\u6307\u5b9a\u7684\u5143\u7d20\u3002  # ruby\nelement = find_element :accessibility_id, \"Element ID\"\nexecute_script \"mobile: scroll\", direction: \"down\", element: element.ref  # python\ndriver.execute_script(\"mobile: scroll\", {\"direction\": \"down\", \"element\": element.id})  // java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nHashMap<String, String> scrollObject = new HashMap<String, String>();\nscrollObject.put(\"direction\", \"down\");\nscrollObject.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: scroll\", scrollObject);  // javascript\nreturn driver.elementByAccessibilityId().then(function (el) {\n  driver.execute(\"mobile: scroll\", [{direction: \"down\", element: el.value}]);\n});  // php\n$els = $this->elements($this->using('class name')->value('android.widget.TextView'));\n$this->scroll($els[count($els) - 1], $els[0]);  // c#\nDictionary<string, string> scrollObject = new Dictionary<string, string>();\nscrollObject.Add(\"direction\", \"down\");\nscrollObject.Add(\"element\", <element_id>);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: scroll\", scrollObject));",
            "title": "\u6eda\u52a8\u5230"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#pull",
            "text": "\u4ece\u8bbe\u5907\u4e0a\u62c9\u53d6\u6587\u4ef6\u3002  # ruby\npull_file 'Library/AddressBook/AddressBook.sqlitedb'  # python\ndriver.pull_file('Library/AddressBook/AddressBook.sqlitedb')  // java\ndriver.pullFile(\"Library/AddressBook/AddressBook.sqlitedb\");  // javascript\ndriver.pullFile(\"Library/AddressBook/AddressBook.sqlitedb\")\n  .then(function (base64File) { /*...*/ })  // php\n$this->pullFile('Library/AddressBook/AddressBook.sqlitedb');  // c#\ndriver.PullFile(\"Library/AddressBook/AddressBook.sqlitedb\");",
            "title": "\u62c9\u53d6\uff08pull\uff09\u6587\u4ef6"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#push",
            "text": "\u63a8\u9001\u6587\u4ef6\u5230\u8bbe\u5907\u3002  # ruby\ndata = \"some data for the file\"\npath = \"/data/local/tmp/file.txt\"\npush_file path, data  # python\ndata = \"some data for the file\"\npath = \"/data/local/tmp/file.txt\"\ndriver.push_file(path, data.encode('base64'))  // java\nbyte[] data = Base64.encodeBase64(\"some data for the file\".getBytes());\nString path = \"/data/local/tmp/file.txt\";\ndriver.pushFile(path, data)  // javascript\ndriver.pushFile(path, data)  // php\n$path = 'data/local/tmp/test_push_file.txt';\n$data = 'This is the contents of the file to push to the device.';\n$this->pushFile($path, base64_encode($data));  // c#\ndriver.PushFile(\"/data/local/tmp/file.txt\", \"some data for the file\");",
            "title": "\u63a8\u9001\uff08push\uff09\u6587\u4ef6"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#_16",
            "text": "\u5728\u8fd9\u4f60\u4f1a\u627e\u5230\u5173\u4e8e\u83b7\u53d6\u6216\u8bbe\u7f6e appium \u670d\u52a1\u5668\u8bbe\u7f6e\u7684\u793a\u4f8b\u4ee3\u7801\u3002\u5982\u679c\u60f3\u4e86\u89e3\u5de5\u4f5c\u539f\u7406\uff0c\u4ee5\u53ca\u652f\u6301\u54ea\u4e9b\u8bbe\u7f6e\uff0c\u8bf7\u67e5\u770b \u8bbe\u7f6e\u6587\u6863  # ruby\ncurrent_settings = get_settings\nupdate_settings someSetting: true  # python\ncurrent_settings = driver.get_settings()\ndriver.update_settings({\"someSetting\": true})  // java\nJsonObject settings = driver.getSettings()\n// java \u5ba2\u6237\u7aef\u4e0d\u652f\u6301\u8bbe\u7f6e\u4efb\u610f\u7684\u8bbe\u7f6e\u9879\uff0c\u53ea\u80fd\u8bbe\u7f6e appium \u5f53\u524d\u652f\u6301\u7684\u90e8\u5206\u3002\n// \u6240\u4ee5\u5bf9\u4e8e `ignoreUnimportantViews`\uff08\u8bd1\u8005\u6ce8\uff1a\u5ffd\u7565\u4e0d\u91cd\u8981\u7684\u89c6\u56fe\uff0c\u5373 android uiautomator \u4e0a\u7684\u538b\u7f29\u540e xml \uff09\u8fd9\u4e2a\u8bbe\u7f6e\u9879\uff0c\u5bf9\u5e94\u5b58\u5728\u4e0b\u9762\u8fd9\u4e2a\u8bbe\u7f6e\u65b9\u6cd5\uff1a\ndriver.ignoreUnimportantViews(true);  // javascript\nvar settings = driver.settings();\nbrowser.updateSettings({'someSetting': true});  // php\n$settings = $this->getSettings();\n$this->updateSettings(array('cyberdelia' => \"open\"));  // c#\nDictionary<String, Object>settings = driver.GetSettings();\n// .net \u5ba2\u6237\u7aef\u4e0d\u652f\u6301\u8bbe\u7f6e\u4efb\u610f\u7684\u8bbe\u7f6e\u9879\uff0c\u53ea\u80fd\u8bbe\u7f6e appium \u5f53\u524d\u652f\u6301\u7684\u90e8\u5206\u3002\n// \u6240\u4ee5\u5bf9\u4e8e `ignoreUnimportantViews`\uff08\u8bd1\u8005\u6ce8\uff1a\u5ffd\u7565\u4e0d\u91cd\u8981\u7684\u89c6\u56fe\uff0c\u5373 android uiautomator \u4e0a\u7684\u538b\u7f29\u540e xml \uff09\u8fd9\u4e2a\u8bbe\u7f6e\u9879\uff0c\u5bf9\u5e94\u5b58\u5728\u4e0b\u9762\u8fd9\u4e2a\u8bbe\u7f6e\u65b9\u6cd5\uff1a\ndriver.IgnoreUnimportantViews(true);",
            "title": "\u8bbe\u7f6e"
        },
        {
            "location": "/cn/writing-running-appium/appium-bindings/#appium_1",
            "text": "Appium \u7684\u684c\u9762\u5e94\u7528\u652f\u6301 OS X, Windows \u53ca Linux.   Appium Desktop   \u672c\u6587\u7531  thanksdanny  \u7ffb\u8bd1\uff0c\u7531  chenhengjie123  \u6821\u9a8c\u3002",
            "title": "Appium \u684c\u9762\u5e94\u7528"
        },
        {
            "location": "/cn/writing-running-appium/caps/",
            "text": "Appium \u670d\u52a1\u5668\u521d\u59cb\u5316\u53c2\u6570\uff08Capability\uff09\n\n\n\n\n\n\n\n\n\n\n\u952e\n\n\n\u63cf\u8ff0\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\nautomationName\n\n\n\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u5f15\u64ce\n\n\nAppium\n \uff08\u9ed8\u8ba4\uff09\u6216\u8005 \nSelendroid\n\n\n\n\n\n\nplatformName\n\n\n\u4f7f\u7528\u7684\u624b\u673a\u64cd\u4f5c\u7cfb\u7edf\n\n\niOS\n, \nAndroid\n, \u6216\u8005 \nFirefoxOS\n\n\n\n\n\n\nplatformVersion\n\n\n\u624b\u673a\u64cd\u4f5c\u7cfb\u7edf\u7684\u7248\u672c\n\n\n\u4f8b\u5982  \n7.1\n, \n4.4\n\n\n\n\n\n\ndeviceName\n\n\n\u4f7f\u7528\u7684\u624b\u673a\u6216\u6a21\u62df\u5668\u7c7b\u578b\n\n\niPhone Simulator\n, \niPad Simulator\n, \niPhone Retina 4-inch\n, \nAndroid Emulator\n, \nGalaxy S4\n, \u7b49\u7b49.... \u5728 iOS \u4e0a\uff0c\u4f7f\u7528 Instruments \u7684 \ninstruments -s devices\n \u547d\u4ee4\u53ef\u8fd4\u56de\u4e00\u4e2a\u6709\u6548\u7684\u8bbe\u5907\u7684\u5217\u8868\u3002\u5728 Andorid \u4e0a\u867d\u7136\u8fd9\u4e2a\u53c2\u6570\u76ee\u524d\u5df2\u88ab\u5ffd\u7565\uff0c\u4f46\u4ecd\u7136\u9700\u8981\u6dfb\u52a0\u4e0a\u8be5\u53c2\u6570\n\n\n\n\n\n\napp\n\n\n\u672c\u5730\u7edd\u5bf9\u8def\u5f84_\u6216_\u8fdc\u7a0b http URL \u6240\u6307\u5411\u7684\u4e00\u4e2a\u5b89\u88c5\u5305\uff08\n.ipa\n,\n.apk\n,\u6216 \n.zip\n \u6587\u4ef6\uff09\u3002Appium \u5c06\u5176\u5b89\u88c5\u5230\u5408\u9002\u7684\u8bbe\u5907\u4e0a\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u6307\u5b9a\u4e86 \nappPackage\n \u548c \nappActivity\n \u53c2\u6570\uff08\u89c1\u4e0b\u6587\uff09\uff0cAndroid \u5219\u4e0d\u9700\u8981\u6b64\u53c2\u6570\u4e86\u3002\u8be5\u53c2\u6570\u4e5f\u4e0e \nbrowserName\n \u4e0d\u517c\u5bb9\u3002\n\n\n/abs/path/to/my.apk\n \u6216 \nhttp://myapp.com/app.ipa\n\n\n\n\n\n\nbrowserName\n\n\n\u505a\u81ea\u52a8\u5316\u65f6\u4f7f\u7528\u7684\u6d4f\u89c8\u5668\u540d\u5b57\u3002\u5982\u679c\u662f\u4e00\u4e2a\u5e94\u7528\u5219\u53ea\u9700\u586b\u5199\u4e2a\u7a7a\u7684\u5b57\u7b26\u4e32\n\n\n'Safari' \u5bf9\u5e94 iOS\uff0c'Chrome', 'Chromium', \u6216 'Browser' \u5219\u5bf9\u5e94 Android\n\n\n\n\n\n\nnewCommandTimeout\n\n\n\u7528\u4e8e\u5ba2\u6237\u7aef\u5728\u9000\u51fa\u6216\u8005\u7ed3\u675f session \u4e4b\u524d\uff0cAppium \u7b49\u5f85\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u6761\u65b0\u547d\u4ee4\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff08\u79d2\u4e3a\u5355\u4f4d\uff09\n\n\n\u4f8b\u5982  \n60\n\n\n\n\n\n\nlanguage\n\n\n(Sim/Emu-only) \u4e3a\u6a21\u62df\u5668\u8bbe\u7f6e\u8bed\u8a00\n\n\n\u4f8b\u5982  \nfr\n\n\n\n\n\n\nlocale\n\n\n(Sim/Emu-only) \u4e3a\u6a21\u62df\u5668\u8bbe\u7f6e\u6240\u5728\u533a\u57df\n\n\n\u4f8b\u5982  \nfr_CA\n\n\n\n\n\n\nudid\n\n\n\u8fde\u63a5\u771f\u673a\u7684\u552f\u4e00\u8bbe\u5907\u53f7\n\n\n\u4f8b\u5982  \n1ae203187fc012g\n\n\n\n\n\n\norientation\n\n\n(Sim/Emu-only) \u6a21\u62df\u5668\u5f53\u524d\u7684\u65b9\u5411\n\n\n\u7ad6\u5c4f\n \u6216 \n\u6a2a\u5c4f\n\n\n\n\n\n\nautoWebview\n\n\n\u76f4\u63a5\u8f6c\u6362\u5230 Webview \u4e0a\u4e0b\u6587\uff08context\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a \nfalse\n\n\ntrue\n, \nfalse\n\n\n\n\n\n\nnoReset\n\n\n\u5728\u5f53\u524d session \u4e0b\u4e0d\u4f1a\u91cd\u7f6e\u5e94\u7528\u7684\u72b6\u6001\u3002\u9ed8\u8ba4\u503c\u4e3a \nfalse\n\n\ntrue\n, \nfalse\n\n\n\n\n\n\nfullReset\n\n\n(iOS)\u5220\u9664\u6240\u6709\u7684\u6a21\u62df\u5668\u6587\u4ef6\u5939\u3002(Android) \u8981\u6e05\u9664 app \u91cc\u7684\u6570\u636e\uff0c\u8bf7\u5c06\u5e94\u7528\u5378\u8f7d\u624d\u80fd\u8fbe\u5230\u91cd\u7f6e\u5e94\u7528\u7684\u6548\u679c\u3002\u5728 Android, \u5728 session \u5b8c\u6210\u4e4b\u540e\u4e5f\u4f1a\u5c06\u5e94\u7528\u5378\u8f7d\u6389\u3002\u9ed8\u8ba4\u503c\u4e3a \nfalse\n\n\ntrue\n, \nfalse\n\n\n\n\n\n\n\n\nAndroid \u72ec\u6709\n\n\n\n\n\n\n\n\n\n\n\u952e\n\n\n\u63cf\u8ff0\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\nappActivity\n\n\nActivity \u7684\u540d\u5b57\u662f\u6307\u4ece\u4f60\u7684\u5305\u4e2d\u6240\u8981\u542f\u52a8\u7684 Android acticity\u3002\u4ed6\u901a\u5e38\u9700\u8981\u518d\u524d\u9762\u6dfb\u52a0\n.\n \uff08\u4f8b\u5982  \u4f7f\u7528 \n.MainActivity\n \u4ee3\u66ff \nMainActivity\n\uff09\n\n\nMainActivity\n, \n.Settings\n\n\n\n\n\n\nappPackage\n\n\n\u8fd0\u884c\u7684 Android \u5e94\u7528\u7684\u5305\u540d\n\n\ncom.example.android.myApp\n, \ncom.android.settings\n\n\n\n\n\n\nappWaitActivity\n\n\n\u7528\u4e8e\u7b49\u5f85\u542f\u52a8\u7684 Android Activity \u540d\u79f0\n\n\nSplashActivity\n\n\n\n\n\n\nappWaitPackage\n\n\n\u7528\u4e8e\u7b49\u5f85\u542f\u52a8\u7684 Android \u5e94\u7528\u7684\u5305\n\n\ncom.example.android.myApp\n, \ncom.android.settings\n\n\n\n\n\n\nappWaitDuration\n\n\n\u7528\u4e8e\u7b49\u5f85 appWaitActivity \u542f\u52a8\u7684\u8d85\u65f6\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\uff08\u9ed8\u8ba4\u503c\u4e3a  \n20000\n)\n\n\n30000\n\n\n\n\n\n\ndeviceReadyTimeout\n\n\n\u7528\u4e8e\u7b49\u5f85\u6a21\u62df\u5668\u6216\u771f\u673a\u51c6\u5907\u5c31\u7eea\u7684\u8d85\u65f6\u65f6\u95f4\n\n\n5\n\n\n\n\n\n\nandroidCoverage\n\n\n\u7528\u4e8e\u6267\u884c\u6d4b\u8bd5\u7684 instrumentation \u7c7b\u3002 \u4f20\u9001 \n-w\n \u53c2\u6570\u5230\u5982\u4e0b\u547d\u4ee4 \nadb shell am instrument -e coverage true -w\n\n\ncom.my.Pkg/com.my.Pkg.instrumentation.MyInstrumentation\n\n\n\n\n\n\nenablePerformanceLogging\n\n\n\uff08\u4ec5\u9002\u7528\u4e8e Chrome \u4e0e webview\uff09\u5f00\u542f Chromedriver \u7684\u6027\u80fd\u65e5\u5fd7\u3002\uff08\u9ed8\u8ba4\u503c\u4e3a \nfalse\n\uff09\n\n\ntrue\n, \nfalse\n\n\n\n\n\n\nandroidDeviceReadyTimeout\n\n\n\u7528\u4e8e\u7b49\u5f85\u8bbe\u5907\u5728\u542f\u52a8\u5e94\u7528\u540e\u51c6\u5907\u5c31\u7eea\u7684\u8d85\u65f6\u65f6\u95f4\u3002\u4ee5\u79d2\u4e3a\u5355\u4f4d\u3002\n\n\n\u4f8b\u5982  \n30\n\n\n\n\n\n\nandroidInstallTimeout\n\n\n\u7528\u4e8e\u7b49\u5f85\u5728\u8bbe\u5907\u4e2d\u5b89\u88c5 apk \u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a \n90000\n\n\n\u4f8b\u5982  \n90000\n\n\n\n\n\n\nadbPort\n\n\n\u7528\u6765\u8fde\u63a5 ADB \u670d\u52a1\u5668\u7684\u7aef\u53e3\uff08\u9ed8\u8ba4\u503c\u4e3a \n5037\n\uff09\n\n\n5037\n\n\n\n\n\n\nandroidDeviceSocket\n\n\n\u5f00\u53d1\u5de5\u5177\u7684 socket \u540d\u79f0\u3002\u53ea\u6709\u5728\u88ab\u6d4b\u5e94\u7528\u662f\u4e00\u4e2a\u4f7f\u7528 Chromium \u5185\u6838\u7684\u6d4f\u89c8\u5668\u65f6\u624d\u9700\u8981\u3002socket \u4f1a\u88ab\u6d4f\u89c8\u5668\u6253\u5f00\uff0c\u7136\u540e Chromedriver \u628a\u5b83\u4f5c\u4e3a\u5f00\u53d1\u8005\u5de5\u5177\u6765\u8fdb\u884c\u8fde\u63a5\u3002\n\n\n\u4f8b\u5982  \nchrome_devtools_remote\n\n\n\n\n\n\navd\n\n\n\u88ab\u542f\u52a8 avd \u7684\u540d\u5b57\n\n\n\u4f8b\u5982  \napi19\n\n\n\n\n\n\navdLaunchTimeout\n\n\n\u7528\u4e8e\u7b49\u5f85 avd \u542f\u52a8\u5e76\u8fde\u63a5 ADB \u7684\u8d85\u65f6\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\uff0c\u9ed8\u8ba4\u503c\u4e3a \n120000\n\u3002\n\n\n300000\n\n\n\n\n\n\navdReadyTimeout\n\n\n\u7528\u4e8e\u7b49\u5f85 avd \u5b8c\u6210\u542f\u52a8\u52a8\u753b\u7684\u8d85\u65f6\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\uff0c\u9ed8\u8ba4\u503c\u4e3a \n120000\n\u3002\n\n\n300000\n\n\n\n\n\n\navdArgs\n\n\n\u542f\u52a8 avd \u65f6\u4f7f\u7528\u7684\u989d\u5916\u53c2\u6570\n\n\n\u4f8b\u5982  \n-netfast\n\n\n\n\n\n\nuseKeystore\n\n\n\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 keystore \u7ed9 apk \u7b7e\u540d\uff0c\u9ed8\u8ba4\u503c\u4e3a \nfalse\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nkeystorePath\n\n\n\u81ea\u5b9a\u4e49 keystore \u7684\u8def\u5f84, \u9ed8\u8ba4\u8def\u5f84\u4e3a ~/.android/debug.keystore\n\n\n\u4f8b\u5982  \n/path/to.keystore\n\n\n\n\n\n\nkeystorePassword\n\n\n\u81ea\u5b9a\u4e49 keystore \u7684\u5bc6\u7801\n\n\n\u4f8b\u5982  \nfoo\n\n\n\n\n\n\nkeyAlias\n\n\nkey \u7684\u522b\u540d\n\n\n\u4f8b\u5982  \nandroiddebugkey\n\n\n\n\n\n\nkeyPassword\n\n\nkey \u7684\u5bc6\u7801\n\n\n\u4f8b\u5982  \nfoo\n\n\n\n\n\n\nchromedriverExecutable\n\n\nwebdriver \u53ef\u6267\u884c\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\uff08\u5982\u679c Chromium \u5185\u5d4c\u4e00\u4e2a\u81ea\u5df1\u63d0\u4f9b\u7684 webdriver\uff0c\u5219\u5e94\u4f7f\u7528\u4ed6\u53bb\u66ff\u6362\u6389 Appium \u81ea\u5e26\u7684 chromedriver\uff09\n\n\n/abs/path/to/webdriver\n\n\n\n\n\n\nautoWebviewTimeout\n\n\n\u7528\u4e8e\u7b49\u5f85 Webview \u4e0a\u4e0b\u6587\uff08context\uff09\u6fc0\u6d3b\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a \n2000\n\n\n\u4f8b\u5982  \n4\n\n\n\n\n\n\nintentAction\n\n\n\u7528\u4e8e\u542f\u52a8 activity \u7684 intent action\uff08\u9ed8\u8ba4\u503c\u4e3a  \nandroid.intent.action.MAIN\n)\n\n\n\u4f8b\u5982 \nandroid.intent.action.MAIN\n, \nandroid.intent.action.VIEW\n\n\n\n\n\n\nintentCategory\n\n\n\u7528\u4e8e\u542f\u52a8 activity \u7684 intent category\u3002\uff08\u9ed8\u8ba4\u503c\u4e3a  \nandroid.intent.category.LAUNCHER\n)\n\n\n\u4f8b\u5982  \nandroid.intent.category.LAUNCHER\n, \nandroid.intent.category.APP_CONTACTS\n\n\n\n\n\n\nintentFlags\n\n\n\u7528\u4e8e\u542f\u52a8 activity \u7684\u6807\u8bc6\uff08flags\uff09\uff08\u9ed8\u8ba4\u503c\u4e3a  \n0x10200000\n\uff09\n\n\n\u4f8b\u5982  \n0x10200000\n\n\n\n\n\n\noptionalIntentArguments\n\n\n\u7528\u4e8e\u542f\u52a8 activity \u7684\u989d\u5916 intent \u53c2\u6570\u3002\u8bf7\u67e5\u770b \nIntent \u53c2\u6570\n\n\n\u4f8b\u5982  \n--esn <EXTRA_KEY>\n, \n--ez <EXTRA_KEY> <EXTRA_BOOLEAN_VALUE>\n, \u7b49\u7b49\u3002\n\n\n\n\n\n\ndontStopAppOnReset\n\n\n\u5728\u4f7f\u7528 adb \u542f\u52a8\u5e94\u7528\u4e4b\u524d\uff0c\u4e0d\u8981\u7ec8\u6b62\u88ab\u6d4b\u5e94\u7528\u7684\u8fdb\u7a0b\u3002\u5982\u679c\u88ab\u6d4b\u5e94\u7528\u662f\u88ab\u5176\u4ed6\u94a9\u5b50(anchor)\u5e94\u7528\u6240\u521b\u5efa\u7684\uff0c\u8bbe\u7f6e\u8be5\u53c2\u6570\u4e3a false \u540e\uff0c\u5c31\u5141\u8bb8\u94a9\u5b50(anchor)\u5e94\u7528\u7684\u8fdb\u7a0b\u5728\u4f7f\u7528 adb \u542f\u52a8\u88ab\u6d4b\u5e94\u7528\u671f\u95f4\u4ecd\u7136\u5b58\u5728\u3002\u6362\u800c\u8a00\u4e4b\uff0c\u8bbe\u7f6e \ndontStopAppOnReset\n \u4e3a \ntrue\n \u540e\uff0c\u6211\u4eec\u5728 \nadb shell am start\n \u7684\u8c03\u7528\u4e2d\u4e0d\u9700\u8981\u5305\u542b \n-S\n\u6807\u8bc6\uff08flag\uff09\u3002\u5ffd\u7565\u8be5 capability \u6216 \u8bbe\u7f6e\u4e3a \nfalse\n \u7684\u8bdd\uff0c\u5c31\u9700\u8981\u5305\u542b \n-S\n \u6807\u8bc6\uff08flag\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a \nfalse\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nunicodeKeyboard\n\n\n\u4f7f\u7528 Unicode \u8f93\u5165\u6cd5\u3002 \u9ed8\u8ba4\u503c\u4e3a \nfalse\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nresetKeyboard\n\n\n\u5728\u8bbe\u5b9a\u4e86 \nunicodeKeyboard\n \u5173\u952e\u5b57\u7684 Unicode \u6d4b\u8bd5\u7ed3\u675f\u540e\uff0c\u91cd\u7f6e\u8f93\u5165\u6cd5\u5230\u539f\u6709\u72b6\u6001\u3002\u5982\u679c\u5355\u72ec\u4f7f\u7528\uff0c\u5c06\u4f1a\u88ab\u5ffd\u7565\u3002\u9ed8\u8ba4\u503c\u4e3a \nfalse\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nnoSign\n\n\n\u8df3\u8fc7\u68c0\u67e5\u548c\u5bf9\u5e94\u7528\u8fdb\u884c debug \u7b7e\u540d\u7684\u6b65\u9aa4\u3002\u4ec5\u9002\u7528\u4e8e UiAutomator\uff0c\u4e0d\u9002\u7528\u4e8e selendroid\u3002 \u9ed8\u8ba4\u503c\u4e3a \nfalse\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nignoreUnimportantViews\n\n\n\u8c03\u7528 uiautomator \u7684\u51fd\u6570 \nsetCompressedLayoutHierarchy()\n\u3002\u7531\u4e8e Accessibility \u547d\u4ee4\u5728\u5ffd\u7565\u90e8\u5206\u5143\u7d20\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u901f\u5ea6\u4f1a\u52a0\u5feb\uff0c\u8fd9\u4e2a\u5173\u952e\u5b57\u80fd\u52a0\u5feb\u6d4b\u8bd5\u6267\u884c\u7684\u901f\u5ea6\u3002\u88ab\u5ffd\u7565\u7684\u5143\u7d20\u5c06\u4e0d\u80fd\u591f\u88ab\u627e\u5230\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5173\u952e\u5b57\u540c\u65f6\u4e5f\u88ab\u5b9e\u73b0\u6210\u53ef\u4ee5\u968f\u65f6\u6539\u53d8\u7684 \n\u8bbe\u7f6e ( settings )\n\u3002 \u9ed8\u8ba4\u503c\u4e3a \nfalse\n\n\ntrue\n \u6216 \nfalse\n\n\n\n\n\n\ndisableAndroidWatchers\n\n\n\u7981\u7528 android \u76d1\u89c6\u5668\uff08watchers\uff09\u3002\u76d1\u89c6\u5668\u7528\u4e8e\u89c1\u8bc6\u5e94\u7528\u7a0b\u5e8f\u7684\u65e0\u54cd\u5e94\u72b6\u6001\uff08anr\uff09\u548c\u5d29\u6e83\uff08crash\uff09\uff0c\u7981\u7528\u4f1a\u964d\u4f4e Android \u8bbe\u5907\u6216\u6a21\u62df\u5668\u7684 CPU \u4f7f\u7528\u7387\u3002\u8be5 capability \u4ec5\u5728\u4f7f\u7528 UiAutomator \u65f6\u6709\u6548\uff0c\u4e0d\u9002\u7528\u4e8e selendroid\uff0c\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a \nfalse\n\u3002\n\n\ntrue\n \u6216 \nfalse\n\n\n\n\n\n\nchromeOptions\n\n\n\u5141\u8bb8\u5bf9 ChromeDriver \u4f20 chromeOptions \u7684\u53c2\u6570\u3002\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u9605 \nchromeOptions\n\n\nchromeOptions: {args: ['--disable-popup-blocking']}\n\n\n\n\n\n\nrecreateChromeDriverSessions\n\n\n\u5f53\u79fb\u9664\u975e ChromeDriver webview\u65f6\uff0c\u7ec8\u6b62\u6389 ChromeDriver \u7684 session\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a \nfalse\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nnativeWebScreenshot\n\n\n\u5728 web \u7684\u4e0a\u4e0b\u6587\uff08context\uff09\uff0c\u4f7f\u7528\u539f\u751f\uff08native\uff09\u7684\u65b9\u6cd5\u53bb\u622a\u56fe\uff0c\u800c\u4e0d\u662f\u7528\u8fc7\u4ee3\u7406\u7684 ChromeDriver\u3002\u9ed8\u8ba4\u503c\u4e3a \nfalse\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nandroidScreenshotPath\n\n\n\u5728\u8bbe\u5907\u4e2d\u622a\u56fe\u88ab\u4fdd\u5b58\u7684\u76ee\u5f55\u540d\u3002\u9ed8\u8ba4\u503c\u4e3a \n/data/local/tmp\n\n\n\u4f8b\u5982  \n/sdcard/screenshots/\n\n\n\n\n\n\nautoGrantPermissions\n\n\n\u8ba9Appium\u81ea\u52a8\u786e\u5b9a\u60a8\u7684\u5e94\u7528\u9700\u8981\u54ea\u4e9b\u6743\u9650\uff0c\u5e76\u5728\u5b89\u88c5\u65f6\u5c06\u5176\u6388\u4e88\u5e94\u7528\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a \nfalse\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\n\n\niOS \u72ec\u6709\n\n\n\n\n\n\n\n\n\n\n\u952e\n\n\n\u63cf\u8ff0\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\ncalendarFormat\n\n\n\uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09 \u4e3aiOS\u7684\u6a21\u62df\u5668\u8bbe\u7f6e\u65e5\u5386\u683c\u5f0f\n\n\n\u4f8b\u5982  \ngregorian\n\n\n\n\n\n\nbundleId\n\n\n\u88ab\u6d4b\u5e94\u7528\u7684 bundle ID \u3002\u7528\u4e8e\u5728\u771f\u5b9e\u8bbe\u5907\u4e2d\u542f\u52a8\u6d4b\u8bd5\uff0c\u4e5f\u7528\u4e8e\u4f7f\u7528\u5176\u4ed6\u9700\u8981 bundle ID \u7684\u5173\u952e\u5b57\u542f\u52a8\u6d4b\u8bd5\u3002\u5728\u4f7f\u7528 bundle ID \u5728\u771f\u5b9e\u8bbe\u5907\u4e0a\u6267\u884c\u6d4b\u8bd5\u65f6\uff0c\u4f60\u53ef\u4ee5\u4e0d\u63d0\u4f9b \napp\n \u5173\u952e\u5b57\uff0c\u4f46\u4f60\u5fc5\u987b\u63d0\u4f9b \nudid\n \u3002\n\n\n\u4f8b\u5982  \nio.appium.TestApp\n\n\n\n\n\n\nudid\n\n\n\u8fde\u63a5\u7684\u771f\u5b9e\u8bbe\u5907\u7684\u552f\u4e00\u8bbe\u5907\u7f16\u53f7 (Unique device identifier)\n\n\n\u4f8b\u5982  \n1ae203187fc012g\n\n\n\n\n\n\nlaunchTimeout\n\n\n\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c\u5728 Appium \u8fd0\u884c\u5931\u8d25\u4e4b\u524d\u8bbe\u7f6e\u4e00\u4e2a\u7b49\u5f85 instruments \u7684\u65f6\u95f4\n\n\n\u4f8b\u5982  \n20000\n\n\n\n\n\n\nlocationServicesEnabled\n\n\n\uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09\u5f3a\u5236\u6253\u5f00\u6216\u5173\u95ed\u5b9a\u4f4d\u670d\u52a1\u3002\u9ed8\u8ba4\u503c\u662f\u4fdd\u6301\u5f53\u524d\u6a21\u62df\u5668\u7684\u8bbe\u5b9a.\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nlocationServicesAuthorized\n\n\n\uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09\u901a\u8fc7\u4fee\u6539 plist \u6587\u4ef6\u8bbe\u5b9a\u662f\u5426\u5141\u8bb8\u5e94\u7528\u4f7f\u7528\u5b9a\u4f4d\u670d\u52a1\uff0c\u4ece\u800c\u907f\u514d\u5b9a\u4f4d\u670d\u52a1\u7684\u8b66\u544a\u51fa\u73b0\u3002\u9ed8\u8ba4\u503c\u662f\u4fdd\u6301\u5f53\u524d\u6a21\u62df\u5668\u7684\u8bbe\u5b9a\u3002\u8bf7\u6ce8\u610f\u5728\u4f7f\u7528\u8fd9\u4e2a\u5173\u952e\u5b57\u65f6\uff0c\u4f60\u540c\u65f6\u9700\u8981\u4f7f\u7528 \nbundleId\n \u5173\u952e\u5b57\u6765\u53d1\u9001\u4f60\u7684\u5e94\u7528\u7684 bundle ID\u3002\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nautoAcceptAlerts\n\n\n\u5f53\u8b66\u544a\u5f39\u51fa\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u81ea\u52a8\u53bb\u70b9\u63a5\u53d7\u3002\u5305\u62ec\u9690\u79c1\u8bbf\u95ee\u6743\u9650\u7684\u8b66\u544a\uff08\u4f8b\u5982 \u5b9a\u4f4d\uff0c\u8054\u7cfb\u4eba\uff0c\u7167\u7247\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a false\u3002\u4e0d\u652f\u6301\u57fa\u4e8e \nXCUITest\n \u7684\u6d4b\u8bd5\u3002\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nautoDismissAlerts\n\n\n\u5f53\u8b66\u544a\u5f39\u51fa\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u81ea\u52a8\u53bb\u70b9\u53d6\u6d88\u3002\u5305\u62ec\u9690\u79c1\u8bbf\u95ee\u6743\u9650\u7684\u8b66\u544a\uff08\u4f8b\u5982 \u5b9a\u4f4d\uff0c\u8054\u7cfb\u4eba\uff0c\u7167\u7247\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a false\u3002\u4e0d\u652f\u6301\u57fa\u4e8e \nXCUITest\n \u7684\u6d4b\u8bd5\u3002\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nnativeInstrumentsLib\n\n\n\u4f7f\u7528\u539f\u751f intruments \u5e93\uff08\u5373\u5173\u95ed instruments-without-delay\uff09\u3002\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nnativeWebTap\n\n\n\uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09\u5728Safari\u4e2d\u5141\u8bb8\u201c\u771f\u5b9e\u7684\"\uff0c\u975e\u57fa\u4e8e javascript \u7684 web \u70b9\u51fb (tap) \u3002 \u9ed8\u8ba4\u503c\uff1a\nfalse\n\u3002\u6ce8\u610f\uff1a\u53d6\u51b3\u4e8e viewport \u5927\u5c0f/\u6bd4\u4f8b\uff0c \u70b9\u51fb\u64cd\u4f5c\u4e0d\u4e00\u5b9a\u80fd\u7cbe\u786e\u5730\u70b9\u4e2d\u5bf9\u5e94\u7684\u5143\u7d20\u3002\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nsafariInitialUrl\n\n\n\uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09 (>= 8.1) \u521d\u59cb\u5316 safari \u7684\u65f6\u4f7f\u7528\u7684\u5730\u5740\u3002\u9ed8\u8ba4\u662f\u4e00\u4e2a\u672c\u5730\u7684\u6b22\u8fce\u9875\u9762\n\n\n\u4f8b\u5982  \nhttps://www.github.com\n\n\n\n\n\n\nsafariAllowPopups\n\n\n\uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09\u5141\u8bb8 javascript \u5728 Safari \u4e2d\u521b\u5efa\u65b0\u7a97\u53e3\u3002\u9ed8\u8ba4\u4fdd\u6301\u6a21\u62df\u5668\u5f53\u524d\u8bbe\u7f6e\u3002\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nsafariIgnoreFraudWarning\n\n\n\uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09\u963b\u6b62 Safari \u663e\u793a\u6b64\u7f51\u7ad9\u53ef\u80fd\u5b58\u5728\u98ce\u9669\u7684\u8b66\u544a\u3002\u9ed8\u8ba4\u4fdd\u6301\u6d4f\u89c8\u5668\u5f53\u524d\u8bbe\u7f6e\u3002\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nsafariOpenLinksInBackground\n\n\n\uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09Safari \u662f\u5426\u5141\u8bb8\u94fe\u63a5\u5728\u65b0\u7a97\u53e3\u6253\u5f00\u3002\u9ed8\u8ba4\u4fdd\u6301\u6d4f\u89c8\u5668\u5f53\u524d\u8bbe\u7f6e\u3002\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nkeepKeyChains\n\n\n\uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09\u5f53 Appium \u4f1a\u8bdd\u5f00\u59cb/\u7ed3\u675f\u65f6\u662f\u5426\u4fdd\u7559\u5b58\u653e\u5bc6\u7801\u5b58\u653e\u8bb0\u5f55 (keychains) \u5e93(Library)/\u94a5\u5319\u4e32(Keychains))\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nlocalizableStringsDir\n\n\n\u4ece\u54ea\u91cc\u67e5\u627e\u672c\u5730\u5316\u5b57\u7b26\u4e32\u3002\u9ed8\u8ba4\u503c\u4e3a \nen.lproj\n\n\nen.lproj\n\n\n\n\n\n\nprocessArguments\n\n\n\u901a\u8fc7 instruments \u4f20\u9012\u5230 AUT \u7684\u53c2\u6570\n\n\n\u4f8b\u5982  \n-myflag\n\n\n\n\n\n\ninterKeyDelay\n\n\n\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c\u6309\u4e0b\u6bcf\u4e00\u4e2a\u6309\u952e\u4e4b\u95f4\u7684\u5ef6\u8fdf\u65f6\u95f4\n\n\n\u4f8b\u5982  \n100\n\n\n\n\n\n\nshowIOSLog\n\n\n\u662f\u5426\u5728 Appium \u7684\u65e5\u5fd7\u4e2d\u663e\u793a\u8bbe\u5907\u7684\u65e5\u5fd7\u3002\u9ed8\u8ba4\u503c\u4e3a \nfalse\n\n\ntrue\n\u6216\nfalse\n\n\n\n\n\n\nsendKeyStrategy\n\n\n\u8f93\u5165\u6587\u5b57\u5230\u6587\u5b57\u6846\u7684\u7b56\u7565\u3002\u6a21\u62df\u5668\u9ed8\u8ba4\u503c\uff1a\noneByOne\n(\u4e00\u4e2a\u63a5\u7740\u4e00\u4e2a)\u3002\u771f\u5b9e\u8bbe\u5907\u9ed8\u8ba4\u503c\uff1a\ngrouped\n (\u5206\u7ec4\u8f93\u5165)\n\n\noneByOne\n, \ngrouped\n\u6216\nsetValue\n\n\n\n\n\n\nscreenshotWaitTimeout\n\n\n\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff0c\u751f\u6210\u5c4f\u5e55\u622a\u56fe\u7684\u6700\u957f\u7b49\u5f85\u65f6\u95f4\u3002\u9ed8\u8ba4\u503c\u4e3a\uff1a10\n\n\n\u4f8b\u5982  \n5\n\n\n\n\n\n\nwaitForAppScript\n\n\n\u7528\u4e8e\u5224\u65ad \"\u5e94\u7528\u662f\u5426\u88ab\u542f\u52a8\u201d \u7684 iOS \u81ea\u52a8\u5316\u811a\u672c\u4ee3\u7801\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u7b49\u5f85\u76f4\u5230\u9875\u9762\u5185\u5bb9\u975e\u7a7a\u3002\u7ed3\u679c\u5fc5\u987b\u662f\u5e03\u5c14\u7c7b\u578b\u3002\n\n\n\u4f8b\u5982  \ntrue;\n, \ntarget.elements().length > 0;\n, \n$.delay(5000); true;\n\n\n\n\n\n\nwebviewConnectRetries\n\n\n\u7528\u4e8e\u83b7\u53d6 webview \u5931\u8d25\u65f6\uff0c\u53d1\u9001\u8fde\u63a5\u4fe1\u606f\u5230\u8fdc\u7a0b\u8c03\u8bd5\u5668\u7684\u6b21\u6570\u3002\u9ed8\u8ba4\u6b21\u6570\u4e3a: \n8\n\n\n\u4f8b\u5982  \n12\n\n\n\n\n\n\nappName\n\n\n\u88ab\u6d4b\u5e94\u7528\u7684\u540d\u5b57\u3002 \u7528\u4e8e\u652f\u6301 iOS 9 \u4ee5\u4e0a\u7cfb\u7edf\u7684\u5e94\u7528\u7684\u81ea\u52a8\u5316\u3002\n\n\n\u4f8b\u5982  \nUICatalog\n\n\n\n\n\n\ncustomSSLCert\n\n\n(Sim/Emu-only) \u7ed9\u6a21\u62df\u5668\u6dfb\u52a0\u4e00\u4e2a SSL \u8bc1\u4e66\u3002\n\n\n\u4f8b\u5982  \n-----BEGIN CERTIFICATE-----MIIFWjCCBEKg...\n-----END CERTIFICATE-----\n\n\n\n\n\n\n\n\n\u4f7f\u7528 XCUITest(iOS \u72ec\u6709)\n\n\n\n\n\n\n\n\n\n\n\u952e\n\n\n\u63cf\u8ff0\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\nprocessArguments\n\n\n\u5c06\u4f1a\u4f20\u9001\u5230 WebDriverAgent \u7684\u8fdb\u7a0b\u53c2\u6570\u4e0e\u73af\u5883\n\n\n{ args: [\"a\", \"b\", \"c\"] , env: { \"a\": \"b\", \"c\": \"d\" } }\n \u6216 \n'{\"args\": [\"a\", \"b\", \"c\"], \"env\": { \"a\": \"b\", \"c\": \"d\" }}'\n\n\n\n\n\n\nwdaLocalPort\n\n\n\u5982\u679c\u8fd9\u4e2a\u503c\u88ab\u6307\u5b9a\u4e86\uff0cMac \u4e3b\u673a\u5c31\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u7aef\u53e3\uff0c\u901a\u8fc7 USB \u53d1\u9001\u6570\u636e\u5230 iOS \u8bbe\u5907\u4e2d\u3002\u9ed8\u8ba4\u7684\u7aef\u53e3\u4e0e iOS \u8bbe\u5907\u4e2d WDA \u7684\u7aef\u53e3\u53f7\u662f\u4e00\u81f4\u7684\u3002\n\n\n\u4f8b\u5982  \n8100\n\n\n\n\n\n\nshowXcodeLog\n\n\n\u662f\u5426\u663e\u793a\u8fd0\u884c\u6d4b\u8bd5\u65f6 Xcode \u7684\u8f93\u51fa\u65e5\u5fd7\uff0c\u5982\u679c\u503c\u8bbe\u7f6e\u4e3a \ntrue\n \uff0c\u5219\u4f1a\u5728\u542f\u52a8\u7684\u65f6\u5019\u4ea7\u751f\n\u5927\u91cf\n\u7684\u989d\u5916\u65e5\u5fd7\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a \nfalse\n\u3002\n\n\n\u4f8b\u5982  \ntrue\n\n\n\n\n\n\niosInstallPause\n\n\n\u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\u4e0e\u542f\u52a8 WebDriverAgent \u4e4b\u95f4\u505c\u6b62\u7684\u95f4\u9694\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\uff0c\u7279\u522b\u9002\u7528\u4e8e\u4f53\u79ef\u8f83\u5927\u7684\u5305\u3002\u9ed8\u8ba4\u662f\u8bbe\u7f6e\u4e3a \n0\n\u3002\n\n\n\u4f8b\u5982  \n8000\n\n\n\n\n\n\nxcodeConfigFile\n\n\n\u4e00\u4e2a\u53ef\u9009\u7684 Xcode \u53ef\u914d\u7f6e\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84\uff0c\u7528\u4e8e\u6307\u5b9a\u5728\u771f\u673a\u4e0a\u8fd0\u884c WebDriverAgent \u7684\u4e2a\u4eba\u8eab\u4efd\u6216\u8005\u56e2\u961f\u8eab\u4efd\u7684\u4ee3\u7801\u7b7e\u540d\u3002\n\n\n\u4f8b\u5982  \n/path/to/myconfig.xcconfig\n\n\n\n\n\n\nkeychainPath\n\n\n\u4ece\u7cfb\u7edf\u7684 keychain \u4e2d\u5bfc\u51fa\u79c1\u6709\u5f00\u53d1\u79d8\u94a5\u7684\u5b8c\u6574\u8def\u5f84\u3002\u5728\u771f\u673a\u6d4b\u8bd5\u65f6\u4e0e \nkeychainPassword\n \u914d\u5408\u4f7f\u7528\u3002\n\n\n\u4f8b\u5982  \n/path/to/MyPrivateKey.p12\n\n\n\n\n\n\nkeychainPassword\n\n\n\u5728 \nkeychainPath\n \u4e2d\u6307\u5b9a keychain \u7684\u89e3\u9501\u5bc6\u7801\u3002\n\n\n\u4f8b\u5982  \nsuper awesome password\n\n\n\n\n\n\nscaleFactor\n\n\n\u6a21\u62df\u5668\u7f29\u653e\u56e0\u5b50\u3002\u8fd9\u5bf9\u4e8e\u9ed8\u8ba4\u5206\u8fa8\u7387\u662f\u5927\u4e8e\u5b9e\u9645\u5206\u8fa8\u7684\u6a21\u62df\u5668\u6765\u8bf4\u975e\u5e38\u6709\u7528\u3002\u56e0\u6b64\uff0c\u4f60\u4e0d\u7528\u4e0a\u4e0b\u6ed1\u52a8\u6a21\u62df\u5668\u7684\u5c4f\u5e55\u5c31\u80fd\u770b\u5230\u6240\u6709\u6a21\u62df\u5668\u663e\u793a\u7684\u5185\u5bb9\u4e86\u3002\n\n\n\u53ef\u63a5\u53d7\u7684\u503c\u4e3a: \n'1.0', '0.75', '0.5', '0.33' \u548c '0.25'\n\u3002 \u8fd9\u4e9b\u503c\u90fd\u5e94\u8be5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\n\n\n\n\n\n\npreventWDAAttachments\n\n\n\u8bbe\u7f6e WebDriverAgent \u9879\u76ee\u4e2d\u7684 DerivedData \u6587\u4ef6\u5939\u7684\u6743\u9650\u4e3a\n\u4ec5\u53ef\u8bfb\n\u3002\u4e3a\u4e86\u9632\u6b62 XCTest \u6846\u67b6\u4ea7\u751f\u5927\u91cf\u65e0\u7528\u7684\u622a\u5c4f\u4e0e\u65e5\u5fd7\uff0c\u8be5\u8bbe\u7f6e\u662f\u975e\u5e38\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e0d\u53ef\u80fd\u901a\u8fc7 Apple \u63d0\u4f9b\u7684\u63a5\u53e3\u53bb\u5173\u95ed\u7684\u3002\n\n\n\u8bbe\u7f6e capabilitity \u4e3a \ntrue\n \u5c06\u4f1a\u8bbe\u7f6e Posix \u7684\u6587\u4ef6\u5939\u7684\u6743\u9650\u4e3a \n555\n\uff0c\u8bbe\u7f6e\u4e3a \nfalse\n \u5219\u4f1a\u5c06\u6743\u9650\u91cd\u7f6e\u56de \n755\n\n\n\n\n\n\nwebDriverAgentUrl\n\n\n\u82e5\u63d0\u4f9b\u4e86 URL\uff0cAppium \u5c06\u5728\u8fd9 URL \u4e0a\u8fde\u63a5\u73b0\u6709\u7684 WebDriverAgent \u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u91cd\u65b0\u542f\u52a8\u4e00\u4e2a\u3002\n\n\n\u4f8b\u5982  \nhttp://localhost:8100\n\n\n\n\n\n\nuseNewWDA\n\n\n\u82e5\u8bbe\u7f6e\u4e3a \ntrue\n\uff0c\u5219\u76f4\u63a5\u5378\u8f7d\u8bbe\u5907\u4e0a\u73b0\u5b58\u7684\u6240\u6709 WebDriverAgent \u5ba2\u6237\u7aef\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\uff0c\u8be5\u505a\u6cd5\u53ef\u4ee5\u63d0\u9ad8\u7a33\u5b9a\u6027\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a \nfalse\n\u3002\n\n\n\u4f8b\u5982  \ntrue\n\n\n\n\n\n\nwdaLaunchTimeout\n\n\n\u7b49\u5f85 WebDriverAgent \u53ef ping \u540c\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a 60000ms\u3002\n\n\n\u4f8b\u5982  \n30000\n\n\n\n\n\n\ncalendarAccessAuthorized\n\n\n\u82e5\u8bbe\u7f6e\u4e3a \ntrue\n\uff0c\u5219\u5141\u8bb8\u5728 iOS \u6a21\u62df\u5668\u4e0a\u8bbf\u95ee\u65e5\u5386\u3002\u82e5\u8bbe\u7f6e\u4e3a \nfalse\n\uff0c\u5219\u4e0d\u88ab\u5141\u8bb8\u3002\u5426\u5219\uff0c\u65e5\u5386\u7684 authorizationStatus \u4f1a\u4fdd\u6301\u4e0d\u53d8\u3002\n\n\n-\n\n\n\n\n\n\n\n\nYou.i \u5f15\u64ce\u72ec\u6709\n\n\n\n\n\n\n\n\n\n\n\u952e\n\n\n\u63cf\u8ff0\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\nyouiEngineAppAddress\n\n\n\u6b63\u5728\u8fd0\u884c\u7684\u5e94\u7528\u7684\u8bbe\u5907\u7684 IP \u5730\u5740\u3002\u4f7f\u7528 \nlocalhost\n \u4f5c\u4e3a\u6a21\u62df\u5730\u5740\u3002\u4f7f\u7528 \nlocalhost\n \u4f5c\u4e3a\u6a21\u62df\u5668\u5730\u5740\u3002\u4f7f\u7528\u8bbe\u5907\u7684 IP \u5730\u5740\u4f5c\u4e3a\u771f\u673a\u7684 IP\u3002\n\n\n\u4f8b\u5982  \nlocalhost\n \u6216 \n192.168.1.203\n\n\n\n\n\n\n\n\nWinAppDriver \u72ec\u6709\n\n\n\n\n\n\n\n\n\n\n\u952e\n\n\n\u63cf\u8ff0\n\n\n\u503c\n\n\n\n\n\n\n\n\n\n\nplatformName\n\n\n\u8fd0\u884c\u6d4b\u8bd5\u65f6\u6240\u5728\u7684\u5e73\u53f0\n\n\n\u4f8b\u5982  \nWindows\n\n\n\n\n\n\ndeviceName\n\n\n\u8fd0\u884c\u6d4b\u8bd5\u65f6\u6240\u4f7f\u7528\u8bbe\u5907\u7684\u540d\u5b57\n\n\n\u4f8b\u5982  \nWindowsPC\n\n\n\n\n\n\napp\n\n\n\u88ab\u6d4b windows \u5e94\u7528\u7684 appID \u6216\u88ab\u6d4b\u7684 .exe \u6587\u4ef6\u7684\u8def\u5f84\u3002 \u67e5\u9605\n\u8be5\u6587\u6863\n\u53ef\u4e86\u89e3\u66f4\u591a\u67e5\u627e appID \u7684\u8be6\u7ec6\u65b9\u6cd5\u3002\n\n\n\u4f8b\u5982  \nc24c8163-548e-4b84-a466-530178fc0580_scyf5npe3hv32!App\n\n\n\n\n\n\n\n\n\u672c\u6587\u7531 \nthanksdanny\n \u7ffb\u8bd1\u3002\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Caps"
        },
        {
            "location": "/cn/writing-running-appium/caps/#appium-capability",
            "text": "\u952e  \u63cf\u8ff0  \u503c      automationName  \u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u5f15\u64ce  Appium  \uff08\u9ed8\u8ba4\uff09\u6216\u8005  Selendroid    platformName  \u4f7f\u7528\u7684\u624b\u673a\u64cd\u4f5c\u7cfb\u7edf  iOS ,  Android , \u6216\u8005  FirefoxOS    platformVersion  \u624b\u673a\u64cd\u4f5c\u7cfb\u7edf\u7684\u7248\u672c  \u4f8b\u5982   7.1 ,  4.4    deviceName  \u4f7f\u7528\u7684\u624b\u673a\u6216\u6a21\u62df\u5668\u7c7b\u578b  iPhone Simulator ,  iPad Simulator ,  iPhone Retina 4-inch ,  Android Emulator ,  Galaxy S4 , \u7b49\u7b49.... \u5728 iOS \u4e0a\uff0c\u4f7f\u7528 Instruments \u7684  instruments -s devices  \u547d\u4ee4\u53ef\u8fd4\u56de\u4e00\u4e2a\u6709\u6548\u7684\u8bbe\u5907\u7684\u5217\u8868\u3002\u5728 Andorid \u4e0a\u867d\u7136\u8fd9\u4e2a\u53c2\u6570\u76ee\u524d\u5df2\u88ab\u5ffd\u7565\uff0c\u4f46\u4ecd\u7136\u9700\u8981\u6dfb\u52a0\u4e0a\u8be5\u53c2\u6570    app  \u672c\u5730\u7edd\u5bf9\u8def\u5f84_\u6216_\u8fdc\u7a0b http URL \u6240\u6307\u5411\u7684\u4e00\u4e2a\u5b89\u88c5\u5305\uff08 .ipa , .apk ,\u6216  .zip  \u6587\u4ef6\uff09\u3002Appium \u5c06\u5176\u5b89\u88c5\u5230\u5408\u9002\u7684\u8bbe\u5907\u4e0a\u3002\u8bf7\u6ce8\u610f\uff0c\u5982\u679c\u60a8\u6307\u5b9a\u4e86  appPackage  \u548c  appActivity  \u53c2\u6570\uff08\u89c1\u4e0b\u6587\uff09\uff0cAndroid \u5219\u4e0d\u9700\u8981\u6b64\u53c2\u6570\u4e86\u3002\u8be5\u53c2\u6570\u4e5f\u4e0e  browserName  \u4e0d\u517c\u5bb9\u3002  /abs/path/to/my.apk  \u6216  http://myapp.com/app.ipa    browserName  \u505a\u81ea\u52a8\u5316\u65f6\u4f7f\u7528\u7684\u6d4f\u89c8\u5668\u540d\u5b57\u3002\u5982\u679c\u662f\u4e00\u4e2a\u5e94\u7528\u5219\u53ea\u9700\u586b\u5199\u4e2a\u7a7a\u7684\u5b57\u7b26\u4e32  'Safari' \u5bf9\u5e94 iOS\uff0c'Chrome', 'Chromium', \u6216 'Browser' \u5219\u5bf9\u5e94 Android    newCommandTimeout  \u7528\u4e8e\u5ba2\u6237\u7aef\u5728\u9000\u51fa\u6216\u8005\u7ed3\u675f session \u4e4b\u524d\uff0cAppium \u7b49\u5f85\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u6761\u65b0\u547d\u4ee4\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff08\u79d2\u4e3a\u5355\u4f4d\uff09  \u4f8b\u5982   60    language  (Sim/Emu-only) \u4e3a\u6a21\u62df\u5668\u8bbe\u7f6e\u8bed\u8a00  \u4f8b\u5982   fr    locale  (Sim/Emu-only) \u4e3a\u6a21\u62df\u5668\u8bbe\u7f6e\u6240\u5728\u533a\u57df  \u4f8b\u5982   fr_CA    udid  \u8fde\u63a5\u771f\u673a\u7684\u552f\u4e00\u8bbe\u5907\u53f7  \u4f8b\u5982   1ae203187fc012g    orientation  (Sim/Emu-only) \u6a21\u62df\u5668\u5f53\u524d\u7684\u65b9\u5411  \u7ad6\u5c4f  \u6216  \u6a2a\u5c4f    autoWebview  \u76f4\u63a5\u8f6c\u6362\u5230 Webview \u4e0a\u4e0b\u6587\uff08context\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a  false  true ,  false    noReset  \u5728\u5f53\u524d session \u4e0b\u4e0d\u4f1a\u91cd\u7f6e\u5e94\u7528\u7684\u72b6\u6001\u3002\u9ed8\u8ba4\u503c\u4e3a  false  true ,  false    fullReset  (iOS)\u5220\u9664\u6240\u6709\u7684\u6a21\u62df\u5668\u6587\u4ef6\u5939\u3002(Android) \u8981\u6e05\u9664 app \u91cc\u7684\u6570\u636e\uff0c\u8bf7\u5c06\u5e94\u7528\u5378\u8f7d\u624d\u80fd\u8fbe\u5230\u91cd\u7f6e\u5e94\u7528\u7684\u6548\u679c\u3002\u5728 Android, \u5728 session \u5b8c\u6210\u4e4b\u540e\u4e5f\u4f1a\u5c06\u5e94\u7528\u5378\u8f7d\u6389\u3002\u9ed8\u8ba4\u503c\u4e3a  false  true ,  false",
            "title": "Appium \u670d\u52a1\u5668\u521d\u59cb\u5316\u53c2\u6570\uff08Capability\uff09"
        },
        {
            "location": "/cn/writing-running-appium/caps/#android",
            "text": "\u952e  \u63cf\u8ff0  \u503c      appActivity  Activity \u7684\u540d\u5b57\u662f\u6307\u4ece\u4f60\u7684\u5305\u4e2d\u6240\u8981\u542f\u52a8\u7684 Android acticity\u3002\u4ed6\u901a\u5e38\u9700\u8981\u518d\u524d\u9762\u6dfb\u52a0 .  \uff08\u4f8b\u5982  \u4f7f\u7528  .MainActivity  \u4ee3\u66ff  MainActivity \uff09  MainActivity ,  .Settings    appPackage  \u8fd0\u884c\u7684 Android \u5e94\u7528\u7684\u5305\u540d  com.example.android.myApp ,  com.android.settings    appWaitActivity  \u7528\u4e8e\u7b49\u5f85\u542f\u52a8\u7684 Android Activity \u540d\u79f0  SplashActivity    appWaitPackage  \u7528\u4e8e\u7b49\u5f85\u542f\u52a8\u7684 Android \u5e94\u7528\u7684\u5305  com.example.android.myApp ,  com.android.settings    appWaitDuration  \u7528\u4e8e\u7b49\u5f85 appWaitActivity \u542f\u52a8\u7684\u8d85\u65f6\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\uff08\u9ed8\u8ba4\u503c\u4e3a   20000 )  30000    deviceReadyTimeout  \u7528\u4e8e\u7b49\u5f85\u6a21\u62df\u5668\u6216\u771f\u673a\u51c6\u5907\u5c31\u7eea\u7684\u8d85\u65f6\u65f6\u95f4  5    androidCoverage  \u7528\u4e8e\u6267\u884c\u6d4b\u8bd5\u7684 instrumentation \u7c7b\u3002 \u4f20\u9001  -w  \u53c2\u6570\u5230\u5982\u4e0b\u547d\u4ee4  adb shell am instrument -e coverage true -w  com.my.Pkg/com.my.Pkg.instrumentation.MyInstrumentation    enablePerformanceLogging  \uff08\u4ec5\u9002\u7528\u4e8e Chrome \u4e0e webview\uff09\u5f00\u542f Chromedriver \u7684\u6027\u80fd\u65e5\u5fd7\u3002\uff08\u9ed8\u8ba4\u503c\u4e3a  false \uff09  true ,  false    androidDeviceReadyTimeout  \u7528\u4e8e\u7b49\u5f85\u8bbe\u5907\u5728\u542f\u52a8\u5e94\u7528\u540e\u51c6\u5907\u5c31\u7eea\u7684\u8d85\u65f6\u65f6\u95f4\u3002\u4ee5\u79d2\u4e3a\u5355\u4f4d\u3002  \u4f8b\u5982   30    androidInstallTimeout  \u7528\u4e8e\u7b49\u5f85\u5728\u8bbe\u5907\u4e2d\u5b89\u88c5 apk \u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a  90000  \u4f8b\u5982   90000    adbPort  \u7528\u6765\u8fde\u63a5 ADB \u670d\u52a1\u5668\u7684\u7aef\u53e3\uff08\u9ed8\u8ba4\u503c\u4e3a  5037 \uff09  5037    androidDeviceSocket  \u5f00\u53d1\u5de5\u5177\u7684 socket \u540d\u79f0\u3002\u53ea\u6709\u5728\u88ab\u6d4b\u5e94\u7528\u662f\u4e00\u4e2a\u4f7f\u7528 Chromium \u5185\u6838\u7684\u6d4f\u89c8\u5668\u65f6\u624d\u9700\u8981\u3002socket \u4f1a\u88ab\u6d4f\u89c8\u5668\u6253\u5f00\uff0c\u7136\u540e Chromedriver \u628a\u5b83\u4f5c\u4e3a\u5f00\u53d1\u8005\u5de5\u5177\u6765\u8fdb\u884c\u8fde\u63a5\u3002  \u4f8b\u5982   chrome_devtools_remote    avd  \u88ab\u542f\u52a8 avd \u7684\u540d\u5b57  \u4f8b\u5982   api19    avdLaunchTimeout  \u7528\u4e8e\u7b49\u5f85 avd \u542f\u52a8\u5e76\u8fde\u63a5 ADB \u7684\u8d85\u65f6\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\uff0c\u9ed8\u8ba4\u503c\u4e3a  120000 \u3002  300000    avdReadyTimeout  \u7528\u4e8e\u7b49\u5f85 avd \u5b8c\u6210\u542f\u52a8\u52a8\u753b\u7684\u8d85\u65f6\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\uff0c\u9ed8\u8ba4\u503c\u4e3a  120000 \u3002  300000    avdArgs  \u542f\u52a8 avd \u65f6\u4f7f\u7528\u7684\u989d\u5916\u53c2\u6570  \u4f8b\u5982   -netfast    useKeystore  \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 keystore \u7ed9 apk \u7b7e\u540d\uff0c\u9ed8\u8ba4\u503c\u4e3a  false  true \u6216 false    keystorePath  \u81ea\u5b9a\u4e49 keystore \u7684\u8def\u5f84, \u9ed8\u8ba4\u8def\u5f84\u4e3a ~/.android/debug.keystore  \u4f8b\u5982   /path/to.keystore    keystorePassword  \u81ea\u5b9a\u4e49 keystore \u7684\u5bc6\u7801  \u4f8b\u5982   foo    keyAlias  key \u7684\u522b\u540d  \u4f8b\u5982   androiddebugkey    keyPassword  key \u7684\u5bc6\u7801  \u4f8b\u5982   foo    chromedriverExecutable  webdriver \u53ef\u6267\u884c\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\uff08\u5982\u679c Chromium \u5185\u5d4c\u4e00\u4e2a\u81ea\u5df1\u63d0\u4f9b\u7684 webdriver\uff0c\u5219\u5e94\u4f7f\u7528\u4ed6\u53bb\u66ff\u6362\u6389 Appium \u81ea\u5e26\u7684 chromedriver\uff09  /abs/path/to/webdriver    autoWebviewTimeout  \u7528\u4e8e\u7b49\u5f85 Webview \u4e0a\u4e0b\u6587\uff08context\uff09\u6fc0\u6d3b\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a  2000  \u4f8b\u5982   4    intentAction  \u7528\u4e8e\u542f\u52a8 activity \u7684 intent action\uff08\u9ed8\u8ba4\u503c\u4e3a   android.intent.action.MAIN )  \u4f8b\u5982  android.intent.action.MAIN ,  android.intent.action.VIEW    intentCategory  \u7528\u4e8e\u542f\u52a8 activity \u7684 intent category\u3002\uff08\u9ed8\u8ba4\u503c\u4e3a   android.intent.category.LAUNCHER )  \u4f8b\u5982   android.intent.category.LAUNCHER ,  android.intent.category.APP_CONTACTS    intentFlags  \u7528\u4e8e\u542f\u52a8 activity \u7684\u6807\u8bc6\uff08flags\uff09\uff08\u9ed8\u8ba4\u503c\u4e3a   0x10200000 \uff09  \u4f8b\u5982   0x10200000    optionalIntentArguments  \u7528\u4e8e\u542f\u52a8 activity \u7684\u989d\u5916 intent \u53c2\u6570\u3002\u8bf7\u67e5\u770b  Intent \u53c2\u6570  \u4f8b\u5982   --esn <EXTRA_KEY> ,  --ez <EXTRA_KEY> <EXTRA_BOOLEAN_VALUE> , \u7b49\u7b49\u3002    dontStopAppOnReset  \u5728\u4f7f\u7528 adb \u542f\u52a8\u5e94\u7528\u4e4b\u524d\uff0c\u4e0d\u8981\u7ec8\u6b62\u88ab\u6d4b\u5e94\u7528\u7684\u8fdb\u7a0b\u3002\u5982\u679c\u88ab\u6d4b\u5e94\u7528\u662f\u88ab\u5176\u4ed6\u94a9\u5b50(anchor)\u5e94\u7528\u6240\u521b\u5efa\u7684\uff0c\u8bbe\u7f6e\u8be5\u53c2\u6570\u4e3a false \u540e\uff0c\u5c31\u5141\u8bb8\u94a9\u5b50(anchor)\u5e94\u7528\u7684\u8fdb\u7a0b\u5728\u4f7f\u7528 adb \u542f\u52a8\u88ab\u6d4b\u5e94\u7528\u671f\u95f4\u4ecd\u7136\u5b58\u5728\u3002\u6362\u800c\u8a00\u4e4b\uff0c\u8bbe\u7f6e  dontStopAppOnReset  \u4e3a  true  \u540e\uff0c\u6211\u4eec\u5728  adb shell am start  \u7684\u8c03\u7528\u4e2d\u4e0d\u9700\u8981\u5305\u542b  -S \u6807\u8bc6\uff08flag\uff09\u3002\u5ffd\u7565\u8be5 capability \u6216 \u8bbe\u7f6e\u4e3a  false  \u7684\u8bdd\uff0c\u5c31\u9700\u8981\u5305\u542b  -S  \u6807\u8bc6\uff08flag\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a  false  true \u6216 false    unicodeKeyboard  \u4f7f\u7528 Unicode \u8f93\u5165\u6cd5\u3002 \u9ed8\u8ba4\u503c\u4e3a  false  true \u6216 false    resetKeyboard  \u5728\u8bbe\u5b9a\u4e86  unicodeKeyboard  \u5173\u952e\u5b57\u7684 Unicode \u6d4b\u8bd5\u7ed3\u675f\u540e\uff0c\u91cd\u7f6e\u8f93\u5165\u6cd5\u5230\u539f\u6709\u72b6\u6001\u3002\u5982\u679c\u5355\u72ec\u4f7f\u7528\uff0c\u5c06\u4f1a\u88ab\u5ffd\u7565\u3002\u9ed8\u8ba4\u503c\u4e3a  false  true \u6216 false    noSign  \u8df3\u8fc7\u68c0\u67e5\u548c\u5bf9\u5e94\u7528\u8fdb\u884c debug \u7b7e\u540d\u7684\u6b65\u9aa4\u3002\u4ec5\u9002\u7528\u4e8e UiAutomator\uff0c\u4e0d\u9002\u7528\u4e8e selendroid\u3002 \u9ed8\u8ba4\u503c\u4e3a  false  true \u6216 false    ignoreUnimportantViews  \u8c03\u7528 uiautomator \u7684\u51fd\u6570  setCompressedLayoutHierarchy() \u3002\u7531\u4e8e Accessibility \u547d\u4ee4\u5728\u5ffd\u7565\u90e8\u5206\u5143\u7d20\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u901f\u5ea6\u4f1a\u52a0\u5feb\uff0c\u8fd9\u4e2a\u5173\u952e\u5b57\u80fd\u52a0\u5feb\u6d4b\u8bd5\u6267\u884c\u7684\u901f\u5ea6\u3002\u88ab\u5ffd\u7565\u7684\u5143\u7d20\u5c06\u4e0d\u80fd\u591f\u88ab\u627e\u5230\uff0c\u56e0\u6b64\u8fd9\u4e2a\u5173\u952e\u5b57\u540c\u65f6\u4e5f\u88ab\u5b9e\u73b0\u6210\u53ef\u4ee5\u968f\u65f6\u6539\u53d8\u7684  \u8bbe\u7f6e ( settings ) \u3002 \u9ed8\u8ba4\u503c\u4e3a  false  true  \u6216  false    disableAndroidWatchers  \u7981\u7528 android \u76d1\u89c6\u5668\uff08watchers\uff09\u3002\u76d1\u89c6\u5668\u7528\u4e8e\u89c1\u8bc6\u5e94\u7528\u7a0b\u5e8f\u7684\u65e0\u54cd\u5e94\u72b6\u6001\uff08anr\uff09\u548c\u5d29\u6e83\uff08crash\uff09\uff0c\u7981\u7528\u4f1a\u964d\u4f4e Android \u8bbe\u5907\u6216\u6a21\u62df\u5668\u7684 CPU \u4f7f\u7528\u7387\u3002\u8be5 capability \u4ec5\u5728\u4f7f\u7528 UiAutomator \u65f6\u6709\u6548\uff0c\u4e0d\u9002\u7528\u4e8e selendroid\uff0c\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a  false \u3002  true  \u6216  false    chromeOptions  \u5141\u8bb8\u5bf9 ChromeDriver \u4f20 chromeOptions \u7684\u53c2\u6570\u3002\u4e86\u89e3\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u9605  chromeOptions  chromeOptions: {args: ['--disable-popup-blocking']}    recreateChromeDriverSessions  \u5f53\u79fb\u9664\u975e ChromeDriver webview\u65f6\uff0c\u7ec8\u6b62\u6389 ChromeDriver \u7684 session\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a  false  true \u6216 false    nativeWebScreenshot  \u5728 web \u7684\u4e0a\u4e0b\u6587\uff08context\uff09\uff0c\u4f7f\u7528\u539f\u751f\uff08native\uff09\u7684\u65b9\u6cd5\u53bb\u622a\u56fe\uff0c\u800c\u4e0d\u662f\u7528\u8fc7\u4ee3\u7406\u7684 ChromeDriver\u3002\u9ed8\u8ba4\u503c\u4e3a  false  true \u6216 false    androidScreenshotPath  \u5728\u8bbe\u5907\u4e2d\u622a\u56fe\u88ab\u4fdd\u5b58\u7684\u76ee\u5f55\u540d\u3002\u9ed8\u8ba4\u503c\u4e3a  /data/local/tmp  \u4f8b\u5982   /sdcard/screenshots/    autoGrantPermissions  \u8ba9Appium\u81ea\u52a8\u786e\u5b9a\u60a8\u7684\u5e94\u7528\u9700\u8981\u54ea\u4e9b\u6743\u9650\uff0c\u5e76\u5728\u5b89\u88c5\u65f6\u5c06\u5176\u6388\u4e88\u5e94\u7528\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a  false  true \u6216 false",
            "title": "Android \u72ec\u6709"
        },
        {
            "location": "/cn/writing-running-appium/caps/#ios",
            "text": "\u952e  \u63cf\u8ff0  \u503c      calendarFormat  \uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09 \u4e3aiOS\u7684\u6a21\u62df\u5668\u8bbe\u7f6e\u65e5\u5386\u683c\u5f0f  \u4f8b\u5982   gregorian    bundleId  \u88ab\u6d4b\u5e94\u7528\u7684 bundle ID \u3002\u7528\u4e8e\u5728\u771f\u5b9e\u8bbe\u5907\u4e2d\u542f\u52a8\u6d4b\u8bd5\uff0c\u4e5f\u7528\u4e8e\u4f7f\u7528\u5176\u4ed6\u9700\u8981 bundle ID \u7684\u5173\u952e\u5b57\u542f\u52a8\u6d4b\u8bd5\u3002\u5728\u4f7f\u7528 bundle ID \u5728\u771f\u5b9e\u8bbe\u5907\u4e0a\u6267\u884c\u6d4b\u8bd5\u65f6\uff0c\u4f60\u53ef\u4ee5\u4e0d\u63d0\u4f9b  app  \u5173\u952e\u5b57\uff0c\u4f46\u4f60\u5fc5\u987b\u63d0\u4f9b  udid  \u3002  \u4f8b\u5982   io.appium.TestApp    udid  \u8fde\u63a5\u7684\u771f\u5b9e\u8bbe\u5907\u7684\u552f\u4e00\u8bbe\u5907\u7f16\u53f7 (Unique device identifier)  \u4f8b\u5982   1ae203187fc012g    launchTimeout  \u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c\u5728 Appium \u8fd0\u884c\u5931\u8d25\u4e4b\u524d\u8bbe\u7f6e\u4e00\u4e2a\u7b49\u5f85 instruments \u7684\u65f6\u95f4  \u4f8b\u5982   20000    locationServicesEnabled  \uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09\u5f3a\u5236\u6253\u5f00\u6216\u5173\u95ed\u5b9a\u4f4d\u670d\u52a1\u3002\u9ed8\u8ba4\u503c\u662f\u4fdd\u6301\u5f53\u524d\u6a21\u62df\u5668\u7684\u8bbe\u5b9a.  true \u6216 false    locationServicesAuthorized  \uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09\u901a\u8fc7\u4fee\u6539 plist \u6587\u4ef6\u8bbe\u5b9a\u662f\u5426\u5141\u8bb8\u5e94\u7528\u4f7f\u7528\u5b9a\u4f4d\u670d\u52a1\uff0c\u4ece\u800c\u907f\u514d\u5b9a\u4f4d\u670d\u52a1\u7684\u8b66\u544a\u51fa\u73b0\u3002\u9ed8\u8ba4\u503c\u662f\u4fdd\u6301\u5f53\u524d\u6a21\u62df\u5668\u7684\u8bbe\u5b9a\u3002\u8bf7\u6ce8\u610f\u5728\u4f7f\u7528\u8fd9\u4e2a\u5173\u952e\u5b57\u65f6\uff0c\u4f60\u540c\u65f6\u9700\u8981\u4f7f\u7528  bundleId  \u5173\u952e\u5b57\u6765\u53d1\u9001\u4f60\u7684\u5e94\u7528\u7684 bundle ID\u3002  true \u6216 false    autoAcceptAlerts  \u5f53\u8b66\u544a\u5f39\u51fa\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u81ea\u52a8\u53bb\u70b9\u63a5\u53d7\u3002\u5305\u62ec\u9690\u79c1\u8bbf\u95ee\u6743\u9650\u7684\u8b66\u544a\uff08\u4f8b\u5982 \u5b9a\u4f4d\uff0c\u8054\u7cfb\u4eba\uff0c\u7167\u7247\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a false\u3002\u4e0d\u652f\u6301\u57fa\u4e8e  XCUITest  \u7684\u6d4b\u8bd5\u3002  true \u6216 false    autoDismissAlerts  \u5f53\u8b66\u544a\u5f39\u51fa\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u81ea\u52a8\u53bb\u70b9\u53d6\u6d88\u3002\u5305\u62ec\u9690\u79c1\u8bbf\u95ee\u6743\u9650\u7684\u8b66\u544a\uff08\u4f8b\u5982 \u5b9a\u4f4d\uff0c\u8054\u7cfb\u4eba\uff0c\u7167\u7247\uff09\u3002\u9ed8\u8ba4\u503c\u4e3a false\u3002\u4e0d\u652f\u6301\u57fa\u4e8e  XCUITest  \u7684\u6d4b\u8bd5\u3002  true \u6216 false    nativeInstrumentsLib  \u4f7f\u7528\u539f\u751f intruments \u5e93\uff08\u5373\u5173\u95ed instruments-without-delay\uff09\u3002  true \u6216 false    nativeWebTap  \uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09\u5728Safari\u4e2d\u5141\u8bb8\u201c\u771f\u5b9e\u7684\"\uff0c\u975e\u57fa\u4e8e javascript \u7684 web \u70b9\u51fb (tap) \u3002 \u9ed8\u8ba4\u503c\uff1a false \u3002\u6ce8\u610f\uff1a\u53d6\u51b3\u4e8e viewport \u5927\u5c0f/\u6bd4\u4f8b\uff0c \u70b9\u51fb\u64cd\u4f5c\u4e0d\u4e00\u5b9a\u80fd\u7cbe\u786e\u5730\u70b9\u4e2d\u5bf9\u5e94\u7684\u5143\u7d20\u3002  true \u6216 false    safariInitialUrl  \uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09 (>= 8.1) \u521d\u59cb\u5316 safari \u7684\u65f6\u4f7f\u7528\u7684\u5730\u5740\u3002\u9ed8\u8ba4\u662f\u4e00\u4e2a\u672c\u5730\u7684\u6b22\u8fce\u9875\u9762  \u4f8b\u5982   https://www.github.com    safariAllowPopups  \uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09\u5141\u8bb8 javascript \u5728 Safari \u4e2d\u521b\u5efa\u65b0\u7a97\u53e3\u3002\u9ed8\u8ba4\u4fdd\u6301\u6a21\u62df\u5668\u5f53\u524d\u8bbe\u7f6e\u3002  true \u6216 false    safariIgnoreFraudWarning  \uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09\u963b\u6b62 Safari \u663e\u793a\u6b64\u7f51\u7ad9\u53ef\u80fd\u5b58\u5728\u98ce\u9669\u7684\u8b66\u544a\u3002\u9ed8\u8ba4\u4fdd\u6301\u6d4f\u89c8\u5668\u5f53\u524d\u8bbe\u7f6e\u3002  true \u6216 false    safariOpenLinksInBackground  \uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09Safari \u662f\u5426\u5141\u8bb8\u94fe\u63a5\u5728\u65b0\u7a97\u53e3\u6253\u5f00\u3002\u9ed8\u8ba4\u4fdd\u6301\u6d4f\u89c8\u5668\u5f53\u524d\u8bbe\u7f6e\u3002  true \u6216 false    keepKeyChains  \uff08\u4ec5\u652f\u6301\u6a21\u62df\u5668\uff09\u5f53 Appium \u4f1a\u8bdd\u5f00\u59cb/\u7ed3\u675f\u65f6\u662f\u5426\u4fdd\u7559\u5b58\u653e\u5bc6\u7801\u5b58\u653e\u8bb0\u5f55 (keychains) \u5e93(Library)/\u94a5\u5319\u4e32(Keychains))  true \u6216 false    localizableStringsDir  \u4ece\u54ea\u91cc\u67e5\u627e\u672c\u5730\u5316\u5b57\u7b26\u4e32\u3002\u9ed8\u8ba4\u503c\u4e3a  en.lproj  en.lproj    processArguments  \u901a\u8fc7 instruments \u4f20\u9012\u5230 AUT \u7684\u53c2\u6570  \u4f8b\u5982   -myflag    interKeyDelay  \u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff0c\u6309\u4e0b\u6bcf\u4e00\u4e2a\u6309\u952e\u4e4b\u95f4\u7684\u5ef6\u8fdf\u65f6\u95f4  \u4f8b\u5982   100    showIOSLog  \u662f\u5426\u5728 Appium \u7684\u65e5\u5fd7\u4e2d\u663e\u793a\u8bbe\u5907\u7684\u65e5\u5fd7\u3002\u9ed8\u8ba4\u503c\u4e3a  false  true \u6216 false    sendKeyStrategy  \u8f93\u5165\u6587\u5b57\u5230\u6587\u5b57\u6846\u7684\u7b56\u7565\u3002\u6a21\u62df\u5668\u9ed8\u8ba4\u503c\uff1a oneByOne (\u4e00\u4e2a\u63a5\u7740\u4e00\u4e2a)\u3002\u771f\u5b9e\u8bbe\u5907\u9ed8\u8ba4\u503c\uff1a grouped  (\u5206\u7ec4\u8f93\u5165)  oneByOne ,  grouped \u6216 setValue    screenshotWaitTimeout  \u4ee5\u79d2\u4e3a\u5355\u4f4d\uff0c\u751f\u6210\u5c4f\u5e55\u622a\u56fe\u7684\u6700\u957f\u7b49\u5f85\u65f6\u95f4\u3002\u9ed8\u8ba4\u503c\u4e3a\uff1a10  \u4f8b\u5982   5    waitForAppScript  \u7528\u4e8e\u5224\u65ad \"\u5e94\u7528\u662f\u5426\u88ab\u542f\u52a8\u201d \u7684 iOS \u81ea\u52a8\u5316\u811a\u672c\u4ee3\u7801\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7cfb\u7edf\u7b49\u5f85\u76f4\u5230\u9875\u9762\u5185\u5bb9\u975e\u7a7a\u3002\u7ed3\u679c\u5fc5\u987b\u662f\u5e03\u5c14\u7c7b\u578b\u3002  \u4f8b\u5982   true; ,  target.elements().length > 0; ,  $.delay(5000); true;    webviewConnectRetries  \u7528\u4e8e\u83b7\u53d6 webview \u5931\u8d25\u65f6\uff0c\u53d1\u9001\u8fde\u63a5\u4fe1\u606f\u5230\u8fdc\u7a0b\u8c03\u8bd5\u5668\u7684\u6b21\u6570\u3002\u9ed8\u8ba4\u6b21\u6570\u4e3a:  8  \u4f8b\u5982   12    appName  \u88ab\u6d4b\u5e94\u7528\u7684\u540d\u5b57\u3002 \u7528\u4e8e\u652f\u6301 iOS 9 \u4ee5\u4e0a\u7cfb\u7edf\u7684\u5e94\u7528\u7684\u81ea\u52a8\u5316\u3002  \u4f8b\u5982   UICatalog    customSSLCert  (Sim/Emu-only) \u7ed9\u6a21\u62df\u5668\u6dfb\u52a0\u4e00\u4e2a SSL \u8bc1\u4e66\u3002  \u4f8b\u5982   -----BEGIN CERTIFICATE-----MIIFWjCCBEKg... -----END CERTIFICATE-----",
            "title": "iOS \u72ec\u6709"
        },
        {
            "location": "/cn/writing-running-appium/caps/#xcuitestios",
            "text": "\u952e  \u63cf\u8ff0  \u503c      processArguments  \u5c06\u4f1a\u4f20\u9001\u5230 WebDriverAgent \u7684\u8fdb\u7a0b\u53c2\u6570\u4e0e\u73af\u5883  { args: [\"a\", \"b\", \"c\"] , env: { \"a\": \"b\", \"c\": \"d\" } }  \u6216  '{\"args\": [\"a\", \"b\", \"c\"], \"env\": { \"a\": \"b\", \"c\": \"d\" }}'    wdaLocalPort  \u5982\u679c\u8fd9\u4e2a\u503c\u88ab\u6307\u5b9a\u4e86\uff0cMac \u4e3b\u673a\u5c31\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u7aef\u53e3\uff0c\u901a\u8fc7 USB \u53d1\u9001\u6570\u636e\u5230 iOS \u8bbe\u5907\u4e2d\u3002\u9ed8\u8ba4\u7684\u7aef\u53e3\u4e0e iOS \u8bbe\u5907\u4e2d WDA \u7684\u7aef\u53e3\u53f7\u662f\u4e00\u81f4\u7684\u3002  \u4f8b\u5982   8100    showXcodeLog  \u662f\u5426\u663e\u793a\u8fd0\u884c\u6d4b\u8bd5\u65f6 Xcode \u7684\u8f93\u51fa\u65e5\u5fd7\uff0c\u5982\u679c\u503c\u8bbe\u7f6e\u4e3a  true  \uff0c\u5219\u4f1a\u5728\u542f\u52a8\u7684\u65f6\u5019\u4ea7\u751f \u5927\u91cf \u7684\u989d\u5916\u65e5\u5fd7\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a  false \u3002  \u4f8b\u5982   true    iosInstallPause  \u5b89\u88c5\u5e94\u7528\u7a0b\u5e8f\u4e0e\u542f\u52a8 WebDriverAgent \u4e4b\u95f4\u505c\u6b62\u7684\u95f4\u9694\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\uff0c\u7279\u522b\u9002\u7528\u4e8e\u4f53\u79ef\u8f83\u5927\u7684\u5305\u3002\u9ed8\u8ba4\u662f\u8bbe\u7f6e\u4e3a  0 \u3002  \u4f8b\u5982   8000    xcodeConfigFile  \u4e00\u4e2a\u53ef\u9009\u7684 Xcode \u53ef\u914d\u7f6e\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84\uff0c\u7528\u4e8e\u6307\u5b9a\u5728\u771f\u673a\u4e0a\u8fd0\u884c WebDriverAgent \u7684\u4e2a\u4eba\u8eab\u4efd\u6216\u8005\u56e2\u961f\u8eab\u4efd\u7684\u4ee3\u7801\u7b7e\u540d\u3002  \u4f8b\u5982   /path/to/myconfig.xcconfig    keychainPath  \u4ece\u7cfb\u7edf\u7684 keychain \u4e2d\u5bfc\u51fa\u79c1\u6709\u5f00\u53d1\u79d8\u94a5\u7684\u5b8c\u6574\u8def\u5f84\u3002\u5728\u771f\u673a\u6d4b\u8bd5\u65f6\u4e0e  keychainPassword  \u914d\u5408\u4f7f\u7528\u3002  \u4f8b\u5982   /path/to/MyPrivateKey.p12    keychainPassword  \u5728  keychainPath  \u4e2d\u6307\u5b9a keychain \u7684\u89e3\u9501\u5bc6\u7801\u3002  \u4f8b\u5982   super awesome password    scaleFactor  \u6a21\u62df\u5668\u7f29\u653e\u56e0\u5b50\u3002\u8fd9\u5bf9\u4e8e\u9ed8\u8ba4\u5206\u8fa8\u7387\u662f\u5927\u4e8e\u5b9e\u9645\u5206\u8fa8\u7684\u6a21\u62df\u5668\u6765\u8bf4\u975e\u5e38\u6709\u7528\u3002\u56e0\u6b64\uff0c\u4f60\u4e0d\u7528\u4e0a\u4e0b\u6ed1\u52a8\u6a21\u62df\u5668\u7684\u5c4f\u5e55\u5c31\u80fd\u770b\u5230\u6240\u6709\u6a21\u62df\u5668\u663e\u793a\u7684\u5185\u5bb9\u4e86\u3002  \u53ef\u63a5\u53d7\u7684\u503c\u4e3a:  '1.0', '0.75', '0.5', '0.33' \u548c '0.25' \u3002 \u8fd9\u4e9b\u503c\u90fd\u5e94\u8be5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32    preventWDAAttachments  \u8bbe\u7f6e WebDriverAgent \u9879\u76ee\u4e2d\u7684 DerivedData \u6587\u4ef6\u5939\u7684\u6743\u9650\u4e3a \u4ec5\u53ef\u8bfb \u3002\u4e3a\u4e86\u9632\u6b62 XCTest \u6846\u67b6\u4ea7\u751f\u5927\u91cf\u65e0\u7528\u7684\u622a\u5c4f\u4e0e\u65e5\u5fd7\uff0c\u8be5\u8bbe\u7f6e\u662f\u975e\u5e38\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u8fd9\u662f\u4e0d\u53ef\u80fd\u901a\u8fc7 Apple \u63d0\u4f9b\u7684\u63a5\u53e3\u53bb\u5173\u95ed\u7684\u3002  \u8bbe\u7f6e capabilitity \u4e3a  true  \u5c06\u4f1a\u8bbe\u7f6e Posix \u7684\u6587\u4ef6\u5939\u7684\u6743\u9650\u4e3a  555 \uff0c\u8bbe\u7f6e\u4e3a  false  \u5219\u4f1a\u5c06\u6743\u9650\u91cd\u7f6e\u56de  755    webDriverAgentUrl  \u82e5\u63d0\u4f9b\u4e86 URL\uff0cAppium \u5c06\u5728\u8fd9 URL \u4e0a\u8fde\u63a5\u73b0\u6709\u7684 WebDriverAgent \u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u91cd\u65b0\u542f\u52a8\u4e00\u4e2a\u3002  \u4f8b\u5982   http://localhost:8100    useNewWDA  \u82e5\u8bbe\u7f6e\u4e3a  true \uff0c\u5219\u76f4\u63a5\u5378\u8f7d\u8bbe\u5907\u4e0a\u73b0\u5b58\u7684\u6240\u6709 WebDriverAgent \u5ba2\u6237\u7aef\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\uff0c\u8be5\u505a\u6cd5\u53ef\u4ee5\u63d0\u9ad8\u7a33\u5b9a\u6027\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a  false \u3002  \u4f8b\u5982   true    wdaLaunchTimeout  \u7b49\u5f85 WebDriverAgent \u53ef ping \u540c\u7684\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a 60000ms\u3002  \u4f8b\u5982   30000    calendarAccessAuthorized  \u82e5\u8bbe\u7f6e\u4e3a  true \uff0c\u5219\u5141\u8bb8\u5728 iOS \u6a21\u62df\u5668\u4e0a\u8bbf\u95ee\u65e5\u5386\u3002\u82e5\u8bbe\u7f6e\u4e3a  false \uff0c\u5219\u4e0d\u88ab\u5141\u8bb8\u3002\u5426\u5219\uff0c\u65e5\u5386\u7684 authorizationStatus \u4f1a\u4fdd\u6301\u4e0d\u53d8\u3002  -",
            "title": "\u4f7f\u7528 XCUITest(iOS \u72ec\u6709)"
        },
        {
            "location": "/cn/writing-running-appium/caps/#youi",
            "text": "\u952e  \u63cf\u8ff0  \u503c      youiEngineAppAddress  \u6b63\u5728\u8fd0\u884c\u7684\u5e94\u7528\u7684\u8bbe\u5907\u7684 IP \u5730\u5740\u3002\u4f7f\u7528  localhost  \u4f5c\u4e3a\u6a21\u62df\u5730\u5740\u3002\u4f7f\u7528  localhost  \u4f5c\u4e3a\u6a21\u62df\u5668\u5730\u5740\u3002\u4f7f\u7528\u8bbe\u5907\u7684 IP \u5730\u5740\u4f5c\u4e3a\u771f\u673a\u7684 IP\u3002  \u4f8b\u5982   localhost  \u6216  192.168.1.203",
            "title": "You.i \u5f15\u64ce\u72ec\u6709"
        },
        {
            "location": "/cn/writing-running-appium/caps/#winappdriver",
            "text": "\u952e  \u63cf\u8ff0  \u503c      platformName  \u8fd0\u884c\u6d4b\u8bd5\u65f6\u6240\u5728\u7684\u5e73\u53f0  \u4f8b\u5982   Windows    deviceName  \u8fd0\u884c\u6d4b\u8bd5\u65f6\u6240\u4f7f\u7528\u8bbe\u5907\u7684\u540d\u5b57  \u4f8b\u5982   WindowsPC    app  \u88ab\u6d4b windows \u5e94\u7528\u7684 appID \u6216\u88ab\u6d4b\u7684 .exe \u6587\u4ef6\u7684\u8def\u5f84\u3002 \u67e5\u9605 \u8be5\u6587\u6863 \u53ef\u4e86\u89e3\u66f4\u591a\u67e5\u627e appID \u7684\u8be6\u7ec6\u65b9\u6cd5\u3002  \u4f8b\u5982   c24c8163-548e-4b84-a466-530178fc0580_scyf5npe3hv32!App     \u672c\u6587\u7531  thanksdanny  \u7ffb\u8bd1\u3002\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "WinAppDriver \u72ec\u6709"
        },
        {
            "location": "/cn/writing-running-appium/default-capabilities-arg/",
            "text": "--default-capabilities \u6807\u8bc6\n\n\nAppium 1.5 \u79fb\u9664\u4e86\u5927\u90e8\u5206\u65e7\u7248\u672c\u9057\u7559\u7684 CLI \u6807\u8bc6\uff1b\u5176\u4f59\u90e8\u5206\u53ef\u8f6c\u6362\u6210 JSON \u5e76\u6210\u4e3a \n--default-capabilities\n \u6807\u8bc6\u7684\u4e00\u90e8\u5206\u3002\n\u4e3e\u4e2a\u4f8b\u5b50:\n\n\n# \u672a\u5904\u7406\u7684 JSON \u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\n--default-capabilities '{\"app\": \"myapp.app\", \"deviceName\": \"iPhone Simulator\"}'\n# \u6216\u4e00\u4e2a JSON \u6587\u4ef6\u7684\u540d\u5b57\n--default-capabilities /path/to/file.json\n\n\n\n\nWindows \u7528\u6237\n\u5728\u547d\u4ee4\u884c\u4f20\u9012 JSON \u65f6\u8bb0\u5f97\u53bb\u6389\u5f15\u53f7\uff1a\n--default-capabilities \"{\\\"app\\\": \\\"myapp.app\\\"}\"\n\n\n\n\n\n\n\n\nFlag\n\n\nJSON key\n\n\n\n\n\n\n\n\n\n\n--keep-artifacts\n\n\nkeepArtifacts\n\n\n\n\n\n\n--platform-name\n\n\nplatformName\n\n\n\n\n\n\n--platform-version\n\n\nplatformVersion\n\n\n\n\n\n\n--automation-name\n\n\nautomationName\n\n\n\n\n\n\n--device-name\n\n\ndeviceName\n\n\n\n\n\n\n--browser-name\n\n\nbrowserName\n\n\n\n\n\n\n--app\n\n\napp\n\n\n\n\n\n\n--launch-timeout\n\n\nlaunchTimeout\n\n\n\n\n\n\n--language\n\n\nlanguage\n\n\n\n\n\n\n--locale\n\n\nlocale\n\n\n\n\n\n\n--udid\n\n\nudid\n\n\n\n\n\n\n--orientation\n\n\norientation\n\n\n\n\n\n\n--no-reset\n\n\nnoReset\n\n\n\n\n\n\n--full-reset\n\n\nfullReset\n\n\n\n\n\n\n--app-pkg\n\n\nappPackage\n\n\n\n\n\n\n--app-activity\n\n\nappActivity\n\n\n\n\n\n\n--app-wait-package\n\n\nappWaitPackage\n\n\n\n\n\n\n--app-wait-activity\n\n\nappWaitActivity\n\n\n\n\n\n\n--device-ready-timeout\n\n\ndeviceReadyTimeout\n\n\n\n\n\n\n--android-coverage\n\n\nandroidCoverage\n\n\n\n\n\n\n--avd\n\n\navd\n\n\n\n\n\n\n--avd-args\n\n\navdArgs\n\n\n\n\n\n\n--use-keystore\n\n\nuseKeystore\n\n\n\n\n\n\n--keystore-path\n\n\nkeystorePath\n\n\n\n\n\n\n--keystore-password\n\n\nkeystorePassword\n\n\n\n\n\n\n--key-alias\n\n\nkeyAlias\n\n\n\n\n\n\n--key-password\n\n\nkeyPassword\n\n\n\n\n\n\n--intent-action\n\n\nintentAction\n\n\n\n\n\n\n--intent-category\n\n\nintentCategory\n\n\n\n\n\n\n--intent-flags\n\n\nintentFlags\n\n\n\n\n\n\n--intent-args\n\n\noptionalIntentArguments\n\n\n\n\n\n\n--dont-stop-app-on-reset\n\n\ndontStopAppOnReset\n\n\n\n\n\n\n--calendar-format\n\n\ncalendarFormat\n\n\n\n\n\n\n--native-instruments-lib\n\n\nnativeInstrumentsLib\n\n\n\n\n\n\n--keep-keychains\n\n\nkeepKeyChains\n\n\n\n\n\n\n--localizable-strings-dir\n\n\nlocalizableStringsDir\n\n\n\n\n\n\n--show-ios-log\n\n\nshowIOSLog\n\n\n\n\n\n\n--reboot\n\n\nreboot\n\n\n\n\n\n\n\n\n\u672c\u6587\u7531 \nthanksdanny\n \u7ffb\u8bd1",
            "title": "Default capabilities arg"
        },
        {
            "location": "/cn/writing-running-appium/default-capabilities-arg/#-default-capabilities",
            "text": "Appium 1.5 \u79fb\u9664\u4e86\u5927\u90e8\u5206\u65e7\u7248\u672c\u9057\u7559\u7684 CLI \u6807\u8bc6\uff1b\u5176\u4f59\u90e8\u5206\u53ef\u8f6c\u6362\u6210 JSON \u5e76\u6210\u4e3a  --default-capabilities  \u6807\u8bc6\u7684\u4e00\u90e8\u5206\u3002\n\u4e3e\u4e2a\u4f8b\u5b50:  # \u672a\u5904\u7406\u7684 JSON \u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\n--default-capabilities '{\"app\": \"myapp.app\", \"deviceName\": \"iPhone Simulator\"}'\n# \u6216\u4e00\u4e2a JSON \u6587\u4ef6\u7684\u540d\u5b57\n--default-capabilities /path/to/file.json  Windows \u7528\u6237 \u5728\u547d\u4ee4\u884c\u4f20\u9012 JSON \u65f6\u8bb0\u5f97\u53bb\u6389\u5f15\u53f7\uff1a --default-capabilities \"{\\\"app\\\": \\\"myapp.app\\\"}\"     Flag  JSON key      --keep-artifacts  keepArtifacts    --platform-name  platformName    --platform-version  platformVersion    --automation-name  automationName    --device-name  deviceName    --browser-name  browserName    --app  app    --launch-timeout  launchTimeout    --language  language    --locale  locale    --udid  udid    --orientation  orientation    --no-reset  noReset    --full-reset  fullReset    --app-pkg  appPackage    --app-activity  appActivity    --app-wait-package  appWaitPackage    --app-wait-activity  appWaitActivity    --device-ready-timeout  deviceReadyTimeout    --android-coverage  androidCoverage    --avd  avd    --avd-args  avdArgs    --use-keystore  useKeystore    --keystore-path  keystorePath    --keystore-password  keystorePassword    --key-alias  keyAlias    --key-password  keyPassword    --intent-action  intentAction    --intent-category  intentCategory    --intent-flags  intentFlags    --intent-args  optionalIntentArguments    --dont-stop-app-on-reset  dontStopAppOnReset    --calendar-format  calendarFormat    --native-instruments-lib  nativeInstrumentsLib    --keep-keychains  keepKeyChains    --localizable-strings-dir  localizableStringsDir    --show-ios-log  showIOSLog    --reboot  reboot     \u672c\u6587\u7531  thanksdanny  \u7ffb\u8bd1",
            "title": "--default-capabilities \u6807\u8bc6"
        },
        {
            "location": "/cn/writing-running-appium/espresso/",
            "text": "Espresso\n\n\n\u5982\u679c\u8981\u4f7f\u7528 espresso \u9a71\u52a8\uff0c\u9700\u8981\u628a desired capabilities \u4e2d\u7684 \nautomationName\n \u914d\u7f6e\u4e3a 'espresso'\u3002Espresso \u9a71\u52a8\u548c UIAutomator \u7684\u4f7f\u7528\u65b9\u5f0f\u4e00\u81f4\u3002 (\u8b66\u544a\uff1aAppium \u7684 Espresso \u9a71\u52a8\u76ee\u524d\u8fd8\u5728 beta \u9636\u6bb5\uff0c\u53ea\u80fd\u4f53\u9a8c\u6027\u7684\u4f7f\u7528\u3002\u5b83\u7684 API \u8fd8\u4e0d\u5b8c\u6574\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u6b63\u5e38\u5de5\u4f5c\u3002\u5982\u679c\u6709\u95ee\u9898\uff0c\u8bf7\u7ed9\u6211\u4eec\u62a5 bug).",
            "title": "Espresso"
        },
        {
            "location": "/cn/writing-running-appium/espresso/#espresso",
            "text": "\u5982\u679c\u8981\u4f7f\u7528 espresso \u9a71\u52a8\uff0c\u9700\u8981\u628a desired capabilities \u4e2d\u7684  automationName  \u914d\u7f6e\u4e3a 'espresso'\u3002Espresso \u9a71\u52a8\u548c UIAutomator \u7684\u4f7f\u7528\u65b9\u5f0f\u4e00\u81f4\u3002 (\u8b66\u544a\uff1aAppium \u7684 Espresso \u9a71\u52a8\u76ee\u524d\u8fd8\u5728 beta \u9636\u6bb5\uff0c\u53ea\u80fd\u4f53\u9a8c\u6027\u7684\u4f7f\u7528\u3002\u5b83\u7684 API \u8fd8\u4e0d\u5b8c\u6574\uff0c\u4e5f\u4e0d\u80fd\u4fdd\u8bc1\u6b63\u5e38\u5de5\u4f5c\u3002\u5982\u679c\u6709\u95ee\u9898\uff0c\u8bf7\u7ed9\u6211\u4eec\u62a5 bug).",
            "title": "Espresso"
        },
        {
            "location": "/cn/writing-running-appium/finding-elements/",
            "text": "\u5143\u7d20\u7684\u5b9a\u4f4d\u4e0e\u4ea4\u4e92\n\n\nAppium \u652f\u6301 WebDriver \u5b9a\u4f4d\u7b56\u7565\u7684\u5b50\u96c6\uff1a\n\n\n\n\n\u901a\u8fc7 \"class\" \u67e5\u627e (\u4f8b\u5982\uff1a UI \u7ec4\u4ef6\u7684\u7c7b\u578b)\n\n\n\u901a\u8fc7 \"xpath\" \u67e5\u627e (\u4f8b\u5982\uff1a \u4e00\u4e2a\u5143\u7d20\u7684\u8def\u5f84\u4ee5\u62bd\u8c61\u7684\u65b9\u5f0f\u53bb\u8868\u8fbe\uff0c\u5177\u6709\u4e00\u5b9a\u7684\u7ea6\u675f)\n\n\n\n\nAppium \u8fd8\u989d\u5916\u652f\u6301\u90e8\u5206 \nMobile JSON Wire Protocol\n \u7684\u5b9a\u4f4d\u7b56\u7565\n\n\n\n\n-ios uiautomation\n: \u8be5\u5b57\u7b26\u4e32\u76f8\u5f53\u4e8e\u4f7f\u7528 \nUIAutomation \u5e93\n \u53bb\u9012\u5f52\u5730\u641c\u7d22\u5143\u7d20\uff08\u4ec5\u652f\u6301iOS 9.3 \u53ca\u4ee5\u4e0b\u7684\u7248\u672c\uff09\n\n\n-android uiautomator\n: \u8be5\u5b57\u7b26\u4e32\u76f8\u5f53\u4e8e\u4f7f\u7528 \nUiAutomator Api\n \u53bb\u9012\u5f52\u5730\u641c\u7d22\u5143\u7d20\uff08\u4ec5\u652f\u6301 Android\uff09\n\n\naccessibility id\n: \u8be5\u5b57\u7b26\u4e32\u76f8\u5f53\u4e8e\u5229\u7528\u539f\u751f\u7684\u53ef\u8bbf\u95ee\u6027\uff08Accessibility\uff09\u9009\u9879\uff0c\u4f7f\u7528 Id/Name \u53bb\u9012\u5f52\u5730\u641c\u7d22\u5143\u7d20\u3002\n\n\n\n\n\u5df2\u77e5\u95ee\u9898\n\n\n\u5728\u6211\u4eec\u8981\u4e0e table cell \u5143\u7d20\u8fdb\u884c\u4ea4\u4e92\u4e4b\u524d\uff0c\u5143\u7d20\u4f1a\u53d8\u6210\u65e0\u6548\u3002\u8fd9\u662f\u5df2\u77e5\u7684\u95ee\u9898\uff0c\u6211\u4eec\u4f1a\u5c3d\u5feb\u4fee\u590d\u3002\n\n\n\u4f7f\u7528 Appium Inspector \u53bb\u5b9a\u4f4d\u5143\u7d20\n\n\n\u8fd9\u91cc\u4e4b\u524d\u7684\u6587\u6863\u90fd\u5df2\u7ecf deprecated \u4e86\u3002\u6700\u65b0\u7684\u8bf7\u53c2\u89c1\uff1a\nThe Inspector\n\n\n\u672c\u6587\u7531 \nthanksdanny\n \u7ffb\u8bd1\u3002\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Finding elements"
        },
        {
            "location": "/cn/writing-running-appium/finding-elements/#_1",
            "text": "Appium \u652f\u6301 WebDriver \u5b9a\u4f4d\u7b56\u7565\u7684\u5b50\u96c6\uff1a   \u901a\u8fc7 \"class\" \u67e5\u627e (\u4f8b\u5982\uff1a UI \u7ec4\u4ef6\u7684\u7c7b\u578b)  \u901a\u8fc7 \"xpath\" \u67e5\u627e (\u4f8b\u5982\uff1a \u4e00\u4e2a\u5143\u7d20\u7684\u8def\u5f84\u4ee5\u62bd\u8c61\u7684\u65b9\u5f0f\u53bb\u8868\u8fbe\uff0c\u5177\u6709\u4e00\u5b9a\u7684\u7ea6\u675f)   Appium \u8fd8\u989d\u5916\u652f\u6301\u90e8\u5206  Mobile JSON Wire Protocol  \u7684\u5b9a\u4f4d\u7b56\u7565   -ios uiautomation : \u8be5\u5b57\u7b26\u4e32\u76f8\u5f53\u4e8e\u4f7f\u7528  UIAutomation \u5e93  \u53bb\u9012\u5f52\u5730\u641c\u7d22\u5143\u7d20\uff08\u4ec5\u652f\u6301iOS 9.3 \u53ca\u4ee5\u4e0b\u7684\u7248\u672c\uff09  -android uiautomator : \u8be5\u5b57\u7b26\u4e32\u76f8\u5f53\u4e8e\u4f7f\u7528  UiAutomator Api  \u53bb\u9012\u5f52\u5730\u641c\u7d22\u5143\u7d20\uff08\u4ec5\u652f\u6301 Android\uff09  accessibility id : \u8be5\u5b57\u7b26\u4e32\u76f8\u5f53\u4e8e\u5229\u7528\u539f\u751f\u7684\u53ef\u8bbf\u95ee\u6027\uff08Accessibility\uff09\u9009\u9879\uff0c\u4f7f\u7528 Id/Name \u53bb\u9012\u5f52\u5730\u641c\u7d22\u5143\u7d20\u3002",
            "title": "\u5143\u7d20\u7684\u5b9a\u4f4d\u4e0e\u4ea4\u4e92"
        },
        {
            "location": "/cn/writing-running-appium/finding-elements/#_2",
            "text": "\u5728\u6211\u4eec\u8981\u4e0e table cell \u5143\u7d20\u8fdb\u884c\u4ea4\u4e92\u4e4b\u524d\uff0c\u5143\u7d20\u4f1a\u53d8\u6210\u65e0\u6548\u3002\u8fd9\u662f\u5df2\u77e5\u7684\u95ee\u9898\uff0c\u6211\u4eec\u4f1a\u5c3d\u5feb\u4fee\u590d\u3002",
            "title": "\u5df2\u77e5\u95ee\u9898"
        },
        {
            "location": "/cn/writing-running-appium/finding-elements/#appium-inspector",
            "text": "\u8fd9\u91cc\u4e4b\u524d\u7684\u6587\u6863\u90fd\u5df2\u7ecf deprecated \u4e86\u3002\u6700\u65b0\u7684\u8bf7\u53c2\u89c1\uff1a The Inspector  \u672c\u6587\u7531  thanksdanny  \u7ffb\u8bd1\u3002\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u4f7f\u7528 Appium Inspector \u53bb\u5b9a\u4f4d\u5143\u7d20"
        },
        {
            "location": "/cn/writing-running-appium/ios-touch-id/",
            "text": "Touch ID\n\n\n(\u53c2\u8003 https://github.com/appium/appium-xcuitest-driver/blob/master/docs/touch-id.md)",
            "title": "Ios touch id"
        },
        {
            "location": "/cn/writing-running-appium/ios-touch-id/#touch-id",
            "text": "(\u53c2\u8003 https://github.com/appium/appium-xcuitest-driver/blob/master/docs/touch-id.md)",
            "title": "Touch ID"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/",
            "text": "\u4f7f\u7528 WebDriverAgent/XCTest Backend \u8fdb\u884ciOS\u81ea\u52a8\u5316\u624b\u52bf\u64cd\u4f5c\n\n\n\u5f88\u53ef\u60dc\uff0c\u82f9\u679c\u5b98\u65b9\u7684 XCTest \u6846\u67b6\u672c\u8eab\u5e76\u4e0d\u652f\u6301 TouchAction \u63a5\u53e3\u5b9e\u73b0\u7684 W3C \u6807\u51c6\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cXCTest \u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u624b\u52bf\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u662f iOS \u5e73\u53f0\u72ec\u6709\u7684\u3002\u4f60\u53ef\u4ee5\u5728 1.6.4-beta \u7248\u672c\u7684 Appium \u4e2d\u5f00\u59cb\u4f7f\u7528\u8fd9\u4e9b\u624b\u52bf\u64cd\u4f5c\u3002\n\n\n\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\u76ee\u524dXCTest\u548cWDA\u6b63\u5728\u4e0d\u65ad\u4f18\u5316\u6539\u53d8\u7684\u9636\u6bb5\uff0c\u8fd9\u610f\u5473\u7740\u6240\u6709 \nmobile: *\n \u7684\u547d\u4ee4\u53ef\u80fd\u4f1a\u5728\u6ca1\u4efb\u4f55\u901a\u77e5\u7684\u60c5\u51b5\u4e0b\u5c31\u88ab\u8c03\u6574\u66f4\u6539\u3002\n\n\nmobile: swipe\n\n\n\u8fd9\u4e2a\u624b\u52bf\u662f\u5728\u6307\u5b9a\u7684\u5c4f\u5e55\u4e0a\u7684\u63a7\u4ef6\u6216App\u7684\u63a7\u4ef6\u4e0a\u6267\u884c\u201c\u6ed1\u52a8\u201d\u64cd\u4f5c\uff0c\u4e00\u822c\u662f\u9488\u5bf9\u6574\u4e2a\u5c4f\u5e55\u3002\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u652f\u6301\u901a\u8fc7\u5750\u6807\u6765\u64cd\u4f5c\uff0c\u5e76\u4e14\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u6a21\u62df\u5355\u4e2a\u624b\u6307\u6ed1\u52a8\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5bf9\u4e8e\u8bf8\u5982\u76f8\u518c\u5206\u9875\u3001\u5207\u6362\u89c6\u56fe\u7b49\u60c5\u51b5\u53ef\u80fd\u4f1a\u53d1\u6325\u6bd4\u8f83\u5927\u7684\u4f5c\u7528\u3002\u66f4\u590d\u6742\u7684\u573a\u666f\u53ef\u80fd\u9700\u8981\u7528\u5230\nmobile:dragFromToForDuration\n\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u652f\u6301\u4f20\u5750\u6807\uff08coordinates \uff09\u548c\u6ed1\u52a8\u6301\u7eed\u65f6\u95f4\uff08duration\uff09\u3002\n\n\n\u652f\u6301\u53c2\u6570\n\n\n\n\ndirection\n: 'up', 'down', 'left' or 'right'.  \u8fd94\u4e2a\u53c2\u6570\u662f\u56fa\u5b9a\u7684\u3002\n\n\nelement\n: \u9700\u8981\u6ed1\u52a8\u7684\u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8be5\u53c2\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u4f7f\u7528App\u7684\u63a7\u4ef6\u4f5c\u4e3a\u66ff\u4ee3\u3002\n\n\n\n\n\u7528\u6cd5\u793a\u4f8b\n\n\n// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> params = new HashMap<>();\nscrollObject.put(\"direction\", \"down\");\nscrollObject.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: swipe\", params);\n\n\n\n\nmobile: scroll\n\n\n\u6eda\u52a8\u5143\u7d20\u6216\u6574\u4e2a\u5c4f\u5e55\u3002\u652f\u6301\u4e0d\u540c\u7684\u6eda\u52a8\u7b56\u7565\u3002\u8be5\u65b9\u6cd5\u63d0\u4f9b\u4e864\u4e2a\u53ef\u9009\u62e9\u6ed1\u52a8\u7b56\u7565\uff1a\u6309\u7167\u987a\u5e8f\u6709\u201cname\u201d\uff0c\u201cdirection\u201d\uff0c\u201cpredicateString\u201d\u6216\u201ctoVisible\u201d\u3002\u6240\u6709\u7684\u6ed1\u52a8\u7b56\u7565\u90fd\u662f\u6392\u4ed6\u6027\u7684\uff0c\u4e00\u6b21\u6ed1\u52a8\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a\u7b56\u7565\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\nmobile:scroll\n\u6765\u5bf9\u8868\u683c\u4e2d\u6216\u8005\u96c6\u5408\u89c6\u56fe\u4e2d\u7684\u67d0\u4e2a\u5df2\u77e5\u63a7\u4ef6\u8fdb\u884c\u7cbe\u786e\u7684\u6eda\u52a8\u64cd\u4f5c\u3002\u7136\u800c\u76ee\u524d\u6709\u4e00\u4e2a\u5df2\u77e5\u7684\u5c40\u9650\u95ee\u9898\uff1a\u5982\u679c\u9700\u8981\u5728\u7236\u5bb9\u5668\u4e0a\u6267\u884c\u592a\u591a\u7684\u6eda\u52a8\u624b\u52bf\u6765\u8fbe\u5230\u5fc5\u8981\u7684\u5b50\u5143\u7d20\uff08\u5176\u4e2d\u51e0\u5341\u4e2a\uff09\uff0c\u5219\u65b9\u6cd5\u8c03\u7528\u53ef\u80fd\u4f1a\u5931\u8d25\u3002\n\n\n\u652f\u6301\u53c2\u6570\n\n\n\n\nelement\n: \u9700\u8981\u6eda\u52a8\u7684\u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8be5\u53c2\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u4f7f\u7528App\u7684\u63a7\u4ef6\u4f5c\u4e3a\u66ff\u4ee3\u3002\n\n\nname\n: \u9700\u8981\u6267\u884c\u6eda\u52a8\u7684\u5b50\u63a7\u4ef6\u7684\naccessibility id\n\u3002\n \u5c06\npredicateString\n\u53c2\u6570\u8bbe\u7f6e\u4e3a\n\u201cname == accessibilityId\u201d\n\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u7ed3\u679c\u3002\u5982\u679c\nelement\n\u4e0d\u662f\u5bb9\u5668\uff0c\u5219\u4e0d\u8d77\u4f5c\u7528\u3002\n\n\ndirection\n:  'up', 'down', 'left' or 'right'. \u8be5\u53c2\u6570\u4e0e\nswipe\n\u4e2d\u7684\u6bd4\uff0c\u5dee\u522b\u5728\u4e8e\nscroll\n\u4f1a\u5c1d\u8bd5\u5c06\u5f53\u524d\u754c\u9762\u5b8c\u5168\u79fb\u52a8\u5230\u4e0b\u4e00\u9875\u3002\uff08\npage\n\u4e00\u8bcd\u8868\u793a\u5355\u4e2a\u8bbe\u5907\u5c4f\u5e55\u4e2d\u7684\u6240\u6709\u5185\u5bb9\uff09\n\n\npredicateString\n: \u9700\u8981\u88ab\u6267\u884c\u6eda\u52a8\u64cd\u4f5c\u7684\u5b50\u63a7\u4ef6\u7684NSPredicate\u5b9a\u4f4d\u5668\u3002\u5982\u679c\u63a7\u4ef6\u4e0d\u662f\u5bb9\u5668\uff0c\u5219\u4e0d\u8d77\u4f5c\u7528\u3002\n\n\ntoVisible\n: \u5e03\u5c14\u7c7b\u578b\u7684\u53c2\u6570\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a\ntrue\n\uff0c\u5219\u8868\u793a\u8981\u6c42\u6eda\u52a8\u5230\u7236\u63a7\u4ef6\u4e2d\u7684\u7b2c\u4e00\u4e2a\u53ef\u89c1\u5230\u7684\u5b50\u63a7\u4ef6\u3002\u5982\u679c\nelement\n\u672a\u8bbe\u7f6e\uff0c\u5219\u4e0d\u751f\u6548\u3002\n\n\n\n\n\u7528\u6cd5\u793a\u4f8b\n\n\n# Python\ndriver.execute_script('mobile: scroll', {'direction': 'down'});\n\n\n\n\nmobile: pinch\n\n\n\u5728\u7ed9\u5b9a\u7684\u63a7\u4ef6\u6216\u5e94\u7528\u7a0b\u5e8f\u63a7\u4ef6\u4e0a\u6267\u884c\u634f\u5408\u624b\u52bf\u3002\n\n\n\u652f\u6301\u53c2\u6570\n\n\n\n\nelement\n: \u9700\u8981\u634f\u5408\u7684\u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8be5\u53c2\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u4f7f\u7528App\u7684\u63a7\u4ef6\u4f5c\u4e3a\u66ff\u4ee3\u3002\n\n\nscale\n: \u6d6e\u52a8\u578b\u5939\u70b9\u5c3a\u5ea6\u3002\u4f7f\u75280\u548c1\u4e4b\u95f4\u7684\u6bd4\u4f8b\u6765\u201c\u634f\u7d27\u201d\u6216\u7f29\u5c0f\uff0c\u5927\u4e8e1\u7684\u6bd4\u4f8b\u201c\u6491\u5f00\u201d\u6216\u653e\u5927\u3002\u5f3a\u5236\u53c2\u6570\n\n\nvelocity\n: \u6bcf\u79d2\u7f29\u653e\u901f\u5ea6\uff08\u6d6e\u70b9\u503c\uff09\u3002\u5f3a\u5236\u53c2\u6570\n\n\n\n\n\u7528\u6cd5\u793a\u4f8b\n\n\n# Ruby\nexecute_script 'mobile: pinch', scale: 0.5, velocity: 1.1, element: element.ref\n\n\n\n\nmobile: doubleTap\n\n\n\u5728\u6307\u5b9a\u63a7\u4ef6\u4e0a\u6216\u5c4f\u5e55\u4e0a\u6267\u884c\u53cc\u51fb\u624b\u52bf\u3002\n\n\n\u652f\u6301\u53c2\u6570\n\n\n\n\nelement\n: \u9700\u8981\u53cc\u51fb\u7684\u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8be5\u53c2\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u4f7f\u7528App\u7684\u63a7\u4ef6\u4f5c\u4e3a\u66ff\u4ee3\u3002\n\n\nx\n: \u5c4f\u5e55x\u8f74\u5750\u6807\u70b9\uff0c\u6d6e\u70b9\u578b. \u4ec5\u5f53\nelement\n\u672a\u8bbe\u7f6e\u65f6\u624d\u662f\u5f3a\u5236\u53c2\u6570\n\n\ny\n: \u5c4f\u5e55y\u8f74\u5750\u6807\u70b9\uff0c\u6d6e\u70b9\u578b. \u4ec5\u5f53\nelement\n\u672a\u8bbe\u7f6e\u65f6\u624d\u662f\u5f3a\u5236\u53c2\u6570\n\n\n\n\n\u7528\u6cd5\u793a\u4f8b\n\n\n// javascript\ndriver.execute('mobile: doubleTap', {element: element.value.ELEMENT});\n\n\n\n\nmobile: touchAndHold\n\n\n\u5728\u6307\u5b9a\u63a7\u4ef6\u4e0a\u6216\u5c4f\u5e55\u4e0a\u957f\u6309\u7684\u624b\u52bf\u64cd\u4f5c\u3002\n\n\n\u652f\u6301\u53c2\u6570\n\n\n\n\nelement\n: \u9700\u8981\u957f\u6309\u7684\u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8be5\u53c2\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u4f7f\u7528App\u7684\u63a7\u4ef6\u4f5c\u4e3a\u66ff\u4ee3\u3002\n\n\nduration\n: \u957f\u6309\u7684\u6301\u7eed\u65f6\u95f4\uff08\u79d2\uff09\uff0c\u6d6e\u70b9\u578b\u3002\u5f3a\u5236\u6027\u53c2\u6570\n\n\nx\n: \u5c4f\u5e55x\u8f74\u5750\u6807\u70b9\uff0c\u6d6e\u70b9\u578b. \u4ec5\u5f53\nelement\n\u672a\u8bbe\u7f6e\u65f6\u624d\u662f\u5f3a\u5236\u53c2\u6570\n\n\ny\n: \u5c4f\u5e55y\u8f74\u5750\u6807\u70b9\uff0c\u6d6e\u70b9\u578b. \u4ec5\u5f53\nelement\n\u672a\u8bbe\u7f6e\u65f6\u624d\u662f\u5f3a\u5236\u53c2\u6570\n\n\n\n\n\u7528\u6cd5\u793a\u4f8b\n\n\n// c#\nDictionary<string, object> tfLongTap = new Dictionary<string, object>();\ntfLongTap.Add(\"element\", element.Id);\ntfLongTap.Add(\"duration\", 2.0);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: touchAndHold\", tfLongTap);\n\n\n\n\nmobile: twoFingerTap\n\n\n\u5728\u7ed9\u5b9a\u5143\u7d20\u6216\u5e94\u7528\u7a0b\u5e8f\u5143\u7d20\u4e0a\u6267\u884c\u4e24\u4e2a\u624b\u6307\u70b9\u51fb\u624b\u52bf\u3002\n\n\n\u652f\u6301\u53c2\u6570\n\n\n\n\nelement\n: \u9700\u8981\u4e24\u53ea\u624b\u6307\u64cd\u4f5c\u7684\u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8be5\u53c2\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u4f7f\u7528App\u7684\u63a7\u4ef6\u4f5c\u4e3a\u66ff\u4ee3\u3002\n\n\n\n\n\u7528\u6cd5\u793a\u4f8b\n\n\n// c#\nDictionary<string, object> tfTap = new Dictionary<string, object>();\ntfTap.Add(\"element\", element.Id);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: twoFingerTap\", tfTap);\n\n\n\n\nmobile: tap\n\n\n\u5728\u6307\u5b9a\u63a7\u4ef6\u6216\u5c4f\u5e55\u4e0a\u7684\u5750\u6807\u6267\u884c\u70b9\u51fb\u624b\u52bf\u3002\n\n\n\u652f\u6301\u53c2\u6570\n\n\n\n\nelement\n: \u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002 \u5982\u679c\u8bbe\u7f6e \u4e86\nelement\n\u53c2\u6570\uff0c\u5219\nx\n\u3001\ny\n\u4ee3\u8868\u7684\u662f\u4ee5\u5f53\u524d\nelement\n\u4e3a\u8fb9\u754c\u7684xy\u8f74\u3002\u82e5\u672a\u8bbe\u7f6e\uff0c\u5219\nx\n,\ny\n\u4ee3\u8868\u7684\u662f\u4ee5\u624b\u673a\u5c4f\u5e55\u4e3a\u8fb9\u754c\u3002\n\n\nx\n: x\u8f74\u5750\u6807\uff0c\u7c7b\u578b\u4e3afloat\u3002\u5f3a\u5236\u53c2\u6570\n\n\ny\n: y\u8f74\u5750\u6807\uff0c\u7c7b\u578b\u4e3afloat\u3002\u5f3a\u5236\u53c2\u6570\n\n\n\n\n\u6848\u4f8b\n\n\n// PHP\n$params = array(array('x' => 100.0, 'y' => 50.0, 'element' => element.GetAttribute(\"id\")));\n$driver->executeScript(\"mobile: tap\", $params);\n\n\n\n\nmobile: dragFromToForDuration\n\n\n\u901a\u8fc7\u5750\u6807\u70b9\u6267\u884c\u62d6\u653e\u624b\u52bf\u3002\u53ef\u4ee5\u5728\u63a7\u4ef6\u4e0a\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u5728\u5c4f\u5e55\u4e0a\u6267\u884c\u3002\n\n\nSupported arguments\n\n\n\n\nelement\n: \u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002 \u5982\u679c\u8bbe\u7f6e \u4e86\nelement\n\u53c2\u6570\uff0c\u5219\nx\n\u3001\ny\n\u4ee3\u8868\u7684\u662f\u4ee5\u5f53\u524d\nelement\n\u4e3a\u8fb9\u754c\u7684xy\u8f74\u3002\u82e5\u672a\u8bbe\u7f6e\uff0c\u5219\nx\n,\ny\n\u4ee3\u8868\u7684\u662f\u4ee5\u624b\u673a\u5c4f\u5e55\u4e3a\u8fb9\u754c\u3002\n\n\nduration\n: \u6d6e\u70b9\u6570\u8303\u56f4[0.5,60]\u3002\u8868\u793a\u5f00\u59cb\u62d6\u52a8\u70b9\u4e4b\u524d\u7684\u70b9\u51fb\u624b\u52bf\u9700\u8981\u591a\u957f\u65f6\u95f4\u624d\u80fd\u5f00\u59cb\u62d6\u52a8\u3002\u5f3a\u5236\u53c2\u6570\n\n\nfromX\n: \u8d77\u59cb\u62d6\u52a8\u70b9\u7684x\u5750\u6807\uff08\u7c7b\u578bfloat\uff09\u3002\u5f3a\u5236\u53c2\u6570\n\n\nfromY\n: \u8d77\u59cb\u62d6\u52a8\u70b9\u7684y\u5750\u6807\uff08\u7c7b\u578bfloat\uff09\u3002\u5f3a\u5236\u53c2\u6570\n\n\ntoX\n: \u7ed3\u675f\u62d6\u66f3\u70b9\u7684x\u5750\u6807\uff08float\u7c7b\u578b\uff09\u3002\u5f3a\u5236\u53c2\u6570\n\n\ntoY\n: \u7ed3\u675f\u62d6\u52a8\u70b9\u7684y\u5750\u6807\uff08\u7c7b\u578bfloat\uff09\u3002\u5f3a\u5236\u53c2\u6570\n\n\n\n\n\u7528\u6cd5\u793a\u4f8b\n\n\n// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> params = new HashMap<>();\nparams.put(\"duration\", 1.0);\nparams.put(\"fromX\", 100);\nparams.put(\"fromY\", 100);\nparams.put(\"toX\", 200);\nparams.put(\"toY\", 200);\nparams.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: dragFromToForDuration\", params);\n\n\n\n\nmobile: selectPickerWheelValue\n\n\n\u9009\u62e9\u4e0b\u4e00\u4e2a\u6216\u4e0a\u4e00\u4e2apicker wheel\u7684\u503c\u3002 \u5982\u679c\u8fd9\u4e9b\u503c\u662f\u52a8\u6001\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65b9\u6cd5\u662f\u80fd\u8d77\u4f5c\u7528\u7684\u3002XCTest\u6709\u4e00\u4e2aBUG\u5c31\u662f\u4f60\u5e76\u4e0d\u80fd\u77e5\u9053\u8981\u9009\u62e9\u54ea\u4e00\u4e2a\u6216\u8005\u5f53\u524d\u7684\u9009\u62e9\u533a\u57df\u662f\u5426\u751f\u6548\u3002\n\n\n\u652f\u6301\u53c2\u6570\n\n\n\n\nelement\n: PickerWheel\u7684\u5185\u90e8\u5143\u7d20id\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u6267\u884c\u503c\u9009\u62e9\u3002\u5143\u7d20\u5fc5\u987b\u662fXCUIElementTypePickerWheel\u7c7b\u578b\u3002\u5f3a\u5236\u53c2\u6570\n\n\norder\n:  \nnext\n \u9009\u62e9\u4e0b\u4e00\u4e2avalue\uff0c\nprevious\n\u9009\u62e9\u524d\u9762\u4e00\u4e2avalue\u3002\u5f3a\u5236\u53c2\u6570\n\n\noffset\n: \u533a\u95f4\u503c\uff1a [0.01, 0.5]\u3002\u5b83\u5b9a\u4e49\u4e86picker wheel\u7684\u4e2d\u5fc3\u8ddd\u79bb\u5e94\u8be5\u6709\u591a\u8fdc\u3002 \u901a\u8fc7\u5c06\u8be5\u503c\u4e58\u4ee5\u5b9e\u9645\u7684picker wheel\u9ad8\u5ea6\u6765\u786e\u5b9a\u5b9e\u9645\u8ddd\u79bb\u3002\u592a\u5c0f\u7684\u504f\u79fb\u503c\u53ef\u80fd\u4e0d\u4f1a\u6539\u53d8picker wheel\u7684\u503c\uff0c\u800c\u8fc7\u9ad8\u7684\u503c\u53ef\u80fd\u4f1a\u5bfc\u81f4picker wheel\u540c\u65f6\u5207\u6362\u4e24\u4e2a\u6216\u591a\u4e2a\u503c\u3002\u901a\u5e38\u6700\u4f18\u503c\u4f4d\u4e8e\u8303\u56f4[0.15,0.3]\u4e2d\u3002\u9ed8\u8ba4\u4e3a0.2\n\n\n\n\n\u7528\u6cd5\u793a\u4f8b\n\n\n// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> params = new HashMap<>();\nparams.put(\"order\", \"next\");\nparams.put(\"offset\", 0.15);\nparams.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: selectPickerWheelValue\", params);\n\n\n\n\nmobile: alert\n\n\n\u5bf9NSAlert\u5b9e\u4f8b\u6267\u884c\u64cd\u4f5c\u3002\n\n\n\u652f\u6301\u53c2\u6570\n\n\n\n\naction\n: \u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c: \naccept\n, \ndismiss\n and \ngetButtons\n\u3002\u5f3a\u5236\u53c2\u6570\n\n\nbuttonLabel\n:  \u70b9\u51fb\u5df2\u6709\u8b66\u62a5\u6309\u94ae\u7684\u6807\u7b7e\u6587\u672c\u3002\u8fd9\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u53ea\u80fd\u4e0e\naccept\n\u548c\ndismiss\n \u64cd\u4f5c\u76f8\u7ed3\u5408\u624d\u6709\u6548\u3002\n\n\n\n\n\u7528\u6cd5\u793a\u4f8b\n\n\n# Python\ndriver.execute_script('mobile: alert', {'action': 'accept', 'buttonLabel': 'My Cool Alert Button'});\n\n\n\n\n\u8fdb\u9636\u4e3b\u9898\n\n\n\u67e5\u770b \nWDA Element Commands API\n\n\u4ee5\u83b7\u53d6\u6709\u5173\u5728Facebook WebDriverAgent\u4e2d\u5b9e\u73b0\u7684\u624b\u52bf\u7684\u4fe1\u606f\u3002\n\n\n\u672c\u6587\u7531 \n\u5927\u4e1c\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Ios xctest mobile gestures"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#webdriveragentxctest-backend-ios",
            "text": "\u5f88\u53ef\u60dc\uff0c\u82f9\u679c\u5b98\u65b9\u7684 XCTest \u6846\u67b6\u672c\u8eab\u5e76\u4e0d\u652f\u6301 TouchAction \u63a5\u53e3\u5b9e\u73b0\u7684 W3C \u6807\u51c6\u3002\u5c3d\u7ba1\u5982\u6b64\uff0cXCTest \u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684\u624b\u52bf\u64cd\u4f5c\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u662f iOS \u5e73\u53f0\u72ec\u6709\u7684\u3002\u4f60\u53ef\u4ee5\u5728 1.6.4-beta \u7248\u672c\u7684 Appium \u4e2d\u5f00\u59cb\u4f7f\u7528\u8fd9\u4e9b\u624b\u52bf\u64cd\u4f5c\u3002  \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\u76ee\u524dXCTest\u548cWDA\u6b63\u5728\u4e0d\u65ad\u4f18\u5316\u6539\u53d8\u7684\u9636\u6bb5\uff0c\u8fd9\u610f\u5473\u7740\u6240\u6709  mobile: *  \u7684\u547d\u4ee4\u53ef\u80fd\u4f1a\u5728\u6ca1\u4efb\u4f55\u901a\u77e5\u7684\u60c5\u51b5\u4e0b\u5c31\u88ab\u8c03\u6574\u66f4\u6539\u3002",
            "title": "\u4f7f\u7528 WebDriverAgent/XCTest Backend \u8fdb\u884ciOS\u81ea\u52a8\u5316\u624b\u52bf\u64cd\u4f5c"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#mobile-swipe",
            "text": "\u8fd9\u4e2a\u624b\u52bf\u662f\u5728\u6307\u5b9a\u7684\u5c4f\u5e55\u4e0a\u7684\u63a7\u4ef6\u6216App\u7684\u63a7\u4ef6\u4e0a\u6267\u884c\u201c\u6ed1\u52a8\u201d\u64cd\u4f5c\uff0c\u4e00\u822c\u662f\u9488\u5bf9\u6574\u4e2a\u5c4f\u5e55\u3002\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u652f\u6301\u901a\u8fc7\u5750\u6807\u6765\u64cd\u4f5c\uff0c\u5e76\u4e14\u4ec5\u4ec5\u662f\u7b80\u5355\u7684\u6a21\u62df\u5355\u4e2a\u624b\u6307\u6ed1\u52a8\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5bf9\u4e8e\u8bf8\u5982\u76f8\u518c\u5206\u9875\u3001\u5207\u6362\u89c6\u56fe\u7b49\u60c5\u51b5\u53ef\u80fd\u4f1a\u53d1\u6325\u6bd4\u8f83\u5927\u7684\u4f5c\u7528\u3002\u66f4\u590d\u6742\u7684\u573a\u666f\u53ef\u80fd\u9700\u8981\u7528\u5230 mobile:dragFromToForDuration \uff0c\u8fd9\u4e2a\u65b9\u6cd5\u652f\u6301\u4f20\u5750\u6807\uff08coordinates \uff09\u548c\u6ed1\u52a8\u6301\u7eed\u65f6\u95f4\uff08duration\uff09\u3002",
            "title": "mobile: swipe"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_1",
            "text": "direction : 'up', 'down', 'left' or 'right'.  \u8fd94\u4e2a\u53c2\u6570\u662f\u56fa\u5b9a\u7684\u3002  element : \u9700\u8981\u6ed1\u52a8\u7684\u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8be5\u53c2\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u4f7f\u7528App\u7684\u63a7\u4ef6\u4f5c\u4e3a\u66ff\u4ee3\u3002",
            "title": "\u652f\u6301\u53c2\u6570"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_2",
            "text": "// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> params = new HashMap<>();\nscrollObject.put(\"direction\", \"down\");\nscrollObject.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: swipe\", params);",
            "title": "\u7528\u6cd5\u793a\u4f8b"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#mobile-scroll",
            "text": "\u6eda\u52a8\u5143\u7d20\u6216\u6574\u4e2a\u5c4f\u5e55\u3002\u652f\u6301\u4e0d\u540c\u7684\u6eda\u52a8\u7b56\u7565\u3002\u8be5\u65b9\u6cd5\u63d0\u4f9b\u4e864\u4e2a\u53ef\u9009\u62e9\u6ed1\u52a8\u7b56\u7565\uff1a\u6309\u7167\u987a\u5e8f\u6709\u201cname\u201d\uff0c\u201cdirection\u201d\uff0c\u201cpredicateString\u201d\u6216\u201ctoVisible\u201d\u3002\u6240\u6709\u7684\u6ed1\u52a8\u7b56\u7565\u90fd\u662f\u6392\u4ed6\u6027\u7684\uff0c\u4e00\u6b21\u6ed1\u52a8\u53ea\u80fd\u9009\u62e9\u4e00\u4e2a\u7b56\u7565\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 mobile:scroll \u6765\u5bf9\u8868\u683c\u4e2d\u6216\u8005\u96c6\u5408\u89c6\u56fe\u4e2d\u7684\u67d0\u4e2a\u5df2\u77e5\u63a7\u4ef6\u8fdb\u884c\u7cbe\u786e\u7684\u6eda\u52a8\u64cd\u4f5c\u3002\u7136\u800c\u76ee\u524d\u6709\u4e00\u4e2a\u5df2\u77e5\u7684\u5c40\u9650\u95ee\u9898\uff1a\u5982\u679c\u9700\u8981\u5728\u7236\u5bb9\u5668\u4e0a\u6267\u884c\u592a\u591a\u7684\u6eda\u52a8\u624b\u52bf\u6765\u8fbe\u5230\u5fc5\u8981\u7684\u5b50\u5143\u7d20\uff08\u5176\u4e2d\u51e0\u5341\u4e2a\uff09\uff0c\u5219\u65b9\u6cd5\u8c03\u7528\u53ef\u80fd\u4f1a\u5931\u8d25\u3002",
            "title": "mobile: scroll"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_3",
            "text": "element : \u9700\u8981\u6eda\u52a8\u7684\u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8be5\u53c2\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u4f7f\u7528App\u7684\u63a7\u4ef6\u4f5c\u4e3a\u66ff\u4ee3\u3002  name : \u9700\u8981\u6267\u884c\u6eda\u52a8\u7684\u5b50\u63a7\u4ef6\u7684 accessibility id \u3002\n \u5c06 predicateString \u53c2\u6570\u8bbe\u7f6e\u4e3a \u201cname == accessibilityId\u201d \u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u7ed3\u679c\u3002\u5982\u679c element \u4e0d\u662f\u5bb9\u5668\uff0c\u5219\u4e0d\u8d77\u4f5c\u7528\u3002  direction :  'up', 'down', 'left' or 'right'. \u8be5\u53c2\u6570\u4e0e swipe \u4e2d\u7684\u6bd4\uff0c\u5dee\u522b\u5728\u4e8e scroll \u4f1a\u5c1d\u8bd5\u5c06\u5f53\u524d\u754c\u9762\u5b8c\u5168\u79fb\u52a8\u5230\u4e0b\u4e00\u9875\u3002\uff08 page \u4e00\u8bcd\u8868\u793a\u5355\u4e2a\u8bbe\u5907\u5c4f\u5e55\u4e2d\u7684\u6240\u6709\u5185\u5bb9\uff09  predicateString : \u9700\u8981\u88ab\u6267\u884c\u6eda\u52a8\u64cd\u4f5c\u7684\u5b50\u63a7\u4ef6\u7684NSPredicate\u5b9a\u4f4d\u5668\u3002\u5982\u679c\u63a7\u4ef6\u4e0d\u662f\u5bb9\u5668\uff0c\u5219\u4e0d\u8d77\u4f5c\u7528\u3002  toVisible : \u5e03\u5c14\u7c7b\u578b\u7684\u53c2\u6570\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a true \uff0c\u5219\u8868\u793a\u8981\u6c42\u6eda\u52a8\u5230\u7236\u63a7\u4ef6\u4e2d\u7684\u7b2c\u4e00\u4e2a\u53ef\u89c1\u5230\u7684\u5b50\u63a7\u4ef6\u3002\u5982\u679c element \u672a\u8bbe\u7f6e\uff0c\u5219\u4e0d\u751f\u6548\u3002",
            "title": "\u652f\u6301\u53c2\u6570"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_4",
            "text": "# Python\ndriver.execute_script('mobile: scroll', {'direction': 'down'});",
            "title": "\u7528\u6cd5\u793a\u4f8b"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#mobile-pinch",
            "text": "\u5728\u7ed9\u5b9a\u7684\u63a7\u4ef6\u6216\u5e94\u7528\u7a0b\u5e8f\u63a7\u4ef6\u4e0a\u6267\u884c\u634f\u5408\u624b\u52bf\u3002",
            "title": "mobile: pinch"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_5",
            "text": "element : \u9700\u8981\u634f\u5408\u7684\u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8be5\u53c2\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u4f7f\u7528App\u7684\u63a7\u4ef6\u4f5c\u4e3a\u66ff\u4ee3\u3002  scale : \u6d6e\u52a8\u578b\u5939\u70b9\u5c3a\u5ea6\u3002\u4f7f\u75280\u548c1\u4e4b\u95f4\u7684\u6bd4\u4f8b\u6765\u201c\u634f\u7d27\u201d\u6216\u7f29\u5c0f\uff0c\u5927\u4e8e1\u7684\u6bd4\u4f8b\u201c\u6491\u5f00\u201d\u6216\u653e\u5927\u3002\u5f3a\u5236\u53c2\u6570  velocity : \u6bcf\u79d2\u7f29\u653e\u901f\u5ea6\uff08\u6d6e\u70b9\u503c\uff09\u3002\u5f3a\u5236\u53c2\u6570",
            "title": "\u652f\u6301\u53c2\u6570"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_6",
            "text": "# Ruby\nexecute_script 'mobile: pinch', scale: 0.5, velocity: 1.1, element: element.ref",
            "title": "\u7528\u6cd5\u793a\u4f8b"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#mobile-doubletap",
            "text": "\u5728\u6307\u5b9a\u63a7\u4ef6\u4e0a\u6216\u5c4f\u5e55\u4e0a\u6267\u884c\u53cc\u51fb\u624b\u52bf\u3002",
            "title": "mobile: doubleTap"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_7",
            "text": "element : \u9700\u8981\u53cc\u51fb\u7684\u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8be5\u53c2\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u4f7f\u7528App\u7684\u63a7\u4ef6\u4f5c\u4e3a\u66ff\u4ee3\u3002  x : \u5c4f\u5e55x\u8f74\u5750\u6807\u70b9\uff0c\u6d6e\u70b9\u578b. \u4ec5\u5f53 element \u672a\u8bbe\u7f6e\u65f6\u624d\u662f\u5f3a\u5236\u53c2\u6570  y : \u5c4f\u5e55y\u8f74\u5750\u6807\u70b9\uff0c\u6d6e\u70b9\u578b. \u4ec5\u5f53 element \u672a\u8bbe\u7f6e\u65f6\u624d\u662f\u5f3a\u5236\u53c2\u6570",
            "title": "\u652f\u6301\u53c2\u6570"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_8",
            "text": "// javascript\ndriver.execute('mobile: doubleTap', {element: element.value.ELEMENT});",
            "title": "\u7528\u6cd5\u793a\u4f8b"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#mobile-touchandhold",
            "text": "\u5728\u6307\u5b9a\u63a7\u4ef6\u4e0a\u6216\u5c4f\u5e55\u4e0a\u957f\u6309\u7684\u624b\u52bf\u64cd\u4f5c\u3002",
            "title": "mobile: touchAndHold"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_9",
            "text": "element : \u9700\u8981\u957f\u6309\u7684\u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8be5\u53c2\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u4f7f\u7528App\u7684\u63a7\u4ef6\u4f5c\u4e3a\u66ff\u4ee3\u3002  duration : \u957f\u6309\u7684\u6301\u7eed\u65f6\u95f4\uff08\u79d2\uff09\uff0c\u6d6e\u70b9\u578b\u3002\u5f3a\u5236\u6027\u53c2\u6570  x : \u5c4f\u5e55x\u8f74\u5750\u6807\u70b9\uff0c\u6d6e\u70b9\u578b. \u4ec5\u5f53 element \u672a\u8bbe\u7f6e\u65f6\u624d\u662f\u5f3a\u5236\u53c2\u6570  y : \u5c4f\u5e55y\u8f74\u5750\u6807\u70b9\uff0c\u6d6e\u70b9\u578b. \u4ec5\u5f53 element \u672a\u8bbe\u7f6e\u65f6\u624d\u662f\u5f3a\u5236\u53c2\u6570",
            "title": "\u652f\u6301\u53c2\u6570"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_10",
            "text": "// c#\nDictionary<string, object> tfLongTap = new Dictionary<string, object>();\ntfLongTap.Add(\"element\", element.Id);\ntfLongTap.Add(\"duration\", 2.0);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: touchAndHold\", tfLongTap);",
            "title": "\u7528\u6cd5\u793a\u4f8b"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#mobile-twofingertap",
            "text": "\u5728\u7ed9\u5b9a\u5143\u7d20\u6216\u5e94\u7528\u7a0b\u5e8f\u5143\u7d20\u4e0a\u6267\u884c\u4e24\u4e2a\u624b\u6307\u70b9\u51fb\u624b\u52bf\u3002",
            "title": "mobile: twoFingerTap"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_11",
            "text": "element : \u9700\u8981\u4e24\u53ea\u624b\u6307\u64cd\u4f5c\u7684\u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002\u5982\u679c\u6ca1\u6709\u63d0\u4f9b\u8be5\u53c2\u6570\u7684\u8bdd\uff0c\u5219\u4f1a\u4f7f\u7528App\u7684\u63a7\u4ef6\u4f5c\u4e3a\u66ff\u4ee3\u3002",
            "title": "\u652f\u6301\u53c2\u6570"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_12",
            "text": "// c#\nDictionary<string, object> tfTap = new Dictionary<string, object>();\ntfTap.Add(\"element\", element.Id);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: twoFingerTap\", tfTap);",
            "title": "\u7528\u6cd5\u793a\u4f8b"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#mobile-tap",
            "text": "\u5728\u6307\u5b9a\u63a7\u4ef6\u6216\u5c4f\u5e55\u4e0a\u7684\u5750\u6807\u6267\u884c\u70b9\u51fb\u624b\u52bf\u3002",
            "title": "mobile: tap"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_13",
            "text": "element : \u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002 \u5982\u679c\u8bbe\u7f6e \u4e86 element \u53c2\u6570\uff0c\u5219 x \u3001 y \u4ee3\u8868\u7684\u662f\u4ee5\u5f53\u524d element \u4e3a\u8fb9\u754c\u7684xy\u8f74\u3002\u82e5\u672a\u8bbe\u7f6e\uff0c\u5219 x , y \u4ee3\u8868\u7684\u662f\u4ee5\u624b\u673a\u5c4f\u5e55\u4e3a\u8fb9\u754c\u3002  x : x\u8f74\u5750\u6807\uff0c\u7c7b\u578b\u4e3afloat\u3002\u5f3a\u5236\u53c2\u6570  y : y\u8f74\u5750\u6807\uff0c\u7c7b\u578b\u4e3afloat\u3002\u5f3a\u5236\u53c2\u6570",
            "title": "\u652f\u6301\u53c2\u6570"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_14",
            "text": "// PHP\n$params = array(array('x' => 100.0, 'y' => 50.0, 'element' => element.GetAttribute(\"id\")));\n$driver->executeScript(\"mobile: tap\", $params);",
            "title": "\u6848\u4f8b"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#mobile-dragfromtoforduration",
            "text": "\u901a\u8fc7\u5750\u6807\u70b9\u6267\u884c\u62d6\u653e\u624b\u52bf\u3002\u53ef\u4ee5\u5728\u63a7\u4ef6\u4e0a\u6267\u884c\uff0c\u4e5f\u53ef\u4ee5\u5728\u5c4f\u5e55\u4e0a\u6267\u884c\u3002",
            "title": "mobile: dragFromToForDuration"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#supported-arguments",
            "text": "element : \u63a7\u4ef6ID\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u3002 \u5982\u679c\u8bbe\u7f6e \u4e86 element \u53c2\u6570\uff0c\u5219 x \u3001 y \u4ee3\u8868\u7684\u662f\u4ee5\u5f53\u524d element \u4e3a\u8fb9\u754c\u7684xy\u8f74\u3002\u82e5\u672a\u8bbe\u7f6e\uff0c\u5219 x , y \u4ee3\u8868\u7684\u662f\u4ee5\u624b\u673a\u5c4f\u5e55\u4e3a\u8fb9\u754c\u3002  duration : \u6d6e\u70b9\u6570\u8303\u56f4[0.5,60]\u3002\u8868\u793a\u5f00\u59cb\u62d6\u52a8\u70b9\u4e4b\u524d\u7684\u70b9\u51fb\u624b\u52bf\u9700\u8981\u591a\u957f\u65f6\u95f4\u624d\u80fd\u5f00\u59cb\u62d6\u52a8\u3002\u5f3a\u5236\u53c2\u6570  fromX : \u8d77\u59cb\u62d6\u52a8\u70b9\u7684x\u5750\u6807\uff08\u7c7b\u578bfloat\uff09\u3002\u5f3a\u5236\u53c2\u6570  fromY : \u8d77\u59cb\u62d6\u52a8\u70b9\u7684y\u5750\u6807\uff08\u7c7b\u578bfloat\uff09\u3002\u5f3a\u5236\u53c2\u6570  toX : \u7ed3\u675f\u62d6\u66f3\u70b9\u7684x\u5750\u6807\uff08float\u7c7b\u578b\uff09\u3002\u5f3a\u5236\u53c2\u6570  toY : \u7ed3\u675f\u62d6\u52a8\u70b9\u7684y\u5750\u6807\uff08\u7c7b\u578bfloat\uff09\u3002\u5f3a\u5236\u53c2\u6570",
            "title": "Supported arguments"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_15",
            "text": "// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> params = new HashMap<>();\nparams.put(\"duration\", 1.0);\nparams.put(\"fromX\", 100);\nparams.put(\"fromY\", 100);\nparams.put(\"toX\", 200);\nparams.put(\"toY\", 200);\nparams.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: dragFromToForDuration\", params);",
            "title": "\u7528\u6cd5\u793a\u4f8b"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#mobile-selectpickerwheelvalue",
            "text": "\u9009\u62e9\u4e0b\u4e00\u4e2a\u6216\u4e0a\u4e00\u4e2apicker wheel\u7684\u503c\u3002 \u5982\u679c\u8fd9\u4e9b\u503c\u662f\u52a8\u6001\u7684\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65b9\u6cd5\u662f\u80fd\u8d77\u4f5c\u7528\u7684\u3002XCTest\u6709\u4e00\u4e2aBUG\u5c31\u662f\u4f60\u5e76\u4e0d\u80fd\u77e5\u9053\u8981\u9009\u62e9\u54ea\u4e00\u4e2a\u6216\u8005\u5f53\u524d\u7684\u9009\u62e9\u533a\u57df\u662f\u5426\u751f\u6548\u3002",
            "title": "mobile: selectPickerWheelValue"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_16",
            "text": "element : PickerWheel\u7684\u5185\u90e8\u5143\u7d20id\uff08\u4f5c\u4e3a\u5341\u516d\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\uff09\u6267\u884c\u503c\u9009\u62e9\u3002\u5143\u7d20\u5fc5\u987b\u662fXCUIElementTypePickerWheel\u7c7b\u578b\u3002\u5f3a\u5236\u53c2\u6570  order :   next  \u9009\u62e9\u4e0b\u4e00\u4e2avalue\uff0c previous \u9009\u62e9\u524d\u9762\u4e00\u4e2avalue\u3002\u5f3a\u5236\u53c2\u6570  offset : \u533a\u95f4\u503c\uff1a [0.01, 0.5]\u3002\u5b83\u5b9a\u4e49\u4e86picker wheel\u7684\u4e2d\u5fc3\u8ddd\u79bb\u5e94\u8be5\u6709\u591a\u8fdc\u3002 \u901a\u8fc7\u5c06\u8be5\u503c\u4e58\u4ee5\u5b9e\u9645\u7684picker wheel\u9ad8\u5ea6\u6765\u786e\u5b9a\u5b9e\u9645\u8ddd\u79bb\u3002\u592a\u5c0f\u7684\u504f\u79fb\u503c\u53ef\u80fd\u4e0d\u4f1a\u6539\u53d8picker wheel\u7684\u503c\uff0c\u800c\u8fc7\u9ad8\u7684\u503c\u53ef\u80fd\u4f1a\u5bfc\u81f4picker wheel\u540c\u65f6\u5207\u6362\u4e24\u4e2a\u6216\u591a\u4e2a\u503c\u3002\u901a\u5e38\u6700\u4f18\u503c\u4f4d\u4e8e\u8303\u56f4[0.15,0.3]\u4e2d\u3002\u9ed8\u8ba4\u4e3a0.2",
            "title": "\u652f\u6301\u53c2\u6570"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_17",
            "text": "// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> params = new HashMap<>();\nparams.put(\"order\", \"next\");\nparams.put(\"offset\", 0.15);\nparams.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: selectPickerWheelValue\", params);",
            "title": "\u7528\u6cd5\u793a\u4f8b"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#mobile-alert",
            "text": "\u5bf9NSAlert\u5b9e\u4f8b\u6267\u884c\u64cd\u4f5c\u3002",
            "title": "mobile: alert"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_18",
            "text": "action : \u652f\u6301\u4ee5\u4e0b\u64cd\u4f5c:  accept ,  dismiss  and  getButtons \u3002\u5f3a\u5236\u53c2\u6570  buttonLabel :  \u70b9\u51fb\u5df2\u6709\u8b66\u62a5\u6309\u94ae\u7684\u6807\u7b7e\u6587\u672c\u3002\u8fd9\u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u53ea\u80fd\u4e0e accept \u548c dismiss  \u64cd\u4f5c\u76f8\u7ed3\u5408\u624d\u6709\u6548\u3002",
            "title": "\u652f\u6301\u53c2\u6570"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_19",
            "text": "# Python\ndriver.execute_script('mobile: alert', {'action': 'accept', 'buttonLabel': 'My Cool Alert Button'});",
            "title": "\u7528\u6cd5\u793a\u4f8b"
        },
        {
            "location": "/cn/writing-running-appium/ios-xctest-mobile-gestures/#_20",
            "text": "\u67e5\u770b  WDA Element Commands API \n\u4ee5\u83b7\u53d6\u6709\u5173\u5728Facebook WebDriverAgent\u4e2d\u5b9e\u73b0\u7684\u624b\u52bf\u7684\u4fe1\u606f\u3002  \u672c\u6587\u7531  \u5927\u4e1c  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u8fdb\u9636\u4e3b\u9898"
        },
        {
            "location": "/cn/writing-running-appium/ios_predicate/",
            "text": "iOS \u8c13\u8bcd(Predicate)\n\n\n\u5728\u67e5\u770b \n'-ios uiautomation'\n \u641c\u7d22\u7b56\u7565\u65f6\u4e86\u89e3 \n\u8c13\u8bcd(Predicate)\n \u5341\u5206\u5fc5\u8981\u3002 \nUIAutomation JavaScript API\n\u6709\u4e0b\u5217\u51e0\u79cd\u975e\u5e38\u6709\u7528\u7684\u65b9\u6cd5:\n\n\n(UIAElement) UIAElementArray.firstWithPredicate(PredicateString predicateString)\n(UIAElementArray) UIAElementArray.withPredicate(PredicateString predicateString)\n\n\n\n\n\u539f\u751f\u7684JS\u641c\u7d22\u7b56\u7565\uff08\u7531Apple\u63d0\u4f9b\uff09\u63d0\u4f9b\u4e86\u66f4\u5927\u7684\u7075\u6d3b\u6027\uff0c\u5e76\u4e14\u548cXPath\u5f88\u50cf\u3002\n\n\u8c13\u8bcd(Predicate)\n \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u591a\u4e2a\u5339\u914d\u6761\u4ef6\u6765\u51c6\u786e\u5b9a\u4f4d\u67d0\u4e00\u4e2a\u6216\u67d0\u4e00\u7ec4\u5143\u7d20\uff08\u76f8\u5f53\u4e8e\u53ea\u6709\u641c\u7d22\u6761\u4ef6\u4e0e\u5143\u7d20\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a true \u65f6\u8fd9\u4e9b\u5143\u7d20\u624d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u5339\u914d\u7684\uff09\u3002\n\n\n\uff08\u7ffb\u8bd1\u5907\u6ce8\uff1aXPath \u662f\u4e00\u95e8\u7528\u6765\u5b9a\u4f4d xml \u6587\u6863\u4e2d\u7684\u5143\u7d20\u7684\u8bed\u8a00\uff0c\u80fd\u63d0\u4f9b\u57fa\u4e8e\u8def\u5f84\u3001\u5143\u7d20\u5c5e\u6027\u7b49\u6761\u4ef6\u7684\u5b9a\u4f4d\u7b56\u7565\uff09\n\n\n\u4f8b\u5982:\n\n\n// java\nappiumDriver.findElementsByIosUIAutomation(\"collectionViews()[0].cells().withPredicate(\\\"ANY staticTexts.isVisible == TRUE\\\")\")\n\n\n\n\n-  \u5c06\u53ea\u9009\u62e9\u90a3\u4e9b\u5728\u4e3b\u89c6\u56fe\u7b2c\u4e00\u4e2a \nUIACollectionView\n \u5143\u7d20\u4e0b\u7684\u3001\u62e5\u6709\u53ef\u89c1\u5b50\u5143\u7d20 \nUIAStaticText\n \u7684 \nUIACollectionCell\n \u5143\u7d20\u3002\u5728\u8fd9\u91cc\uff0c \nstaticTexts()\n \u548c \nisVisible()\n \u5206\u522b\u662f\nUIAElementArray\n \u548c \nUIAElement\n \u7684\u5b50\u65b9\u6cd5\u3002 \n\u6ce8\u610f\uff1a \nUIAElementArray\n \u5e8f\u5217\u7f16\u53f7\u4ece \n0\n \u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u50cf Xpath \u90a3\u6837\u4ece \n1\n\u5f00\u59cb\n\n\n\u4ee5\u4e0b\u662f\u6240\u6709\u53ef\u7528\u7684\u8c13\u8bcd(Predicate)\u7684\u5217\u8868\uff08\u4e3b\u8981\u53d6\u81ea \n\u8c13\u8bcd(Predicate) \u7f16\u7a0b\u6307\u5357\n)\n\n\n\u57fa\u672c\u6bd4\u8f83\n\n\n= , ==\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u7b49\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f:\n\n\ntableViews()[1].cells().firstWithPredicate(\"label == 'Olivia' \")\n\nsame in Xpath: /UIATableView[2]/UIATableCell[@label = 'Olivia'][1]\n\n\n\n\n>= , =>\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u5927\u4e8e\u6216\u7b49\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f\u3002\n\n\n<= , =<\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u5c0f\u4e8e\u6216\u7b49\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f\u3002\n\n\n>\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u5927\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f\u3002\n\n\n<\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u5c0f\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f\u3002\n\n\n!= , <>\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u4e0d\u7b49\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f\u3002\n\n\nBETWEEN\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u7684\u503c\u5728\u53f3\u8fb9\u8868\u8fbe\u5f0f\u7684\u4e24\u4e2a\u8fb9\u754c\u503c\u4e4b\u95f4\u6216\u7b49\u4e8e\u5176\u4e2d\u4e00\u4e2a\u8fb9\u754c\u503c\u3002\u53f3\u8fb9\u8868\u8fbe\u5f0f\u4e3a\u4e00\u4e2a\u6709\u4e24\u4e2a\u503c\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u503c\u662f\u4e0a\u9650\uff0c\u7b2c\u4e8c\u4e2a\u503c\u662f\u4e0b\u9650(\u8fd9\u4e2a\u987a\u5e8f\u662f\u56fa\u5b9a\u7684) \uff0c\u4f8b\u5982 \n1 BETWEEN { 0 , 33 }\n\uff0c \u6216\u8005 \n$INPUT BETWEEN { $LOWER, $UPPER }\n\u3002\n\u5728 Objective-C\uff0c \u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 BETWEEN \u8c13\u8bcd(Predicate)\uff0c\u5982\u4e0b\u9762\u7684\u793a\u4f8b\u6240\u793a:\n\n\nNSPredicate *betweenPredicate =\n    [NSPredicate predicateWithFormat: @\"attributeName BETWEEN %@\", @[@1, @10]];\n\n\n\n\n\u8fd9\u521b\u5efa\u4e86\u4e00\u4e2a\u7b49\u4ef7\u4e8e \n( ( 1 <= attributeValue ) && ( attributeValue <= 10 ) )\n \u7684\u8c13\u8bcd\n\n\n\u5e03\u5c14\u503c\u8c13\u8bcd\n\n\nTRUEPREDICATE\n- \u8ba1\u7b97\u7ed3\u679c\u6052\u7b49\u4e8e \nTRUE\n \u3002\n\n\nFALSEPREDICATE\n- \u8ba1\u7b97\u7ed3\u679c\u6052\u7b49\u4e8e \nFALSE\n\u3002\n\n\n\u57fa\u672c\u7684\u590d\u5408\u8c13\u8bcd\n\n\nAND , &&\n-  \u903b\u8f91\u4e0e\u3002\n\n\nOR , ||\n-  \u903b\u8f91\u6216\u3002\n\n\nNOT , !\n-  \u903b\u8f91\u975e\u3002\n\n\n\u5b57\u7b26\u4e32\u6bd4\u8f83\n\n\n\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b57\u7b26\u4e32\u6bd4\u8f83\u662f\u533a\u5206\u5927\u5c0f\u5199\u548c\u97f3\u8c03( diacritic )\u7684\uff0c\u4f60\u53ef\u4ee5\u5728\u65b9\u62ec\u53f7\u4e2d\u7528\u5173\u952e\u5b57\u7b26  \nc\n \u548c \nd\n \u6765\u4fee\u6539\u64cd\u4f5c\u7b26\u4ee5\u76f8\u5e94\u7684\u6307\u5b9a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u548c\u53d8\u97f3\u7b26\u53f7\u3002\u4f8b\u5982 \u540d\u5b57\u7684\u5f00\u5934 \nfirstName BEGINSWITH[cd] $FIRST_NAME\n\n\n\uff08\u7ffb\u8bd1\u5907\u6ce8\uff1a\u8fd9\u91cc\u7684\u97f3\u8c03\u662f\u6307\u82f1\u6587\u5b57\u6bcd\u7684\u97f3\u8c03\uff0c\u5982 \n\"n\u00e1ive\"\n \u548c \n\"naive\"\n\u3002\u5982\u679c\u4e0d\u52a0\u5173\u952e\u5b57 \nd\n\uff0c\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4f1a\u8ba4\u4e3a\u662f\u4e0d\u7b49\u4ef7\u7684\u3002\uff09\n\n\nBEGINSWITH\n- \u5de6\u8fb9\u7684\u8868\u8fbe\u5f0f\u4ee5\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u5f00\u59cb\u3002\n\n\nscrollViews()[3].buttons().firstWithPredicate(\"name BEGINSWITH 'results toggle' \")\n\nsame in Xpath: /UIAScrollView[4]/UIAButton[starts-with(@name, 'results toggle')][1]\n\n\n\n\nCONTAINS\n- \u5de6\u8fb9\u7684\u8868\u8fbe\u5f0f\u5305\u542b\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u3002\n\n\ntableViews()[1].cells().withPredicate(\"ANY collectionViews[0].buttons.name CONTAINS 'opera'\")\n\nsame in Xpath: /UIATableView[2]/UIATableCell[UIACollectionView[1]/UIAButton[contains(@name, 'opera')]]\n\n\n\n\nENDSWITH\n- \u5de6\u8fb9\u7684\u8868\u8fbe\u5f0f\u4ee5\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u7ed3\u675f\u3002\n\n\nLIKE\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u7b49\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f: ? \u548c *\u53ef\u4f5c\u4e3a\u901a\u914d\u7b26\uff0c \u5176\u4e2d ? \u5339\u914d 1 \u4e2a\u5b57\u7b26\uff0c * \u5339\u914d 0 \u4e2a\u6216\u8005\u591a\u4e2a\u5b57\u7b26\u3002 \u5728 Mac OS X v10.4\uff0c \u901a\u914d\u7b26\u4e0d\u80fd\u5339\u914d\u6362\u884c\u7b26\u3002\n\n\ntableViews()[0].cells().firstWithPredicate(\"name LIKE '*Total: $*' \")\n\nsame in Xpath: /UIATableView[1]/UIATableCell[matches(@name, '.*Total: \\$.*')][1]\n\n\n\n\nMATCHES\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u6839\u636eICU v3\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u98ce\u683c\u6bd4\u8f83\uff0c\u7b49\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f (\u8be6\u60c5\u8bf7\u770bICU\u7528\u6237\u6307\u5357\u4e2d\u7684 \n\u6b63\u5219\u8868\u8fbe\u5f0f\n)\u3002\n\n\ntableViews().firstWithPredicate(\"value MATCHES '.*of 7' \")\n\nsame in Xpath: /UIATableView[matches(@value, '.*of 7')][1]\n\n\n\n\n\u805a\u5408\u64cd\u4f5c\n\n\nANY , SOME\n- \u6307\u5b9a\u5339\u914d\u540e\u7eed\u8868\u8fbe\u5f0f\u7684\u4efb\u610f\u5143\u7d20\u3002\u4f8b\u5982 \nANY children.age < 18\n \u3002\n\n\ntableViews()[0].cells().firstWithPredicate(\"SOME staticTexts.name = 'red'\").staticTexts().withName('red')\n\nsame in Xpath: /UIATableView[1]/UIATableCell[UIAStaticText/@name = 'red'][1]/UIAStaticText[@name = 'red']\n\n\n\n\nALL\n- \u6307\u5b9a\u5339\u914d\u540e\u7eed\u8868\u8fbe\u5f0f\u7684\u6240\u6709\u5143\u7d20\u3002\u4f8b\u5982 \nALL children.age < 18\n \u3002\n\n\nNONE\n- \u6307\u5b9a\u4e0d\u5339\u914d\u540e\u7eed\u8868\u8fbe\u5f0f\u7684\u5143\u7d20\u3002\u4f8b\u5982 \nNONE children.age < 18\n \u3002 \u903b\u8f91\u4e0a\u7b49\u4ef7\u4e8e \nNOT (ANY ...)\n \u3002\n\n\nIN\n- \u7b49\u4ef7\u4e8e SQL \u7684 IN \u64cd\u4f5c\uff0c\u5de6\u8fb9\u7684\u8868\u8fbe\u5fc5\u987b\u51fa\u73b0\u5728\u53f3\u8fb9\u6307\u5b9a\u7684\u96c6\u5408\u4e2d\u3002\u4f8b\u5982 \nname IN { 'Ben', 'Melissa', 'Matthew' }\n \u3002 \u8fd9\u4e2a\u96c6\u5408\u53ef\u4ee5\u662f\u4e00\u4e2a\u6570\u7ec4( array )\uff0c\u4e00\u4e2a\u5217\u8868( set )\uff0c \u6216\u8005\u4e00\u4e2a\u5b57\u5178( dictionary )\u3002\u5f53\u8fd9\u4e2a\u96c6\u5408\u662f\u5b57\u5178\u65f6\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u5b83\u7684\u503c( value )\u3002\n\n\narray[index]\n- \u6307\u5b9a\u6570\u7ec4\u4e2d\u7279\u5b9a\u7d22\u5f15\u5904\u7684\u5143\u7d20\u3002\n\n\narray[FIRST]\n- \u6307\u5b9a\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\n\n\narray[LAST]\n- \u6307\u5b9a\u6570\u7ec4\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002\n\n\narray[SIZE]\n- \u6307\u5b9a\u6570\u7ec4\u7684\u5927\u5c0f\n\n\nelements()[0].tableViews()[0].cells().withPredicate(\"staticTexts[SIZE] > 2\")\n\nsame in Xpath: /*[1]/UIATableView[1]/UIATableCell[count(UIAStaticText) > 2]\n\n\n\n\n\u6807\u8bc6\u7b26\n\n\nC\u8bed\u8a00\u6807\u8bc6\u7b26\n\n- \u4efb\u4f55C\u8bed\u8a00\u7684\u6807\u8bc6\u7b26\u90fd\u4e0d\u662f\u4fdd\u7559\u5b57\u3002\n\n\n#symbol\n\n- \u7528\u6765\u628a\u4e00\u4e2a\u4fdd\u7559\u5b57\u8f6c\u4e49\u4e3a\u7528\u6237\u6807\u8bc6\u7b26\u3002\n\n\n[\\]{octaldigit}{3}\n\n- \u7528\u6765\u8868\u793a\u4e00\u4e2a\u516b\u8fdb\u5236\u6570 ( \n\\\n\u540e\u9762\u52a0\u4e0a3\u4f4d\u516b\u8fdb\u5236\u6570\u5b57)\u3002\n\n\n[\\][xX]{hexdigit}{2}\n\n- \u7528\u4e8e\u8868\u793a\u5341\u516d\u8fdb\u5236\u6570 ( \n\\x\n \u6216 \n\\X\n \u540e\u9762\u52a0\u4e0a2\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57)\u3002\n\n\n[\\][uU]{hexdigit}{4}\n\n- \u7528\u4e8e\u8868\u793a Unicode \u7f16\u7801 ( \n\\u\n \u6216 \n\\U\n \u540e\u9762\u52a0\u4e0a4\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57)\u3002\n\n\n\u6587\u5b57 (Literals)\n\n\n\uff08\u7ffb\u8bd1\u5907\u6ce8\uff1aLiterals \u5728\u7f16\u7a0b\u8bed\u8a00\u9886\u57df\u7684\u610f\u601d\u662f\u5728\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5f97\u5230\u7684(\u6216\u8bf4\u53ef\u89c6\u7684)\u90a3\u4e9b\u503c\u3002\u4f8b\u5982\u5b57\u7b26\u4e32 \n\"a\"\n\uff0c\u6570\u7ec4 \n[1, 2]\n\uff0c\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u4e00\u773c\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6570\u7ec4\u8fd8\u662f\u522b\u7684\u6570\u636e\u7c7b\u578b\u5e76\u77e5\u9053\u5b83\u7684\u503c\u3002\u8fd9\u4e00\u8282\u8bf4\u7684\u5c31\u662f\u8fd9\u4e9b\u503c\u7684\u5199\u6cd5\uff09\n\n\n\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u90fd\u80fd\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u4f46\u4ed6\u4eec\u4e0d\u4f1a\u5339\u914d\u5bf9\u65b9\uff08\u5355\u5f15\u53f7\u4e0d\u4f1a\u5339\u914d\u53cc\u5f15\u53f7\uff09\u3002\u4f8b\u5982\uff1a\n\"abc\"\n and \n'abc'\n \u90fd\u662f\u53ef\u8bc6\u522b\u7684 \uff0c\u4f46\u662f \n\"a'b'c\"\n \u7b49\u4ef7\u4e8e\na, 'b', c\n\u3002\n\n\nFALSE , NO\n-  \u8868\u793a\u903b\u8f91\u4e0a\u7684 false\u3002\n\n\nTRUE , YES\n-  \u8868\u793a\u903b\u8f91\u4e0a\u7684 true\u3002\n\n\nNULL , NIL\n- \u7a7a\u503c\u3002\n\n\nSELF\n- \u4ee3\u8868\u88ab\u4f7f\u7528\u7684\u5bf9\u8c61\u672c\u8eab\u3002\n\n\n\"text\"\n- \u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\n\n\n'text'\n- \u540c\u4e0a\uff0c\u4e5f\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\n\n\n\u4ee5\u9017\u53f7\u5206\u9694\u7684\u6587\u672c\u6570\u7ec4\n\n- \u4e3e\u4e2a\u4f8b\u5b50 \n{ 'comma', 'separated', 'literal', 'array' }\n \u3002\n\n\n\u6807\u51c6\u7684\u6574\u6570\u548c\u5c0f\u6570\n\n- \u4e3e\u4e2a\u4f8b\u5b50 \n1 , 27 , 2.71828 , 19.75\n \u3002\n\n\n\u5e26\u6709\u5e42\u6307\u6570\u7684\u5c0f\u6570\n\n- \u4e3e\u4e2a\u4f8b\u5b50 \n9.2e-5\n \u3002\n\n\n0x\n- \u5341\u516d\u8fdb\u5236\u6570\u7684\u524d\u7f00\uff0c \u5982\n0x11\n\u8868\u793a\u5341\u516d\u8fdb\u5236\u657011\uff0c\u7b49\u540c\u4e8e\u5341\u8fdb\u5236\u768417\u3002\n\n\n0o\n- \u516b\u8fdb\u5236\u6570\u7684\u524d\u7f00\u3002\n\n\n0b\n- \u4e8c\u8fdb\u5236\u6570\u7684\u524d\u7f00\u3002\n\n\n\u4fdd\u7559\u5b57\n\n\n\u4e0b\u9762\u7684\u90fd\u662f\u4fdd\u7559\u5b57\uff1a\n\n\nAND, OR, IN, NOT, ALL, ANY, SOME, NONE, LIKE, CASEINSENSITIVE, CI, MATCHES, CONTAINS, BEGINSWITH, ENDSWITH, BETWEEN, NULL, NIL, SELF, TRUE, YES, FALSE, NO, FIRST, LAST, SIZE, ANYKEY, SUBQUERY, CAST, TRUEPREDICATE, FALSEPREDICATE\n\n\nAppium \u8c13\u8bcd(predicate)\u5e2e\u52a9\u6587\u6863\n\n\nAppium \u5728app.js\u4e2d\u6709 \n\u4e13\u95e8\u7684\u8c13\u8bcd(predicate)\u4f7f\u7528\u5e2e\u52a9\u6587\u6863\n :\n\n\n\n\ngetFirstWithPredicate\n\n\ngetFirstWithPredicateWeighted\n\n\ngetAllWithPredicate\n\n\ngetNameContains\n\n\n\n\n\u5982\u4e0b\u662f\u4e2aRuby\u7684\u4f8b\u5b50\n\n\n# Ruby example\ntext = 'Various uses'\npredicate = \"name contains[c] '#{text}' || label contains[c] '#{text}' || value contains[c] '#{text}'\"\nelement = execute_script(%Q(au.mainApp().getFirstWithPredicate(\"#{predicate}\");))\n\nputs element.name # Buttons, Various uses of UIButton",
            "title": "Ios predicate"
        },
        {
            "location": "/cn/writing-running-appium/ios_predicate/#ios-predicate",
            "text": "\u5728\u67e5\u770b  '-ios uiautomation'  \u641c\u7d22\u7b56\u7565\u65f6\u4e86\u89e3  \u8c13\u8bcd(Predicate)  \u5341\u5206\u5fc5\u8981\u3002  UIAutomation JavaScript API \u6709\u4e0b\u5217\u51e0\u79cd\u975e\u5e38\u6709\u7528\u7684\u65b9\u6cd5:  (UIAElement) UIAElementArray.firstWithPredicate(PredicateString predicateString)\n(UIAElementArray) UIAElementArray.withPredicate(PredicateString predicateString)  \u539f\u751f\u7684JS\u641c\u7d22\u7b56\u7565\uff08\u7531Apple\u63d0\u4f9b\uff09\u63d0\u4f9b\u4e86\u66f4\u5927\u7684\u7075\u6d3b\u6027\uff0c\u5e76\u4e14\u548cXPath\u5f88\u50cf\u3002 \u8c13\u8bcd(Predicate)  \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u591a\u4e2a\u5339\u914d\u6761\u4ef6\u6765\u51c6\u786e\u5b9a\u4f4d\u67d0\u4e00\u4e2a\u6216\u67d0\u4e00\u7ec4\u5143\u7d20\uff08\u76f8\u5f53\u4e8e\u53ea\u6709\u641c\u7d22\u6761\u4ef6\u4e0e\u5143\u7d20\u7684\u8ba1\u7b97\u7ed3\u679c\u4e3a true \u65f6\u8fd9\u4e9b\u5143\u7d20\u624d\u4f1a\u88ab\u8ba4\u4e3a\u662f\u5339\u914d\u7684\uff09\u3002  \uff08\u7ffb\u8bd1\u5907\u6ce8\uff1aXPath \u662f\u4e00\u95e8\u7528\u6765\u5b9a\u4f4d xml \u6587\u6863\u4e2d\u7684\u5143\u7d20\u7684\u8bed\u8a00\uff0c\u80fd\u63d0\u4f9b\u57fa\u4e8e\u8def\u5f84\u3001\u5143\u7d20\u5c5e\u6027\u7b49\u6761\u4ef6\u7684\u5b9a\u4f4d\u7b56\u7565\uff09  \u4f8b\u5982:  // java\nappiumDriver.findElementsByIosUIAutomation(\"collectionViews()[0].cells().withPredicate(\\\"ANY staticTexts.isVisible == TRUE\\\")\")  -  \u5c06\u53ea\u9009\u62e9\u90a3\u4e9b\u5728\u4e3b\u89c6\u56fe\u7b2c\u4e00\u4e2a  UIACollectionView  \u5143\u7d20\u4e0b\u7684\u3001\u62e5\u6709\u53ef\u89c1\u5b50\u5143\u7d20  UIAStaticText  \u7684  UIACollectionCell  \u5143\u7d20\u3002\u5728\u8fd9\u91cc\uff0c  staticTexts()  \u548c  isVisible()  \u5206\u522b\u662f UIAElementArray  \u548c  UIAElement  \u7684\u5b50\u65b9\u6cd5\u3002  \u6ce8\u610f\uff1a  UIAElementArray  \u5e8f\u5217\u7f16\u53f7\u4ece  0  \u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u50cf Xpath \u90a3\u6837\u4ece  1 \u5f00\u59cb  \u4ee5\u4e0b\u662f\u6240\u6709\u53ef\u7528\u7684\u8c13\u8bcd(Predicate)\u7684\u5217\u8868\uff08\u4e3b\u8981\u53d6\u81ea  \u8c13\u8bcd(Predicate) \u7f16\u7a0b\u6307\u5357 )",
            "title": "iOS \u8c13\u8bcd(Predicate)"
        },
        {
            "location": "/cn/writing-running-appium/ios_predicate/#_1",
            "text": "= , ==\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u7b49\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f:  tableViews()[1].cells().firstWithPredicate(\"label == 'Olivia' \")\n\nsame in Xpath: /UIATableView[2]/UIATableCell[@label = 'Olivia'][1]  >= , =>\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u5927\u4e8e\u6216\u7b49\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f\u3002  <= , =<\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u5c0f\u4e8e\u6216\u7b49\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f\u3002  >\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u5927\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f\u3002  <\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u5c0f\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f\u3002  != , <>\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u4e0d\u7b49\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f\u3002  BETWEEN\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u7684\u503c\u5728\u53f3\u8fb9\u8868\u8fbe\u5f0f\u7684\u4e24\u4e2a\u8fb9\u754c\u503c\u4e4b\u95f4\u6216\u7b49\u4e8e\u5176\u4e2d\u4e00\u4e2a\u8fb9\u754c\u503c\u3002\u53f3\u8fb9\u8868\u8fbe\u5f0f\u4e3a\u4e00\u4e2a\u6709\u4e24\u4e2a\u503c\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u503c\u662f\u4e0a\u9650\uff0c\u7b2c\u4e8c\u4e2a\u503c\u662f\u4e0b\u9650(\u8fd9\u4e2a\u987a\u5e8f\u662f\u56fa\u5b9a\u7684) \uff0c\u4f8b\u5982  1 BETWEEN { 0 , 33 } \uff0c \u6216\u8005  $INPUT BETWEEN { $LOWER, $UPPER } \u3002\n\u5728 Objective-C\uff0c \u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 BETWEEN \u8c13\u8bcd(Predicate)\uff0c\u5982\u4e0b\u9762\u7684\u793a\u4f8b\u6240\u793a:  NSPredicate *betweenPredicate =\n    [NSPredicate predicateWithFormat: @\"attributeName BETWEEN %@\", @[@1, @10]];  \u8fd9\u521b\u5efa\u4e86\u4e00\u4e2a\u7b49\u4ef7\u4e8e  ( ( 1 <= attributeValue ) && ( attributeValue <= 10 ) )  \u7684\u8c13\u8bcd",
            "title": "\u57fa\u672c\u6bd4\u8f83"
        },
        {
            "location": "/cn/writing-running-appium/ios_predicate/#_2",
            "text": "TRUEPREDICATE\n- \u8ba1\u7b97\u7ed3\u679c\u6052\u7b49\u4e8e  TRUE  \u3002  FALSEPREDICATE\n- \u8ba1\u7b97\u7ed3\u679c\u6052\u7b49\u4e8e  FALSE \u3002",
            "title": "\u5e03\u5c14\u503c\u8c13\u8bcd"
        },
        {
            "location": "/cn/writing-running-appium/ios_predicate/#_3",
            "text": "AND , &&\n-  \u903b\u8f91\u4e0e\u3002  OR , ||\n-  \u903b\u8f91\u6216\u3002  NOT , !\n-  \u903b\u8f91\u975e\u3002",
            "title": "\u57fa\u672c\u7684\u590d\u5408\u8c13\u8bcd"
        },
        {
            "location": "/cn/writing-running-appium/ios_predicate/#_4",
            "text": "\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b57\u7b26\u4e32\u6bd4\u8f83\u662f\u533a\u5206\u5927\u5c0f\u5199\u548c\u97f3\u8c03( diacritic )\u7684\uff0c\u4f60\u53ef\u4ee5\u5728\u65b9\u62ec\u53f7\u4e2d\u7528\u5173\u952e\u5b57\u7b26   c  \u548c  d  \u6765\u4fee\u6539\u64cd\u4f5c\u7b26\u4ee5\u76f8\u5e94\u7684\u6307\u5b9a\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u548c\u53d8\u97f3\u7b26\u53f7\u3002\u4f8b\u5982 \u540d\u5b57\u7684\u5f00\u5934  firstName BEGINSWITH[cd] $FIRST_NAME  \uff08\u7ffb\u8bd1\u5907\u6ce8\uff1a\u8fd9\u91cc\u7684\u97f3\u8c03\u662f\u6307\u82f1\u6587\u5b57\u6bcd\u7684\u97f3\u8c03\uff0c\u5982  \"n\u00e1ive\"  \u548c  \"naive\" \u3002\u5982\u679c\u4e0d\u52a0\u5173\u952e\u5b57  d \uff0c\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4f1a\u8ba4\u4e3a\u662f\u4e0d\u7b49\u4ef7\u7684\u3002\uff09  BEGINSWITH\n- \u5de6\u8fb9\u7684\u8868\u8fbe\u5f0f\u4ee5\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u5f00\u59cb\u3002  scrollViews()[3].buttons().firstWithPredicate(\"name BEGINSWITH 'results toggle' \")\n\nsame in Xpath: /UIAScrollView[4]/UIAButton[starts-with(@name, 'results toggle')][1]  CONTAINS\n- \u5de6\u8fb9\u7684\u8868\u8fbe\u5f0f\u5305\u542b\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u3002  tableViews()[1].cells().withPredicate(\"ANY collectionViews[0].buttons.name CONTAINS 'opera'\")\n\nsame in Xpath: /UIATableView[2]/UIATableCell[UIACollectionView[1]/UIAButton[contains(@name, 'opera')]]  ENDSWITH\n- \u5de6\u8fb9\u7684\u8868\u8fbe\u5f0f\u4ee5\u53f3\u8fb9\u7684\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u7ed3\u675f\u3002  LIKE\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u7b49\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f: ? \u548c *\u53ef\u4f5c\u4e3a\u901a\u914d\u7b26\uff0c \u5176\u4e2d ? \u5339\u914d 1 \u4e2a\u5b57\u7b26\uff0c * \u5339\u914d 0 \u4e2a\u6216\u8005\u591a\u4e2a\u5b57\u7b26\u3002 \u5728 Mac OS X v10.4\uff0c \u901a\u914d\u7b26\u4e0d\u80fd\u5339\u914d\u6362\u884c\u7b26\u3002  tableViews()[0].cells().firstWithPredicate(\"name LIKE '*Total: $*' \")\n\nsame in Xpath: /UIATableView[1]/UIATableCell[matches(@name, '.*Total: \\$.*')][1]  MATCHES\n- \u5de6\u8fb9\u8868\u8fbe\u5f0f\u6839\u636eICU v3\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u98ce\u683c\u6bd4\u8f83\uff0c\u7b49\u4e8e\u53f3\u8fb9\u8868\u8fbe\u5f0f (\u8be6\u60c5\u8bf7\u770bICU\u7528\u6237\u6307\u5357\u4e2d\u7684  \u6b63\u5219\u8868\u8fbe\u5f0f )\u3002  tableViews().firstWithPredicate(\"value MATCHES '.*of 7' \")\n\nsame in Xpath: /UIATableView[matches(@value, '.*of 7')][1]",
            "title": "\u5b57\u7b26\u4e32\u6bd4\u8f83"
        },
        {
            "location": "/cn/writing-running-appium/ios_predicate/#_5",
            "text": "ANY , SOME\n- \u6307\u5b9a\u5339\u914d\u540e\u7eed\u8868\u8fbe\u5f0f\u7684\u4efb\u610f\u5143\u7d20\u3002\u4f8b\u5982  ANY children.age < 18  \u3002  tableViews()[0].cells().firstWithPredicate(\"SOME staticTexts.name = 'red'\").staticTexts().withName('red')\n\nsame in Xpath: /UIATableView[1]/UIATableCell[UIAStaticText/@name = 'red'][1]/UIAStaticText[@name = 'red']  ALL\n- \u6307\u5b9a\u5339\u914d\u540e\u7eed\u8868\u8fbe\u5f0f\u7684\u6240\u6709\u5143\u7d20\u3002\u4f8b\u5982  ALL children.age < 18  \u3002  NONE\n- \u6307\u5b9a\u4e0d\u5339\u914d\u540e\u7eed\u8868\u8fbe\u5f0f\u7684\u5143\u7d20\u3002\u4f8b\u5982  NONE children.age < 18  \u3002 \u903b\u8f91\u4e0a\u7b49\u4ef7\u4e8e  NOT (ANY ...)  \u3002  IN\n- \u7b49\u4ef7\u4e8e SQL \u7684 IN \u64cd\u4f5c\uff0c\u5de6\u8fb9\u7684\u8868\u8fbe\u5fc5\u987b\u51fa\u73b0\u5728\u53f3\u8fb9\u6307\u5b9a\u7684\u96c6\u5408\u4e2d\u3002\u4f8b\u5982  name IN { 'Ben', 'Melissa', 'Matthew' }  \u3002 \u8fd9\u4e2a\u96c6\u5408\u53ef\u4ee5\u662f\u4e00\u4e2a\u6570\u7ec4( array )\uff0c\u4e00\u4e2a\u5217\u8868( set )\uff0c \u6216\u8005\u4e00\u4e2a\u5b57\u5178( dictionary )\u3002\u5f53\u8fd9\u4e2a\u96c6\u5408\u662f\u5b57\u5178\u65f6\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u5b83\u7684\u503c( value )\u3002  array[index]\n- \u6307\u5b9a\u6570\u7ec4\u4e2d\u7279\u5b9a\u7d22\u5f15\u5904\u7684\u5143\u7d20\u3002  array[FIRST]\n- \u6307\u5b9a\u6570\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002  array[LAST]\n- \u6307\u5b9a\u6570\u7ec4\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002  array[SIZE]\n- \u6307\u5b9a\u6570\u7ec4\u7684\u5927\u5c0f  elements()[0].tableViews()[0].cells().withPredicate(\"staticTexts[SIZE] > 2\")\n\nsame in Xpath: /*[1]/UIATableView[1]/UIATableCell[count(UIAStaticText) > 2]",
            "title": "\u805a\u5408\u64cd\u4f5c"
        },
        {
            "location": "/cn/writing-running-appium/ios_predicate/#_6",
            "text": "C\u8bed\u8a00\u6807\u8bc6\u7b26 \n- \u4efb\u4f55C\u8bed\u8a00\u7684\u6807\u8bc6\u7b26\u90fd\u4e0d\u662f\u4fdd\u7559\u5b57\u3002  #symbol \n- \u7528\u6765\u628a\u4e00\u4e2a\u4fdd\u7559\u5b57\u8f6c\u4e49\u4e3a\u7528\u6237\u6807\u8bc6\u7b26\u3002  [\\]{octaldigit}{3} \n- \u7528\u6765\u8868\u793a\u4e00\u4e2a\u516b\u8fdb\u5236\u6570 (  \\ \u540e\u9762\u52a0\u4e0a3\u4f4d\u516b\u8fdb\u5236\u6570\u5b57)\u3002  [\\][xX]{hexdigit}{2} \n- \u7528\u4e8e\u8868\u793a\u5341\u516d\u8fdb\u5236\u6570 (  \\x  \u6216  \\X  \u540e\u9762\u52a0\u4e0a2\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57)\u3002  [\\][uU]{hexdigit}{4} \n- \u7528\u4e8e\u8868\u793a Unicode \u7f16\u7801 (  \\u  \u6216  \\U  \u540e\u9762\u52a0\u4e0a4\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57)\u3002",
            "title": "\u6807\u8bc6\u7b26"
        },
        {
            "location": "/cn/writing-running-appium/ios_predicate/#literals",
            "text": "\uff08\u7ffb\u8bd1\u5907\u6ce8\uff1aLiterals \u5728\u7f16\u7a0b\u8bed\u8a00\u9886\u57df\u7684\u610f\u601d\u662f\u5728\u4ee3\u7801\u4e2d\u53ef\u4ee5\u770b\u5f97\u5230\u7684(\u6216\u8bf4\u53ef\u89c6\u7684)\u90a3\u4e9b\u503c\u3002\u4f8b\u5982\u5b57\u7b26\u4e32  \"a\" \uff0c\u6570\u7ec4  [1, 2] \uff0c\u4f60\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u4e00\u773c\u770b\u51fa\u8fd9\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6570\u7ec4\u8fd8\u662f\u522b\u7684\u6570\u636e\u7c7b\u578b\u5e76\u77e5\u9053\u5b83\u7684\u503c\u3002\u8fd9\u4e00\u8282\u8bf4\u7684\u5c31\u662f\u8fd9\u4e9b\u503c\u7684\u5199\u6cd5\uff09  \u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u90fd\u80fd\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u4f46\u4ed6\u4eec\u4e0d\u4f1a\u5339\u914d\u5bf9\u65b9\uff08\u5355\u5f15\u53f7\u4e0d\u4f1a\u5339\u914d\u53cc\u5f15\u53f7\uff09\u3002\u4f8b\u5982\uff1a \"abc\"  and  'abc'  \u90fd\u662f\u53ef\u8bc6\u522b\u7684 \uff0c\u4f46\u662f  \"a'b'c\"  \u7b49\u4ef7\u4e8e a, 'b', c \u3002  FALSE , NO\n-  \u8868\u793a\u903b\u8f91\u4e0a\u7684 false\u3002  TRUE , YES\n-  \u8868\u793a\u903b\u8f91\u4e0a\u7684 true\u3002  NULL , NIL\n- \u7a7a\u503c\u3002  SELF\n- \u4ee3\u8868\u88ab\u4f7f\u7528\u7684\u5bf9\u8c61\u672c\u8eab\u3002  \"text\"\n- \u4e00\u4e2a\u5b57\u7b26\u4e32\u3002  'text'\n- \u540c\u4e0a\uff0c\u4e5f\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002  \u4ee5\u9017\u53f7\u5206\u9694\u7684\u6587\u672c\u6570\u7ec4 \n- \u4e3e\u4e2a\u4f8b\u5b50  { 'comma', 'separated', 'literal', 'array' }  \u3002  \u6807\u51c6\u7684\u6574\u6570\u548c\u5c0f\u6570 \n- \u4e3e\u4e2a\u4f8b\u5b50  1 , 27 , 2.71828 , 19.75  \u3002  \u5e26\u6709\u5e42\u6307\u6570\u7684\u5c0f\u6570 \n- \u4e3e\u4e2a\u4f8b\u5b50  9.2e-5  \u3002  0x\n- \u5341\u516d\u8fdb\u5236\u6570\u7684\u524d\u7f00\uff0c \u5982 0x11 \u8868\u793a\u5341\u516d\u8fdb\u5236\u657011\uff0c\u7b49\u540c\u4e8e\u5341\u8fdb\u5236\u768417\u3002  0o\n- \u516b\u8fdb\u5236\u6570\u7684\u524d\u7f00\u3002  0b\n- \u4e8c\u8fdb\u5236\u6570\u7684\u524d\u7f00\u3002",
            "title": "\u6587\u5b57 (Literals)"
        },
        {
            "location": "/cn/writing-running-appium/ios_predicate/#_7",
            "text": "\u4e0b\u9762\u7684\u90fd\u662f\u4fdd\u7559\u5b57\uff1a  AND, OR, IN, NOT, ALL, ANY, SOME, NONE, LIKE, CASEINSENSITIVE, CI, MATCHES, CONTAINS, BEGINSWITH, ENDSWITH, BETWEEN, NULL, NIL, SELF, TRUE, YES, FALSE, NO, FIRST, LAST, SIZE, ANYKEY, SUBQUERY, CAST, TRUEPREDICATE, FALSEPREDICATE",
            "title": "\u4fdd\u7559\u5b57"
        },
        {
            "location": "/cn/writing-running-appium/ios_predicate/#appium-predicate",
            "text": "Appium \u5728app.js\u4e2d\u6709  \u4e13\u95e8\u7684\u8c13\u8bcd(predicate)\u4f7f\u7528\u5e2e\u52a9\u6587\u6863  :   getFirstWithPredicate  getFirstWithPredicateWeighted  getAllWithPredicate  getNameContains   \u5982\u4e0b\u662f\u4e2aRuby\u7684\u4f8b\u5b50  # Ruby example\ntext = 'Various uses'\npredicate = \"name contains[c] '#{text}' || label contains[c] '#{text}' || value contains[c] '#{text}'\"\nelement = execute_script(%Q(au.mainApp().getFirstWithPredicate(\"#{predicate}\");))\n\nputs element.name # Buttons, Various uses of UIButton",
            "title": "Appium \u8c13\u8bcd(predicate)\u5e2e\u52a9\u6587\u6863"
        },
        {
            "location": "/cn/writing-running-appium/mobile-web/",
            "text": "\u81ea\u52a8\u5316\u6d4b\u8bd5\u79fb\u52a8\u7f51\u7edc\u5e94\u7528\n\n\n\u5982\u679c\u4f60\u6709\u5174\u8da3\u5728 iOS \u7cfb\u7edf\u4e0a\u7684 Safari \u6d4f\u89c8\u5668\u6216\u8005 Android \u7cfb\u7edf\u4e0a\u7684 Chrome \u6d4f\u89c8\u5668\u8fdb\u884c\u7f51\u9875\u81ea\u52a8\u5316\u7684\u8bdd\n\uff0cAppium\u53ef\u4ee5\u5e2e\u52a9\u4f60\u3002\u4f60\u53ea\u8981\u6b63\u5e38\u5730\u5199 WebDriver \u6d4b\u8bd5\uff0c\u901a\u8fc7\u7279\u522b\u7684\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u628a Appium \u5f53\u6210 Selenium \u670d\u52a1\u6765\u8fd0\u884c\u3002\n\n\n\u6a21\u62df\u5668\u4e0a\u7684\u79fb\u52a8\u7aefSafari\u6d4f\u89c8\u5668\n\n\n\u9996\u5148\uff0c\u786e\u5b9a\u4f60\u7684 Safari \u5f00\u53d1\u8005\u6a21\u5f0f\u5f00\u542f\uff0c\u79fb\u52a8\u8c03\u8bd5\u7aef\u53e3\u6253\u5f00\u3002\n\n\n\u5982\u679c\u4f60\u9700\u8981\u7528\u6a21\u62df\u5668\u6216\u771f\u5b9e\u8bbe\u5907\uff0c\u4f60\u5fc5\u987b\u5728\u7528 Appium \u4e4b\u524d\u6253\u5f00 Safari \u6d4f\u89c8\u5668\u3002\n\n\n\u7136\u540e\uff0c\u60f3\u5728\u79fb\u52a8\u7aef Safari \u4e0a\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\uff0c\u5c31\u9700\u8981\u6309\u5982\u4e0b\u8bbe\u7f6e desired capabilities\uff1a\n\n\n// javascript\n{\n  platformName: 'iOS'\n  , platformVersion: '7.1'\n  , browserName: 'Safari'\n  , deviceName: 'iPhone Simulator'\n}\n\n\n\n\n# python\n{\n  'platformName': 'iOS',\n  'platformVersion': '7.1',\n  'browserName': 'Safari',\n  'deviceName': 'iPhone Simulator'\n}\n\n\n\n\n// php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'iOS',\n            'platformVersion' => '7.1',\n            'browserName' => 'Safari',\n            'deviceName' => 'iPhone Simulator'\n        )\n    )\n);\n\n\n\n\n// java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"iOS\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"7.1\");\ncapabilities.setCapability(MobileCapabilityType.BROWSER_NAME, \"Safari\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"iPhone Simulator\");\n\n\n\n\niOS \u771f\u673a\u4e0a\u7684\u79fb\u52a8\u7aef Safari\n\n\n\u5728iOS 9.3\u53ca\u4ee5\u4e0b(pre-XCUITest)\u7248\u672c\u7cfb\u7edf\uff0c\u6211\u4eec\u501f\u52a9 SafariLauncher \u5e94\u7528\u5728\u79fb\u52a8\u7aefSafari\u8fd0\u884c\u6d4b\u8bd5\u3002\n\u8fd9\u662f\u56e0\u4e3aSafari\u662f\u82f9\u679c\u516c\u53f8\u7684\u5e94\u7528\uff0cInstruments \u4e0d\u80fd\u5728\u771f\u673a\u4e0a\u62c9\u8d77 Safari\u3002SafariLuncher \u53ef\u4ee5\u5e2e\u52a9\u6253\u5f00 Safari \u6d4f\u89c8\u5668\uff0c\u6d4f\u89c8\u5668\u4e00\u65e6\u6253\u5f00\uff0cRemote Debugger \u4f1a\u901a\u8fc7 \nios-webkit-debug-proxy\n \u81ea\u52a8\u8fde\u63a5\u3002\u5728 \nios-webkit-debug-proxy\n \u8fd0\u884c\u65f6\uff0c\n\u5fc5\u987b\u5728\u4f60\u7684iOS\u8bbe\u5907\u6d4b\u8bd5\u524d\uff0c\u4fe1\u4efb\u8fd9\u53f0\u8bbe\u5907\n\n\n\u6307\u5bfc\u5982\u4f55\u5b89\u88c5\u548c\u8fd0\u884c ios-webkit-debugger-proxy \uff0c\u53ef\u4ee5\u67e5\u9605 \niOS WebKit debug proxy\n\n\n\u5b89\u88c5\n\n\n\u5728\u771f\u5b9e\u4e0a\u8fd0\u884c\u6d4b\u8bd5\u524d\uff0c\u4f60\u9700\u8981\uff1a\n\n\n\n\n\u5b89\u88c5\u597d \nios-webkit-debug-proxy\n\uff0c\u8fd0\u884c\u5e76\u5728 27753 \u63a5\u53e3\u5f00\u542f\u76d1\u542c\u3002\uff08\u67e5\u9605 \nhybrid \u6587\u6863\n \u4f5c\u4e3a\u6307\u5bfc\uff09\n\n\n\u5728 iOS \u8bbe\u5907\u4e0a\u5f00\u542f \nweb inspector\n\uff08\u8bbe\u7f6e>safari>\u9ad8\u7ea7\uff09\n\n\n\u786e\u4fdd \nSafariLauncher\n \u6b63\u5e38\u5de5\u4f5c (\u53c2\u8003 \nSafariLauncher docs\n)\n\n\n\n\n\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\n\n\n\u5728 safari \u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\uff0c\u53ea\u9700\u7b80\u5355\u5730\u8bbe\u7f6e \n\"browserName\"\n \u4e3a \n\"Safari\"\n\n\nJava\u793a\u4f8b\n\n\n// java\n//setup the web driver and launch the webview app.\nDesiredCapabilities desiredCapabilities = new DesiredCapabilities();\ndesiredCapabilities.setCapability(MobileCapabilityType.BROWSER_NAME, \"Safari\");\nURL url = new URL(\"http://127.0.0.1:4723/wd/hub\");\nAppiumDriver driver = new AppiumDriver(url, desiredCapabilities);\n\n// \u6d4f\u89c8\u7f51\u9875\u548c\u5b9a\u4f4d\u9875\u9762\u5143\u7d20\u53d6\u5f97id\u3002\ndriver.get(\"http://saucelabs.com/test/guinea-pig\");\nWebElement div = driver.findElement(By.id(\"i_am_an_id\"));\nAssert.assertEquals(\"I am a div\", div.getText()); //check the text retrieved matches expected value\ndriver.findElement(By.id(\"comments\")).sendKeys(\"My comment\"); //populate the comments field by id.\n\n//\u5173\u95ed\u6d4f\u89c8\u5668\ndriver.quit();\n\n\n\n\nPython Example\n\n\n# python\n# \u5efa\u7acbweb driver\uff0c\u5f00\u542f\u6d4f\u89c8\u5668app\u3002\ncapabilities = { 'browserName': 'Safari' }\ndriver = webdriver.Remote('http://localhost:4723/wd/hub', capabilities)\n\n# \u6d4f\u89c8\u7f51\u9875\u548c\u5b9a\u4f4d\u9875\u9762\u5143\u7d20\u53d6\u5f97id\u3002\ndriver.get('http://saucelabs.com/test/guinea-pig');\ndiv = driver.find_element_by_id('i_am_an_id')\n# \u68c0\u67e5\u6587\u672c\u662f\u5426\u5339\u914d\u503c\nassertEqual('I am a div', div.text)\n\n#  \u901a\u8fc7\u5143\u7d20id\u586b\u503c\u3002\ndriver.find_element_by_id('comments').send_keys('My comment')\n\n# \u5173\u95ed\u6d4f\u89c8\u5668\u3002\ndriver.quit()\n\n\n\n\n// php\nclass ContextTests extends PHPUnit_Extensions_AppiumTestCase\n{\n    public static $browsers = array(\n        array(\n            'desiredCapabilities' => array(\n                'platformName' => 'iOS',\n                'platformVersion' => '7.1',\n                'browserName' => 'Safari',\n                'deviceName' => 'iPhone Simulator'\n            )\n        )\n    );\n\n    public function testThings()\n    {\n        $this->get('http://saucelabs.com/test/guinea-pig');\n\n        $div = $this->byId('i_am_an_id');\n        $this->assertEquals('I am a div', $div->text());\n\n        $this->byId('comments')->sendKeys('My comment');\n    }\n}\n\n\n\n\n\u5728\u6a21\u62df\u5668\u548c\u771f\u673a\u4e0a\u7684\u79fb\u52a8\u7aef Chrome\n\n\n\u524d\u63d0\u8bbe\u7f6e:\n\n\n\n\n\u786e\u4fdd Chrome (\u5e94\u7528\u5305\u540d \ncom.android.chrome\n) \u5728\u8bbe\u5907\u6216\u8005\u6a21\u62df\u5668\u4e0a\u5b89\u88c5\u597d\u4e86\u3002\u4e0d\u7f16\u8bd1 Chromium\uff0c\u5728 x86 \u7248\u672c\u7684\u6a21\u62df\u5668\u4e0a\u5b89\u88c5 Chrome \u5df2\u7ecf\u4e0d\u53ef\u80fd\u4e86\u3002\u6240\u4ee5\u4f60\u9700\u8981\u8fd0\u884c\u4e00\u4e2a ARM \u7248\u672c\u7684\u6a21\u62df\u5668\uff0c\u7136\u540e\u4ece\u771f\u673a\u4e0a\u590d\u5236\u4e00\u4e2a Chrome APK \u5230\u6a21\u62df\u5668\u4e0a\u3002\n\n\n\u5728\u7279\u5b9a\u7248\u672c\u7684 Chrome \u4e0a\u8fdb\u884c\u81ea\u52a8\u5316\uff0c\u9700\u8981\u5b89\u88c5\u548c\u914d\u7f6e\u4e0d\u540c\u7248\u672c\u7684 Chromedriver\uff0c\u66f4\u591a\u4fe1\u606f\u53c2\u8003\n\u6587\u6863\n \n\n\n\n\n\u7136\u540e\uff0c\u4f7f\u7528\u5982\u4e0b\u8bbe\u7f6e\uff0c\u5728\u4f60\u7684Chrome\u4e0b\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\uff1a\n\n\n// javascript\n{\n  platformName: 'Android'\n  , platformVersion: '4.4'\n  , deviceName: 'Android Emulator'\n  , browserName: 'Chrome'\n};\n\n\n\n\n# python\n{\n  'platformName': 'Android',\n  'platformVersion': '4.4',\n  'deviceName': 'Android Emulator',\n  'browserName': 'Chrome'\n}\n\n\n\n\n// php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'Android',\n            'platformVersion' => '4.4',\n            'browserName' => 'Chrome',\n            'deviceName' => 'Android Emulator'\n        )\n    )\n);\n\n\n\n\n// java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"Android\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"4.4\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"Android Emulator\");\ncapabilities.setCapability(MobileCapabilityType.BROWSER_NAME, \"Chrome\");\n\n\n\n\n\u6ce8\u610f\uff1a\u5728 4.4+ \u7248\u672c\u7684\u8bbe\u5907\u4e0a\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c06 \nbrowserName\n \u8bbe\u7f6e\u4e3a'Browser' \u5728\u5185\u5efa\u7684\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u81ea\u52a8\u5316\u3002\u8bbe\u7f6e\u6d4f\u89c8\u5668\u4e3a'Chromium'\u662f\u5728\u6240\u6709\u8bbe\u5907\u53ef\u4ee5\u8fd0\u884c\u7684\u3002\u5728\u6240\u6709\u8bbe\u5907\u4e0a\uff0c\u4f60\u53ef\u4ee5\u5c06 \nbrowserName\n \u8bbe\u7f6e\u4e3a 'Chromium' \u6765\u5bf9Chromium\u7684\u67d0\u4e2a\u7248\u672c\u8fdb\u884c\u81ea\u52a8\u5316\u3002\n\n\nChromedriver \u7684\u969c\u788d\u6392\u9664\n\n\n\u622a\u6b62 Chrome Version 33\uff0c\u8bbe\u5907\u4e0d\u5728\u9700\u8981\u88ab root\u3002\u5728\u8fd9\u4e4b\u524d\uff0c\u8bbe\u5907\u9700\u8981\u88ab root\uff0c\u56e0\u4e3a ChromeDriver \u8bbe\u7f6e\u542f\u52a8Chrome\u7684\u547d\u4ee4\u884c\u53c2\u6570\u9700\u8981\u5728 /data/local \u76ee\u5f55\u7684\u5199\u5165\u6743\u9650\u3002\n\n\n\u5982\u679c\u5728 Chrome \u4f4e\u4e8e 33 \u7248\u672c\u4e0a\u6d4b\u8bd5\uff0c\u8bf7\u786e\u4fdd adb shell \u6709\u8bbe\u5907\u8bfb\u53d6/\u5199\u5165  /data/local \u6743\u9650\u3002\n\n\n$ adb shell su -c chmod 777 /data/local\n\n\n\n\n\u66f4\u591achroomedriver\u6587\u6863\u53c2\u89c1(https://sites.google.com/a/chromium.org/chromedriver/getting-started/getting-started---android)\n\n\n\u672c\u6587\u7531 \ntestly\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Mobile web"
        },
        {
            "location": "/cn/writing-running-appium/mobile-web/#_1",
            "text": "\u5982\u679c\u4f60\u6709\u5174\u8da3\u5728 iOS \u7cfb\u7edf\u4e0a\u7684 Safari \u6d4f\u89c8\u5668\u6216\u8005 Android \u7cfb\u7edf\u4e0a\u7684 Chrome \u6d4f\u89c8\u5668\u8fdb\u884c\u7f51\u9875\u81ea\u52a8\u5316\u7684\u8bdd\n\uff0cAppium\u53ef\u4ee5\u5e2e\u52a9\u4f60\u3002\u4f60\u53ea\u8981\u6b63\u5e38\u5730\u5199 WebDriver \u6d4b\u8bd5\uff0c\u901a\u8fc7\u7279\u522b\u7684\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u628a Appium \u5f53\u6210 Selenium \u670d\u52a1\u6765\u8fd0\u884c\u3002",
            "title": "\u81ea\u52a8\u5316\u6d4b\u8bd5\u79fb\u52a8\u7f51\u7edc\u5e94\u7528"
        },
        {
            "location": "/cn/writing-running-appium/mobile-web/#safari",
            "text": "\u9996\u5148\uff0c\u786e\u5b9a\u4f60\u7684 Safari \u5f00\u53d1\u8005\u6a21\u5f0f\u5f00\u542f\uff0c\u79fb\u52a8\u8c03\u8bd5\u7aef\u53e3\u6253\u5f00\u3002  \u5982\u679c\u4f60\u9700\u8981\u7528\u6a21\u62df\u5668\u6216\u771f\u5b9e\u8bbe\u5907\uff0c\u4f60\u5fc5\u987b\u5728\u7528 Appium \u4e4b\u524d\u6253\u5f00 Safari \u6d4f\u89c8\u5668\u3002  \u7136\u540e\uff0c\u60f3\u5728\u79fb\u52a8\u7aef Safari \u4e0a\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\uff0c\u5c31\u9700\u8981\u6309\u5982\u4e0b\u8bbe\u7f6e desired capabilities\uff1a  // javascript\n{\n  platformName: 'iOS'\n  , platformVersion: '7.1'\n  , browserName: 'Safari'\n  , deviceName: 'iPhone Simulator'\n}  # python\n{\n  'platformName': 'iOS',\n  'platformVersion': '7.1',\n  'browserName': 'Safari',\n  'deviceName': 'iPhone Simulator'\n}  // php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'iOS',\n            'platformVersion' => '7.1',\n            'browserName' => 'Safari',\n            'deviceName' => 'iPhone Simulator'\n        )\n    )\n);  // java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"iOS\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"7.1\");\ncapabilities.setCapability(MobileCapabilityType.BROWSER_NAME, \"Safari\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"iPhone Simulator\");",
            "title": "\u6a21\u62df\u5668\u4e0a\u7684\u79fb\u52a8\u7aefSafari\u6d4f\u89c8\u5668"
        },
        {
            "location": "/cn/writing-running-appium/mobile-web/#ios-safari",
            "text": "\u5728iOS 9.3\u53ca\u4ee5\u4e0b(pre-XCUITest)\u7248\u672c\u7cfb\u7edf\uff0c\u6211\u4eec\u501f\u52a9 SafariLauncher \u5e94\u7528\u5728\u79fb\u52a8\u7aefSafari\u8fd0\u884c\u6d4b\u8bd5\u3002\n\u8fd9\u662f\u56e0\u4e3aSafari\u662f\u82f9\u679c\u516c\u53f8\u7684\u5e94\u7528\uff0cInstruments \u4e0d\u80fd\u5728\u771f\u673a\u4e0a\u62c9\u8d77 Safari\u3002SafariLuncher \u53ef\u4ee5\u5e2e\u52a9\u6253\u5f00 Safari \u6d4f\u89c8\u5668\uff0c\u6d4f\u89c8\u5668\u4e00\u65e6\u6253\u5f00\uff0cRemote Debugger \u4f1a\u901a\u8fc7  ios-webkit-debug-proxy  \u81ea\u52a8\u8fde\u63a5\u3002\u5728  ios-webkit-debug-proxy  \u8fd0\u884c\u65f6\uff0c\n\u5fc5\u987b\u5728\u4f60\u7684iOS\u8bbe\u5907\u6d4b\u8bd5\u524d\uff0c\u4fe1\u4efb\u8fd9\u53f0\u8bbe\u5907  \u6307\u5bfc\u5982\u4f55\u5b89\u88c5\u548c\u8fd0\u884c ios-webkit-debugger-proxy \uff0c\u53ef\u4ee5\u67e5\u9605  iOS WebKit debug proxy",
            "title": "iOS \u771f\u673a\u4e0a\u7684\u79fb\u52a8\u7aef Safari"
        },
        {
            "location": "/cn/writing-running-appium/mobile-web/#_2",
            "text": "\u5728\u771f\u5b9e\u4e0a\u8fd0\u884c\u6d4b\u8bd5\u524d\uff0c\u4f60\u9700\u8981\uff1a   \u5b89\u88c5\u597d  ios-webkit-debug-proxy \uff0c\u8fd0\u884c\u5e76\u5728 27753 \u63a5\u53e3\u5f00\u542f\u76d1\u542c\u3002\uff08\u67e5\u9605  hybrid \u6587\u6863  \u4f5c\u4e3a\u6307\u5bfc\uff09  \u5728 iOS \u8bbe\u5907\u4e0a\u5f00\u542f  web inspector \uff08\u8bbe\u7f6e>safari>\u9ad8\u7ea7\uff09  \u786e\u4fdd  SafariLauncher  \u6b63\u5e38\u5de5\u4f5c (\u53c2\u8003  SafariLauncher docs )",
            "title": "\u5b89\u88c5"
        },
        {
            "location": "/cn/writing-running-appium/mobile-web/#_3",
            "text": "\u5728 safari \u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\uff0c\u53ea\u9700\u7b80\u5355\u5730\u8bbe\u7f6e  \"browserName\"  \u4e3a  \"Safari\"",
            "title": "\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5"
        },
        {
            "location": "/cn/writing-running-appium/mobile-web/#java",
            "text": "// java\n//setup the web driver and launch the webview app.\nDesiredCapabilities desiredCapabilities = new DesiredCapabilities();\ndesiredCapabilities.setCapability(MobileCapabilityType.BROWSER_NAME, \"Safari\");\nURL url = new URL(\"http://127.0.0.1:4723/wd/hub\");\nAppiumDriver driver = new AppiumDriver(url, desiredCapabilities);\n\n// \u6d4f\u89c8\u7f51\u9875\u548c\u5b9a\u4f4d\u9875\u9762\u5143\u7d20\u53d6\u5f97id\u3002\ndriver.get(\"http://saucelabs.com/test/guinea-pig\");\nWebElement div = driver.findElement(By.id(\"i_am_an_id\"));\nAssert.assertEquals(\"I am a div\", div.getText()); //check the text retrieved matches expected value\ndriver.findElement(By.id(\"comments\")).sendKeys(\"My comment\"); //populate the comments field by id.\n\n//\u5173\u95ed\u6d4f\u89c8\u5668\ndriver.quit();",
            "title": "Java\u793a\u4f8b"
        },
        {
            "location": "/cn/writing-running-appium/mobile-web/#python-example",
            "text": "# python\n# \u5efa\u7acbweb driver\uff0c\u5f00\u542f\u6d4f\u89c8\u5668app\u3002\ncapabilities = { 'browserName': 'Safari' }\ndriver = webdriver.Remote('http://localhost:4723/wd/hub', capabilities)\n\n# \u6d4f\u89c8\u7f51\u9875\u548c\u5b9a\u4f4d\u9875\u9762\u5143\u7d20\u53d6\u5f97id\u3002\ndriver.get('http://saucelabs.com/test/guinea-pig');\ndiv = driver.find_element_by_id('i_am_an_id')\n# \u68c0\u67e5\u6587\u672c\u662f\u5426\u5339\u914d\u503c\nassertEqual('I am a div', div.text)\n\n#  \u901a\u8fc7\u5143\u7d20id\u586b\u503c\u3002\ndriver.find_element_by_id('comments').send_keys('My comment')\n\n# \u5173\u95ed\u6d4f\u89c8\u5668\u3002\ndriver.quit()  // php\nclass ContextTests extends PHPUnit_Extensions_AppiumTestCase\n{\n    public static $browsers = array(\n        array(\n            'desiredCapabilities' => array(\n                'platformName' => 'iOS',\n                'platformVersion' => '7.1',\n                'browserName' => 'Safari',\n                'deviceName' => 'iPhone Simulator'\n            )\n        )\n    );\n\n    public function testThings()\n    {\n        $this->get('http://saucelabs.com/test/guinea-pig');\n\n        $div = $this->byId('i_am_an_id');\n        $this->assertEquals('I am a div', $div->text());\n\n        $this->byId('comments')->sendKeys('My comment');\n    }\n}",
            "title": "Python Example"
        },
        {
            "location": "/cn/writing-running-appium/mobile-web/#chrome",
            "text": "\u524d\u63d0\u8bbe\u7f6e:   \u786e\u4fdd Chrome (\u5e94\u7528\u5305\u540d  com.android.chrome ) \u5728\u8bbe\u5907\u6216\u8005\u6a21\u62df\u5668\u4e0a\u5b89\u88c5\u597d\u4e86\u3002\u4e0d\u7f16\u8bd1 Chromium\uff0c\u5728 x86 \u7248\u672c\u7684\u6a21\u62df\u5668\u4e0a\u5b89\u88c5 Chrome \u5df2\u7ecf\u4e0d\u53ef\u80fd\u4e86\u3002\u6240\u4ee5\u4f60\u9700\u8981\u8fd0\u884c\u4e00\u4e2a ARM \u7248\u672c\u7684\u6a21\u62df\u5668\uff0c\u7136\u540e\u4ece\u771f\u673a\u4e0a\u590d\u5236\u4e00\u4e2a Chrome APK \u5230\u6a21\u62df\u5668\u4e0a\u3002  \u5728\u7279\u5b9a\u7248\u672c\u7684 Chrome \u4e0a\u8fdb\u884c\u81ea\u52a8\u5316\uff0c\u9700\u8981\u5b89\u88c5\u548c\u914d\u7f6e\u4e0d\u540c\u7248\u672c\u7684 Chromedriver\uff0c\u66f4\u591a\u4fe1\u606f\u53c2\u8003 \u6587\u6863     \u7136\u540e\uff0c\u4f7f\u7528\u5982\u4e0b\u8bbe\u7f6e\uff0c\u5728\u4f60\u7684Chrome\u4e0b\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\uff1a  // javascript\n{\n  platformName: 'Android'\n  , platformVersion: '4.4'\n  , deviceName: 'Android Emulator'\n  , browserName: 'Chrome'\n};  # python\n{\n  'platformName': 'Android',\n  'platformVersion': '4.4',\n  'deviceName': 'Android Emulator',\n  'browserName': 'Chrome'\n}  // php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'Android',\n            'platformVersion' => '4.4',\n            'browserName' => 'Chrome',\n            'deviceName' => 'Android Emulator'\n        )\n    )\n);  // java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"Android\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"4.4\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"Android Emulator\");\ncapabilities.setCapability(MobileCapabilityType.BROWSER_NAME, \"Chrome\");  \u6ce8\u610f\uff1a\u5728 4.4+ \u7248\u672c\u7684\u8bbe\u5907\u4e0a\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5c06  browserName  \u8bbe\u7f6e\u4e3a'Browser' \u5728\u5185\u5efa\u7684\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u81ea\u52a8\u5316\u3002\u8bbe\u7f6e\u6d4f\u89c8\u5668\u4e3a'Chromium'\u662f\u5728\u6240\u6709\u8bbe\u5907\u53ef\u4ee5\u8fd0\u884c\u7684\u3002\u5728\u6240\u6709\u8bbe\u5907\u4e0a\uff0c\u4f60\u53ef\u4ee5\u5c06  browserName  \u8bbe\u7f6e\u4e3a 'Chromium' \u6765\u5bf9Chromium\u7684\u67d0\u4e2a\u7248\u672c\u8fdb\u884c\u81ea\u52a8\u5316\u3002",
            "title": "\u5728\u6a21\u62df\u5668\u548c\u771f\u673a\u4e0a\u7684\u79fb\u52a8\u7aef Chrome"
        },
        {
            "location": "/cn/writing-running-appium/mobile-web/#chromedriver",
            "text": "\u622a\u6b62 Chrome Version 33\uff0c\u8bbe\u5907\u4e0d\u5728\u9700\u8981\u88ab root\u3002\u5728\u8fd9\u4e4b\u524d\uff0c\u8bbe\u5907\u9700\u8981\u88ab root\uff0c\u56e0\u4e3a ChromeDriver \u8bbe\u7f6e\u542f\u52a8Chrome\u7684\u547d\u4ee4\u884c\u53c2\u6570\u9700\u8981\u5728 /data/local \u76ee\u5f55\u7684\u5199\u5165\u6743\u9650\u3002  \u5982\u679c\u5728 Chrome \u4f4e\u4e8e 33 \u7248\u672c\u4e0a\u6d4b\u8bd5\uff0c\u8bf7\u786e\u4fdd adb shell \u6709\u8bbe\u5907\u8bfb\u53d6/\u5199\u5165  /data/local \u6743\u9650\u3002  $ adb shell su -c chmod 777 /data/local  \u66f4\u591achroomedriver\u6587\u6863\u53c2\u89c1(https://sites.google.com/a/chromium.org/chromedriver/getting-started/getting-started---android)  \u672c\u6587\u7531  testly  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "Chromedriver \u7684\u969c\u788d\u6392\u9664"
        },
        {
            "location": "/cn/writing-running-appium/network_connection/",
            "text": "\u8c03\u6574\u7f51\u7edc\u8fde\u63a5\n\n\nSelenium [\u79fb\u52a8 JSON \u534f\u8bae\u89c4\u8303]\uff08https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md) \u652f\u6301\u4e00\u4e2a\u83b7\u53d6\u548c\u8bbe\u7f6e\u7f51\u7edc\u8fde\u63a5\u7684[API](https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#104\uff09\u3002\u8fd9\u4e2a API \u4f1a\u8bbe\u7f6e\u4e00\u4e2a\u63a9\u7801\uff0c\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u7f51\u7edc\u72b6\u6001\u5bf9\u5e94\u4e00\u4e2a\u63a9\u7801\n\n\n\n\n\n\n\n\n\u503c (\u540d\u79f0)\n\n\n\u6570\u636e\n\n\nWifi\n\n\n\u98de\u884c\u6a21\u5f0f\n\n\n\n\n\n\n\n\n\n\n0 (\u65e0\u7f51)\n\n\n0\n\n\n0\n\n\n0\n\n\n\n\n\n\n1 (\u98de\u884c\u6a21\u5f0f)\n\n\n0\n\n\n0\n\n\n1\n\n\n\n\n\n\n2 (Wifi)\n\n\n0\n\n\n1\n\n\n0\n\n\n\n\n\n\n4 (\u79fb\u52a8\u6570\u636e)\n\n\n1\n\n\n0\n\n\n0\n\n\n\n\n\n\n6 (\u6240\u6709\u7f51\u7edc)\n\n\n1\n\n\n1\n\n\n0\n\n\n\n\n\n\n\n\niOS\n\n\n\u4e0d\u5e78\u7684\u662f\uff0c\u76ee\u524d Appium \u4e0d\u652f\u6301\u8fd9\u4e2a API\u3002\n\n\nAndroid\n\n\nAndroid \u4e0a\u6709\u5982\u4e0b\u9650\u5236\uff1a\n\n\n\u771f\u673a\n\n\n\n\n\u53ea\u80fd\u5728 Android 6 \u6216\u8005\u4ee5\u4e0b\uff0c\u6539\u53d8\u98de\u884c\u6a21\u5f0f\n\n\n\u53ea\u80fd\u5728 Android 4.4 \u6216\u8005\u4ee5\u4e0b\u6539\u53d8\u6570\u636e\u8fde\u63a5\u72b6\u6001\u30025.0 \u6216\u8005\u4ee5\u4e0a\u5fc5\u987b root \u4e86\u4e4b\u540e\u624d\u80fd\u5de5\u4f5c\u3002(\u6bd4\u5982\uff0c\u53ef\u4ee5\u8fd0\u884c \nsu\n )\n\n\n\u6240\u6709\u7684 Android \u7248\u672c\u90fd\u80fd\u6539\u53d8 WI-FI \u8fde\u63a5\u72b6\u6001\n\n\n\n\n\u6a21\u62df\u5668\n\n\n\n\n\u53ea\u80fd\u5728 Android 6 \u6216\u8005\u4ee5\u4e0b\uff0c\u6539\u53d8\u98de\u884c\u6a21\u5f0f\n\n\n\u6240\u6709\u7684 Android \u7248\u672c\u90fd\u80fd\u6539\u53d8\u6570\u636e\u8fde\u63a5\n\n\n\u6240\u6709\u7684 Android \u7248\u672c\u90fd\u80fd\u6539\u53d8 WI-FI \u8fde\u63a5\u72b6\u6001\n\n\n\n\nWindows\n\n\n\u4e0d\u5e78\u7684\u662f\uff0c\u76ee\u524d Appium \u6d4b\u8bd5 Windows \u5e94\u7528\uff0c\u4e0d\u652f\u6301\u8fd9\u4e2a API\u3002\n\n\n// javascript\n// set airplane mode\ndriver.setNetworkConnection(1)\n\n// set wifi only\ndriver.setNetworkConnection(2)\n\n// set data only\ndriver.setNetworkConnection(4)\n\n// set wifi and data\ndriver.setNetworkConnection(6)\n\n\n\n\n\u68c0\u7d22\u7f51\u7edc\u8fde\u63a5\u8bbe\u7f6e\u8fd4\u56de\u76f8\u540c\u7684\u63a9\u7801\uff0c\u5176\u4e2d\u72b6\u6001\u53ef\u4ee5\u89e3\u7801\u3002\n\n\n// javascript\ndriver.getNetworkConnection().then(function (connectionType) {\n  switch (connectionType) {\n    case 0:\n      // no network connection\n      break;\n    case 1:\n      // airplane mode\n      break;\n    case 2:\n      // wifi\n      break;\n    case 4:\n      // data\n      break;\n    case 6:\n      // wifi and data\n      break;\n  }\n});\n\n\n\n\n\u672c\u6587\u7531 \ntestly\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Network connection"
        },
        {
            "location": "/cn/writing-running-appium/network_connection/#_1",
            "text": "Selenium [\u79fb\u52a8 JSON \u534f\u8bae\u89c4\u8303]\uff08https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md) \u652f\u6301\u4e00\u4e2a\u83b7\u53d6\u548c\u8bbe\u7f6e\u7f51\u7edc\u8fde\u63a5\u7684[API](https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#104\uff09\u3002\u8fd9\u4e2a API \u4f1a\u8bbe\u7f6e\u4e00\u4e2a\u63a9\u7801\uff0c\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u7f51\u7edc\u72b6\u6001\u5bf9\u5e94\u4e00\u4e2a\u63a9\u7801     \u503c (\u540d\u79f0)  \u6570\u636e  Wifi  \u98de\u884c\u6a21\u5f0f      0 (\u65e0\u7f51)  0  0  0    1 (\u98de\u884c\u6a21\u5f0f)  0  0  1    2 (Wifi)  0  1  0    4 (\u79fb\u52a8\u6570\u636e)  1  0  0    6 (\u6240\u6709\u7f51\u7edc)  1  1  0",
            "title": "\u8c03\u6574\u7f51\u7edc\u8fde\u63a5"
        },
        {
            "location": "/cn/writing-running-appium/network_connection/#ios",
            "text": "\u4e0d\u5e78\u7684\u662f\uff0c\u76ee\u524d Appium \u4e0d\u652f\u6301\u8fd9\u4e2a API\u3002",
            "title": "iOS"
        },
        {
            "location": "/cn/writing-running-appium/network_connection/#android",
            "text": "Android \u4e0a\u6709\u5982\u4e0b\u9650\u5236\uff1a",
            "title": "Android"
        },
        {
            "location": "/cn/writing-running-appium/network_connection/#_2",
            "text": "\u53ea\u80fd\u5728 Android 6 \u6216\u8005\u4ee5\u4e0b\uff0c\u6539\u53d8\u98de\u884c\u6a21\u5f0f  \u53ea\u80fd\u5728 Android 4.4 \u6216\u8005\u4ee5\u4e0b\u6539\u53d8\u6570\u636e\u8fde\u63a5\u72b6\u6001\u30025.0 \u6216\u8005\u4ee5\u4e0a\u5fc5\u987b root \u4e86\u4e4b\u540e\u624d\u80fd\u5de5\u4f5c\u3002(\u6bd4\u5982\uff0c\u53ef\u4ee5\u8fd0\u884c  su  )  \u6240\u6709\u7684 Android \u7248\u672c\u90fd\u80fd\u6539\u53d8 WI-FI \u8fde\u63a5\u72b6\u6001",
            "title": "\u771f\u673a"
        },
        {
            "location": "/cn/writing-running-appium/network_connection/#_3",
            "text": "\u53ea\u80fd\u5728 Android 6 \u6216\u8005\u4ee5\u4e0b\uff0c\u6539\u53d8\u98de\u884c\u6a21\u5f0f  \u6240\u6709\u7684 Android \u7248\u672c\u90fd\u80fd\u6539\u53d8\u6570\u636e\u8fde\u63a5  \u6240\u6709\u7684 Android \u7248\u672c\u90fd\u80fd\u6539\u53d8 WI-FI \u8fde\u63a5\u72b6\u6001",
            "title": "\u6a21\u62df\u5668"
        },
        {
            "location": "/cn/writing-running-appium/network_connection/#windows",
            "text": "\u4e0d\u5e78\u7684\u662f\uff0c\u76ee\u524d Appium \u6d4b\u8bd5 Windows \u5e94\u7528\uff0c\u4e0d\u652f\u6301\u8fd9\u4e2a API\u3002  // javascript\n// set airplane mode\ndriver.setNetworkConnection(1)\n\n// set wifi only\ndriver.setNetworkConnection(2)\n\n// set data only\ndriver.setNetworkConnection(4)\n\n// set wifi and data\ndriver.setNetworkConnection(6)  \u68c0\u7d22\u7f51\u7edc\u8fde\u63a5\u8bbe\u7f6e\u8fd4\u56de\u76f8\u540c\u7684\u63a9\u7801\uff0c\u5176\u4e2d\u72b6\u6001\u53ef\u4ee5\u89e3\u7801\u3002  // javascript\ndriver.getNetworkConnection().then(function (connectionType) {\n  switch (connectionType) {\n    case 0:\n      // no network connection\n      break;\n    case 1:\n      // airplane mode\n      break;\n    case 2:\n      // wifi\n      break;\n    case 4:\n      // data\n      break;\n    case 6:\n      // wifi and data\n      break;\n  }\n});  \u672c\u6587\u7531  testly  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "Windows"
        },
        {
            "location": "/cn/writing-running-appium/reset-strategies/",
            "text": "\u91cd\u7f6e\u7b56\u7565\n\n\n\n\n\n\n\n\n\u81ea\u52a8\u5316\u5e73\u53f0\n\n\n\u9ed8\u8ba4\n\n\nfullReset\n\n\nnoReset\n\n\n\n\n\n\n\n\n\n\niOS (\u5305\u62ecXCUITest)\n\n\n\u6d4b\u8bd5\u5b8c\u6210\u540e\u5173\u95ed\u6a21\u62df\u5668\u3002\u4e0d\u9500\u6bc1\u6a21\u62df\u5668\u3002\u4e0d\u4ece\u771f\u673a\u4e0a\u5378\u8f7d\u5e94\u7528\u3002\n\n\n\u6d4b\u8bd5\u5b8c\u6210\u540e\u5378\u8f7d\u5e94\u7528, \u6a21\u62df\u5668\u6d4b\u8bd5\u7ed3\u675f\u540e\u9500\u6bc1\u6a21\u62df\u5668\u3002\n\n\n\u6d4b\u8bd5\u7ed3\u675f\u540e\u4e0d\u9500\u6bc1\u6216\u8005\u5173\u95ed\u6a21\u62df\u5668\u3002\u542f\u52a8\u6d4b\u8bd5\u8fd0\u884c\u5728\u4efb\u610f\u6b63\u5728\u8fd0\u884c\u7684\u6a21\u62df\u5668\u6216\u8005\u63d2\u5165\u7684\u771f\u673a\u3002\n\n\n\n\n\n\nAndroid\n\n\n\u6d4b\u8bd5\u7ed3\u675f\u540e\u505c\u6b62\u5e94\u7528\uff0c\u6e05\u7406\u5e94\u7528\u6570\u636e\uff0c\u4e0d\u5378\u8f7d\u5e94\u7528\u5305\u3002\n\n\n\u6d4b\u8bd5\u7ed3\u675f\u540e\u505c\u6b62\u5e94\u7528\uff0c\u6e05\u7406\u5e94\u7528\u6570\u636e\uff0c\u5378\u8f7d\u5e94\u7528\u5305\u3002\n\n\n\u4e0d\u505c\u6b62\u5e94\u7528\uff0c\u4e0d\u6e05\u7406\u5e94\u7528\u6570\u636e\uff0c\u4e0d\u5378\u8f7d\u5e94\u7528\u5305\u3002\n\n\n\n\n\n\n\n\n\u672c\u6587\u7531 yanqiang@douban.com \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Reset strategies"
        },
        {
            "location": "/cn/writing-running-appium/reset-strategies/#_1",
            "text": "\u81ea\u52a8\u5316\u5e73\u53f0  \u9ed8\u8ba4  fullReset  noReset      iOS (\u5305\u62ecXCUITest)  \u6d4b\u8bd5\u5b8c\u6210\u540e\u5173\u95ed\u6a21\u62df\u5668\u3002\u4e0d\u9500\u6bc1\u6a21\u62df\u5668\u3002\u4e0d\u4ece\u771f\u673a\u4e0a\u5378\u8f7d\u5e94\u7528\u3002  \u6d4b\u8bd5\u5b8c\u6210\u540e\u5378\u8f7d\u5e94\u7528, \u6a21\u62df\u5668\u6d4b\u8bd5\u7ed3\u675f\u540e\u9500\u6bc1\u6a21\u62df\u5668\u3002  \u6d4b\u8bd5\u7ed3\u675f\u540e\u4e0d\u9500\u6bc1\u6216\u8005\u5173\u95ed\u6a21\u62df\u5668\u3002\u542f\u52a8\u6d4b\u8bd5\u8fd0\u884c\u5728\u4efb\u610f\u6b63\u5728\u8fd0\u884c\u7684\u6a21\u62df\u5668\u6216\u8005\u63d2\u5165\u7684\u771f\u673a\u3002    Android  \u6d4b\u8bd5\u7ed3\u675f\u540e\u505c\u6b62\u5e94\u7528\uff0c\u6e05\u7406\u5e94\u7528\u6570\u636e\uff0c\u4e0d\u5378\u8f7d\u5e94\u7528\u5305\u3002  \u6d4b\u8bd5\u7ed3\u675f\u540e\u505c\u6b62\u5e94\u7528\uff0c\u6e05\u7406\u5e94\u7528\u6570\u636e\uff0c\u5378\u8f7d\u5e94\u7528\u5305\u3002  \u4e0d\u505c\u6b62\u5e94\u7528\uff0c\u4e0d\u6e05\u7406\u5e94\u7528\u6570\u636e\uff0c\u4e0d\u5378\u8f7d\u5e94\u7528\u5305\u3002     \u672c\u6587\u7531 yanqiang@douban.com \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u91cd\u7f6e\u7b56\u7565"
        },
        {
            "location": "/cn/writing-running-appium/running-tests/",
            "text": "\u8fd0\u884c\u6d4b\u8bd5\n\n\n\u51c6\u5907\u4f60\u8981\u6d4b\u8bd5\u7684\u5e94\u7528\uff08iOS\uff09\n\n\n\u88ab\u6d4b\u5e94\u7528\u8981\u5728\u6a21\u62df\u5668\u4e0a\u8fd0\u884c\uff0c\u5c31\u5fc5\u987b\u9488\u5bf9\u8be5\u6a21\u62df\u5668\u8fdb\u884c\u4e13\u95e8\u7684\u7f16\u8bd1\uff0c\u4f8b\u5982\u5728 Xcode \u9879\u76ee\u4e0b\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff08\u4f60\u53ef\u4ee5\u4f7f\u7528 \nxcodebuild -showsdks\n \u6765\u770b\u770b\u4f60\u7535\u8111\u4e0a\u63d0\u4f9b\u4e86\u591a\u5c11 SDK\uff09\uff1a\n\n\n> xcodebuild -sdk iphonesimulator6.0\n\n\n\n\u8fd9\u4f1a\u5728\u4f60\u7684 Xcode \u9879\u76ee\u4e0b\u521b\u5efa\u4e00\u4e2a \nbuild/Release-iphonesimulator\n \u76ee\u5f55\u3002\u8fd9\u4e2a\u76ee\u5f55\u5305\u542b \n.app\n \u5e94\u7528\u5305\u3002\u4f60\u5c31\u662f\u7528\u8fd9\u4e2a\u5305\u548c Appium server \u6c9f\u901a\u3002\n\n\n\u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u5c06\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\u538b\u7f29\u5230ZIP\u6587\u4ef6\u4e2d\uff01Appium \u4f1a\u5e2e\u4f60\u89e3\u538b\u3002\n\n\n\u51c6\u5907\u4f60\u8981\u6d4b\u8bd5\u7684\u5e94\u7528\uff08Android\uff09\n\n\n\u4f60\u4ec0\u4e48\u90fd\u4e0d\u7528\u505a\u5c31\u53ef\u4ee5\u5728 Appium \u4e0a\u8fd0\u884c apk\u3002\u5982\u679c\u4f60\u60f3\u6253\u5305\uff0c\u968f\u4f60\u3002\n\n\n\u51c6\u5907\u4f60\u8981\u6d4b\u8bd5\u7684\u5e94\u7528\uff08Windows\uff09\n\n\n\u4f60\u4ec0\u4e48\u90fd\u4e0d\u7528\u505a\u5c31\u53ef\u4ee5\u5728 Appium \u4e0a\u8fd0\u884c Windows \u5e94\u7528\u3002\n\n\n\u5728 Appium \u4e0a\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\u5e94\u7528\uff08IOS\uff09\n\n\n\u60f3\u77e5\u9053\u5f53\u524d\u8981\u505a\u4ec0\u4e48\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u5c31\u662f\u662f\u67e5\u770b\u793a\u4f8b\u4ee3\u7801\uff1a\n\n\nNode.js\n | \nPython\n | \nPHP\n | \nRuby\n | \nJava\n\n\n\u57fa\u672c\u4e0a\uff0c\u9996\u5148\u786e\u4fdd Appium \u8fd0\u884c\uff1a\n\n\nnode .\n\n\n\n\u7136\u540e\u7f16\u5199\u4f60\u7684 WebDriver \u6d4b\u8bd5\u811a\u672c, \u7528\u5982\u4e0b\u7684 desired capabilities:\n\n\n// javascript\n{\n    platformName: 'iOS',\n    platformVersion: '7.1',\n    deviceName: 'iPhone Simulator',\n    app: myApp\n}\n\n\n\n\n# python\n{\n    'platformName': 'iOS',\n    'platformVersion': '7.1',\n    'deviceName': 'iPhone Simulator',\n    'app': myApp\n}\n\n\n\n\n// php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'iOS',\n            'platformVersion' => '7.1',\n            'deviceName' => 'iPhone Simulator',\n            'app' => $myApp\n        )\n    )\n);\n\n\n\n\n// java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"iOS\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"7.1\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"iPhone Simulator\");\ncapabilities.setCapability(MobileCapabilityType.APP, myApp);\n\n\n\n\n\u5728\u4e0a\u9762\u8fd9\u4e00\u7ec4 capabilities \u91cc\uff0c\nmyApp\n \u5fc5\u987b\u662f\u4ee5\u4e0b\u7684\u4efb\u610f\u4e00\u4e2a\uff1a\n\n\n\n\n\u57fa\u4e8e\u5bf9\u5e94\u6a21\u62df\u5668\u7f16\u8bd1\u7684 .app \u76ee\u5f55\u6216\u8005 zip \u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\n\n\napp \u5e94\u7528\u5305\u7684 zip \u6587\u4ef6\u7684 URL\n\n\n\u57fa\u4e8e Appium \u5b89\u88c5\u6839\u76ee\u5f55\u7684\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\u7684\u76f8\u5bf9\u8def\u5f84\n\n\n\n\n\u7528\u4f60\u9009\u62e9\u7684 WebDriver \uff08\u5ba2\u6237\u7aef\uff09\u5e93\uff0c\u4f7f\u7528\u8fd9\u4e9b capabilities \u548c\u672c\u5730\u76844723\u7aef\u53e3\u5efa\u7acb\u8fdc\u7a0b\u4f1a\u8bdd\uff08\u6216\u4efb\u4f55\u542f\u52a8 Appium \u65f6\u5019\u6307\u5b9a\u7684\u4e3b\u673a\u548c\u7aef\u53e3\uff09\u3002\u73b0\u5728\u4f60\u5e94\u8be5\u90fd\u8bbe\u7f6e\u597d\u4e86\uff01\n\n\n\u4f7f\u7528 Appium \u6d4b\u8bd5\u4f60\u7684\u5e94\u7528 (Android)\n\n\n\u9996\u5148,\u786e\u4fdd\u4f60\u6709\u4e00\u4e2a\u4e14\u53ea\u6709\u4e00\u4e2a Android \u6a21\u62df\u5668\u6216\u8bbe\u5907\u8fde\u63a5\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u8fd0\u884c \nadb devices\n,\n\u4f60\u5e94\u8be5\u53ea\u770b\u5230\u4e00\u4e2a\u8bbe\u5907\u8fde\u63a5\u3002\u8fd9\u4e2a\u8bbe\u5907\u5c31\u662f Appium \u7528\u6765\u6d4b\u8bd5\u7684\u3002\u5f53\u7136, \u8981\u8fde\u63a5\u4e0a\u4e00\u4e2a\u8bbe\u5907\uff0c\u4f60\u9700\u8981\u914d\u7f6e\u4e00\u4e2a Android AVD (\u66f4\u591a\u4fe1\u606f\u53c2\u8003\nWindows\n,\n\nMac\n,\n\u6216\u8005 \nLinux\n))\u3002\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u53d8\u91cf PATH \u91cc\u6709 Android SDK \u7684\u5de5\u5177\u8def\u5f84,\u4f60\u53ef\u4ee5\u7b80\u5355\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff1a\n\n\nemulator -avd <MyAvdName>\n\n\n\n\u7b49\u5f85 android \u6a21\u62df\u5668\u5b8c\u6210\u542f\u52a8\uff08\u53ef\u4ee5\u53bb\u559d\u4e2a\u5496\u5561\uff09\u3002\u6709\u65f6\uff0c\u5404\u79cd\u539f\u56e0\uff0c\nadb\n \u4f1a\u5361\u4f4f\u3002\u5982\u679c\u4e0d\u663e\u793a\u4efb\u4f55\u8fde\u63a5\u8bbe\u5907\u6216\u5426\u5219\u5931\u8d25\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u91cd\u542f\u5b83:\n\n\nadb kill-server && adb devices\n\n\n\n\u73b0\u5728\uff0c\u786e\u8ba4 Appium \u8fd0\u884c\u8d77\u6765\uff1a\n\n\nnode .\n\n\n\n\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a Appium \u5e94\u7528\u7a0b\u5e8f(\u548c\u4f7f\u7528 adb \u542f\u52a8\u4e00\u6837):\n\n\n\n\n\u4ec5\u4ec5\u4f7f\u7528 apk \u6216\u8005 zip\uff0c\u9ed8\u8ba4 activity \u4f1a\u88ab\u52a0\u8f7d ('app' capability)\n\n\napk + activity ('app' + 'appActivity' capabilities)\n\n\napk + activity + intent ('app' + 'appActivity' + 'appIntent' capabilities)\n\n\n...\n\n\n\n\nActivity \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u6307\u5b9a\uff1a\n\n\n\n\nabsolute (\u6bd4\u5982 appActivity: 'com.helloworld.SayHello').\n\n\n\u76f8\u5bf9\u4e8e\u5e94\u7528\u5305\u540d (e.g. appPackage: 'com.helloworld', appActivity='.SayHello')\n\n\n\n\n\u5982\u679c\u6307\u5b9a 'appWaitPackage' \u548c 'appWaitActivity'\uff0cAppium \u4f1a\u8f6c\u83ca\u82b1\u7b49\u5f85\uff0c\u76f4\u5230\u8fd9\u4e9b Activity \u542f\u52a8\u3002\u60a8\u53ef\u4ee5\u6307\u5b9a\u7b49\u5f85\u591a\u4e2aActivity\u3002\u4f8b\u5982\uff1a\n\n\n\n\nappActivity: 'com.splash.SplashScreen'\n\n\nappPackage: 'com.splash' appActivity: '.SplashScreen'\n\n\nappPackage: 'com.splash' appActivity: '.SplashScreen,.LandingPage,com.why.GoThere'\n\n\n\n\n\u5982\u679c\u4f60\u4e0d\u786e\u5b9a\u4f60\u7684 apk \u4e2d\u914d\u7f6e\u7684\u662f\u54ea\u4e2a Activity\uff0c\u4f60\u53ef\u4ee5\u7528\u4e0b\u5217\u65b9\u6cd5\uff1a\n\n\n\n\nMac/Linux: 'adb shell dumpsys window windows | grep mFocusedApp'\n\n\n\u5728Ruby\u63a7\u5236\u53f0: 'adb shell dumpsys window windows`.each_line.grep(/mFocusedApp/).first.strip'\n\n\n\u5728Windows\u7ec8\u7aef\u8fd0\u884c 'adb shell dumpsys window windows' \u7136\u540e\u624b\u52a8\u627e\u5230 mFocusedApp\uff08\u5751\u7239\uff0cwindows shell \u4e0b\u9762\u4e0d\u662f\u6709 findStr \u4e48\uff1f\uff09\n\n\n\n\n\u7136\u540e\u5f00\u59cb\u5199 WebDriver \u7684\u6d4b\u8bd5\u811a\u672c\uff0c\u4f7f\u7528\u4e0b\u9762\u7684 desired capabilities\uff1a\n\n\n// javascript\n{\n    platformName: 'Android',\n    platformVersion: '4.4',\n    deviceName: 'Android Emulator',\n    app: myApp\n}\n\n\n\n\n# python\n{\n    'platformName': 'Android',\n    'platformVersion': '4.4',\n    'deviceName': 'Android Emulator',\n    'app': myApp\n}\n\n\n\n\n// php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'Android',\n            'platformVersion' => '4.4',\n            'deviceName' => 'Android Emulator',\n            'app' => $myApp\n        )\n    )\n);\n\n\n\n\n// java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"Android\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"4.4\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"Android Emulator\");\ncapabilities.setCapability(MobileCapabilityType.APP, myApp);\n\n\n\n\n\u5728\u8fd9\u7ec4 capabilities \u91cc\uff0c\nmyApp\n \u5fc5\u987b\u662f\u4ee5\u4e0b\u4efb\u610f\u4e00\u4e2a\uff1a\n\n\n\n\napk \u6216\u8005 zip \u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\n\n\napk \u7684 zip \u6587\u4ef6\u7684 url \u94fe\u63a5 \n\n\n\u57fa\u4e8e appium \u5b89\u88c5\u6839\u76ee\u5f55\u7684\u793a\u4f8b\u5e94\u7528\u7684\u76f8\u5bf9\u8def\u5f84\n\n\n\n\n\u7528\u4f60\u9009\u62e9\u7684 WebDriver \uff08\u5ba2\u6237\u7aef\uff09\u5e93\uff0c\u4f7f\u7528\u8fd9\u4e9b capabilities \u548c\u672c\u5730\u76844723\u7aef\u53e3\u5efa\u7acb\u8fdc\u7a0b\u4f1a\u8bdd\uff08\u6216\u4efb\u4f55\u542f\u52a8 Appium \u65f6\u5019\u6307\u5b9a\u7684\u4e3b\u673a\u548c\u7aef\u53e3\uff09\u3002\u73b0\u5728\u4f60\u5e94\u8be5\u90fd\u8bbe\u7f6e\u597d\u4e86\uff01\n\n\n\u4f7f\u7528 Appium \u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\u7a0b\u5e8f(Android\u8bbe\u5907& lt;4.2\uff0c\u6df7\u5408\u5e94\u7528)\n\n\n4.2\u7248\u672c\u4e4b\u524d\u7684(API\u7ea7\u522b17)Android \u6ca1\u6709\u96c6\u6210\u8c37\u6b4c\u7684\nUiAutomator framework\n\u3002\nAppium \u4f7f\u7528 UiAutomator \u6765\u6267\u884c\u81ea\u52a8\u5316\u3002\u90a3\u4e48\u5728\u65e9\u671f\u7684\u8bbe\u5907\u6216\u6df7\u5408(webview-based)\u5e94\u7528\u7a0b\u5e8f,\n Appium \u662f\u4e0e\u53e6\u4e00\u4e2a\u81ea\u52a8\u5316\u540e\u53f0\u7ed1\u5b9a \nSelendroid\n\u3002\n\n\n\u8981\u4f7f\u7528 Selendroid\uff0c\u53ea\u9700\u7a0d\u5fae\u6539\u52a8 desired capabilities\uff0c\u6dfb\u52a0 \nautomationName\n \u5e76\u6307\u5b9a Selendroid \u4e3a\u81ea\u52a8\u5316\u540e\u53f0\u3002\u901a\u5e38\uff0c\u4f60\u8fd8\u9700\u8981\u5728\u4f60\u7684 activity \u540d\u5b57\u524d\u52a0\u4e00\u4e2a \n.\n(\u5982\uff0c\nappActivity\n \u8fd9\u4e2a capability \u9700\u8981\u4f7f\u7528 \n.MainActivity\n \u800c\u4e0d\u662f \nMainActivity\n)\u3002\n\n\n// javascript\n{\n    automationName: 'Selendroid',\n    platformName: 'Android',\n    platformVersion: '2.3',\n    deviceName: 'Android Emulator',\n    app: myApp,\n    appPackage: 'com.mycompany.package',\n    appActivity: '.MainActivity'\n}\n\n\n\n\n# python\n{\n    'automationName': 'Selendroid',\n    'platformName': 'Android',\n    'platformVersion': '2.3',\n    'deviceName': 'Android Emulator',\n    'app': myApp,\n    'appPackage': 'com.mycompany.package',\n    'appActivity': '.MainActivity'\n}\n\n\n\n\n// php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'automationName' => 'Selendroid',\n            'platformName' => 'Android',\n            'platformVersion' => '2.3',\n            'deviceName' => 'Android Emulator',\n            'app' => $myApp,\n            'appPackage' => 'com.mycompany.package',\n            'appActivity'=> '.MainActivity'\n        )\n    )\n);\n\n\n\n\n// java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.AUTOMATION_NAME, \"Selendroid\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"Android\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"2.3\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"Android Emulator\");\ncapabilities.setCapability(MobileCapabilityType.APP, myApp);\ncapabilities.setCapability(MobileCapabilityType.APP_PACKAGE: \"com.mycompany.package\");\ncapabilities.setCapability(MobileCapabilityType.APP_ACTIVITY: \".MainActivity\");\n\n\n\n\n\u73b0\u5728 Appium \u5c06\u542f\u52a8\u4e00\u4e2a Selendroid \u6d4b\u8bd5\u4f1a\u8bdd\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684\u6d4b\u8bd5\u4f1a\u8bdd\u3002\n\u4f7f\u7528 Selendroid \u7684\u7f3a\u70b9\u4e4b\u4e00\u662f,\u5b83\u7684\u4e00\u4e9b API \u548cAppium \u6709\u7740\u663e\u8457\u7684\u5dee\u522b\u3002\n\u56e0\u6b64,\u6211\u4eec\u5efa\u8bae\u4f60\u5728\u4e3a\u65e7\u8bbe\u5907\u6216\u6df7\u5408\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u811a\u672c\u65f6\uff0c\u5f7b\u8bfb(Selendroid\u6587\u6863)(http://selendroid.io/native.html) \n\n\n\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\u7a0b\u5e8f\u4e0eAppium(Windows)\n\n\n\u53ea\u9700\u786e\u4fdd Appium \u5728\u76d1\u542c\uff0c\u7136\u540e\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\u3002 \n\n\n\u6709\u5173\u8be6\u7ec6\u4fe1\u606f,\u8bf7\u53c2\u9605\u6211\u4eec\u7684\nsamples\n\u3002\n\n\n\u672c\u6587\u7531 \ntestly\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Running tests"
        },
        {
            "location": "/cn/writing-running-appium/running-tests/#_1",
            "text": "",
            "title": "\u8fd0\u884c\u6d4b\u8bd5"
        },
        {
            "location": "/cn/writing-running-appium/running-tests/#ios",
            "text": "\u88ab\u6d4b\u5e94\u7528\u8981\u5728\u6a21\u62df\u5668\u4e0a\u8fd0\u884c\uff0c\u5c31\u5fc5\u987b\u9488\u5bf9\u8be5\u6a21\u62df\u5668\u8fdb\u884c\u4e13\u95e8\u7684\u7f16\u8bd1\uff0c\u4f8b\u5982\u5728 Xcode \u9879\u76ee\u4e0b\u6267\u884c\u5982\u4e0b\u547d\u4ee4\uff08\u4f60\u53ef\u4ee5\u4f7f\u7528  xcodebuild -showsdks  \u6765\u770b\u770b\u4f60\u7535\u8111\u4e0a\u63d0\u4f9b\u4e86\u591a\u5c11 SDK\uff09\uff1a  > xcodebuild -sdk iphonesimulator6.0  \u8fd9\u4f1a\u5728\u4f60\u7684 Xcode \u9879\u76ee\u4e0b\u521b\u5efa\u4e00\u4e2a  build/Release-iphonesimulator  \u76ee\u5f55\u3002\u8fd9\u4e2a\u76ee\u5f55\u5305\u542b  .app  \u5e94\u7528\u5305\u3002\u4f60\u5c31\u662f\u7528\u8fd9\u4e2a\u5305\u548c Appium server \u6c9f\u901a\u3002  \u5982\u679c\u9700\u8981\uff0c\u53ef\u4ee5\u5c06\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\u538b\u7f29\u5230ZIP\u6587\u4ef6\u4e2d\uff01Appium \u4f1a\u5e2e\u4f60\u89e3\u538b\u3002",
            "title": "\u51c6\u5907\u4f60\u8981\u6d4b\u8bd5\u7684\u5e94\u7528\uff08iOS\uff09"
        },
        {
            "location": "/cn/writing-running-appium/running-tests/#android",
            "text": "\u4f60\u4ec0\u4e48\u90fd\u4e0d\u7528\u505a\u5c31\u53ef\u4ee5\u5728 Appium \u4e0a\u8fd0\u884c apk\u3002\u5982\u679c\u4f60\u60f3\u6253\u5305\uff0c\u968f\u4f60\u3002",
            "title": "\u51c6\u5907\u4f60\u8981\u6d4b\u8bd5\u7684\u5e94\u7528\uff08Android\uff09"
        },
        {
            "location": "/cn/writing-running-appium/running-tests/#windows",
            "text": "\u4f60\u4ec0\u4e48\u90fd\u4e0d\u7528\u505a\u5c31\u53ef\u4ee5\u5728 Appium \u4e0a\u8fd0\u884c Windows \u5e94\u7528\u3002",
            "title": "\u51c6\u5907\u4f60\u8981\u6d4b\u8bd5\u7684\u5e94\u7528\uff08Windows\uff09"
        },
        {
            "location": "/cn/writing-running-appium/running-tests/#appium-ios",
            "text": "\u60f3\u77e5\u9053\u5f53\u524d\u8981\u505a\u4ec0\u4e48\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u5c31\u662f\u662f\u67e5\u770b\u793a\u4f8b\u4ee3\u7801\uff1a  Node.js  |  Python  |  PHP  |  Ruby  |  Java  \u57fa\u672c\u4e0a\uff0c\u9996\u5148\u786e\u4fdd Appium \u8fd0\u884c\uff1a  node .  \u7136\u540e\u7f16\u5199\u4f60\u7684 WebDriver \u6d4b\u8bd5\u811a\u672c, \u7528\u5982\u4e0b\u7684 desired capabilities:  // javascript\n{\n    platformName: 'iOS',\n    platformVersion: '7.1',\n    deviceName: 'iPhone Simulator',\n    app: myApp\n}  # python\n{\n    'platformName': 'iOS',\n    'platformVersion': '7.1',\n    'deviceName': 'iPhone Simulator',\n    'app': myApp\n}  // php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'iOS',\n            'platformVersion' => '7.1',\n            'deviceName' => 'iPhone Simulator',\n            'app' => $myApp\n        )\n    )\n);  // java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"iOS\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"7.1\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"iPhone Simulator\");\ncapabilities.setCapability(MobileCapabilityType.APP, myApp);  \u5728\u4e0a\u9762\u8fd9\u4e00\u7ec4 capabilities \u91cc\uff0c myApp  \u5fc5\u987b\u662f\u4ee5\u4e0b\u7684\u4efb\u610f\u4e00\u4e2a\uff1a   \u57fa\u4e8e\u5bf9\u5e94\u6a21\u62df\u5668\u7f16\u8bd1\u7684 .app \u76ee\u5f55\u6216\u8005 zip \u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84  app \u5e94\u7528\u5305\u7684 zip \u6587\u4ef6\u7684 URL  \u57fa\u4e8e Appium \u5b89\u88c5\u6839\u76ee\u5f55\u7684\u793a\u4f8b\u5e94\u7528\u7a0b\u5e8f\u7684\u76f8\u5bf9\u8def\u5f84   \u7528\u4f60\u9009\u62e9\u7684 WebDriver \uff08\u5ba2\u6237\u7aef\uff09\u5e93\uff0c\u4f7f\u7528\u8fd9\u4e9b capabilities \u548c\u672c\u5730\u76844723\u7aef\u53e3\u5efa\u7acb\u8fdc\u7a0b\u4f1a\u8bdd\uff08\u6216\u4efb\u4f55\u542f\u52a8 Appium \u65f6\u5019\u6307\u5b9a\u7684\u4e3b\u673a\u548c\u7aef\u53e3\uff09\u3002\u73b0\u5728\u4f60\u5e94\u8be5\u90fd\u8bbe\u7f6e\u597d\u4e86\uff01",
            "title": "\u5728 Appium \u4e0a\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\u5e94\u7528\uff08IOS\uff09"
        },
        {
            "location": "/cn/writing-running-appium/running-tests/#appium-android",
            "text": "\u9996\u5148,\u786e\u4fdd\u4f60\u6709\u4e00\u4e2a\u4e14\u53ea\u6709\u4e00\u4e2a Android \u6a21\u62df\u5668\u6216\u8bbe\u5907\u8fde\u63a5\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u8fd0\u884c  adb devices ,\n\u4f60\u5e94\u8be5\u53ea\u770b\u5230\u4e00\u4e2a\u8bbe\u5907\u8fde\u63a5\u3002\u8fd9\u4e2a\u8bbe\u5907\u5c31\u662f Appium \u7528\u6765\u6d4b\u8bd5\u7684\u3002\u5f53\u7136, \u8981\u8fde\u63a5\u4e0a\u4e00\u4e2a\u8bbe\u5907\uff0c\u4f60\u9700\u8981\u914d\u7f6e\u4e00\u4e2a Android AVD (\u66f4\u591a\u4fe1\u606f\u53c2\u8003 Windows , Mac ,\n\u6216\u8005  Linux ))\u3002\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u53d8\u91cf PATH \u91cc\u6709 Android SDK \u7684\u5de5\u5177\u8def\u5f84,\u4f60\u53ef\u4ee5\u7b80\u5355\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff1a  emulator -avd <MyAvdName>  \u7b49\u5f85 android \u6a21\u62df\u5668\u5b8c\u6210\u542f\u52a8\uff08\u53ef\u4ee5\u53bb\u559d\u4e2a\u5496\u5561\uff09\u3002\u6709\u65f6\uff0c\u5404\u79cd\u539f\u56e0\uff0c adb  \u4f1a\u5361\u4f4f\u3002\u5982\u679c\u4e0d\u663e\u793a\u4efb\u4f55\u8fde\u63a5\u8bbe\u5907\u6216\u5426\u5219\u5931\u8d25\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u91cd\u542f\u5b83:  adb kill-server && adb devices  \u73b0\u5728\uff0c\u786e\u8ba4 Appium \u8fd0\u884c\u8d77\u6765\uff1a  node .  \u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a Appium \u5e94\u7528\u7a0b\u5e8f(\u548c\u4f7f\u7528 adb \u542f\u52a8\u4e00\u6837):   \u4ec5\u4ec5\u4f7f\u7528 apk \u6216\u8005 zip\uff0c\u9ed8\u8ba4 activity \u4f1a\u88ab\u52a0\u8f7d ('app' capability)  apk + activity ('app' + 'appActivity' capabilities)  apk + activity + intent ('app' + 'appActivity' + 'appIntent' capabilities)  ...   Activity \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u6307\u5b9a\uff1a   absolute (\u6bd4\u5982 appActivity: 'com.helloworld.SayHello').  \u76f8\u5bf9\u4e8e\u5e94\u7528\u5305\u540d (e.g. appPackage: 'com.helloworld', appActivity='.SayHello')   \u5982\u679c\u6307\u5b9a 'appWaitPackage' \u548c 'appWaitActivity'\uff0cAppium \u4f1a\u8f6c\u83ca\u82b1\u7b49\u5f85\uff0c\u76f4\u5230\u8fd9\u4e9b Activity \u542f\u52a8\u3002\u60a8\u53ef\u4ee5\u6307\u5b9a\u7b49\u5f85\u591a\u4e2aActivity\u3002\u4f8b\u5982\uff1a   appActivity: 'com.splash.SplashScreen'  appPackage: 'com.splash' appActivity: '.SplashScreen'  appPackage: 'com.splash' appActivity: '.SplashScreen,.LandingPage,com.why.GoThere'   \u5982\u679c\u4f60\u4e0d\u786e\u5b9a\u4f60\u7684 apk \u4e2d\u914d\u7f6e\u7684\u662f\u54ea\u4e2a Activity\uff0c\u4f60\u53ef\u4ee5\u7528\u4e0b\u5217\u65b9\u6cd5\uff1a   Mac/Linux: 'adb shell dumpsys window windows | grep mFocusedApp'  \u5728Ruby\u63a7\u5236\u53f0: 'adb shell dumpsys window windows`.each_line.grep(/mFocusedApp/).first.strip'  \u5728Windows\u7ec8\u7aef\u8fd0\u884c 'adb shell dumpsys window windows' \u7136\u540e\u624b\u52a8\u627e\u5230 mFocusedApp\uff08\u5751\u7239\uff0cwindows shell \u4e0b\u9762\u4e0d\u662f\u6709 findStr \u4e48\uff1f\uff09   \u7136\u540e\u5f00\u59cb\u5199 WebDriver \u7684\u6d4b\u8bd5\u811a\u672c\uff0c\u4f7f\u7528\u4e0b\u9762\u7684 desired capabilities\uff1a  // javascript\n{\n    platformName: 'Android',\n    platformVersion: '4.4',\n    deviceName: 'Android Emulator',\n    app: myApp\n}  # python\n{\n    'platformName': 'Android',\n    'platformVersion': '4.4',\n    'deviceName': 'Android Emulator',\n    'app': myApp\n}  // php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'Android',\n            'platformVersion' => '4.4',\n            'deviceName' => 'Android Emulator',\n            'app' => $myApp\n        )\n    )\n);  // java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"Android\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"4.4\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"Android Emulator\");\ncapabilities.setCapability(MobileCapabilityType.APP, myApp);  \u5728\u8fd9\u7ec4 capabilities \u91cc\uff0c myApp  \u5fc5\u987b\u662f\u4ee5\u4e0b\u4efb\u610f\u4e00\u4e2a\uff1a   apk \u6216\u8005 zip \u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84  apk \u7684 zip \u6587\u4ef6\u7684 url \u94fe\u63a5   \u57fa\u4e8e appium \u5b89\u88c5\u6839\u76ee\u5f55\u7684\u793a\u4f8b\u5e94\u7528\u7684\u76f8\u5bf9\u8def\u5f84   \u7528\u4f60\u9009\u62e9\u7684 WebDriver \uff08\u5ba2\u6237\u7aef\uff09\u5e93\uff0c\u4f7f\u7528\u8fd9\u4e9b capabilities \u548c\u672c\u5730\u76844723\u7aef\u53e3\u5efa\u7acb\u8fdc\u7a0b\u4f1a\u8bdd\uff08\u6216\u4efb\u4f55\u542f\u52a8 Appium \u65f6\u5019\u6307\u5b9a\u7684\u4e3b\u673a\u548c\u7aef\u53e3\uff09\u3002\u73b0\u5728\u4f60\u5e94\u8be5\u90fd\u8bbe\u7f6e\u597d\u4e86\uff01",
            "title": "\u4f7f\u7528 Appium \u6d4b\u8bd5\u4f60\u7684\u5e94\u7528 (Android)"
        },
        {
            "location": "/cn/writing-running-appium/running-tests/#appium-android-lt42",
            "text": "4.2\u7248\u672c\u4e4b\u524d\u7684(API\u7ea7\u522b17)Android \u6ca1\u6709\u96c6\u6210\u8c37\u6b4c\u7684 UiAutomator framework \u3002\nAppium \u4f7f\u7528 UiAutomator \u6765\u6267\u884c\u81ea\u52a8\u5316\u3002\u90a3\u4e48\u5728\u65e9\u671f\u7684\u8bbe\u5907\u6216\u6df7\u5408(webview-based)\u5e94\u7528\u7a0b\u5e8f,\n Appium \u662f\u4e0e\u53e6\u4e00\u4e2a\u81ea\u52a8\u5316\u540e\u53f0\u7ed1\u5b9a  Selendroid \u3002  \u8981\u4f7f\u7528 Selendroid\uff0c\u53ea\u9700\u7a0d\u5fae\u6539\u52a8 desired capabilities\uff0c\u6dfb\u52a0  automationName  \u5e76\u6307\u5b9a Selendroid \u4e3a\u81ea\u52a8\u5316\u540e\u53f0\u3002\u901a\u5e38\uff0c\u4f60\u8fd8\u9700\u8981\u5728\u4f60\u7684 activity \u540d\u5b57\u524d\u52a0\u4e00\u4e2a  . (\u5982\uff0c appActivity  \u8fd9\u4e2a capability \u9700\u8981\u4f7f\u7528  .MainActivity  \u800c\u4e0d\u662f  MainActivity )\u3002  // javascript\n{\n    automationName: 'Selendroid',\n    platformName: 'Android',\n    platformVersion: '2.3',\n    deviceName: 'Android Emulator',\n    app: myApp,\n    appPackage: 'com.mycompany.package',\n    appActivity: '.MainActivity'\n}  # python\n{\n    'automationName': 'Selendroid',\n    'platformName': 'Android',\n    'platformVersion': '2.3',\n    'deviceName': 'Android Emulator',\n    'app': myApp,\n    'appPackage': 'com.mycompany.package',\n    'appActivity': '.MainActivity'\n}  // php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'automationName' => 'Selendroid',\n            'platformName' => 'Android',\n            'platformVersion' => '2.3',\n            'deviceName' => 'Android Emulator',\n            'app' => $myApp,\n            'appPackage' => 'com.mycompany.package',\n            'appActivity'=> '.MainActivity'\n        )\n    )\n);  // java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.AUTOMATION_NAME, \"Selendroid\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"Android\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"2.3\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"Android Emulator\");\ncapabilities.setCapability(MobileCapabilityType.APP, myApp);\ncapabilities.setCapability(MobileCapabilityType.APP_PACKAGE: \"com.mycompany.package\");\ncapabilities.setCapability(MobileCapabilityType.APP_ACTIVITY: \".MainActivity\");  \u73b0\u5728 Appium \u5c06\u542f\u52a8\u4e00\u4e2a Selendroid \u6d4b\u8bd5\u4f1a\u8bdd\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684\u6d4b\u8bd5\u4f1a\u8bdd\u3002\n\u4f7f\u7528 Selendroid \u7684\u7f3a\u70b9\u4e4b\u4e00\u662f,\u5b83\u7684\u4e00\u4e9b API \u548cAppium \u6709\u7740\u663e\u8457\u7684\u5dee\u522b\u3002\n\u56e0\u6b64,\u6211\u4eec\u5efa\u8bae\u4f60\u5728\u4e3a\u65e7\u8bbe\u5907\u6216\u6df7\u5408\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u811a\u672c\u65f6\uff0c\u5f7b\u8bfb(Selendroid\u6587\u6863)(http://selendroid.io/native.html)",
            "title": "\u4f7f\u7528 Appium \u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\u7a0b\u5e8f(Android\u8bbe\u5907&amp; lt;4.2\uff0c\u6df7\u5408\u5e94\u7528)"
        },
        {
            "location": "/cn/writing-running-appium/running-tests/#appiumwindows",
            "text": "\u53ea\u9700\u786e\u4fdd Appium \u5728\u76d1\u542c\uff0c\u7136\u540e\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\u3002   \u6709\u5173\u8be6\u7ec6\u4fe1\u606f,\u8bf7\u53c2\u9605\u6211\u4eec\u7684 samples \u3002  \u672c\u6587\u7531  testly  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u8fd0\u884c\u4f60\u7684\u6d4b\u8bd5\u7a0b\u5e8f\u4e0eAppium(Windows)"
        },
        {
            "location": "/cn/writing-running-appium/safari-launcher/",
            "text": "\u5728 iOS 9.3 \u53ca\u4ee5\u4e0b\u7248\u672c\u7684\u771f\u673a\u4e0a\u8fd0\u884c\u79fb\u52a8 web \u6d4b\u8bd5\uff1aSafariLauncher\n\n\n\u5728 iOS 9.3 \u6216\u66f4\u4f4e\u7248\u672c\u7684 iOS \u771f\u5b9e\u8bbe\u5907\u4e0a\u8fd0\u884c\u79fb\u52a8 web \u6d4b\u8bd5\u9700\u8981\u5f15\u5165\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f\nSafariLauncher\n\u3002 \u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a Instruments \u6ca1\u6709\u529e\u6cd5\u5728\u8bbe\u5907\u4e0a\u542f\u52a8Safari \u5e94\u7528\u7a0b\u5e8f\u3002\u53ea\u6709\u5148\u542f\u52a8 SafariLauncher \u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u624d\u80fd\u542f\u52a8Safari\u3002\u7b80\u5355\uff01\n\n\nIn some configurations, Appium is able to automatically build, sign, and install\n\nSafariLauncher\n as it needs, and there is nothing else necessary to be done. If,\nhowever, this is not the case, as is more often so with later versions of\n\nXcode\n, the following configuration needs to\nbe done before Safari tests on real devices can be successfully run.\n\n\n\u5728\u67d0\u4e9b\u914d\u7f6e\u4e2d\uff0cAppium \u80fd\u591f\u6839\u636e\u9700\u8981\u81ea\u52a8\u6784\u5efa\uff0c\u7b7e\u540d\u548c\u5b89\u88c5 SafariLauncher\uff0c\u6ca1\u6709\u4ec0\u4e48\u989d\u5916\u8981\u505a\u7684\u3002 \u4f46\u662f\uff0c\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff0c\u968f\u7740\nXcode\n\u7684\u7248\u672c\u66f4\u65b0\u66f4\u4e3a\u5e38\u89c1\u3002\u60f3\u8981\u5728\u771f\u5b9e\u8bbe\u5907\u4e0a\u7684 Safari \u4e0a\u6210\u529f\u8fd0\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u914d\u7f6e\u3002\n\n\n\u81ea\u52a8\u914d\u7f6eSafariLauncher\n\n\nThe only thing needed for automatic \nSafariLauncher\n configuration is to create\na \nprovisioning profile\n that can be used to deploy the \nSafariLauncher\n App.\nThis requires, in particular, a wildcard certificate, which is not possible if\nyour Apple developer account is a free one. If that is the case, skip to the\nmanual configuration below.\n\n\n\u81ea\u52a8\u914d\u7f6e SafariLauncher \u552f\u4e00\u9700\u8981\u505a\u7684\u662f\u521b\u5efa\u4e00\u4e2a\u53ef\u7528\u4e8e\u90e8\u7f72 SafariLauncher App \u7684\n\u914d\u7f6e\u6587\u4ef6\n\u3002 \u8fd9\u9700\u8981\u4e00\u4e2a\u901a\u914d\u7b26\u8bc1\u4e66\u3002\u4f46\u662f\u5982\u679c\u60a8\u7684Apple\u5f00\u53d1\u8005\u5e10\u6237\u662f\u514d\u8d39\u7684\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002 \u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u8bf7\u8df3\u8f6c\u5230\u4e0b\u9762\u7684\u624b\u52a8\u914d\u7f6e\u5185\u5bb9\u3002\n\n\n\u8981\u521b\u5efa\u542f\u52a8\u5668\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u8bf7\u8fdb\u5165\nApple Developers\u4f1a\u5458\u4e2d\u5fc3\n\uff0c\u6309\u5982\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a\n\n\n\u6b65\u9aa41\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\nAPP ID\n\uff0c\u5e76\u9009\u62e9WildCard APP ID\u9009\u9879\uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3a\u201c * \u201d\n\u6b65\u9aa42\uff1a\u521b\u5efa\u4e00\u4e2a\n\u65b0\u7684\u5f00\u53d1\u914d\u7f6e\u6587\u4ef6\n\uff0cApp Id\u9009\u62e9\u5728\u6b65\u9aa41\u4e2d\u521b\u5efa\u7684\u3002\n\u6b65\u9aa43\uff1a\u9009\u62e9\u60a8\u7684\n\u8bc1\u4e66\u548c\u8bbe\u5907\n\uff0c\u7136\u540e\u5355\u51fb\u4e0b\u4e00\u6b65\u3002\n\u6b65\u9aa44\uff1a\u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6\u540d\u79f0\u5e76\n\u751f\u6210\u914d\u7f6e\u6587\u4ef6\n\u3002\n\u6b65\u9aa45\uff1a\u4e0b\u8f7d\u914d\u7f6e\u6587\u4ef6\u5e76\u7528\u6587\u672c\u7f16\u8f91\u5668\u6253\u5f00\u3002\n\u6b65\u9aa46\uff1a\u641c\u7d22\nUUID\n\u53ca\u5176\u5b57\u7b26\u4e32\u4f5c\u4e3a\u60a8\u7684\n\u8eab\u4efd\u4ee3\u7801\n\u3002\n\n\n\u73b0\u5728\u53ea\u9700\u5c06\u60a8\u7684UDID\u548c\u8bbe\u5907\u540d\u79f0\u5305\u542b\u5728\u60a8\u6240\u9700\u7684\u529f\u80fd\u4e2d\uff1a\n\n\n{\n  udid: '...',\n  deviceName: '...',\n  platformName: 'iOS',\n  platformVersion: '9.3',\n  browserName: 'Safari'\n}\n\n\n\n\n\u624b\u52a8\u914d\u7f6e SafariLauncher\n\n\n\u6ce8\u610f\uff1a\n \u6b64\u8fc7\u7a0b\u5047\u5b9a\u60a8\u5df2\u7ecf\u5b89\u88c5\nXcode\n7.3\u62167.3.1\u3002\n\n\n\u53ef\u4ee5\u4f7f\u7528 \nappium-ios-driver\n \u9644\u5e26\u7684 \nSafariLauncher\n \u7248\u672c\uff0c\u4f46\u5982\u679c\u8fd9\u6837\u505a\uff0c\u6bcf\u6b21\u66f4\u65b0Appium\u65f6\uff0c\u5fc5\u987b\u91cd\u65b0\u6267\u884c\u8be5\u8fc7\u7a0b\u3002\n\n\n\u8981\u83b7\u53d6 \nSafariLauncher\n \u7684\u672c\u5730\u526f\u672c\uff0c\u8bf7\u5148\u4ece \nGitHub\n \u514b\u9686\u5b83\uff1a\n\n\ngit clone https://github.com/snevesbarros/SafariLauncher.git\n\n\n\n\n\u4e00\u65e6\u60a8\u62e5\u6709 \nSafariLauncher\n \u7684\u6e90\u4ee3\u7801\u7684\u672c\u5730\u526f\u672c\uff0c\u8bf7\u6253\u5f00 \nXcode\n\uff0c\u7136\u540e\u6253\u5f00 \nSafariLauncher\n \u9879\u76ee\n\n\n\n\n\u5728 \nSafariLauncher\n target \u7a97\u53e3\u4e2d\uff0c\u60a8\u4f1a\u770b\u5230\u4e00\u4e2a\u9519\u8bef\uff0c\u8868\u793a\u9700\u8981\u6709\u4e00\u4e2a\u6b64 app \u7684\u914d\u7f6e\u6587\u4ef6\n\n\n\n\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u60a8\u9996\u5148\u9700\u8981\u4e3aapp\u8f93\u5165\u201cBundle Identifier\u201d\u3002 Appium\u671f\u671b\u7684\u9ed8\u8ba4\u503c\u4e3acom.bytearc.SafariLauncher\uff0c\u4f46\u8fd9\u53ef\u80fd\u65e0\u6cd5\u7528\u4e8e\u6784\u5efa\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u9009\u62e9\u5176\u4ed6\u7684\u4e1c\u897f\uff0c\u5e76\u8bb0\u4e0b\u5b83\u3002 \u7136\u540e\u9009\u62e9\u201cTeam\u201d\uff0c\u5e76\u5141\u8bb8\u521b\u5efa\u914d\u7f6e\u6587\u4ef6\n\n\n\n\n\u6700\u540e\uff0c\u786e\u4fdd\u60a8\u7684\u8bbe\u5907\u5df2\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\uff0c\u5e76\u5c06\u5176\u9009\u4e3a\u76ee\u6807\u8bbe\u5907\n\n\n\n\n\u5e76\u8fd0\u884c\u6784\u5efa\u548c\u5b89\u88c5\u64cd\u4f5c\u6765\u7f16\u8bd1app\u5e76\u5c06\u5176\u63a8\u9001\u5230\u60a8\u7684\u8bbe\u5907\u4e0a\n\n\n\n\n\u73b0\u5728\u4f60\u7684\u8bbe\u5907\u4e0a\u6709\u4e00\u4e2a\u53ef\u7528\u7684 \nSafariLauncher\n\u3002 \u8be5app\u672c\u8eab\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5c4f\u5e55\uff0c\u70b9\u51fb\u4e00\u4e2a\u6309\u94ae\u5c06\u542f\u52a8 \nSafari\n\n\n\n\n\u5982\u679c\u60a8\u9009\u62e9\u4e86\u4e0e\u9ed8\u8ba4\uff08com.bytearc.SafariLauncher\uff09\u4e0d\u540c\u7684app\u7684\u8f6f\u4ef6\u5305\u6807\u8bc6\u7b26\uff0c\u5219\u6700\u540e\u4e00\u6b65\u662f\u5fc5\u9700\u7684\u3002 \u5982\u679c\u4f60\u8fd9\u6837\u505a\uff0c\u5728\u4f7f\u7528bundleId\u6240\u9700\u7684\u529f\u80fd\u521b\u5efa\u4f1a\u8bdd\u65f6\uff0c\u9700\u8981\u5c06\u5b83\u53d1\u9001\u5230Appium\uff1a\n\n\n{\n  udid: '...',\n  deviceName: '...',\n  platformName: 'iOS',\n  platformVersion: '9.3',\n  browserName: 'Safari',\n  bundleId: 'com.imurchie.SafariLauncher'\n}\n\n\n\n\n\u672c\u6587\u7531 \n\u9ad8\u9e4f\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Safari launcher"
        },
        {
            "location": "/cn/writing-running-appium/safari-launcher/#ios-93-web-safarilauncher",
            "text": "\u5728 iOS 9.3 \u6216\u66f4\u4f4e\u7248\u672c\u7684 iOS \u771f\u5b9e\u8bbe\u5907\u4e0a\u8fd0\u884c\u79fb\u52a8 web \u6d4b\u8bd5\u9700\u8981\u5f15\u5165\u7b2c\u4e09\u65b9\u5e94\u7528\u7a0b\u5e8f SafariLauncher \u3002 \u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a Instruments \u6ca1\u6709\u529e\u6cd5\u5728\u8bbe\u5907\u4e0a\u542f\u52a8Safari \u5e94\u7528\u7a0b\u5e8f\u3002\u53ea\u6709\u5148\u542f\u52a8 SafariLauncher \u5e94\u7528\u7a0b\u5e8f\uff0c\u7136\u540e\u624d\u80fd\u542f\u52a8Safari\u3002\u7b80\u5355\uff01  In some configurations, Appium is able to automatically build, sign, and install SafariLauncher  as it needs, and there is nothing else necessary to be done. If,\nhowever, this is not the case, as is more often so with later versions of Xcode , the following configuration needs to\nbe done before Safari tests on real devices can be successfully run.  \u5728\u67d0\u4e9b\u914d\u7f6e\u4e2d\uff0cAppium \u80fd\u591f\u6839\u636e\u9700\u8981\u81ea\u52a8\u6784\u5efa\uff0c\u7b7e\u540d\u548c\u5b89\u88c5 SafariLauncher\uff0c\u6ca1\u6709\u4ec0\u4e48\u989d\u5916\u8981\u505a\u7684\u3002 \u4f46\u662f\uff0c\u4e8b\u5b9e\u5e76\u975e\u5982\u6b64\uff0c\u968f\u7740 Xcode \u7684\u7248\u672c\u66f4\u65b0\u66f4\u4e3a\u5e38\u89c1\u3002\u60f3\u8981\u5728\u771f\u5b9e\u8bbe\u5907\u4e0a\u7684 Safari \u4e0a\u6210\u529f\u8fd0\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u914d\u7f6e\u3002",
            "title": "\u5728 iOS 9.3 \u53ca\u4ee5\u4e0b\u7248\u672c\u7684\u771f\u673a\u4e0a\u8fd0\u884c\u79fb\u52a8 web \u6d4b\u8bd5\uff1aSafariLauncher"
        },
        {
            "location": "/cn/writing-running-appium/safari-launcher/#safarilauncher",
            "text": "The only thing needed for automatic  SafariLauncher  configuration is to create\na  provisioning profile  that can be used to deploy the  SafariLauncher  App.\nThis requires, in particular, a wildcard certificate, which is not possible if\nyour Apple developer account is a free one. If that is the case, skip to the\nmanual configuration below.  \u81ea\u52a8\u914d\u7f6e SafariLauncher \u552f\u4e00\u9700\u8981\u505a\u7684\u662f\u521b\u5efa\u4e00\u4e2a\u53ef\u7528\u4e8e\u90e8\u7f72 SafariLauncher App \u7684 \u914d\u7f6e\u6587\u4ef6 \u3002 \u8fd9\u9700\u8981\u4e00\u4e2a\u901a\u914d\u7b26\u8bc1\u4e66\u3002\u4f46\u662f\u5982\u679c\u60a8\u7684Apple\u5f00\u53d1\u8005\u5e10\u6237\u662f\u514d\u8d39\u7684\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002 \u5982\u679c\u662f\u8fd9\u79cd\u60c5\u51b5\uff0c\u8bf7\u8df3\u8f6c\u5230\u4e0b\u9762\u7684\u624b\u52a8\u914d\u7f6e\u5185\u5bb9\u3002  \u8981\u521b\u5efa\u542f\u52a8\u5668\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u8bf7\u8fdb\u5165 Apple Developers\u4f1a\u5458\u4e2d\u5fc3 \uff0c\u6309\u5982\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a  \u6b65\u9aa41\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 APP ID \uff0c\u5e76\u9009\u62e9WildCard APP ID\u9009\u9879\uff0c\u5c06\u5176\u8bbe\u7f6e\u4e3a\u201c * \u201d\n\u6b65\u9aa42\uff1a\u521b\u5efa\u4e00\u4e2a \u65b0\u7684\u5f00\u53d1\u914d\u7f6e\u6587\u4ef6 \uff0cApp Id\u9009\u62e9\u5728\u6b65\u9aa41\u4e2d\u521b\u5efa\u7684\u3002\n\u6b65\u9aa43\uff1a\u9009\u62e9\u60a8\u7684 \u8bc1\u4e66\u548c\u8bbe\u5907 \uff0c\u7136\u540e\u5355\u51fb\u4e0b\u4e00\u6b65\u3002\n\u6b65\u9aa44\uff1a\u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6\u540d\u79f0\u5e76 \u751f\u6210\u914d\u7f6e\u6587\u4ef6 \u3002\n\u6b65\u9aa45\uff1a\u4e0b\u8f7d\u914d\u7f6e\u6587\u4ef6\u5e76\u7528\u6587\u672c\u7f16\u8f91\u5668\u6253\u5f00\u3002\n\u6b65\u9aa46\uff1a\u641c\u7d22 UUID \u53ca\u5176\u5b57\u7b26\u4e32\u4f5c\u4e3a\u60a8\u7684 \u8eab\u4efd\u4ee3\u7801 \u3002  \u73b0\u5728\u53ea\u9700\u5c06\u60a8\u7684UDID\u548c\u8bbe\u5907\u540d\u79f0\u5305\u542b\u5728\u60a8\u6240\u9700\u7684\u529f\u80fd\u4e2d\uff1a  {\n  udid: '...',\n  deviceName: '...',\n  platformName: 'iOS',\n  platformVersion: '9.3',\n  browserName: 'Safari'\n}",
            "title": "\u81ea\u52a8\u914d\u7f6eSafariLauncher"
        },
        {
            "location": "/cn/writing-running-appium/safari-launcher/#safarilauncher_1",
            "text": "\u6ce8\u610f\uff1a  \u6b64\u8fc7\u7a0b\u5047\u5b9a\u60a8\u5df2\u7ecf\u5b89\u88c5 Xcode 7.3\u62167.3.1\u3002  \u53ef\u4ee5\u4f7f\u7528  appium-ios-driver  \u9644\u5e26\u7684  SafariLauncher  \u7248\u672c\uff0c\u4f46\u5982\u679c\u8fd9\u6837\u505a\uff0c\u6bcf\u6b21\u66f4\u65b0Appium\u65f6\uff0c\u5fc5\u987b\u91cd\u65b0\u6267\u884c\u8be5\u8fc7\u7a0b\u3002  \u8981\u83b7\u53d6  SafariLauncher  \u7684\u672c\u5730\u526f\u672c\uff0c\u8bf7\u5148\u4ece  GitHub  \u514b\u9686\u5b83\uff1a  git clone https://github.com/snevesbarros/SafariLauncher.git  \u4e00\u65e6\u60a8\u62e5\u6709  SafariLauncher  \u7684\u6e90\u4ee3\u7801\u7684\u672c\u5730\u526f\u672c\uff0c\u8bf7\u6253\u5f00  Xcode \uff0c\u7136\u540e\u6253\u5f00  SafariLauncher  \u9879\u76ee   \u5728  SafariLauncher  target \u7a97\u53e3\u4e2d\uff0c\u60a8\u4f1a\u770b\u5230\u4e00\u4e2a\u9519\u8bef\uff0c\u8868\u793a\u9700\u8981\u6709\u4e00\u4e2a\u6b64 app \u7684\u914d\u7f6e\u6587\u4ef6   \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u60a8\u9996\u5148\u9700\u8981\u4e3aapp\u8f93\u5165\u201cBundle Identifier\u201d\u3002 Appium\u671f\u671b\u7684\u9ed8\u8ba4\u503c\u4e3acom.bytearc.SafariLauncher\uff0c\u4f46\u8fd9\u53ef\u80fd\u65e0\u6cd5\u7528\u4e8e\u6784\u5efa\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8bf7\u9009\u62e9\u5176\u4ed6\u7684\u4e1c\u897f\uff0c\u5e76\u8bb0\u4e0b\u5b83\u3002 \u7136\u540e\u9009\u62e9\u201cTeam\u201d\uff0c\u5e76\u5141\u8bb8\u521b\u5efa\u914d\u7f6e\u6587\u4ef6   \u6700\u540e\uff0c\u786e\u4fdd\u60a8\u7684\u8bbe\u5907\u5df2\u8fde\u63a5\u5230\u8ba1\u7b97\u673a\uff0c\u5e76\u5c06\u5176\u9009\u4e3a\u76ee\u6807\u8bbe\u5907   \u5e76\u8fd0\u884c\u6784\u5efa\u548c\u5b89\u88c5\u64cd\u4f5c\u6765\u7f16\u8bd1app\u5e76\u5c06\u5176\u63a8\u9001\u5230\u60a8\u7684\u8bbe\u5907\u4e0a   \u73b0\u5728\u4f60\u7684\u8bbe\u5907\u4e0a\u6709\u4e00\u4e2a\u53ef\u7528\u7684  SafariLauncher \u3002 \u8be5app\u672c\u8eab\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5c4f\u5e55\uff0c\u70b9\u51fb\u4e00\u4e2a\u6309\u94ae\u5c06\u542f\u52a8  Safari   \u5982\u679c\u60a8\u9009\u62e9\u4e86\u4e0e\u9ed8\u8ba4\uff08com.bytearc.SafariLauncher\uff09\u4e0d\u540c\u7684app\u7684\u8f6f\u4ef6\u5305\u6807\u8bc6\u7b26\uff0c\u5219\u6700\u540e\u4e00\u6b65\u662f\u5fc5\u9700\u7684\u3002 \u5982\u679c\u4f60\u8fd9\u6837\u505a\uff0c\u5728\u4f7f\u7528bundleId\u6240\u9700\u7684\u529f\u80fd\u521b\u5efa\u4f1a\u8bdd\u65f6\uff0c\u9700\u8981\u5c06\u5b83\u53d1\u9001\u5230Appium\uff1a  {\n  udid: '...',\n  deviceName: '...',\n  platformName: 'iOS',\n  platformVersion: '9.3',\n  browserName: 'Safari',\n  bundleId: 'com.imurchie.SafariLauncher'\n}  \u672c\u6587\u7531  \u9ad8\u9e4f  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u624b\u52a8\u914d\u7f6e SafariLauncher"
        },
        {
            "location": "/cn/writing-running-appium/server-args/",
            "text": "Appium\u670d\u52a1\u5668\u53c2\u6570\n\n\nAppium v1.5\u91cc\u67d0\u4e9b\u670d\u52a1\u5668\u53c2\u6570\u5df2\u88ab\u5f03\u7528\uff0c\u53d6\u800c\u4ee3\u4e4b\u4f7f\u7528\u7684-default-capabilities \u6807\u5fd7\u3002\n\n\n\u7528\u6cd5\uff1anode . [\u6807\u5fd7]\n\n\n\u670d\u52a1\u5668\u6807\u5fd7\n\n\n\u6240\u6709\u6807\u5fd7\u90fd\u662f\u53ef\u9009\u7684\uff0c\u4f46\u662f\u6709\u4e9b\u5fc5\u987b\u8ddf\u6307\u5b9a\u6807\u5fd7\u7ec4\u5408\u4f7f\u7528\u624d\u751f\u6548\u3002\n\n\n\n\n\n\n\n\n\n\n\u6807\u5fd7\n\n\n\u9ed8\u8ba4\u503c\n\n\n\u63cf\u8ff0\n\n\n\u793a\u4f8b\n\n\n\n\n\n\n\n\n\n\n--shell\n\n\n\u65e0\n\n\n\u8fdb\u5165 REPL \u6a21\u5f0f\n\n\n\n\n\n\n\n\n--ipa\n\n\n\u65e0\n\n\n(\u4ec5iOS)  \u00a0.ipa \u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\n\n\n--ipa /abs/path/to/my.ipa\n\n\n\n\n\n\n-a\n, \n--address\n\n\n0.0.0.0\n\n\n\u76d1\u542c\u7684 ip \u5730\u5740\n\n\n--address 0.0.0.0\n\n\n\n\n\n\n-p\n, \n--port\n\n\n4723\n\n\n\u76d1\u542c\u7684\u7aef\u53e3\n\n\n--port 4723\n\n\n\n\n\n\n-ca\n, \n--callback-address\n\n\n\u65e0\n\n\n\u56de\u8c03ip\u5730\u5740 (\u9ed8\u8ba4: \u540c --address)\n\n\n--callback-address 127.0.0.1\n\n\n\n\n\n\n-cp\n, \n--callback-port\n\n\n\u65e0\n\n\n\u56de\u8c03\u7aef\u53e3 (\u9ed8\u8ba4: \u540c --port)\n\n\n--callback-port 4723\n\n\n\n\n\n\n-bp\n, \n--bootstrap-port\n\n\n4724\n\n\n(\u4ec5\u5b89\u5353) \u8bbe\u5907\u4e0a\u8ddf Appium\u901a\u4fe1\u7684\u7aef\u53e3\u53f7\n\n\n--bootstrap-port 4724\n\n\n\n\n\n\n-r\n, \n--backend-retries\n\n\n3\n\n\n(\u4ec5iOS) \u9047\u5230crash\u6216\u8005\u8d85\u65f6\uff0c\u5c1d\u8bd5\u91cd\u542fInstruments\u7684\u6b21\u6570\n\n\n--backend-retries 3\n\n\n\n\n\n\n--session-override\n\n\nfalse\n\n\n\u5141\u8bb8session\u8986\u76d6 (\u5982\u6709\u51b2\u7a81)\n\n\n\n\n\n\n\n\n-l\n, \n--pre-launch\n\n\nfalse\n\n\n\u9996\u6b21\u5efa\u7acbsession\u65f6\u9884\u542f\u52a8\u5e94\u7528 (iOS \u9700\u8981 \u2013app\u53c2\u6570\uff0cAndroid\u9700\u8981 \u2013app-pkg\u548c \u2013app-activity\u53c2\u6570)\n\n\n\n\n\n\n\n\n-g\n, \n--log\n\n\n\u65e0\n\n\n\u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6\n\n\n--log /path/to/appium.log\n\n\n\n\n\n\n--log-level\n\n\ndebug\n\n\n\u65e5\u5fd7\u7b49\u7ea7\uff1b\u9ed8\u8ba4 (\u63a7\u5236\u53f0[:file]): \u8c03\u8bd5[:debug]\n\n\n--log-level debug\n\n\n\n\n\n\n--log-timestamp\n\n\nfalse\n\n\n\u5728\u7ec8\u7aef\u8f93\u51fa\u91cc\u663e\u793a\u65f6\u95f4\u6233\n\n\n\n\n\n\n\n\n--local-timezone\n\n\nfalse\n\n\n\u65f6\u95f4\u6233\u4f7f\u7528\u672c\u5730\u65f6\u533a\n\n\n\n\n\n\n\n\n--log-no-colors\n\n\nfalse\n\n\n\u7ec8\u7aef\u8f93\u51fa\u4e0d\u663e\u793a\u989c\u8272\n\n\n\n\n\n\n\n\n-G\n, \n--webhook\n\n\n\u65e0\n\n\n\u540c\u65f6\u53d1\u9001\u65e5\u5fd7\u5230 HTTP \u76d1\u542c\u5668\n\n\n--webhook localhost:9876\n\n\n\n\n\n\n--safari\n\n\nfalse\n\n\n(\u4ec5iOS) \u4f7f\u7528safari\u5e94\u7528\u7a0b\u5e8f\n\n\n\n\n\n\n\n\n--default-device\n, \n-dd\n\n\nfalse\n\n\n(\u4ec5iOS\u6a21\u62df\u5668) Instruments\u542f\u52a8\u65f6\u4f7f\u7528\u7684\u9ed8\u8ba4\u6a21\u62df\u5668\n\n\n\n\n\n\n\n\n--force-iphone\n\n\nfalse\n\n\n(\u4ec5iOS) \u4e0d\u7ba1\u5e94\u7528\u7a0b\u5e8f\u6307\u5b9a\u4ec0\u4e48\u8bbe\u5907\uff0c\u5f3a\u5236\u4f7f\u7528iPhone\u6a21\u62df\u5668\n\n\n\n\n\n\n\n\n--force-ipad\n\n\nfalse\n\n\n(\u4ec5iOS) \u4e0d\u7ba1\u5e94\u7528\u7a0b\u5e8f\u6307\u5b9a\u4ec0\u4e48\u8bbe\u5907\uff0c\u5f3a\u5236\u4f7f\u7528iPad\u6a21\u62df\u5668\n\n\n\n\n\n\n\n\n--tracetemplate\n\n\n\u65e0\n\n\n(\u4ec5iOS) \u6307\u5b9aInstruments\u6240\u4f7f\u7528\u7684.tracetemplate\u6587\u4ef6\n\n\n--tracetemplate /Users/me/Automation.tracetemplate\n\n\n\n\n\n\n--instruments\n\n\n\u65e0\n\n\n(\u4ec5iOS) Instruments\u4e8c\u8fdb\u5236\u6587\u4ef6\u8def\u5f84\n\n\n--instruments /path/to/instruments\n\n\n\n\n\n\n--nodeconfig\n\n\n\u65e0\n\n\n\u6307\u5b9a JSON\u683c\u5f0f\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u6765\u5728selenium grid\u91cc\u6ce8\u518cappium\n\n\n--nodeconfig /abs/path/to/nodeconfig.json\n\n\n\n\n\n\n-ra\n, \n--robot-address\n\n\n0.0.0.0\n\n\nrobot\u4f7f\u7528\u7684IP\u5730\u5740\n\n\n--robot-address 0.0.0.0\n\n\n\n\n\n\n-rp\n, \n--robot-port\n\n\n-1\n\n\nrobot\u4f7f\u7528\u7684\u7aef\u53e3\u53f7\n\n\n--robot-port 4242\n\n\n\n\n\n\n--selendroid-port\n\n\n8080\n\n\n\u7528\u4e8e\u548cSelendroid\u901a\u4fe1\u7684\u672c\u5730\u7aef\u53e3\n\n\n--selendroid-port 8080\n\n\n\n\n\n\n--chromedriver-port\n\n\n9515\n\n\nChromeDriver \u8fd0\u884c\u4f7f\u7528\u7684\u7aef\u53e3\n\n\n--chromedriver-port 9515\n\n\n\n\n\n\n--chromedriver-executable\n\n\n\u65e0\n\n\nChromeDriver\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8def\u5f84\n\n\n\n\n\n\n\n\n--show-config\n\n\nfalse\n\n\n\u6253\u5370appium\u670d\u52a1\u5668\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u7136\u540e\u9000\u51fa\n\n\n\n\n\n\n\n\n--no-perms-check\n\n\nfalse\n\n\n\u7ed5\u8fc7Appium\u68c0\u67e5\uff0c\u786e\u4fdd\u7528\u6237\u53ef\u8bfb/\u5199\u5fc5\u8981\u7684\u6587\u4ef6\n\n\n\n\n\n\n\n\n--strict-caps\n\n\nfalse\n\n\n\u5982\u679c\u6240\u9009\u8bbe\u5907\u662fappium\u4e0d\u627f\u8ba4\u7684\u6709\u6548\u8bbe\u5907\uff0c\u4f1a\u5bfc\u81f4\u4f1a\u8bdd\u5931\u8d25\n\n\n\n\n\n\n\n\n--isolate-sim-device\n\n\nfalse\n\n\nXcode 6\u5b58\u5728\u4e00\u4e2abug\uff0c\u90a3\u5c31\u662f\u4e00\u4e9b\u5e73\u53f0\u4e0a\u5982\u679c\u5176\u4ed6\u6a21\u62df\u5668\u8bbe\u5907\u5148\u88ab\u5220\u9664\u65f6\u67d0\u4e2a\u7279\u5b9a\u7684\u6a21\u62df\u5668\u53ea\u80fd\u5728\u6ca1\u6709\u4efb\u4f55\u9519\u8bef\u7684\u60c5\u51b5\u4e0b\u88ab\u5efa\u7acb\u3002\u8fd9\u4e2a\u9009\u9879\u5bfc\u81f4\u4e86Appium\u4e0d\u5f97\u4e0d\u5220\u9664\u9664\u4e86\u6b63\u5728\u4f7f\u7528\u8bbe\u5907\u4ee5\u5916\u5176\u4ed6\u6240\u6709\u7684\u8bbe\u5907\u3002\u8bf7\u6ce8\u610f\u8fd9\u662f\u6c38\u4e45\u6027\u5220\u9664\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528simctl\u6216xcode\u7ba1\u7406\u88abAppium\u4f7f\u7528\u7684\u8bbe\u5907\u7c7b\u522b\u3002\n\n\n\n\n\n\n\n\n--tmp\n\n\n\u65e0\n\n\n\u53ef\u4ee5\u88abAppium\u7528\u6765\u7ba1\u7406\u4e34\u65f6\u6587\u4ef6\u7684\u76ee\u5f55\uff08\u7edd\u5bf9\u8def\u5f84\uff09\uff0c\u6bd4\u5982\u5b58\u653e\u9700\u8981\u79fb\u52a8\u7684\u5185\u7f6eiOS\u5e94\u7528\u7a0b\u5e8f\u3002\u5728*nix/Mac\u4e0a\u9ed8\u8ba4\u4e3a /tmp\uff0c\u5728Windows\u4e0a\u9ed8\u8ba4\u4e3a C:\\Windows\\Temp\n\n\n\n\n\n\n\n\n--trace-dir\n\n\n\u65e0\n\n\n\u7528\u4e8e\u4fdd\u5b58iOS instruments trace\u7684 appium \u76ee\u5f55\uff0c\u662f\u7edd\u5bf9\u8def\u5f84\uff0c \u9ed8\u8ba4\u4e3a/appium-instruments\n\n\n\n\n\n\n\n\n--debug-log-spacing\n\n\nfalse\n\n\n\u5728\u65e5\u5fd7\u4e2d\u52a0\u5927\u95f4\u8ddd\u6765\u5e2e\u52a9\u8fdb\u884c\u89c6\u89c9\u68c0\u67e5\n\n\n\n\n\n\n\n\n--suppress-adb-kill-server\n\n\nfalse\n\n\n(\u4ec5\u5b89\u5353) \u5982\u679c\u8bbe\u7f6e\u4e86\uff0c\u53ef\u4ee5\u963b\u6b62Appium\u6740\u6389adb\u5b9e\u4f8b\n\n\n\n\n\n\n\n\n--async-trace\n\n\nfalse\n\n\n\u6dfb\u52a0\u957f\u5806\u6808\u8ffd\u8e2a\u5230\u65e5\u5fd7\u5b9e\u4f53\uff0c\u5efa\u8bae\u4ec5\u8c03\u8bd5\u65f6\u9009\u7528\n\n\n\n\n\n\n\n\n--webkit-debug-proxy-port\n\n\n27753\n\n\n(\u4ec5iOS) \u7528\u4e8eios-webkit-debug-proxy\u901a\u4fe1\u7684\u672c\u5730\u7aef\u53e3\n\n\n--webkit-debug-proxy-port 27753\n\n\n\n\n\n\n-dc\n, \n--default-capabilities\n\n\n{}\n\n\n\u8bbe\u7f6e\u9ed8\u8ba4desired capabilities\uff0c\u6bcf\u4e2a\u4f1a\u8bdd\u90fd\u5c06\u4f7f\u7528\u9ed8\u8ba4desired capabilities\uff0c\u9664\u975e\u88ab\u65b0\u7684capabilities\u8986\u76d6\n\n\n--default-capabilities [ '{\"app\": \"myapp.app\", \"deviceName\": \"iPhone Simulator\"}' | /path/to/caps.json ]\n\n\n\n\n\n\n--reboot\n\n\nfalse\n\n\n- (\u4ec5\u5b89\u5353)  \u6bcf\u6b21\u5efa\u7acb\u4f1a\u8bdd\u91cd\u542f\u6a21\u62df\u5668\uff0c\u4f1a\u8bdd\u7ed3\u675f\u540e\u6740\u6389\u6a21\u62df\u5668\n\n\n\n\n\n\n\n\n--command-timeout\n\n\n60\n\n\n[\u5f03\u7528] \u9ed8\u8ba4\u6240\u6709\u4f1a\u8bdd\u63a5\u6536\u547d\u4ee4\u7684\u8d85\u65f6\u65f6\u95f4 (\u5355\u4f4d\u662f\u79d2\uff0c\u4f46\u4e0d\u8d85\u8fc72147483\u79d2)\u3002\u5df2\u88abnewCommandTimeout\u5173\u952e\u5b57\u66ff\u4ee3\n\n\n\n\n\n\n\n\n-k\n, \n--keep-artifacts\n\n\nfalse\n\n\n[\u5f03\u7528] - \u4fdd\u7559Instruments trace\u76ee\u5f55\uff0c\u8bf7\u53c2\u8003--trace-dir\u6807\u5fd7\n\n\n\n\n\n\n\n\n--platform-name\n\n\n\u65e0\n\n\n[\u5f03\u7528] -\u79fb\u52a8\u5e73\u53f0\u540d\u79f0: iOS\uff0cAndroid\u6216 FirefoxOS\n\n\n--platform-name iOS\n\n\n\n\n\n\n--platform-version\n\n\n\u65e0\n\n\n[\u5f03\u7528] - \u79fb\u52a8\u5e73\u53f0\u7684\u7248\u672c\u53f7\n\n\n--platform-version 7.1\n\n\n\n\n\n\n--automation-name\n\n\n\u65e0\n\n\n[\u5f03\u7528] - \u81ea\u52a8\u5316\u5de5\u5177\b\u7684\u540d\u79f0: Appium \u6216 Selendroid\n\n\n--automation-name Appium\n\n\n\n\n\n\n--device-name\n\n\n\u65e0\n\n\n[\u5f03\u7528] - \u8981\u4f7f\u7528\u7684\u79fb\u52a8\u8bbe\u5907\u7684\u540d\u79f0\n\n\n--device-name iPhone Retina (4-inch), Android Emulator\n\n\n\n\n\n\n--browser-name\n\n\n\u65e0\n\n\n[\u5f03\u7528] - \u79fb\u52a8\u6d4f\u89c8\u5668\u7684\u540d\u79f0: Safari \u6216\u8005 Chrome\n\n\n--browser-name Safari\n\n\n\n\n\n\n--app\n\n\n\u65e0\n\n\n[\u5f03\u7528] - IOS: \u57fa\u4e8e\u6a21\u62df\u5668\u7f16\u8bd1\u7684.app\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\u6216\u8005\u8bbe\u5907\u4e0a\u76ee\u6807\u7684BundleId\uff1b Android: .apk\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\n\n\n--app /abs/path/to/my.app\n\n\n\n\n\n\n-lt\n, \n--launch-timeout\n\n\n90000\n\n\n[\u5f03\u7528] - (\u4ec5iOS) Instruments\u542f\u52a8\u7b49\u5f85\u65f6\u95f4\uff08\u5355\u4f4d: ms\uff09\n\n\n\n\n\n\n\n\n--language\n\n\n\u65e0\n\n\n[\u5f03\u7528] -iOS\u6a21\u62df\u5668/Android\u6a21\u62df\u5668\u7684\u8bed\u8a00\n\n\n--language en\n\n\n\n\n\n\n--locale\n\n\n\u65e0\n\n\n[\u5f03\u7528] -iOS\u6a21\u62df\u5668/Android\u6a21\u62df\u5668\u7684\u533a\u57df\n\n\n--locale en_US\n\n\n\n\n\n\n-U\n, \n--udid\n\n\n\u65e0\n\n\n[\u5f03\u7528] - \u8fde\u63a5\u7684\u7269\u7406\u8bbe\u5907\u7684udid\n\n\n--udid 1adsf-sdfas-asdf-123sdf\n\n\n\n\n\n\n--orientation\n\n\n\u65e0\n\n\n[\u5f03\u7528] - (\u4ec5iOS) \u521d\u59cb\u5316\u8bf7\u6c42\u65f6\uff0c\u4f7f\u7528LANDSCAPE\u6216\u8005PORTRAIT\n\n\n--orientation LANDSCAPE\n\n\n\n\n\n\n--no-reset\n\n\nfalse\n\n\n[\u5f03\u7528] -  session\u4e4b\u95f4\u4e0d\u5145\u503c\u5e94\u7528\u72b6\u6001 (IOS: \u4e0d\u5220\u9664\u5e94\u7528\u7684 plist \u6587\u4ef6\uff1bAndroid: \u5728\u521b\u5efa\u4e00\u4e2a\u65b0\u7684session\u524d\u4e0d\u5220\u9664\u5e94\u7528\u3002)\n\n\n\n\n\n\n\n\n--full-reset\n\n\nfalse\n\n\n[\u5f03\u7528] - (iOS)  \u5220\u9664\u6574\u4e2a\u6a21\u62df\u5668\u76ee\u5f55\u3002 (Android) \u901a\u8fc7\u5378\u8f7d\u5e94\u7528\uff08\u800c\u4e0d\u662f\u6e05\u695a\u6570\u636e\uff09\u91cd\u7f6e\u5e94\u7528\u72b6\u6001\u3002\u5728Android\u4e0asession\u5b8c\u6210\u540e\u4e5f\u4f1a\u5220\u9664\u5e94\u7528\u3002\n\n\n\n\n\n\n\n\n--app-pkg\n\n\n\u65e0\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u60f3\u8981\u8fd0\u884c\u7684apk\u7684java\u5305 (\u4f8b\u5982\uff0c com.example.android.myApp)\n\n\n--app-pkg com.example.android.myApp\n\n\n\n\n\n\n--app-activity\n\n\n\u65e0\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u6253\u5f00\u5e94\u7528\u65f6\uff0c\u60f3\u8981\u542f\u52a8\u7684Activity\u7684\u540d\u79f0\uff08\u4f8b\u5982 MainActivity\uff09\n\n\n--app-activity MainActivity\n\n\n\n\n\n\n--app-wait-package\n\n\nfalse\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u60f3\u8981\u7b49\u5f85\u7684activity\u7684\u5305\u540d (\u4f8b\u5982 com.example.android.myApp)\n\n\n--app-wait-package com.example.android.myApp\n\n\n\n\n\n\n--app-wait-activity\n\n\nfalse\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u60f3\u8981\u7b49\u5f85\u7684activity\u540d\uff08\u4f8b\u5982 SplashActivity\uff09\n\n\n--app-wait-activity SplashActivity\n\n\n\n\n\n\n--device-ready-timeout\n\n\n5\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u7b49\u5f85\u8bbe\u5907\u51c6\u5907\u5c31\u7eea\u7684\u65f6\u95f4(\u5355\u4f4d: \u79d2)\n\n\n--device-ready-timeout 5\n\n\n\n\n\n\n--android-coverage\n\n\nfalse\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u5b8c\u5168\u7b26\u5408\u6761\u4ef6\u7684instrumentation\u7c7b\uff0c\u4f5c\u4e3a\u547d\u4ee4 adb shell am instrument -e coverage true -w \u7684 -w \u7684\u53c2\u6570\n\n\n--android-coverage com.my.Pkg/com.my.Pkg.instrumentation.MyInstrumentation\n\n\n\n\n\n\n--avd\n\n\n\u65e0\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u8981\u542f\u52a8\u7684avd\u7684\u540d\u79f0\n\n\n--avd @default\n\n\n\n\n\n\n--avd-args\n\n\n\u65e0\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u542f\u52a8avd\u65f6\u989d\u5916\u7684\u6a21\u62df\u5668\u53c2\u6570\n\n\n--avd-args -no-snapshot-load\n\n\n\n\n\n\n--use-keystore\n\n\nfalse\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353)  \u8bbe\u7f6e\u7b7e\u540dapk\u7684keystore\n\n\n\n\n\n\n\n\n--keystore-path\n\n\n/.android/debug.keystore\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) keystore \u7684\u8def\u5f84\n\n\n\n\n\n\n\n\n--keystore-password\n\n\nandroid\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) keystore\u7684\u5bc6\u7801\n\n\n\n\n\n\n\n\n--key-alias\n\n\nandroiddebugkey\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) Key\u7684\u522b\u540d\n\n\n\n\n\n\n\n\n--key-password\n\n\nandroid\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) Key \u7684\u5bc6\u7801\n\n\n\n\n\n\n\n\n--intent-action\n\n\nandroid.intent.action.MAIN\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u7528\u4e8e\u542f\u52a8activity\u7684Intent  action\n\n\n--intent-action android.intent.action.MAIN\n\n\n\n\n\n\n--intent-category\n\n\nandroid.intent.category.LAUNCHER\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u7528\u4e8e\u542f\u52a8activity\u7684Intent category\n\n\n--intent-category android.intent.category.APP_CONTACTS\n\n\n\n\n\n\n--intent-flags\n\n\n0x10200000\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u542f\u52a8activity\u7684\u6807\u5fd7\n\n\n--intent-flags 0x10200000\n\n\n\n\n\n\n--intent-args\n\n\n\u65e0\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353)\u542f\u52a8activity\u65f6\u9644\u5e26\u989d\u5916\u7684intent\u53c2\u6570\n\n\n--intent-args 0x10200000\n\n\n\n\n\n\n--dont-stop-app-on-reset\n\n\nfalse\n\n\n[\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u7528\u4e8e\u8bbe\u7f6eappium\u91cd\u542f\u65f6\u662f\u5426\u5148\u6740\u6389app\n\n\n\n\n\n\n\n\n--calendar-format\n\n\n\u65e0\n\n\n[\u5f03\u7528] - (\u4ec5iOS) iOS\u6a21\u62df\u5668\u7684\u65e5\u5386\u683c\u5f0f\n\n\n--calendar-format gregorian\n\n\n\n\n\n\n--native-instruments-lib\n\n\nfalse\n\n\n[\u5f03\u7528] - (\u4ec5iOS) iOS \u5185\u5efa\u4e86\u4e00\u4e2a\u602a\u5f02\u7684\u4e0d\u53ef\u80fd\u907f\u514d\u7684\u5ef6\u8fdf\uff0c\u6211\u4eec\u5728Appium\u91cc\u4fee\u590d\u4e86\u5b83\uff0c\u5982\u679c\u4f60\u60f3\u7528\u539f\u6765\u7684\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u53c2\u6570\n\n\n\n\n\n\n\n\n--keep-keychains\n\n\nfalse\n\n\n[\u5f03\u7528] - (\u4ec5iOS) \u5f53Appium\u542f\u52a8\u6216\u8005\u5173\u95ed\u7684\u65f6\u5019\uff0c\u662f\u5426\u4fdd\u7559keychains(Library/Keychains)\n\n\n\n\n\n\n\n\n--localizable-strings-dir\n\n\nen.lproj\n\n\n[\u5f03\u7528] - (\u4ec5iOS)\u5b9a\u4f4d.strings\u6240\u5728\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84\n\n\n--localizable-strings-dir en.lproj\n\n\n\n\n\n\n--show-ios-log\n\n\nfalse\n\n\n[\u5f03\u7528] - (\u4ec5iOS) \u5982\u679c\u8bbe\u7f6e\u4e86\uff0ciOS\u7cfb\u7edf\u65e5\u5fd7\u4f1a\u8f93\u51fa\u5230\u7ec8\u7aef\n\n\n\n\n\n\n\n\n--enable-heapdump\n\n\nfalse\n\n\n\u6fc0\u6d3b NodeJS \u5185\u5b58 dumps \u6536\u96c6\u529f\u80fd\u3002\u8fd9\u4e2a\u529f\u80fd\u5bf9\u627e\u5230\u5185\u5b58\u6cc4\u9732\u975e\u5e38\u6709\u7528\u3002\u7528 'kill -SIGUSR2 <PID>' \u547d\u4ee4\u6765\u521b\u5efa node \u8fdb\u7a0b\u7684\u5185\u5b58\u5806\u6808dump\uff0c\u53ea\u6709\u5728 \nnix \u7cfb\u7edf\u6709\u6548\u3002dump \u6587\u4ef6\u4f1a\u88ab\u521b\u5efa\u5728 appium \u8fd0\u884c\u7684\u76ee\u5f55\uff0c\u6587\u4ef6\u4f7f\u7528 \n.heapsnapshot \u505a\u540e\u7f00\u3002\u5982\u679c\u540e\u7eed\u60f3\u8981\u6df1\u5165\u7814\u7a76\uff0c\u8fd9\u4e2a\u5feb\u7167\u53ef\u4ee5\u88ab\u52a0\u8f7d\u5230 Chrome Inspector \u91cc\u53bb\u3002\u53c2\u52a0 \nRising Stack article\n for more details.\n\n\n\n\n\n\n\n\n\n\n\u672c\u6587\u7531 \ntestly\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Server args"
        },
        {
            "location": "/cn/writing-running-appium/server-args/#appium",
            "text": "Appium v1.5\u91cc\u67d0\u4e9b\u670d\u52a1\u5668\u53c2\u6570\u5df2\u88ab\u5f03\u7528\uff0c\u53d6\u800c\u4ee3\u4e4b\u4f7f\u7528\u7684-default-capabilities \u6807\u5fd7\u3002  \u7528\u6cd5\uff1anode . [\u6807\u5fd7]",
            "title": "Appium\u670d\u52a1\u5668\u53c2\u6570"
        },
        {
            "location": "/cn/writing-running-appium/server-args/#_1",
            "text": "\u6240\u6709\u6807\u5fd7\u90fd\u662f\u53ef\u9009\u7684\uff0c\u4f46\u662f\u6709\u4e9b\u5fc5\u987b\u8ddf\u6307\u5b9a\u6807\u5fd7\u7ec4\u5408\u4f7f\u7528\u624d\u751f\u6548\u3002      \u6807\u5fd7  \u9ed8\u8ba4\u503c  \u63cf\u8ff0  \u793a\u4f8b      --shell  \u65e0  \u8fdb\u5165 REPL \u6a21\u5f0f     --ipa  \u65e0  (\u4ec5iOS)  \u00a0.ipa \u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84  --ipa /abs/path/to/my.ipa    -a ,  --address  0.0.0.0  \u76d1\u542c\u7684 ip \u5730\u5740  --address 0.0.0.0    -p ,  --port  4723  \u76d1\u542c\u7684\u7aef\u53e3  --port 4723    -ca ,  --callback-address  \u65e0  \u56de\u8c03ip\u5730\u5740 (\u9ed8\u8ba4: \u540c --address)  --callback-address 127.0.0.1    -cp ,  --callback-port  \u65e0  \u56de\u8c03\u7aef\u53e3 (\u9ed8\u8ba4: \u540c --port)  --callback-port 4723    -bp ,  --bootstrap-port  4724  (\u4ec5\u5b89\u5353) \u8bbe\u5907\u4e0a\u8ddf Appium\u901a\u4fe1\u7684\u7aef\u53e3\u53f7  --bootstrap-port 4724    -r ,  --backend-retries  3  (\u4ec5iOS) \u9047\u5230crash\u6216\u8005\u8d85\u65f6\uff0c\u5c1d\u8bd5\u91cd\u542fInstruments\u7684\u6b21\u6570  --backend-retries 3    --session-override  false  \u5141\u8bb8session\u8986\u76d6 (\u5982\u6709\u51b2\u7a81)     -l ,  --pre-launch  false  \u9996\u6b21\u5efa\u7acbsession\u65f6\u9884\u542f\u52a8\u5e94\u7528 (iOS \u9700\u8981 \u2013app\u53c2\u6570\uff0cAndroid\u9700\u8981 \u2013app-pkg\u548c \u2013app-activity\u53c2\u6570)     -g ,  --log  \u65e0  \u5c06\u65e5\u5fd7\u8f93\u51fa\u5230\u6307\u5b9a\u6587\u4ef6  --log /path/to/appium.log    --log-level  debug  \u65e5\u5fd7\u7b49\u7ea7\uff1b\u9ed8\u8ba4 (\u63a7\u5236\u53f0[:file]): \u8c03\u8bd5[:debug]  --log-level debug    --log-timestamp  false  \u5728\u7ec8\u7aef\u8f93\u51fa\u91cc\u663e\u793a\u65f6\u95f4\u6233     --local-timezone  false  \u65f6\u95f4\u6233\u4f7f\u7528\u672c\u5730\u65f6\u533a     --log-no-colors  false  \u7ec8\u7aef\u8f93\u51fa\u4e0d\u663e\u793a\u989c\u8272     -G ,  --webhook  \u65e0  \u540c\u65f6\u53d1\u9001\u65e5\u5fd7\u5230 HTTP \u76d1\u542c\u5668  --webhook localhost:9876    --safari  false  (\u4ec5iOS) \u4f7f\u7528safari\u5e94\u7528\u7a0b\u5e8f     --default-device ,  -dd  false  (\u4ec5iOS\u6a21\u62df\u5668) Instruments\u542f\u52a8\u65f6\u4f7f\u7528\u7684\u9ed8\u8ba4\u6a21\u62df\u5668     --force-iphone  false  (\u4ec5iOS) \u4e0d\u7ba1\u5e94\u7528\u7a0b\u5e8f\u6307\u5b9a\u4ec0\u4e48\u8bbe\u5907\uff0c\u5f3a\u5236\u4f7f\u7528iPhone\u6a21\u62df\u5668     --force-ipad  false  (\u4ec5iOS) \u4e0d\u7ba1\u5e94\u7528\u7a0b\u5e8f\u6307\u5b9a\u4ec0\u4e48\u8bbe\u5907\uff0c\u5f3a\u5236\u4f7f\u7528iPad\u6a21\u62df\u5668     --tracetemplate  \u65e0  (\u4ec5iOS) \u6307\u5b9aInstruments\u6240\u4f7f\u7528\u7684.tracetemplate\u6587\u4ef6  --tracetemplate /Users/me/Automation.tracetemplate    --instruments  \u65e0  (\u4ec5iOS) Instruments\u4e8c\u8fdb\u5236\u6587\u4ef6\u8def\u5f84  --instruments /path/to/instruments    --nodeconfig  \u65e0  \u6307\u5b9a JSON\u683c\u5f0f\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u6765\u5728selenium grid\u91cc\u6ce8\u518cappium  --nodeconfig /abs/path/to/nodeconfig.json    -ra ,  --robot-address  0.0.0.0  robot\u4f7f\u7528\u7684IP\u5730\u5740  --robot-address 0.0.0.0    -rp ,  --robot-port  -1  robot\u4f7f\u7528\u7684\u7aef\u53e3\u53f7  --robot-port 4242    --selendroid-port  8080  \u7528\u4e8e\u548cSelendroid\u901a\u4fe1\u7684\u672c\u5730\u7aef\u53e3  --selendroid-port 8080    --chromedriver-port  9515  ChromeDriver \u8fd0\u884c\u4f7f\u7528\u7684\u7aef\u53e3  --chromedriver-port 9515    --chromedriver-executable  \u65e0  ChromeDriver\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8def\u5f84     --show-config  false  \u6253\u5370appium\u670d\u52a1\u5668\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u7136\u540e\u9000\u51fa     --no-perms-check  false  \u7ed5\u8fc7Appium\u68c0\u67e5\uff0c\u786e\u4fdd\u7528\u6237\u53ef\u8bfb/\u5199\u5fc5\u8981\u7684\u6587\u4ef6     --strict-caps  false  \u5982\u679c\u6240\u9009\u8bbe\u5907\u662fappium\u4e0d\u627f\u8ba4\u7684\u6709\u6548\u8bbe\u5907\uff0c\u4f1a\u5bfc\u81f4\u4f1a\u8bdd\u5931\u8d25     --isolate-sim-device  false  Xcode 6\u5b58\u5728\u4e00\u4e2abug\uff0c\u90a3\u5c31\u662f\u4e00\u4e9b\u5e73\u53f0\u4e0a\u5982\u679c\u5176\u4ed6\u6a21\u62df\u5668\u8bbe\u5907\u5148\u88ab\u5220\u9664\u65f6\u67d0\u4e2a\u7279\u5b9a\u7684\u6a21\u62df\u5668\u53ea\u80fd\u5728\u6ca1\u6709\u4efb\u4f55\u9519\u8bef\u7684\u60c5\u51b5\u4e0b\u88ab\u5efa\u7acb\u3002\u8fd9\u4e2a\u9009\u9879\u5bfc\u81f4\u4e86Appium\u4e0d\u5f97\u4e0d\u5220\u9664\u9664\u4e86\u6b63\u5728\u4f7f\u7528\u8bbe\u5907\u4ee5\u5916\u5176\u4ed6\u6240\u6709\u7684\u8bbe\u5907\u3002\u8bf7\u6ce8\u610f\u8fd9\u662f\u6c38\u4e45\u6027\u5220\u9664\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528simctl\u6216xcode\u7ba1\u7406\u88abAppium\u4f7f\u7528\u7684\u8bbe\u5907\u7c7b\u522b\u3002     --tmp  \u65e0  \u53ef\u4ee5\u88abAppium\u7528\u6765\u7ba1\u7406\u4e34\u65f6\u6587\u4ef6\u7684\u76ee\u5f55\uff08\u7edd\u5bf9\u8def\u5f84\uff09\uff0c\u6bd4\u5982\u5b58\u653e\u9700\u8981\u79fb\u52a8\u7684\u5185\u7f6eiOS\u5e94\u7528\u7a0b\u5e8f\u3002\u5728*nix/Mac\u4e0a\u9ed8\u8ba4\u4e3a /tmp\uff0c\u5728Windows\u4e0a\u9ed8\u8ba4\u4e3a C:\\Windows\\Temp     --trace-dir  \u65e0  \u7528\u4e8e\u4fdd\u5b58iOS instruments trace\u7684 appium \u76ee\u5f55\uff0c\u662f\u7edd\u5bf9\u8def\u5f84\uff0c \u9ed8\u8ba4\u4e3a/appium-instruments     --debug-log-spacing  false  \u5728\u65e5\u5fd7\u4e2d\u52a0\u5927\u95f4\u8ddd\u6765\u5e2e\u52a9\u8fdb\u884c\u89c6\u89c9\u68c0\u67e5     --suppress-adb-kill-server  false  (\u4ec5\u5b89\u5353) \u5982\u679c\u8bbe\u7f6e\u4e86\uff0c\u53ef\u4ee5\u963b\u6b62Appium\u6740\u6389adb\u5b9e\u4f8b     --async-trace  false  \u6dfb\u52a0\u957f\u5806\u6808\u8ffd\u8e2a\u5230\u65e5\u5fd7\u5b9e\u4f53\uff0c\u5efa\u8bae\u4ec5\u8c03\u8bd5\u65f6\u9009\u7528     --webkit-debug-proxy-port  27753  (\u4ec5iOS) \u7528\u4e8eios-webkit-debug-proxy\u901a\u4fe1\u7684\u672c\u5730\u7aef\u53e3  --webkit-debug-proxy-port 27753    -dc ,  --default-capabilities  {}  \u8bbe\u7f6e\u9ed8\u8ba4desired capabilities\uff0c\u6bcf\u4e2a\u4f1a\u8bdd\u90fd\u5c06\u4f7f\u7528\u9ed8\u8ba4desired capabilities\uff0c\u9664\u975e\u88ab\u65b0\u7684capabilities\u8986\u76d6  --default-capabilities [ '{\"app\": \"myapp.app\", \"deviceName\": \"iPhone Simulator\"}' | /path/to/caps.json ]    --reboot  false  - (\u4ec5\u5b89\u5353)  \u6bcf\u6b21\u5efa\u7acb\u4f1a\u8bdd\u91cd\u542f\u6a21\u62df\u5668\uff0c\u4f1a\u8bdd\u7ed3\u675f\u540e\u6740\u6389\u6a21\u62df\u5668     --command-timeout  60  [\u5f03\u7528] \u9ed8\u8ba4\u6240\u6709\u4f1a\u8bdd\u63a5\u6536\u547d\u4ee4\u7684\u8d85\u65f6\u65f6\u95f4 (\u5355\u4f4d\u662f\u79d2\uff0c\u4f46\u4e0d\u8d85\u8fc72147483\u79d2)\u3002\u5df2\u88abnewCommandTimeout\u5173\u952e\u5b57\u66ff\u4ee3     -k ,  --keep-artifacts  false  [\u5f03\u7528] - \u4fdd\u7559Instruments trace\u76ee\u5f55\uff0c\u8bf7\u53c2\u8003--trace-dir\u6807\u5fd7     --platform-name  \u65e0  [\u5f03\u7528] -\u79fb\u52a8\u5e73\u53f0\u540d\u79f0: iOS\uff0cAndroid\u6216 FirefoxOS  --platform-name iOS    --platform-version  \u65e0  [\u5f03\u7528] - \u79fb\u52a8\u5e73\u53f0\u7684\u7248\u672c\u53f7  --platform-version 7.1    --automation-name  \u65e0  [\u5f03\u7528] - \u81ea\u52a8\u5316\u5de5\u5177\b\u7684\u540d\u79f0: Appium \u6216 Selendroid  --automation-name Appium    --device-name  \u65e0  [\u5f03\u7528] - \u8981\u4f7f\u7528\u7684\u79fb\u52a8\u8bbe\u5907\u7684\u540d\u79f0  --device-name iPhone Retina (4-inch), Android Emulator    --browser-name  \u65e0  [\u5f03\u7528] - \u79fb\u52a8\u6d4f\u89c8\u5668\u7684\u540d\u79f0: Safari \u6216\u8005 Chrome  --browser-name Safari    --app  \u65e0  [\u5f03\u7528] - IOS: \u57fa\u4e8e\u6a21\u62df\u5668\u7f16\u8bd1\u7684.app\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\u6216\u8005\u8bbe\u5907\u4e0a\u76ee\u6807\u7684BundleId\uff1b Android: .apk\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84  --app /abs/path/to/my.app    -lt ,  --launch-timeout  90000  [\u5f03\u7528] - (\u4ec5iOS) Instruments\u542f\u52a8\u7b49\u5f85\u65f6\u95f4\uff08\u5355\u4f4d: ms\uff09     --language  \u65e0  [\u5f03\u7528] -iOS\u6a21\u62df\u5668/Android\u6a21\u62df\u5668\u7684\u8bed\u8a00  --language en    --locale  \u65e0  [\u5f03\u7528] -iOS\u6a21\u62df\u5668/Android\u6a21\u62df\u5668\u7684\u533a\u57df  --locale en_US    -U ,  --udid  \u65e0  [\u5f03\u7528] - \u8fde\u63a5\u7684\u7269\u7406\u8bbe\u5907\u7684udid  --udid 1adsf-sdfas-asdf-123sdf    --orientation  \u65e0  [\u5f03\u7528] - (\u4ec5iOS) \u521d\u59cb\u5316\u8bf7\u6c42\u65f6\uff0c\u4f7f\u7528LANDSCAPE\u6216\u8005PORTRAIT  --orientation LANDSCAPE    --no-reset  false  [\u5f03\u7528] -  session\u4e4b\u95f4\u4e0d\u5145\u503c\u5e94\u7528\u72b6\u6001 (IOS: \u4e0d\u5220\u9664\u5e94\u7528\u7684 plist \u6587\u4ef6\uff1bAndroid: \u5728\u521b\u5efa\u4e00\u4e2a\u65b0\u7684session\u524d\u4e0d\u5220\u9664\u5e94\u7528\u3002)     --full-reset  false  [\u5f03\u7528] - (iOS)  \u5220\u9664\u6574\u4e2a\u6a21\u62df\u5668\u76ee\u5f55\u3002 (Android) \u901a\u8fc7\u5378\u8f7d\u5e94\u7528\uff08\u800c\u4e0d\u662f\u6e05\u695a\u6570\u636e\uff09\u91cd\u7f6e\u5e94\u7528\u72b6\u6001\u3002\u5728Android\u4e0asession\u5b8c\u6210\u540e\u4e5f\u4f1a\u5220\u9664\u5e94\u7528\u3002     --app-pkg  \u65e0  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u60f3\u8981\u8fd0\u884c\u7684apk\u7684java\u5305 (\u4f8b\u5982\uff0c com.example.android.myApp)  --app-pkg com.example.android.myApp    --app-activity  \u65e0  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u6253\u5f00\u5e94\u7528\u65f6\uff0c\u60f3\u8981\u542f\u52a8\u7684Activity\u7684\u540d\u79f0\uff08\u4f8b\u5982 MainActivity\uff09  --app-activity MainActivity    --app-wait-package  false  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u60f3\u8981\u7b49\u5f85\u7684activity\u7684\u5305\u540d (\u4f8b\u5982 com.example.android.myApp)  --app-wait-package com.example.android.myApp    --app-wait-activity  false  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u60f3\u8981\u7b49\u5f85\u7684activity\u540d\uff08\u4f8b\u5982 SplashActivity\uff09  --app-wait-activity SplashActivity    --device-ready-timeout  5  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u7b49\u5f85\u8bbe\u5907\u51c6\u5907\u5c31\u7eea\u7684\u65f6\u95f4(\u5355\u4f4d: \u79d2)  --device-ready-timeout 5    --android-coverage  false  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u5b8c\u5168\u7b26\u5408\u6761\u4ef6\u7684instrumentation\u7c7b\uff0c\u4f5c\u4e3a\u547d\u4ee4 adb shell am instrument -e coverage true -w \u7684 -w \u7684\u53c2\u6570  --android-coverage com.my.Pkg/com.my.Pkg.instrumentation.MyInstrumentation    --avd  \u65e0  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u8981\u542f\u52a8\u7684avd\u7684\u540d\u79f0  --avd @default    --avd-args  \u65e0  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u542f\u52a8avd\u65f6\u989d\u5916\u7684\u6a21\u62df\u5668\u53c2\u6570  --avd-args -no-snapshot-load    --use-keystore  false  [\u5f03\u7528] - (\u4ec5\u5b89\u5353)  \u8bbe\u7f6e\u7b7e\u540dapk\u7684keystore     --keystore-path  /.android/debug.keystore  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) keystore \u7684\u8def\u5f84     --keystore-password  android  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) keystore\u7684\u5bc6\u7801     --key-alias  androiddebugkey  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) Key\u7684\u522b\u540d     --key-password  android  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) Key \u7684\u5bc6\u7801     --intent-action  android.intent.action.MAIN  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u7528\u4e8e\u542f\u52a8activity\u7684Intent  action  --intent-action android.intent.action.MAIN    --intent-category  android.intent.category.LAUNCHER  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u7528\u4e8e\u542f\u52a8activity\u7684Intent category  --intent-category android.intent.category.APP_CONTACTS    --intent-flags  0x10200000  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u542f\u52a8activity\u7684\u6807\u5fd7  --intent-flags 0x10200000    --intent-args  \u65e0  [\u5f03\u7528] - (\u4ec5\u5b89\u5353)\u542f\u52a8activity\u65f6\u9644\u5e26\u989d\u5916\u7684intent\u53c2\u6570  --intent-args 0x10200000    --dont-stop-app-on-reset  false  [\u5f03\u7528] - (\u4ec5\u5b89\u5353) \u7528\u4e8e\u8bbe\u7f6eappium\u91cd\u542f\u65f6\u662f\u5426\u5148\u6740\u6389app     --calendar-format  \u65e0  [\u5f03\u7528] - (\u4ec5iOS) iOS\u6a21\u62df\u5668\u7684\u65e5\u5386\u683c\u5f0f  --calendar-format gregorian    --native-instruments-lib  false  [\u5f03\u7528] - (\u4ec5iOS) iOS \u5185\u5efa\u4e86\u4e00\u4e2a\u602a\u5f02\u7684\u4e0d\u53ef\u80fd\u907f\u514d\u7684\u5ef6\u8fdf\uff0c\u6211\u4eec\u5728Appium\u91cc\u4fee\u590d\u4e86\u5b83\uff0c\u5982\u679c\u4f60\u60f3\u7528\u539f\u6765\u7684\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u53c2\u6570     --keep-keychains  false  [\u5f03\u7528] - (\u4ec5iOS) \u5f53Appium\u542f\u52a8\u6216\u8005\u5173\u95ed\u7684\u65f6\u5019\uff0c\u662f\u5426\u4fdd\u7559keychains(Library/Keychains)     --localizable-strings-dir  en.lproj  [\u5f03\u7528] - (\u4ec5iOS)\u5b9a\u4f4d.strings\u6240\u5728\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84  --localizable-strings-dir en.lproj    --show-ios-log  false  [\u5f03\u7528] - (\u4ec5iOS) \u5982\u679c\u8bbe\u7f6e\u4e86\uff0ciOS\u7cfb\u7edf\u65e5\u5fd7\u4f1a\u8f93\u51fa\u5230\u7ec8\u7aef     --enable-heapdump  false  \u6fc0\u6d3b NodeJS \u5185\u5b58 dumps \u6536\u96c6\u529f\u80fd\u3002\u8fd9\u4e2a\u529f\u80fd\u5bf9\u627e\u5230\u5185\u5b58\u6cc4\u9732\u975e\u5e38\u6709\u7528\u3002\u7528 'kill -SIGUSR2 <PID>' \u547d\u4ee4\u6765\u521b\u5efa node \u8fdb\u7a0b\u7684\u5185\u5b58\u5806\u6808dump\uff0c\u53ea\u6709\u5728  nix \u7cfb\u7edf\u6709\u6548\u3002dump \u6587\u4ef6\u4f1a\u88ab\u521b\u5efa\u5728 appium \u8fd0\u884c\u7684\u76ee\u5f55\uff0c\u6587\u4ef6\u4f7f\u7528  .heapsnapshot \u505a\u540e\u7f00\u3002\u5982\u679c\u540e\u7eed\u60f3\u8981\u6df1\u5165\u7814\u7a76\uff0c\u8fd9\u4e2a\u5feb\u7167\u53ef\u4ee5\u88ab\u52a0\u8f7d\u5230 Chrome Inspector \u91cc\u53bb\u3002\u53c2\u52a0  Rising Stack article  for more details.      \u672c\u6587\u7531  testly  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u670d\u52a1\u5668\u6807\u5fd7"
        },
        {
            "location": "/cn/writing-running-appium/touch-actions/",
            "text": "\u79fb\u52a8\u624b\u52bf\u7684\u81ea\u52a8\u5316\n\n\n\u5c3d\u7ba1 Selenium WebDriver \u7684\u89c4\u8303\u5df2\u7ecf\u652f\u6301\u4e86\u4e00\u4e9b\u79fb\u52a8\u4ea4\u4e92,\u4f46\u5b83\u7684\u53c2\u6570\u5e76\u4e0d\u603b\u662f\u90a3\u4e48\u5bb9\u6613\u5730\n\u6620\u5c04\u5230\u5e95\u5c42\u8bbe\u5907\u7684\u81ea\u52a8\u5316\u6846\u67b6\u6240\u63d0\u4f9b\u7684\u65b9\u6cd5\u4e0a\uff08\u6bd4\u5982 iOS \u4e0a\u7684 UIAutomation\uff09\u3002\u4e3a\u6b64\uff0cAppium \u5728\u6700\u65b0\u7684\u89c4\u8303(\nhttps://dvcs.w3.org/hg/webdriver/raw-file/tip/webdriver-spec.html#multiactions-1\n)\n\u4e2d\u5b9e\u73b0\u4e86\u65b0\u7684\u89e6\u6478\u64cd\u4f5c\u548c\u591a\u91cd\u64cd\u4f5c API\u3002\n\n\n\u6ce8\u610f\uff0c\u8fd9\u4e0e\u65e9\u671f\u7248\u672c\u4e2d\u539f\u59cb\u7684 JSON Wire \u534f\u8bae\u91cc\u7684\u89e6\u6478\u64cd\u4f5c API \u4e0d\u540c\u3002\n\n\n\u8fd9\u4e9b API \u5141\u8bb8\u4f60\u4f7f\u7528\u591a\u4e2a\u6267\u884c\u5668\u53bb\u5efa\u7acb\u4efb\u610f\u7684\u624b\u52bf\u3002\n\u8bf7\u67e5\u770b\u5bf9\u5e94\u8bed\u8a00\u7684 Appium \u5ba2\u6237\u7aef\u6587\u6863\u6765\u67e5\u770b\u4f7f\u7528\u8fd9\u4e9b API \u7684\u793a\u4f8b\u3002\n\n\n\u89e6\u6478\u64cd\u4f5c(TouchAction)/\u591a\u91cd\u64cd\u4f5c(MultiAction) API \u6982\u8ff0\n\n\n\u89e6\u6478\u64cd\u4f5c(TouchAction)\n\n\nTouchAction\n \u5bf9\u8c61\u5305\u542b\u4e00\u8fde\u4e32\u7684\u4e8b\u4ef6\u3002\n\n\n\u5728\u6240\u6709\u7684 appium \u5ba2\u6237\u7aef\u5e93\u91cc\uff0c\u89e6\u6478\u5bf9\u8c61\u88ab\u521b\u5efa\u5e76\u88ab\u8d4b\u4e88\u4e00\u8fde\u4e32\u7684\u4e8b\u4ef6\u3002\n\n\n\u89c4\u8303\u91cc\u53ef\u7528\u7684\u4e8b\u4ef6\u6709\uff1a\n * \u77ed\u6309(press)\n * \u91ca\u653e(release)\n * \u79fb\u52a8\u5230(moveTo)\n * \u70b9\u51fb(tap)\n * \u7b49\u5f85(wait)\n * \u957f\u6309(longPress)\n * \u53d6\u6d88(cancel)\n * \u6267\u884c(perform)\n\n\n\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528\u4f2a\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u52a8\u4f5c\u7684\u793a\u4f8b\uff1a\n\n\nTouchAction().press(el0).moveTo(el1).release()\n\n\n\n\n\u4e0a\u8ff0\u6a21\u62df\u4e86\u4e00\u4e2a\u7528\u6237\u6309\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u6ed1\u52a8\u4ed6\u7684\u624b\u6307\u5230\u53e6\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u5c06\u4ed6\u7684\u624b\u6307\u4ece\u5c4f\u5e55\u4e0a\u79fb\u5f00\u3002\n\n\nAppium\u6309\u987a\u5e8f\u6267\u884c\u8fd9\u4e9b\u4e8b\u4ef6\u3002\u4f60\u53ef\u4ee5\u6dfb\u52a0\nwait\n\u4e8b\u4ef6\u6765\u63a7\u5236\u4e8b\u4ef6\u7684\u65f6\u957f\u3002\n\n\nmoveTo\n \u7684\u5750\u6807\u4e0e\u5f53\u524d\u7684\u4f4d\u7f6e\n\u76f8\u5173\n\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u4ece 100,100 \u62d6\u62fd\u5230 200,200 \u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0:\n\n\n.press(100,100) // \u4ece 100,100 \u5f00\u59cb\n.moveTo(100,100) // \u5206\u522b\u7ed9X\u548cY\u5750\u6807\u589e\u52a0100\uff0c\u5728 200,200 \u7ed3\u675f\n\n\n\n\n\nAppium \u5ba2\u6237\u7aef\u5e93\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4e3e\u4f8b\u6765\u8bf4:\u4f60\u53ef\u4ee5\u4f20\u9012\u5750\u6807\u6216\u5143\u7d20\u7ed9 \nmoveTo\n \u4e8b\u4ef6\u3002\u5f53\u5750\u6807\n \u548c\u5143\u7d20\u4e00\u8d77\u4f20\u9012\u65f6\uff0c\u8be5\u5750\u6807\u662f\u76f8\u5bf9\u4e8e\u5143\u7d20\u4f4d\u7f6e\u7684\u76f8\u5bf9\u5750\u6807\uff0c\u800c\u4e0d\u662f\u76f8\u5bf9\u4e8e\u5f53\u524d\u4f4d\u7f6e\u3002\n\n\n\u8c03\u7528 \nperform\n \u4e8b\u4ef6\u53d1\u9001\u5168\u90e8\u7684\u4e8b\u4ef6\u5e8f\u5217\u7ed9 appium\uff0c\u89e6\u6478\u624b\u52bf\u5c31\u4f1a\u5728\u4f60\u7684\u8bbe\u5907\u4e0a\u6267\u884c\u3002\n\n\nAppium\u5ba2\u6237\u7aef\u4e5f\u5141\u8bb8\u901a\u8fc7 driver \u5bf9\u8c61\u76f4\u63a5\u6267\u884c\u89e6\u6478\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u5728\u89e6\u6478\u64cd\u4f5c\u5bf9\u8c61\u4e0a\u8c03\u7528 \nperform\n\n\u4e8b\u4ef6\u3002\n\n\n\u5728\u4f2a\u4ee3\u7801\u91cc\uff0c\u4ee5\u4e0b\u4e24\u8005\u662f\u76f8\u7b49\u7684\uff1a\n\n\nTouchAction().tap(el).perform()\n\ndriver.perform(TouchAction().tap(el))\n\n\n\n\n\u591a\u70b9\u89e6\u63a7(MultiTouch)\n\n\nMultiTouch\n\u5bf9\u8c61\u662f\u89e6\u6478\u64cd\u4f5c\u7684\u96c6\u5408\u3002\n\n\n\u591a\u70b9\u89e6\u63a7\u624b\u52bf\u53ea\u6709\u4e24\u4e2a\u65b9\u6cd5\uff0c\nadd\n\u548c\nperform\n\u3002\n\n\nadd\n \u7528\u4e8e\u5c06\u4e0d\u540c\u7684\u89e6\u6478\u64cd\u4f5c\u6dfb\u52a0\u5230\u5f53\u524d\u7684\u591a\u70b9\u89e6\u63a7\u4e2d\u3002\n\n\n\u5f53 \nperform\n \u6267\u884c\u65f6\uff0c\u88ab\u6dfb\u52a0\u5230\u591a\u70b9\u89e6\u63a7\u91cc\u7684\u6240\u6709\u89e6\u6478\u64cd\u4f5c\u4f1a\u88ab\u53d1\u9001\u7ed9 appium \u5e76\u88ab\u6267\u884c\uff0c\u5c31\u50cf\u5b83\u4eec\n\u540c\u65f6\u53d1\u751f\u4e00\u6837\u3002Appium \u4f1a\u6309\u5e8f\u4e00\u4e2a\u4e2a\u6267\u884c\u89e6\u6478\u4e8b\u4ef6\uff0c\u9996\u5148\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u7b2c\u4e8c\u4e2a\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n\n\n\u7528\u4e24\u53ea\u624b\u6307\u70b9\u51fb\u7684\u4f2a\u4ee3\u7801\u793a\u4f8b\uff1a\n\n\naction0 = TouchAction().tap(el)\naction1 = TouchAction().tap(el)\nMultiAction().add(action0).add(action1).perform()\n\n\n\n\n\u7f3a\u9677\u4e0e\u89e3\u51b3\u65b9\u6cd5\n\n\n\u4e0d\u5e78\u7684\u662f\uff0c\u5728iOS 7.0 - 8.x \u7684\u6a21\u62df\u5668\u4e0a\u5b58\u5728\u7740\u4e00\u4e2a\u7f3a\u9677\uff0cScrollViews\u3001CollectionViews\u548cTableViews\u4e0d\u80fd\u8bc6\u522b UIAutomation\uff08Appium\u5728iOS\u5e95\u5c42\u6240\u4f7f\u7528\u7684\u6846\u67b6\uff09\u6240\u521b\u5efa\u7684\u624b\u52bf\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4e9b\uff0c\u6211\u4eec\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u7528\u7684\u65b0\u51fd\u6570 \nscroll\n\uff0c\u5b83\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u80fd\u8ba9\u4f60\u5b8c\u6210\u4f60\u60f3\u5728\u8fd9\u4e9b view \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u4e0a\u53bb\u505a\u7684\u4e8b\uff0c\u4e5f\u5c31\u662f\uff0c\u6eda\u52a8\u5b83\uff01\n\n\n\u6eda\u52a8\n\n\n\u4e3a\u4e86\u5141\u8bb8\u4f7f\u7528\u8fd9\u4e2a\u7279\u6b8a\u7684\u624b\u52bf\uff0c\u6211\u4eec\u91cd\u5199\u4e86 driver \u7684 \nexecute\n \u548c \nexecuteScript\n \u65b9\u6cd5\uff0c\u5e76\u4e14\u7ed9\u547d\u4ee4\n\u52a0\u4e0a \nmobile:\n \u524d\u7f00\u3002\n\u770b\u4e0b\u9762\u7684\u793a\u4f8b\uff1a\n\n\n\u4e3a\u4e86\u8fdb\u884c\u6eda\u52a8\uff0c\u5c06\u4f60\u60f3\u6eda\u52a8\u7684\u65b9\u5411\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002\n\n\n// javascript\ndriver.execute('mobile: scroll', {direction: 'down'})\n\n\n\n\n// java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nHashMap<String, String> scrollObject = new HashMap<String, String>();\nscrollObject.put(\"direction\", \"down\");\njs.executeScript(\"mobile: scroll\", scrollObject);\n\n\n\n\n# ruby\nexecute_script 'mobile: scroll', direction: 'down'\n\n\n\n\n# python\ndriver.execute_script(\"mobile: scroll\", {\"direction\": \"down\"})\n\n\n\n\n// c#\nDictionary<string, string> scrollObject = new Dictionary<string, string>();\nscrollObject.Add(\"direction\", \"down\");\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: scroll\", scrollObject));\n\n\n\n\n$params = array(array('direction' => 'down'));\n$driver->executeScript(\"mobile: scroll\", $params);\n\n\n\n\n\u4f7f\u7528\u65b9\u5411\u548c\u5143\u7d20\u8fdb\u884c\u6eda\u52a8\u7684\u793a\u4f8b\u3002\n\n\n// javascript\ndriver.execute('mobile: scroll', {direction: 'down', element: element.value.ELEMENT});\n\n\n\n\n// java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nHashMap<String, String> scrollObject = new HashMap<String, String>();\nscrollObject.put(\"direction\", \"down\");\nscrollObject.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: scroll\", scrollObject);\n\n\n\n\n# ruby\nexecute_script 'mobile: scroll', direction: 'down', element: element.ref\n\n\n\n\n# python\ndriver.execute_script(\"mobile: scroll\", {\"direction\": \"down\", element: element.getAttribute(\"id\")})\n\n\n\n\n// c#\nDictionary<string, string> scrollObject = new Dictionary<string, string>();\nscrollObject.Add(\"direction\", \"down\");\nscrollObject.Add(\"element\", <element_id>);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: scroll\", scrollObject));\n\n\n\n\n$params = array(array('direction' => 'down', 'element' => element.GetAttribute(\"id\")));\n$driver->executeScript(\"mobile: scroll\", $params);\n\n\n\n\nSwiping\n\n\n\u5728 XCUITest \u9a71\u52a8\u4e0a\u6709\u4e00\u4e2a\u7279\u522b\u7684\u65b9\u6cd5\uff0c\u548c scrolling \u7c7b\u4f3c\u3002(\u89c1 \nhttps://developer.apple.com/reference/xctest/xcuielement)\u3002\n\n\n\u8fd9\u4e2a\u65b9\u6cd5\u7684\u540d\u5b57\u548c \nScrolling\n\u7684 API \u4e00\u6837\uff0c\u53ea\u8981\u7528 \"mobile: swipe\" \u66ff\u6362 \"mobile: scroll\"\u3002\n\n\n\u6ed1\u5757\u7684\u81ea\u52a8\u5316\n\n\niOS\n\n\n\n\nJava\n\n\n\n\n// java\n// \u6ed1\u52a8\u503c\u53ef\u4ee5\u662f\u4ee3\u88680\u52301\u4e4b\u95f4\u6570\u5b57\u7684\u5b57\u7b26\u4e32\n// \u4f8b\u5982\uff0c\"0.1\"\u4ee3\u886810%\uff0c\"1.0\"\u4ee3\u8868100%\nWebElement slider =  driver.findElement(By.xpath(\"//window[1]/slider[1]\"));\nslider.sendKeys(\"0.1\");\n\n\n\n\nAndroid\n\n\n\u5728Android\u4e0a\u4e0e\u6ed1\u5757\u4ea4\u4e92\u7684\u6700\u4f73\u65b9\u5f0f\u662f\u4f7f\u7528\u89e6\u6478\u64cd\u4f5c\u3002\n\n\n\u672c\u6587\u7531 \nNativeZhang\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Touch actions"
        },
        {
            "location": "/cn/writing-running-appium/touch-actions/#_1",
            "text": "\u5c3d\u7ba1 Selenium WebDriver \u7684\u89c4\u8303\u5df2\u7ecf\u652f\u6301\u4e86\u4e00\u4e9b\u79fb\u52a8\u4ea4\u4e92,\u4f46\u5b83\u7684\u53c2\u6570\u5e76\u4e0d\u603b\u662f\u90a3\u4e48\u5bb9\u6613\u5730\n\u6620\u5c04\u5230\u5e95\u5c42\u8bbe\u5907\u7684\u81ea\u52a8\u5316\u6846\u67b6\u6240\u63d0\u4f9b\u7684\u65b9\u6cd5\u4e0a\uff08\u6bd4\u5982 iOS \u4e0a\u7684 UIAutomation\uff09\u3002\u4e3a\u6b64\uff0cAppium \u5728\u6700\u65b0\u7684\u89c4\u8303( https://dvcs.w3.org/hg/webdriver/raw-file/tip/webdriver-spec.html#multiactions-1 )\n\u4e2d\u5b9e\u73b0\u4e86\u65b0\u7684\u89e6\u6478\u64cd\u4f5c\u548c\u591a\u91cd\u64cd\u4f5c API\u3002  \u6ce8\u610f\uff0c\u8fd9\u4e0e\u65e9\u671f\u7248\u672c\u4e2d\u539f\u59cb\u7684 JSON Wire \u534f\u8bae\u91cc\u7684\u89e6\u6478\u64cd\u4f5c API \u4e0d\u540c\u3002  \u8fd9\u4e9b API \u5141\u8bb8\u4f60\u4f7f\u7528\u591a\u4e2a\u6267\u884c\u5668\u53bb\u5efa\u7acb\u4efb\u610f\u7684\u624b\u52bf\u3002\n\u8bf7\u67e5\u770b\u5bf9\u5e94\u8bed\u8a00\u7684 Appium \u5ba2\u6237\u7aef\u6587\u6863\u6765\u67e5\u770b\u4f7f\u7528\u8fd9\u4e9b API \u7684\u793a\u4f8b\u3002",
            "title": "\u79fb\u52a8\u624b\u52bf\u7684\u81ea\u52a8\u5316"
        },
        {
            "location": "/cn/writing-running-appium/touch-actions/#touchactionmultiaction-api",
            "text": "",
            "title": "\u89e6\u6478\u64cd\u4f5c(TouchAction)/\u591a\u91cd\u64cd\u4f5c(MultiAction) API \u6982\u8ff0"
        },
        {
            "location": "/cn/writing-running-appium/touch-actions/#touchaction",
            "text": "TouchAction  \u5bf9\u8c61\u5305\u542b\u4e00\u8fde\u4e32\u7684\u4e8b\u4ef6\u3002  \u5728\u6240\u6709\u7684 appium \u5ba2\u6237\u7aef\u5e93\u91cc\uff0c\u89e6\u6478\u5bf9\u8c61\u88ab\u521b\u5efa\u5e76\u88ab\u8d4b\u4e88\u4e00\u8fde\u4e32\u7684\u4e8b\u4ef6\u3002  \u89c4\u8303\u91cc\u53ef\u7528\u7684\u4e8b\u4ef6\u6709\uff1a\n * \u77ed\u6309(press)\n * \u91ca\u653e(release)\n * \u79fb\u52a8\u5230(moveTo)\n * \u70b9\u51fb(tap)\n * \u7b49\u5f85(wait)\n * \u957f\u6309(longPress)\n * \u53d6\u6d88(cancel)\n * \u6267\u884c(perform)  \u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528\u4f2a\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u52a8\u4f5c\u7684\u793a\u4f8b\uff1a  TouchAction().press(el0).moveTo(el1).release()  \u4e0a\u8ff0\u6a21\u62df\u4e86\u4e00\u4e2a\u7528\u6237\u6309\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u6ed1\u52a8\u4ed6\u7684\u624b\u6307\u5230\u53e6\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u5c06\u4ed6\u7684\u624b\u6307\u4ece\u5c4f\u5e55\u4e0a\u79fb\u5f00\u3002  Appium\u6309\u987a\u5e8f\u6267\u884c\u8fd9\u4e9b\u4e8b\u4ef6\u3002\u4f60\u53ef\u4ee5\u6dfb\u52a0 wait \u4e8b\u4ef6\u6765\u63a7\u5236\u4e8b\u4ef6\u7684\u65f6\u957f\u3002  moveTo  \u7684\u5750\u6807\u4e0e\u5f53\u524d\u7684\u4f4d\u7f6e \u76f8\u5173 \u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u4ece 100,100 \u62d6\u62fd\u5230 200,200 \u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0:  .press(100,100) // \u4ece 100,100 \u5f00\u59cb\n.moveTo(100,100) // \u5206\u522b\u7ed9X\u548cY\u5750\u6807\u589e\u52a0100\uff0c\u5728 200,200 \u7ed3\u675f  Appium \u5ba2\u6237\u7aef\u5e93\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4e3e\u4f8b\u6765\u8bf4:\u4f60\u53ef\u4ee5\u4f20\u9012\u5750\u6807\u6216\u5143\u7d20\u7ed9  moveTo  \u4e8b\u4ef6\u3002\u5f53\u5750\u6807\n \u548c\u5143\u7d20\u4e00\u8d77\u4f20\u9012\u65f6\uff0c\u8be5\u5750\u6807\u662f\u76f8\u5bf9\u4e8e\u5143\u7d20\u4f4d\u7f6e\u7684\u76f8\u5bf9\u5750\u6807\uff0c\u800c\u4e0d\u662f\u76f8\u5bf9\u4e8e\u5f53\u524d\u4f4d\u7f6e\u3002  \u8c03\u7528  perform  \u4e8b\u4ef6\u53d1\u9001\u5168\u90e8\u7684\u4e8b\u4ef6\u5e8f\u5217\u7ed9 appium\uff0c\u89e6\u6478\u624b\u52bf\u5c31\u4f1a\u5728\u4f60\u7684\u8bbe\u5907\u4e0a\u6267\u884c\u3002  Appium\u5ba2\u6237\u7aef\u4e5f\u5141\u8bb8\u901a\u8fc7 driver \u5bf9\u8c61\u76f4\u63a5\u6267\u884c\u89e6\u6478\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u5728\u89e6\u6478\u64cd\u4f5c\u5bf9\u8c61\u4e0a\u8c03\u7528  perform \n\u4e8b\u4ef6\u3002  \u5728\u4f2a\u4ee3\u7801\u91cc\uff0c\u4ee5\u4e0b\u4e24\u8005\u662f\u76f8\u7b49\u7684\uff1a  TouchAction().tap(el).perform()\n\ndriver.perform(TouchAction().tap(el))",
            "title": "\u89e6\u6478\u64cd\u4f5c(TouchAction)"
        },
        {
            "location": "/cn/writing-running-appium/touch-actions/#multitouch",
            "text": "MultiTouch \u5bf9\u8c61\u662f\u89e6\u6478\u64cd\u4f5c\u7684\u96c6\u5408\u3002  \u591a\u70b9\u89e6\u63a7\u624b\u52bf\u53ea\u6709\u4e24\u4e2a\u65b9\u6cd5\uff0c add \u548c perform \u3002  add  \u7528\u4e8e\u5c06\u4e0d\u540c\u7684\u89e6\u6478\u64cd\u4f5c\u6dfb\u52a0\u5230\u5f53\u524d\u7684\u591a\u70b9\u89e6\u63a7\u4e2d\u3002  \u5f53  perform  \u6267\u884c\u65f6\uff0c\u88ab\u6dfb\u52a0\u5230\u591a\u70b9\u89e6\u63a7\u91cc\u7684\u6240\u6709\u89e6\u6478\u64cd\u4f5c\u4f1a\u88ab\u53d1\u9001\u7ed9 appium \u5e76\u88ab\u6267\u884c\uff0c\u5c31\u50cf\u5b83\u4eec\n\u540c\u65f6\u53d1\u751f\u4e00\u6837\u3002Appium \u4f1a\u6309\u5e8f\u4e00\u4e2a\u4e2a\u6267\u884c\u89e6\u6478\u4e8b\u4ef6\uff0c\u9996\u5148\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u7136\u540e\u7b2c\u4e8c\u4e2a\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002  \u7528\u4e24\u53ea\u624b\u6307\u70b9\u51fb\u7684\u4f2a\u4ee3\u7801\u793a\u4f8b\uff1a  action0 = TouchAction().tap(el)\naction1 = TouchAction().tap(el)\nMultiAction().add(action0).add(action1).perform()",
            "title": "\u591a\u70b9\u89e6\u63a7(MultiTouch)"
        },
        {
            "location": "/cn/writing-running-appium/touch-actions/#_2",
            "text": "\u4e0d\u5e78\u7684\u662f\uff0c\u5728iOS 7.0 - 8.x \u7684\u6a21\u62df\u5668\u4e0a\u5b58\u5728\u7740\u4e00\u4e2a\u7f3a\u9677\uff0cScrollViews\u3001CollectionViews\u548cTableViews\u4e0d\u80fd\u8bc6\u522b UIAutomation\uff08Appium\u5728iOS\u5e95\u5c42\u6240\u4f7f\u7528\u7684\u6846\u67b6\uff09\u6240\u521b\u5efa\u7684\u624b\u52bf\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4e9b\uff0c\u6211\u4eec\u5df2\u7ecf\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u7528\u7684\u65b0\u51fd\u6570  scroll \uff0c\u5b83\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u80fd\u8ba9\u4f60\u5b8c\u6210\u4f60\u60f3\u5728\u8fd9\u4e9b view \u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u4e0a\u53bb\u505a\u7684\u4e8b\uff0c\u4e5f\u5c31\u662f\uff0c\u6eda\u52a8\u5b83\uff01  \u6eda\u52a8  \u4e3a\u4e86\u5141\u8bb8\u4f7f\u7528\u8fd9\u4e2a\u7279\u6b8a\u7684\u624b\u52bf\uff0c\u6211\u4eec\u91cd\u5199\u4e86 driver \u7684  execute  \u548c  executeScript  \u65b9\u6cd5\uff0c\u5e76\u4e14\u7ed9\u547d\u4ee4\n\u52a0\u4e0a  mobile:  \u524d\u7f00\u3002\n\u770b\u4e0b\u9762\u7684\u793a\u4f8b\uff1a  \u4e3a\u4e86\u8fdb\u884c\u6eda\u52a8\uff0c\u5c06\u4f60\u60f3\u6eda\u52a8\u7684\u65b9\u5411\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u3002  // javascript\ndriver.execute('mobile: scroll', {direction: 'down'})  // java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nHashMap<String, String> scrollObject = new HashMap<String, String>();\nscrollObject.put(\"direction\", \"down\");\njs.executeScript(\"mobile: scroll\", scrollObject);  # ruby\nexecute_script 'mobile: scroll', direction: 'down'  # python\ndriver.execute_script(\"mobile: scroll\", {\"direction\": \"down\"})  // c#\nDictionary<string, string> scrollObject = new Dictionary<string, string>();\nscrollObject.Add(\"direction\", \"down\");\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: scroll\", scrollObject));  $params = array(array('direction' => 'down'));\n$driver->executeScript(\"mobile: scroll\", $params);  \u4f7f\u7528\u65b9\u5411\u548c\u5143\u7d20\u8fdb\u884c\u6eda\u52a8\u7684\u793a\u4f8b\u3002  // javascript\ndriver.execute('mobile: scroll', {direction: 'down', element: element.value.ELEMENT});  // java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nHashMap<String, String> scrollObject = new HashMap<String, String>();\nscrollObject.put(\"direction\", \"down\");\nscrollObject.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: scroll\", scrollObject);  # ruby\nexecute_script 'mobile: scroll', direction: 'down', element: element.ref  # python\ndriver.execute_script(\"mobile: scroll\", {\"direction\": \"down\", element: element.getAttribute(\"id\")})  // c#\nDictionary<string, string> scrollObject = new Dictionary<string, string>();\nscrollObject.Add(\"direction\", \"down\");\nscrollObject.Add(\"element\", <element_id>);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: scroll\", scrollObject));  $params = array(array('direction' => 'down', 'element' => element.GetAttribute(\"id\")));\n$driver->executeScript(\"mobile: scroll\", $params);  Swiping  \u5728 XCUITest \u9a71\u52a8\u4e0a\u6709\u4e00\u4e2a\u7279\u522b\u7684\u65b9\u6cd5\uff0c\u548c scrolling \u7c7b\u4f3c\u3002(\u89c1 \nhttps://developer.apple.com/reference/xctest/xcuielement)\u3002  \u8fd9\u4e2a\u65b9\u6cd5\u7684\u540d\u5b57\u548c  Scrolling \u7684 API \u4e00\u6837\uff0c\u53ea\u8981\u7528 \"mobile: swipe\" \u66ff\u6362 \"mobile: scroll\"\u3002  \u6ed1\u5757\u7684\u81ea\u52a8\u5316  iOS   Java   // java\n// \u6ed1\u52a8\u503c\u53ef\u4ee5\u662f\u4ee3\u88680\u52301\u4e4b\u95f4\u6570\u5b57\u7684\u5b57\u7b26\u4e32\n// \u4f8b\u5982\uff0c\"0.1\"\u4ee3\u886810%\uff0c\"1.0\"\u4ee3\u8868100%\nWebElement slider =  driver.findElement(By.xpath(\"//window[1]/slider[1]\"));\nslider.sendKeys(\"0.1\");  Android  \u5728Android\u4e0a\u4e0e\u6ed1\u5757\u4ea4\u4e92\u7684\u6700\u4f73\u65b9\u5f0f\u662f\u4f7f\u7528\u89e6\u6478\u64cd\u4f5c\u3002  \u672c\u6587\u7531  NativeZhang  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u7f3a\u9677\u4e0e\u89e3\u51b3\u65b9\u6cd5"
        },
        {
            "location": "/cn/writing-running-appium/uiautomator2/",
            "text": "UIAutomator 2\n\n\n\u5c3d\u7ba1 API \u5927\u90e8\u5206\u4f9d\u7136\u76f8\u540c\uff0c\u4f46\u662f\u5185\u90e8\u5b9e\u73b0\u5df2\u7ecf\u6539\u53d8\u4e86\u3002\u6211\u4eec\u6765\u770b UIObject2 \u7684\u4ecb\u7ecd\uff1a\n\n\nUIObject2\n\n\n\u4e0d\u540c\u4e8e UiObject\uff0cUIElement \u88ab\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7279\u6b8a\u7684 view \u5b9e\u4f8b\u4e0a\uff0c\u5e76\u4e14\u5728\u5e95\u5c42 view \u5bf9\u8c61\u88ab\u9500\u6bc1\u540e\u53d8\u6210\u8fc7\u671f\u7684\u3002\u56e0\u6b64\uff0c\u5982\u679c UI \u53d1\u751f\u7684\u663e\u8457\u53d8\u5316\u65f6\uff0c\u53ef\u80fd\u5c31\u5fc5\u987b\u53bb\u8c03\u7528 findObject(BySelector) \u4ee5\u83b7\u5f97\u4e00\u4e2a\u65b0\u7684 UiObject2 \u5b9e\u4f8b\u3002\n\n\n\u6784\u5efa\u7cfb\u7edf\n\n\nUIAutomator 2\u5229\u7528\u4e86Gradle\u4f5c\u4e3a\u6784\u5efa\u7cfb\u7edf\u7684\u80fd\u529b\u3002\u4e4b\u524d\u7684UIAutomator\u4f7f\u7528Maven/Ant\u3002\n\n\n\u6d4b\u8bd5\u4ea7\u51fa(Assets)\n\n\n\u73b0\u5728\u751f\u6210\u7684\u6d4b\u8bd5\u5305\u662fAPK\u3002\u4e4b\u524dUIAutomator\u751f\u6210.jar\u6216.zip\u6587\u4ef6\u3002\u8fd9\u8ba9 UIAutomator 2 \u80fd\u5b8c\u6574\u5730\u4f7f\u7528 Android instrumentation \u7684\u80fd\u529b\u3002\n\n\nADB\n\n\nADB \u5bf9 UIAutomator 2 \u7684\u5904\u7406\u6709\u8f7b\u5fae\u7684\u4e0d\u540c\u3002\n\n\n\u8001\u7248\u672c\u7684 UiAutomator \u4f5c\u4e3a\u4e00\u4e2a shell \u7a0b\u5e8f\u8fd0\u884c\uff1a\n\n\nadb shell uiautomator runtest ...\n\n\nUiAutomator 2 \u662f\u57fa\u4e8e Android Instrumentation \u7684\u3002\u6d4b\u8bd5\u88ab\u7f16\u8bd1\u8fdbAPK\u91cc\uff0c\u5e76\u4e14\u5728\u5e94\u7528\u8fdb\u7a0b\u91cc\u8fd0\u884c\uff1a\n\n\nadb shell am instrument ...\n\n\n\u672c\u6587\u7531 \nNativeZhang\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Uiautomator2"
        },
        {
            "location": "/cn/writing-running-appium/uiautomator2/#uiautomator-2",
            "text": "\u5c3d\u7ba1 API \u5927\u90e8\u5206\u4f9d\u7136\u76f8\u540c\uff0c\u4f46\u662f\u5185\u90e8\u5b9e\u73b0\u5df2\u7ecf\u6539\u53d8\u4e86\u3002\u6211\u4eec\u6765\u770b UIObject2 \u7684\u4ecb\u7ecd\uff1a",
            "title": "UIAutomator 2"
        },
        {
            "location": "/cn/writing-running-appium/uiautomator2/#uiobject2",
            "text": "\u4e0d\u540c\u4e8e UiObject\uff0cUIElement \u88ab\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7279\u6b8a\u7684 view \u5b9e\u4f8b\u4e0a\uff0c\u5e76\u4e14\u5728\u5e95\u5c42 view \u5bf9\u8c61\u88ab\u9500\u6bc1\u540e\u53d8\u6210\u8fc7\u671f\u7684\u3002\u56e0\u6b64\uff0c\u5982\u679c UI \u53d1\u751f\u7684\u663e\u8457\u53d8\u5316\u65f6\uff0c\u53ef\u80fd\u5c31\u5fc5\u987b\u53bb\u8c03\u7528 findObject(BySelector) \u4ee5\u83b7\u5f97\u4e00\u4e2a\u65b0\u7684 UiObject2 \u5b9e\u4f8b\u3002",
            "title": "UIObject2"
        },
        {
            "location": "/cn/writing-running-appium/uiautomator2/#_1",
            "text": "UIAutomator 2\u5229\u7528\u4e86Gradle\u4f5c\u4e3a\u6784\u5efa\u7cfb\u7edf\u7684\u80fd\u529b\u3002\u4e4b\u524d\u7684UIAutomator\u4f7f\u7528Maven/Ant\u3002",
            "title": "\u6784\u5efa\u7cfb\u7edf"
        },
        {
            "location": "/cn/writing-running-appium/uiautomator2/#assets",
            "text": "\u73b0\u5728\u751f\u6210\u7684\u6d4b\u8bd5\u5305\u662fAPK\u3002\u4e4b\u524dUIAutomator\u751f\u6210.jar\u6216.zip\u6587\u4ef6\u3002\u8fd9\u8ba9 UIAutomator 2 \u80fd\u5b8c\u6574\u5730\u4f7f\u7528 Android instrumentation \u7684\u80fd\u529b\u3002",
            "title": "\u6d4b\u8bd5\u4ea7\u51fa(Assets)"
        },
        {
            "location": "/cn/writing-running-appium/uiautomator2/#adb",
            "text": "ADB \u5bf9 UIAutomator 2 \u7684\u5904\u7406\u6709\u8f7b\u5fae\u7684\u4e0d\u540c\u3002  \u8001\u7248\u672c\u7684 UiAutomator \u4f5c\u4e3a\u4e00\u4e2a shell \u7a0b\u5e8f\u8fd0\u884c\uff1a  adb shell uiautomator runtest ...  UiAutomator 2 \u662f\u57fa\u4e8e Android Instrumentation \u7684\u3002\u6d4b\u8bd5\u88ab\u7f16\u8bd1\u8fdbAPK\u91cc\uff0c\u5e76\u4e14\u5728\u5e94\u7528\u8fdb\u7a0b\u91cc\u8fd0\u884c\uff1a  adb shell am instrument ...  \u672c\u6587\u7531  NativeZhang  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "ADB"
        },
        {
            "location": "/cn/writing-running-appium/uiautomator_uiselector/",
            "text": "uiautomator UiSelector\n\n\nAppium \u4f7f\u7528 \nUiSelectors\n \u6765\u8fdb\u884c\u67e5\u627e\u3002\n\u540c\u65f6\u4e5f\u652f\u6301 \nUiScrollable\n\u3002\n\n\n\u6ce8\u610f\uff0c\u6839\u636e\u7d22\u5f15\u67e5\u627e\u5e76\u4e0d\u53ef\u9760\uff0c\u6240\u4ee5\u66f4\u5e94\u8be5\u4f7f\u7528\u5b9e\u4f8b(instance)\u3002\u540e\u7eed\u7684\u793a\u4f8b\u662f\u4f7f\u7528 Ruby \u6765\u6d4b\u8bd5 api demos apk\u3002\n\n\n\u67e5\u627e\u7b2c\u4e00\u4e2a textview\u3002\n\n\n# ruby\nfirst_textview = find_element(:uiautomator, 'new UiSelector().className(\"android.widget.TextView\").instance(0)');\n\n\n\n\n\u6839\u636e\u6587\u672c\u67e5\u627e\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002\n\n\n# ruby\nfirst_text = find_element(:uiautomator, 'new UiSelector().text(\"Animation\")')\nfirst_text.text # \"Animation\"\n\n\n\n\n\u67e5\u627e\u7b2c\u4e00\u4e2a\u53ef\u6eda\u52a8(scrollable)\u7684\u5143\u7d20\uff0c\u7136\u540e\u6839\u636e\u6587\u672c\"Tabs\"\u67e5\u627e\u7b2c\u4e00\u4e2a TextView\u3002\n\"Tabs\"\u5143\u7d20\u5c06\u88ab\u6eda\u52a8\u5230\u53ef\u89c1\u8303\u56f4\u3002\n\n\n# ruby\nelement = find_element(:uiautomator, 'new UiScrollable(new UiSelector().scrollable(true).instance(0)).getChildByText(new UiSelector().className(\"android.widget.TextView\"), \"Tabs\")')\n\n\n\n\n\u4f5c\u4e3a\u4e00\u4e2a\u7279\u4f8b\uff0cscrollIntoView \u8fd4\u56de\u7684\u662f\u88ab\u6eda\u52a8\u5230\u53ef\u89c1\u8303\u56f4\u7684\u5143\u7d20\u3002\nscrollIntoView \u5141\u8bb8\u6eda\u52a8\u5230\u4efb\u610f\u7684 UiSelector\u3002\n\n\n# ruby\nelement = find_element(:uiautomator, 'new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().text(\"WebView\").instance(0));')\nelement.text # \"WebView\"\n\n\n\n\n\u672c\u6587\u7531 \nNativeZhang\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Uiautomator uiselector"
        },
        {
            "location": "/cn/writing-running-appium/uiautomator_uiselector/#uiautomator-uiselector",
            "text": "Appium \u4f7f\u7528  UiSelectors  \u6765\u8fdb\u884c\u67e5\u627e\u3002\n\u540c\u65f6\u4e5f\u652f\u6301  UiScrollable \u3002  \u6ce8\u610f\uff0c\u6839\u636e\u7d22\u5f15\u67e5\u627e\u5e76\u4e0d\u53ef\u9760\uff0c\u6240\u4ee5\u66f4\u5e94\u8be5\u4f7f\u7528\u5b9e\u4f8b(instance)\u3002\u540e\u7eed\u7684\u793a\u4f8b\u662f\u4f7f\u7528 Ruby \u6765\u6d4b\u8bd5 api demos apk\u3002  \u67e5\u627e\u7b2c\u4e00\u4e2a textview\u3002  # ruby\nfirst_textview = find_element(:uiautomator, 'new UiSelector().className(\"android.widget.TextView\").instance(0)');  \u6839\u636e\u6587\u672c\u67e5\u627e\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002  # ruby\nfirst_text = find_element(:uiautomator, 'new UiSelector().text(\"Animation\")')\nfirst_text.text # \"Animation\"  \u67e5\u627e\u7b2c\u4e00\u4e2a\u53ef\u6eda\u52a8(scrollable)\u7684\u5143\u7d20\uff0c\u7136\u540e\u6839\u636e\u6587\u672c\"Tabs\"\u67e5\u627e\u7b2c\u4e00\u4e2a TextView\u3002\n\"Tabs\"\u5143\u7d20\u5c06\u88ab\u6eda\u52a8\u5230\u53ef\u89c1\u8303\u56f4\u3002  # ruby\nelement = find_element(:uiautomator, 'new UiScrollable(new UiSelector().scrollable(true).instance(0)).getChildByText(new UiSelector().className(\"android.widget.TextView\"), \"Tabs\")')  \u4f5c\u4e3a\u4e00\u4e2a\u7279\u4f8b\uff0cscrollIntoView \u8fd4\u56de\u7684\u662f\u88ab\u6eda\u52a8\u5230\u53ef\u89c1\u8303\u56f4\u7684\u5143\u7d20\u3002\nscrollIntoView \u5141\u8bb8\u6eda\u52a8\u5230\u4efb\u610f\u7684 UiSelector\u3002  # ruby\nelement = find_element(:uiautomator, 'new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().text(\"WebView\").instance(0));')\nelement.text # \"WebView\"  \u672c\u6587\u7531  NativeZhang  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "uiautomator UiSelector"
        },
        {
            "location": "/cn/writing-running-appium/unicode/",
            "text": "\u591a\u8bed\u8a00\u652f\u6301\n\n\n\u7f16\u7a0b\u8bed\u8a00\u5728\u5904\u7406\u975e\u62c9\u4e01\u5b57\u7b26\u65f6\u5019\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5e26\u91cd\u97f3\u7b26\u53f7\u7684\u5b57\u7b26\u6709\u591a\u79cd\u7f16\u7801\u65b9\u5f0f\u3002\u6bd4\u5982\uff0c\n\u5b57\u6bcd\n\u00e9\n\uff0c\u6709\u4e24\u79cd\u7f16\u7801\uff1a\u4e00\u4e2a\u5355\u5b57\u7b26\n\u00e9\n(Unicode\u7684\nLATIN SMALL LETTER E WITH ACUTE\n\n\uff08\u5e26\u6709\u5c16\u6807\u7684\u5c0f\u5199\u62c9\u4e01\u5b57\u6bcdE\uff09)\u548c\u5b57\u6bcd\ne\n\u540e\u8ddf\u4e0a\u97f3\u6807\n\u0301\n\u7684\u7ec4\u5408(\nCOMBINING ACUTE ACCENT\n\n\uff08\u7ec4\u5408\u5c16\u97f3\u6807\uff09)\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u6709\u4e86\nnormalization(\u6807\u51c6\u5316)\n\uff0c\u4e00\u79cd\u8ba9\n\"\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u4e8c\u8fdb\u5236\u8868\u793a\"\n\n\u7684\u8fd0\u7b97\u3002\n\n\n\u5e78\u8fd0\u7684\u662f\uff0c\u5bf9ASCII\u6587\u672c\uff08\u5373\u4e0d\u9700\u8981\u518d\u88ab\u6807\u51c6\u5316\u7684\u6587\u672c\uff09\u8fdb\u884c\u6807\u51c6\u5316\u4e0d\u4f1a\u5f15\u8d77\u4efb\u4f55\u53d8\u5316\uff0c\u4e14\u6267\u884c\u591a\u6b21\u8fd0\u7b97\u4e5f\u4e0d\u4f1a\u6709\u526f\u4f5c\u7528\u3002\n\u56e0\u6b64\uff0c\u8fd9\u4e2a\u6807\u51c6\u5316\u51fd\u6570\u5728\u6587\u672c\u4e0a\u8c03\u7528\u4e0d\u4f1a\u6709\u526f\u4f5c\u7528\u7684\u98ce\u9669\u3002\n\n\n// javascript\nvar unorm = require('unorm');\n\n'some ASCII text' === unorm.nfd('some ASCII text');\nunorm.nfd('Ad\u00e9la\u00efde Herv\u00e9') === unorm.nfd(unorm.nfd('Ad\u00e9la\u00efde Herv\u00e9'));\n\n\n\n\n\u56e0\u6b64\uff0c\u5f53\u5904\u7406\u6d4b\u8bd5\u4e2d\u7684unicode\u6587\u672c\u65f6\uff0c\u4f60\u6700\u597d\u5bf9\u9884\u671f\u7684\u6587\u672c\u548c\u4eceAppium\u63a5\u6536\u5230\u7684\u6587\u672c\u90fd\u8fdb\u884c\u6807\u51c6\u5316\u3002\n\u8fdb\u884c\u6807\u51c6\u5316\u7684\u65b9\u5f0f\u6709\u5f88\u591a\u79cd\uff0c\u6240\u4ee5\u8981\u786e\u4fdd\u5bf9\u4e24\u8fb9\u7684\u5b57\u7b26\u4e32\u6267\u884c\u76f8\u540c\u7684\u8fd0\u7b97\uff01\n\n\n// javascript\nvar unorm = require('unorm');\ndriver\n  .elementByAccessibilityId('find')\n    .text()\n    .then(function (txt) {\n      unorm.nfd(txt).should.be(unorm.nfd(\"\u00e9 \u0152 \u00f9 \u1e0d\"));\n    });\n\n\n\n\n\u95ee\u9898\u7684\u7aef\u502a\u662f\u5bf9\u7f16\u7801\u540e\u7684unicode\u6587\u672c\u7684\u65ad\u8a00\u5931\u8d25\u4f46\u4ece\u62a5\u544a\u4e0a\u770b\uff0c\u5374\u662f\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff1a\n\n\nAssertionError: expected 'Fran\u00e7ois G\u00e9rard' to deeply equal 'Fran\u00e7ois G\u00e9rard'\n      + expected - actual\n\n      +\"Fran\u00e7ois G\u00e9rard\"\n      -\"Fran\u00e7ois G\u00e9rard\"\n\n\n\n\n\u7531\u4e8e\u95ee\u9898\u4ec5\u4ec5\u662f\u7f16\u7801\uff0c\u8f93\u51fa \n\u770b\u8d77\u6765\n \u4e00\u6837\u3002 \u6807\u51c6\u5316\u540e\uff0c\u4ed6\u4eec\u5728\u7a0b\u5e8f\u91cc\u5e94\u8be5\u50cf\u770b\u8d77\u6765\u4e00\u6837\u662f\u76f8\u7b49\u7684\u3002\n\n\n\u67e5\u627e\u5668(Finders)\n\n\n\u901a\u8fc7\u6587\u672c\u67e5\u627e\u65f6\u4e5f\u53ef\u80fd\u9700\u8981\u6807\u51c6\u5316\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5982\u679c\u4f60\u5728\u4e00\u4e2aiOS\u5e94\u7528\u91cc\u6709\u4e00\u4e2a\u540d\u53eb\n\u041d\u0430\u0439\u0442\u0438\n\u7684\u6309\u94ae\uff0c\n\u4f60\u9700\u8981\u5728\u67e5\u627e\u547d\u4ee4\u91cc\u6807\u51c6\u5316\u6587\u672c\u3002\n\n\n// javascript\nvar unorm = require('unorm');\ndriver\n  .findElementByXPath(unorm.nfd(\"//UIAButton[@name='\u041d\u0430\u0439\u0442\u0438']\"))\n    .should.eventually.exist;\n\n\n\n\n\u5426\u5219\u8fd9\u4e2a\u5143\u7d20\u4f1a\u627e\u4e0d\u5230\u3002\n\n\n\u6587\u672c\u6846(Text Fields)\n\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0ciOS\u548cAndroid\u7684\u81ea\u52a8\u5316\u5de5\u5177\u90fd\u4e0d\u652f\u6301\u901a\u8fc7\u952e\u76d8\u5411\u53ef\u7f16\u8f91\u7684\u533a\u57df\u8f93\u5165non-ASCII\u5b57\u7b26\u3002\n\n\niOS\n\n\nAppium\u5b8c\u5168\u7ed5\u8fc7\u952e\u76d8\u76f4\u63a5\u5411iOS\u53ef\u7f16\u8f91\u533a\u57df\u53d1\u9001non-ASCII\u5b57\u7b26\u3002\u867d\u7136\u8fd9\u6837\u5728\u6d4b\u8bd5\u4e2d\u5141\u8bb8\u4e86\u6587\u672c\u7684\u8f93\u5165\uff0c\u4f46\n\u5fc5\u987b\u8bb0\u4f4f\u7684\u662f\u4efb\u4f55\u901a\u8fc7\u952e\u76d8\u8f93\u5165\u89e6\u53d1\u7684\u4e1a\u52a1\u903b\u8f91\u90fd\u6ca1\u6709\u88ab\u6d4b\u8bd5\u5230\u3002\n\n\n\u5982\u4e0a\u6240\u8ff0\uff0c\u63a5\u6536\u5230\u7684\u6587\u672c\u5728\u88ab\u65ad\u8a00\u524d\u9700\u8981\u88ab\u6807\u51c6\u5316\u3002\n\n\n// javascript\nvar unorm = require('unorm');\nvar testText = unorm.nfd(\"\u00e9 \u0152 \u00f9 \u1e0d\");\ndriver\n  .elementsByClassName('UIATextField').at(1)\n    .sendKeys(testText)\n    .text()\n    .should.become(testText)\n  .nodeify(done);\n\n\n\n\nAndroid\n\n\nAndroid\u6d4b\u8bd5\u901a\u8fc7\u5b89\u88c5\u548c\u4f7f\u7528\u4e00\u4e2a\n\u7279\u6b8a\u952e\u76d8\n\n\u6765\u5141\u8bb8Unicode\u8f93\u5165\uff0c\u5b83\u5141\u8bb8\u5c06\u6587\u672c\u50cfASCII\u4e00\u6837\u5728Appium\u548c\u88ab\u6d4b\u5e94\u7528\u95f4\u4f20\u9012\u3002\n\n\n\u4e3a\u4e86\u4f7f\u7528\u8fd9\u4e2a\u529f\u80fd\uff0c\u5c06\nunicodeKeyboard\n desired capability\u8bbe\u7f6e\u4e3a\ntrue\n\u3002\u5982\u679c\u952e\u76d8\u9700\u8981\u88ab\u8fd8\u539f\u6210\u521d\u59cb\u72b6\u6001\uff0c\n\u5c06\nresetKeyboard\n desired capability\u4e5f\u8bbe\u7f6e\u4e3a\ntrue\n\u3002\u4e0d\u7136\u8bbe\u5907\u4e0a\u7684Appium\u7684Unicode\u952e\u76d8\u5c06\u4f1a\u5728\u6d4b\u8bd5\u5b8c\u6210\u540e\u7559\u7528\u3002\n\n\n\u4e4b\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\nsend_keys\n\u5411\u53ef\u7f16\u8f91\u533a\u57df\u4f20\u9012Unicode\u6587\u672c\u3002\n\n\n// javascript\nvar desired = {\n  app: '/path/to/app',\n  deviceName: 'Android Emulator',\n  deviceVersion: '4.4',\n  platformName: 'Android',\n  unicodeKeyboard: true,\n  resetKeyboard: true\n};\nvar testText = '\u00e9 \u0152 \u00f9 \u1e0d';\ndriver\n  .elementByClassName('android.widget.EditText')\n  .sendKeys(testText)\n  .text()\n  .should.eventually.become(testText)\n  .nodeify(done);\n\n\n\n\n\u672c\u6587\u7531 \nNativeZhang\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Unicode"
        },
        {
            "location": "/cn/writing-running-appium/unicode/#_1",
            "text": "\u7f16\u7a0b\u8bed\u8a00\u5728\u5904\u7406\u975e\u62c9\u4e01\u5b57\u7b26\u65f6\u5019\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5e26\u91cd\u97f3\u7b26\u53f7\u7684\u5b57\u7b26\u6709\u591a\u79cd\u7f16\u7801\u65b9\u5f0f\u3002\u6bd4\u5982\uff0c\n\u5b57\u6bcd \u00e9 \uff0c\u6709\u4e24\u79cd\u7f16\u7801\uff1a\u4e00\u4e2a\u5355\u5b57\u7b26 \u00e9 (Unicode\u7684 LATIN SMALL LETTER E WITH ACUTE \n\uff08\u5e26\u6709\u5c16\u6807\u7684\u5c0f\u5199\u62c9\u4e01\u5b57\u6bcdE\uff09)\u548c\u5b57\u6bcd e \u540e\u8ddf\u4e0a\u97f3\u6807 \u0301 \u7684\u7ec4\u5408( COMBINING ACUTE ACCENT \n\uff08\u7ec4\u5408\u5c16\u97f3\u6807\uff09)\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u6709\u4e86 normalization(\u6807\u51c6\u5316) \uff0c\u4e00\u79cd\u8ba9 \"\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u4e8c\u8fdb\u5236\u8868\u793a\" \n\u7684\u8fd0\u7b97\u3002  \u5e78\u8fd0\u7684\u662f\uff0c\u5bf9ASCII\u6587\u672c\uff08\u5373\u4e0d\u9700\u8981\u518d\u88ab\u6807\u51c6\u5316\u7684\u6587\u672c\uff09\u8fdb\u884c\u6807\u51c6\u5316\u4e0d\u4f1a\u5f15\u8d77\u4efb\u4f55\u53d8\u5316\uff0c\u4e14\u6267\u884c\u591a\u6b21\u8fd0\u7b97\u4e5f\u4e0d\u4f1a\u6709\u526f\u4f5c\u7528\u3002\n\u56e0\u6b64\uff0c\u8fd9\u4e2a\u6807\u51c6\u5316\u51fd\u6570\u5728\u6587\u672c\u4e0a\u8c03\u7528\u4e0d\u4f1a\u6709\u526f\u4f5c\u7528\u7684\u98ce\u9669\u3002  // javascript\nvar unorm = require('unorm');\n\n'some ASCII text' === unorm.nfd('some ASCII text');\nunorm.nfd('Ad\u00e9la\u00efde Herv\u00e9') === unorm.nfd(unorm.nfd('Ad\u00e9la\u00efde Herv\u00e9'));  \u56e0\u6b64\uff0c\u5f53\u5904\u7406\u6d4b\u8bd5\u4e2d\u7684unicode\u6587\u672c\u65f6\uff0c\u4f60\u6700\u597d\u5bf9\u9884\u671f\u7684\u6587\u672c\u548c\u4eceAppium\u63a5\u6536\u5230\u7684\u6587\u672c\u90fd\u8fdb\u884c\u6807\u51c6\u5316\u3002\n\u8fdb\u884c\u6807\u51c6\u5316\u7684\u65b9\u5f0f\u6709\u5f88\u591a\u79cd\uff0c\u6240\u4ee5\u8981\u786e\u4fdd\u5bf9\u4e24\u8fb9\u7684\u5b57\u7b26\u4e32\u6267\u884c\u76f8\u540c\u7684\u8fd0\u7b97\uff01  // javascript\nvar unorm = require('unorm');\ndriver\n  .elementByAccessibilityId('find')\n    .text()\n    .then(function (txt) {\n      unorm.nfd(txt).should.be(unorm.nfd(\"\u00e9 \u0152 \u00f9 \u1e0d\"));\n    });  \u95ee\u9898\u7684\u7aef\u502a\u662f\u5bf9\u7f16\u7801\u540e\u7684unicode\u6587\u672c\u7684\u65ad\u8a00\u5931\u8d25\u4f46\u4ece\u62a5\u544a\u4e0a\u770b\uff0c\u5374\u662f\u76f8\u540c\u7684\u5b57\u7b26\u4e32\uff1a  AssertionError: expected 'Fran\u00e7ois G\u00e9rard' to deeply equal 'Fran\u00e7ois G\u00e9rard'\n      + expected - actual\n\n      +\"Fran\u00e7ois G\u00e9rard\"\n      -\"Fran\u00e7ois G\u00e9rard\"  \u7531\u4e8e\u95ee\u9898\u4ec5\u4ec5\u662f\u7f16\u7801\uff0c\u8f93\u51fa  \u770b\u8d77\u6765  \u4e00\u6837\u3002 \u6807\u51c6\u5316\u540e\uff0c\u4ed6\u4eec\u5728\u7a0b\u5e8f\u91cc\u5e94\u8be5\u50cf\u770b\u8d77\u6765\u4e00\u6837\u662f\u76f8\u7b49\u7684\u3002",
            "title": "\u591a\u8bed\u8a00\u652f\u6301"
        },
        {
            "location": "/cn/writing-running-appium/unicode/#finders",
            "text": "\u901a\u8fc7\u6587\u672c\u67e5\u627e\u65f6\u4e5f\u53ef\u80fd\u9700\u8981\u6807\u51c6\u5316\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5982\u679c\u4f60\u5728\u4e00\u4e2aiOS\u5e94\u7528\u91cc\u6709\u4e00\u4e2a\u540d\u53eb \u041d\u0430\u0439\u0442\u0438 \u7684\u6309\u94ae\uff0c\n\u4f60\u9700\u8981\u5728\u67e5\u627e\u547d\u4ee4\u91cc\u6807\u51c6\u5316\u6587\u672c\u3002  // javascript\nvar unorm = require('unorm');\ndriver\n  .findElementByXPath(unorm.nfd(\"//UIAButton[@name='\u041d\u0430\u0439\u0442\u0438']\"))\n    .should.eventually.exist;  \u5426\u5219\u8fd9\u4e2a\u5143\u7d20\u4f1a\u627e\u4e0d\u5230\u3002",
            "title": "\u67e5\u627e\u5668(Finders)"
        },
        {
            "location": "/cn/writing-running-appium/unicode/#text-fields",
            "text": "\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0ciOS\u548cAndroid\u7684\u81ea\u52a8\u5316\u5de5\u5177\u90fd\u4e0d\u652f\u6301\u901a\u8fc7\u952e\u76d8\u5411\u53ef\u7f16\u8f91\u7684\u533a\u57df\u8f93\u5165non-ASCII\u5b57\u7b26\u3002",
            "title": "\u6587\u672c\u6846(Text Fields)"
        },
        {
            "location": "/cn/writing-running-appium/unicode/#ios",
            "text": "Appium\u5b8c\u5168\u7ed5\u8fc7\u952e\u76d8\u76f4\u63a5\u5411iOS\u53ef\u7f16\u8f91\u533a\u57df\u53d1\u9001non-ASCII\u5b57\u7b26\u3002\u867d\u7136\u8fd9\u6837\u5728\u6d4b\u8bd5\u4e2d\u5141\u8bb8\u4e86\u6587\u672c\u7684\u8f93\u5165\uff0c\u4f46\n\u5fc5\u987b\u8bb0\u4f4f\u7684\u662f\u4efb\u4f55\u901a\u8fc7\u952e\u76d8\u8f93\u5165\u89e6\u53d1\u7684\u4e1a\u52a1\u903b\u8f91\u90fd\u6ca1\u6709\u88ab\u6d4b\u8bd5\u5230\u3002  \u5982\u4e0a\u6240\u8ff0\uff0c\u63a5\u6536\u5230\u7684\u6587\u672c\u5728\u88ab\u65ad\u8a00\u524d\u9700\u8981\u88ab\u6807\u51c6\u5316\u3002  // javascript\nvar unorm = require('unorm');\nvar testText = unorm.nfd(\"\u00e9 \u0152 \u00f9 \u1e0d\");\ndriver\n  .elementsByClassName('UIATextField').at(1)\n    .sendKeys(testText)\n    .text()\n    .should.become(testText)\n  .nodeify(done);",
            "title": "iOS"
        },
        {
            "location": "/cn/writing-running-appium/unicode/#android",
            "text": "Android\u6d4b\u8bd5\u901a\u8fc7\u5b89\u88c5\u548c\u4f7f\u7528\u4e00\u4e2a \u7279\u6b8a\u952e\u76d8 \n\u6765\u5141\u8bb8Unicode\u8f93\u5165\uff0c\u5b83\u5141\u8bb8\u5c06\u6587\u672c\u50cfASCII\u4e00\u6837\u5728Appium\u548c\u88ab\u6d4b\u5e94\u7528\u95f4\u4f20\u9012\u3002  \u4e3a\u4e86\u4f7f\u7528\u8fd9\u4e2a\u529f\u80fd\uff0c\u5c06 unicodeKeyboard  desired capability\u8bbe\u7f6e\u4e3a true \u3002\u5982\u679c\u952e\u76d8\u9700\u8981\u88ab\u8fd8\u539f\u6210\u521d\u59cb\u72b6\u6001\uff0c\n\u5c06 resetKeyboard  desired capability\u4e5f\u8bbe\u7f6e\u4e3a true \u3002\u4e0d\u7136\u8bbe\u5907\u4e0a\u7684Appium\u7684Unicode\u952e\u76d8\u5c06\u4f1a\u5728\u6d4b\u8bd5\u5b8c\u6210\u540e\u7559\u7528\u3002  \u4e4b\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 send_keys \u5411\u53ef\u7f16\u8f91\u533a\u57df\u4f20\u9012Unicode\u6587\u672c\u3002  // javascript\nvar desired = {\n  app: '/path/to/app',\n  deviceName: 'Android Emulator',\n  deviceVersion: '4.4',\n  platformName: 'Android',\n  unicodeKeyboard: true,\n  resetKeyboard: true\n};\nvar testText = '\u00e9 \u0152 \u00f9 \u1e0d';\ndriver\n  .elementByClassName('android.widget.EditText')\n  .sendKeys(testText)\n  .text()\n  .should.eventually.become(testText)\n  .nodeify(done);  \u672c\u6587\u7531  NativeZhang  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "Android"
        },
        {
            "location": "/cn/writing-running-appium/windows-app-testing/",
            "text": "Windows \u5e94\u7528\u7684 UI \u6d4b\u8bd5\n\n\n\u5728 Appium \u4e2d\uff0cWindows \u5e94\u7528\u7684 UI \u6d4b\u8bd5\u662f\u7531 \nWinAppDriver\n \u652f\u6301\u7684\uff0cAppium \u5728\u4e0b\u8f7d\u5b89\u88c5\u7684\u65f6\u5019\u5df2\u7ecf\u5e26\u4e86\u8fd9\u90e8\u5206\u3002\n\n\nJava \u793a\u4f8b\n\n\n\n\n\u5728 Java IDE \uff08\u6bd4\u5982 IntelliJ\uff09\u4e2d\u6253\u5f00\u5305\u542b\u793a\u4f8b\u9879\u76ee\u5de5\u7a0b\u7684\u76ee\u5f55\uff0c\u5982\uff1a\nCalculatorTest\n\n\n\u5728 Java IDE \u4e2d build \u5e76\u8fd0\u884c\u8fd9\u4e2a\u6d4b\u8bd5\u811a\u672c\n\n\n\n\nC# \u793a\u4f8b\n\n\n\n\n\u62c9\u53d6\u5e76\u6253\u5f00 \nCalculatorTest\n \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6 \nCalculatorTest.sln\n\n\n\u5728 Visual Studio 2015 \u4e2d\u6253\u5f00 test solution\uff0c\u7136\u540e build \u8fd9\u4e2a\u6d4b\u8bd5\u811a\u672c\u5e76\u9009\u62e9 \nTest > Run > All Tests\n\n\n\n\n\u7279\u6027\n\n\nWindows Application Driver \u652f\u6301\u6d4b\u8bd5 \nWindows 10 PC\n \u4e0a\u7684\nUniversal Windows Platform (UWP)\n \u53ca \nClassic Windows (Win32)\n \u5e94\u7528\u3002\n\n\n\u521b\u5efa\u4f60\u7684\u6d4b\u8bd5\u811a\u672c\n\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u4e00\u4e2a Appium \u6216 Selenium \u652f\u6301\u7684\u7f16\u7a0b\u8bed\u8a00\u6765\u7f16\u5199\u6d4b\u8bd5\u811a\u672c\uff0c\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 C# \u5728 \nMicrosoft Visual Studio 2015\n \u7f16\u5199\u6d4b\u8bd5\u811a\u672c\u3002\n\n\n\u521b\u5efa\u6d4b\u8bd5\u9879\u76ee\u5de5\u7a0b\n\n\n\n\n\u6253\u5f00 \nMicrosoft Visual Studio 2015\n\n\n\u521b\u5efa test project \u548c solution\u3002\u9009\u62e9 \nNew Project > Templates > Visual C# > Test > Unit Test Project\n\n\n\u521b\u5efa\u597d\u4e4b\u540e\uff0c\u6253\u5f00 \nProject > Manage NuGet Packages... > Browse\n \uff0c\u5e76\u641c\u7d22 \nAppium.WebDriver\n\n\n\u4e3a\u5f53\u524d\u7684 test project \u5b89\u88c5 \nAppium.WebDriver\n\n\n\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u7f16\u5199\u6d4b\u8bd5\u811a\u672c\u4e86\uff08\u53ef\u53c2\u8003 \nsamples\n \u76ee\u5f55\u4e0b\u7684\u793a\u4f8b\u4ee3\u7801\uff09\u3002\n\n\n\n\nUniversal Windows Platform \u5e94\u7528\u7684\u6d4b\u8bd5\n\n\n\u4f60\u53ef\u4ee5\u4f7f\u7528 Selenium \u652f\u6301\u7684\u7f16\u7a0b\u8bed\u8a00\u6765\u7f16\u5199\u811a\u672c\u6765\u6d4b\u8bd5 UWP \u5e94\u7528\uff0c\u901a\u8fc7 \napp capabilities entry\n\uff0c\u53ef\u4ee5\u5bf9\u6d4b\u8bd5\u7684 app \u627e\u5230\u5b83\u7684 \nApplication Id\n\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7528 C# \u7f16\u5199\u7684\u4f8b\u5b50\uff0c\u4e3b\u8981\u662f\u4e3a Windows \u4e0a\u7684 \nAlarms & Clock app\n \u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5 session\uff1a\n\n\n// Launch the AlarmClock app\nDesiredCapabilities appCapabilities = new DesiredCapabilities();\nappCapabilities.SetCapability(\"app\", \"Microsoft.WindowsAlarms_8wekyb3d8bbwe!App\");\nAlarmClockSession = new IOSDriver<IOSElement>(new Uri(\"http://127.0.0.1:4723\"), appCapabilities);\n// Control the AlarmClock app\nAlarmClockSession.FindElementByAccessibilityId(\"AddAlarmButton\").Click();\nAlarmClockSession.FindElementByAccessibilityId(\"AlarmNameTextBox\").Clear();\n\n\n\n\n\u5728\u6d4b\u8bd5\u81ea\u5df1\u7684\u5e94\u7528\u65f6\uff0c\u4f60\u53ef\u4ee5\u5728\u9879\u76ee\u5de5\u7a0b\u4e0b\u751f\u6210\u7684\u6587\u4ef6 \nAppX\\vs.appxrecipe\n \u4e2d\u627e\u5230\u8be5\u5e94\u7528\u7684 \nApplication id\n\uff0c\u5982\uff1a\nc24c8163-548e-4b84-a466-530178fc0580_scyf5npe3hv32!App\n\uff0c\u8fd9\u4e2a\u6587\u4ef6\u4f4d\u4e8e RegisteredUserNmodeAppID \u8282\u70b9\u4e0b\u3002\n\n\nClassic Windows \u5e94\u7528\u7684\u6d4b\u8bd5\n\n\n\u540c\u6837\u7684\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u4e00\u95e8 Selenium \u652f\u6301\u7684\u7f16\u7a0b\u8bed\u8a00\u6765\u7f16\u5199\u5bf9 Classic Windows \u5e94\u7528\u7684\u6d4b\u8bd5\u811a\u672c\uff0c\u5e76\u5728 app capabilities entry \u4e2d\u6307\u5b9a\u8be5\u5e94\u7528\u7684\n\u7edd\u5bf9\u8def\u5f84\n\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u662f\u5bf9 Windows \u7cfb\u7edf\u4e0b\u7684\u5e94\u7528 \nNotepad\n \u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5 session\uff1a\n\n\n// Launch Notepad\nDesiredCapabilities appCapabilities = new DesiredCapabilities();\nappCapabilities.SetCapability(\"app\", @\"C:\\Windows\\System32\\notepad.exe\");\nNotepadSession = new IOSDriver<IOSElement>(new Uri(\"http://127.0.0.1:4723\"), appCapabilities);\n// Control the AlarmClock app\nNotepadSession.FindElementByClassName(\"Edit\").SendKeys(\"This is some text\");\n\n\n\n\n\u542f\u52a8 Session\n\n\n\u6ce8\u610f\u4f60\u9700\u8981\u989d\u5916\u4f7f\u7528\u4e0b\u9762\u7684\u8fd9\u4e9b capabilities \u6765\u786e\u4fdd\u53ef\u4ee5\u83b7\u5f97 Windows App automation session\uff1a\n\n\nplatformName\n: \nWindows\n\n\ndeviceName\n: \nWindowsPC\n\n\n\u5b9a\u4f4d UI \u5143\u7d20\n\n\nMicrosoft Visual Studio 2015\n \u5df2\u7ecf\u9ed8\u8ba4\u5305\u542b\u4e86 Windows SDK\uff0c\u8fd9\u4e9b SDK \u63d0\u4f9b\u4e86\u8db3\u591f\u597d\u7684\u7528\u4e8e\u5bf9\u4f60\u6d4b\u8bd5\u7684\u5e94\u7528\u8fdb\u884c\u5206\u6790\u7684\u5de5\u5177\u3002\u8fd9\u7c7b\u5de5\u5177\u80fd\u591f\u8ba9\u4f60\u5229\u7528 Windows Application Driver \u6765\u67e5\u770b\u90a3\u4e9b\u4f60\u53ef\u4ee5\u627e\u5230\u7684 UI \u5143\u7d20\u6216\u8282\u70b9\u3002\u4f60\u53ef\u4ee5\u5728 Windows SDK \u76ee\u5f55\uff08\u5982\nC:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86\n\uff09\u4e0b\u627e\u5230 \ninspect.exe\n \u8fd9\u4e2a\u5de5\u5177\u3002\n\n\n\n\n\n\n\n\n\u5b9a\u4f4d\u65b9\u6cd5\n\n\n\u5339\u914d\u5c5e\u6027\n\n\n\n\n\n\n\n\n\n\naccessibility id\n\n\nAutomationId\n\n\n\n\n\n\nclass name\n\n\nClassName\n\n\n\n\n\n\nname\n\n\nName\n\n\n\n\n\n\n\n\n\u672c\u6587\u7531 \nfishky2\n \u7ffb\u8bd1\uff0c\u7531 \nlihuazhang\n \u6821\u9a8c\u3002",
            "title": "Windows app testing"
        },
        {
            "location": "/cn/writing-running-appium/windows-app-testing/#windows-ui",
            "text": "\u5728 Appium \u4e2d\uff0cWindows \u5e94\u7528\u7684 UI \u6d4b\u8bd5\u662f\u7531  WinAppDriver  \u652f\u6301\u7684\uff0cAppium \u5728\u4e0b\u8f7d\u5b89\u88c5\u7684\u65f6\u5019\u5df2\u7ecf\u5e26\u4e86\u8fd9\u90e8\u5206\u3002",
            "title": "Windows \u5e94\u7528\u7684 UI \u6d4b\u8bd5"
        },
        {
            "location": "/cn/writing-running-appium/windows-app-testing/#java",
            "text": "\u5728 Java IDE \uff08\u6bd4\u5982 IntelliJ\uff09\u4e2d\u6253\u5f00\u5305\u542b\u793a\u4f8b\u9879\u76ee\u5de5\u7a0b\u7684\u76ee\u5f55\uff0c\u5982\uff1a CalculatorTest  \u5728 Java IDE \u4e2d build \u5e76\u8fd0\u884c\u8fd9\u4e2a\u6d4b\u8bd5\u811a\u672c",
            "title": "Java \u793a\u4f8b"
        },
        {
            "location": "/cn/writing-running-appium/windows-app-testing/#c",
            "text": "\u62c9\u53d6\u5e76\u6253\u5f00  CalculatorTest  \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6  CalculatorTest.sln  \u5728 Visual Studio 2015 \u4e2d\u6253\u5f00 test solution\uff0c\u7136\u540e build \u8fd9\u4e2a\u6d4b\u8bd5\u811a\u672c\u5e76\u9009\u62e9  Test > Run > All Tests",
            "title": "C# \u793a\u4f8b"
        },
        {
            "location": "/cn/writing-running-appium/windows-app-testing/#_1",
            "text": "Windows Application Driver \u652f\u6301\u6d4b\u8bd5  Windows 10 PC  \u4e0a\u7684 Universal Windows Platform (UWP)  \u53ca  Classic Windows (Win32)  \u5e94\u7528\u3002",
            "title": "\u7279\u6027"
        },
        {
            "location": "/cn/writing-running-appium/windows-app-testing/#_2",
            "text": "\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u4e00\u4e2a Appium \u6216 Selenium \u652f\u6301\u7684\u7f16\u7a0b\u8bed\u8a00\u6765\u7f16\u5199\u6d4b\u8bd5\u811a\u672c\uff0c\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 C# \u5728  Microsoft Visual Studio 2015  \u7f16\u5199\u6d4b\u8bd5\u811a\u672c\u3002",
            "title": "\u521b\u5efa\u4f60\u7684\u6d4b\u8bd5\u811a\u672c"
        },
        {
            "location": "/cn/writing-running-appium/windows-app-testing/#_3",
            "text": "\u6253\u5f00  Microsoft Visual Studio 2015  \u521b\u5efa test project \u548c solution\u3002\u9009\u62e9  New Project > Templates > Visual C# > Test > Unit Test Project  \u521b\u5efa\u597d\u4e4b\u540e\uff0c\u6253\u5f00  Project > Manage NuGet Packages... > Browse  \uff0c\u5e76\u641c\u7d22  Appium.WebDriver  \u4e3a\u5f53\u524d\u7684 test project \u5b89\u88c5  Appium.WebDriver  \u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u7f16\u5199\u6d4b\u8bd5\u811a\u672c\u4e86\uff08\u53ef\u53c2\u8003  samples  \u76ee\u5f55\u4e0b\u7684\u793a\u4f8b\u4ee3\u7801\uff09\u3002",
            "title": "\u521b\u5efa\u6d4b\u8bd5\u9879\u76ee\u5de5\u7a0b"
        },
        {
            "location": "/cn/writing-running-appium/windows-app-testing/#universal-windows-platform",
            "text": "\u4f60\u53ef\u4ee5\u4f7f\u7528 Selenium \u652f\u6301\u7684\u7f16\u7a0b\u8bed\u8a00\u6765\u7f16\u5199\u811a\u672c\u6765\u6d4b\u8bd5 UWP \u5e94\u7528\uff0c\u901a\u8fc7  app capabilities entry \uff0c\u53ef\u4ee5\u5bf9\u6d4b\u8bd5\u7684 app \u627e\u5230\u5b83\u7684  Application Id \u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7528 C# \u7f16\u5199\u7684\u4f8b\u5b50\uff0c\u4e3b\u8981\u662f\u4e3a Windows \u4e0a\u7684  Alarms & Clock app  \u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5 session\uff1a  // Launch the AlarmClock app\nDesiredCapabilities appCapabilities = new DesiredCapabilities();\nappCapabilities.SetCapability(\"app\", \"Microsoft.WindowsAlarms_8wekyb3d8bbwe!App\");\nAlarmClockSession = new IOSDriver<IOSElement>(new Uri(\"http://127.0.0.1:4723\"), appCapabilities);\n// Control the AlarmClock app\nAlarmClockSession.FindElementByAccessibilityId(\"AddAlarmButton\").Click();\nAlarmClockSession.FindElementByAccessibilityId(\"AlarmNameTextBox\").Clear();  \u5728\u6d4b\u8bd5\u81ea\u5df1\u7684\u5e94\u7528\u65f6\uff0c\u4f60\u53ef\u4ee5\u5728\u9879\u76ee\u5de5\u7a0b\u4e0b\u751f\u6210\u7684\u6587\u4ef6  AppX\\vs.appxrecipe  \u4e2d\u627e\u5230\u8be5\u5e94\u7528\u7684  Application id \uff0c\u5982\uff1a c24c8163-548e-4b84-a466-530178fc0580_scyf5npe3hv32!App \uff0c\u8fd9\u4e2a\u6587\u4ef6\u4f4d\u4e8e RegisteredUserNmodeAppID \u8282\u70b9\u4e0b\u3002",
            "title": "Universal Windows Platform \u5e94\u7528\u7684\u6d4b\u8bd5"
        },
        {
            "location": "/cn/writing-running-appium/windows-app-testing/#classic-windows",
            "text": "\u540c\u6837\u7684\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u4e00\u95e8 Selenium \u652f\u6301\u7684\u7f16\u7a0b\u8bed\u8a00\u6765\u7f16\u5199\u5bf9 Classic Windows \u5e94\u7528\u7684\u6d4b\u8bd5\u811a\u672c\uff0c\u5e76\u5728 app capabilities entry \u4e2d\u6307\u5b9a\u8be5\u5e94\u7528\u7684 \u7edd\u5bf9\u8def\u5f84 \u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u662f\u5bf9 Windows \u7cfb\u7edf\u4e0b\u7684\u5e94\u7528  Notepad  \u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5 session\uff1a  // Launch Notepad\nDesiredCapabilities appCapabilities = new DesiredCapabilities();\nappCapabilities.SetCapability(\"app\", @\"C:\\Windows\\System32\\notepad.exe\");\nNotepadSession = new IOSDriver<IOSElement>(new Uri(\"http://127.0.0.1:4723\"), appCapabilities);\n// Control the AlarmClock app\nNotepadSession.FindElementByClassName(\"Edit\").SendKeys(\"This is some text\");",
            "title": "Classic Windows \u5e94\u7528\u7684\u6d4b\u8bd5"
        },
        {
            "location": "/cn/writing-running-appium/windows-app-testing/#session",
            "text": "\u6ce8\u610f\u4f60\u9700\u8981\u989d\u5916\u4f7f\u7528\u4e0b\u9762\u7684\u8fd9\u4e9b capabilities \u6765\u786e\u4fdd\u53ef\u4ee5\u83b7\u5f97 Windows App automation session\uff1a  platformName :  Windows  deviceName :  WindowsPC",
            "title": "\u542f\u52a8 Session"
        },
        {
            "location": "/cn/writing-running-appium/windows-app-testing/#ui",
            "text": "Microsoft Visual Studio 2015  \u5df2\u7ecf\u9ed8\u8ba4\u5305\u542b\u4e86 Windows SDK\uff0c\u8fd9\u4e9b SDK \u63d0\u4f9b\u4e86\u8db3\u591f\u597d\u7684\u7528\u4e8e\u5bf9\u4f60\u6d4b\u8bd5\u7684\u5e94\u7528\u8fdb\u884c\u5206\u6790\u7684\u5de5\u5177\u3002\u8fd9\u7c7b\u5de5\u5177\u80fd\u591f\u8ba9\u4f60\u5229\u7528 Windows Application Driver \u6765\u67e5\u770b\u90a3\u4e9b\u4f60\u53ef\u4ee5\u627e\u5230\u7684 UI \u5143\u7d20\u6216\u8282\u70b9\u3002\u4f60\u53ef\u4ee5\u5728 Windows SDK \u76ee\u5f55\uff08\u5982 C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86 \uff09\u4e0b\u627e\u5230  inspect.exe  \u8fd9\u4e2a\u5de5\u5177\u3002     \u5b9a\u4f4d\u65b9\u6cd5  \u5339\u914d\u5c5e\u6027      accessibility id  AutomationId    class name  ClassName    name  Name     \u672c\u6587\u7531  fishky2  \u7ffb\u8bd1\uff0c\u7531  lihuazhang  \u6821\u9a8c\u3002",
            "title": "\u5b9a\u4f4d UI \u5143\u7d20"
        },
        {
            "location": "/en/about-appium/appium-clients/",
            "text": "List of client libraries with Appium server support\n\n\nThese libraries wrap standard Selenium client libraries to provide all the regular selenium commands dictated by the \nJSON Wire protocol\n, and add extra commands related to controlling mobile devices, such as \nmulti-touch gestures\n and \nscreen orientation\n.\n\n\nAppium client libraries implement the \nMobile JSON Wire Protocol\n (an official draft extension to the standard protocol), and elements of the \nW3C Webdriver spec\n (a transport-agnostic automation spec; this is where the MultiAction API is defined).\n\n\nThe Appium server itself defines custom extensions to the official protocols, giving Appium users helpful access to various device behaviors (such as installing/uninstalling apps during the course of a test session). This is why we need Appium-specific clients, not just the 'vanilla' Selenium clients. Of course, Appium client libraries only \nadd\n functionality (in fact, they simply extend the standard Selenium clients), so they can still be used to run regular Selenium sessions.\n\n\n\n\n\n\n\n\nLanguage/Framework\n\n\nGithub Repo and Installation Instructions\n\n\n\n\n\n\n\n\n\n\nRuby\n\n\nhttps://github.com/appium/ruby_lib\n\n\n\n\n\n\nPython\n\n\nhttps://github.com/appium/python-client\n\n\n\n\n\n\nJava\n\n\nhttps://github.com/appium/java-client\n\n\n\n\n\n\nJavaScript (Node.js)\n\n\nhttps://github.com/admc/wd\n\n\n\n\n\n\nObjective C\n\n\nhttps://github.com/appium/selenium-objective-c\n\n\n\n\n\n\nPHP\n\n\nhttps://github.com/appium/php-client\n\n\n\n\n\n\nC# (.NET)\n\n\nhttps://github.com/appium/appium-dotnet-driver\n\n\n\n\n\n\nRobotFramework\n\n\nhttps://github.com/jollychang/robotframework-appiumlibrary",
            "title": "Appium clients"
        },
        {
            "location": "/en/about-appium/appium-clients/#list-of-client-libraries-with-appium-server-support",
            "text": "These libraries wrap standard Selenium client libraries to provide all the regular selenium commands dictated by the  JSON Wire protocol , and add extra commands related to controlling mobile devices, such as  multi-touch gestures  and  screen orientation .  Appium client libraries implement the  Mobile JSON Wire Protocol  (an official draft extension to the standard protocol), and elements of the  W3C Webdriver spec  (a transport-agnostic automation spec; this is where the MultiAction API is defined).  The Appium server itself defines custom extensions to the official protocols, giving Appium users helpful access to various device behaviors (such as installing/uninstalling apps during the course of a test session). This is why we need Appium-specific clients, not just the 'vanilla' Selenium clients. Of course, Appium client libraries only  add  functionality (in fact, they simply extend the standard Selenium clients), so they can still be used to run regular Selenium sessions.     Language/Framework  Github Repo and Installation Instructions      Ruby  https://github.com/appium/ruby_lib    Python  https://github.com/appium/python-client    Java  https://github.com/appium/java-client    JavaScript (Node.js)  https://github.com/admc/wd    Objective C  https://github.com/appium/selenium-objective-c    PHP  https://github.com/appium/php-client    C# (.NET)  https://github.com/appium/appium-dotnet-driver    RobotFramework  https://github.com/jollychang/robotframework-appiumlibrary",
            "title": "List of client libraries with Appium server support"
        },
        {
            "location": "/en/about-appium/getting-started/",
            "text": "Getting Started\n\n\nThis doc will get you up and running with a simple Appium test and introduce\nyou to some basic Appium ideas. For a fuller introduction to Appium concepts,\nplease check out the \nconceptual introduction\n.\n\n\nInstalling Appium\n\n\nAppium can be installed in one of two ways: via \nNPM\n or by\ndownloading \nAppium Desktop\n, which\nis a graphical, desktop-based way to launch the Appium server.\n\n\nInstallation via NPM\n\n\nIf you want to run Appium via an \nnpm install\n, hack with Appium, or contribute\nto Appium, you will need \nNode.js and NPM\n (use\n\nnvm\n,\n\nn\n, or \nbrew install node\n to install\nNode.js. Make sure you have not installed Node or Appium with \nsudo\n, otherwise\nyou'll run into problems). We recommend the latest stable version, though\nAppium supports Node 6+.\n\n\nThe actual installation is as simple as:\n\n\nnpm install -g appium\n\n\n\n\nInstallation via Desktop App Download\n\n\nSimply download the latest version of Appium Desktop from the \nreleases\npage\n.\n\n\nDriver-Specific Setup\n\n\nYou probably want to use Appium to automate something specific, like an iOS or\nAndroid application. Support for the automation of a particular platform is\nprovided by an Appium \"driver\". There are a number of such drivers that give\nyou access to different kinds of automation technologies, and each come with\ntheir own particular setup requirements. Most of these requirements are the\nsame requirements as for app development on a specific platform. For example,\nto automate Android applications using one of our Android drivers, you'll need\nthe Android SDK configured on your system.\n\n\nAt some point, make sure you review the driver documentation for the platform\nyou want to automate, so your system is set up correctly:\n\n\n\n\nThe \nXCUITest Driver\n (for iOS apps)\n\n\nThe \nUiAutomator2 Driver\n (for Android apps)\n\n\nThe \nWindows Driver\n (for Windows Desktop apps)\n\n\nThe \nMac Driver\n (for Mac Desktop apps)\n\n\n(BETA) The \nEspresso Driver\n (for Android apps)\n\n\n\n\nVerifying the Installation\n\n\nTo verify that all of Appium's dependencies are met you can use\n\nappium-doctor\n.  Install it with \nnpm install -g appium-doctor\n, then run the\n\nappium-doctor\n command, supplying the \n--ios\n or \n--android\n flags to verify\nthat all of the dependencies are set up correctly.\n\n\nAppium Clients\n\n\nWhen all is said and done, Appium is just an HTTP server. It sits and waits for\nconnections from a client, which then instructs Appium what kind of session to\nstart and what kind of automation behaviors to enact once a session is started.\nThis means that you never use Appium just by itself. You always have to use it\nwith a client library of some kind (or, if you're adventurous, cURL!).\n\n\nLuckily, Appium speaks the same protocol as\n\nSelenium\n, called the WebDriver Protocol. You can\ndo a lot of things with Appium just by using one of the standard Selenium\nclients. You may even have one of these on your system already. It's enough to\nget started, especially if you're using Appium for the purpose of testing web\nbrowsers on mobile platforms.\n\n\nAppium can do things that Selenium can't, though, just like mobile devices can\ndo things that web browsers can't. For that reason, we have a set of Appium\nclients in a variety of programming languages, that extend the regular old\nSelenium clients with additional functionality. You can see the list of clients\nand links to download instructions at the \nAppium clients\nlist\n.\n\n\nBefore moving forward, make sure you have a client downloaded in your favorite\nlanguage and ready to go.\n\n\nStarting Appium\n\n\nNow we can kick up an Appium server, either by running it from the command line\nlike so (assuming the NPM install was successful):\n\n\nappium\n\n\n\n\nOr by clicking the huge Start Server button inside of Appium Desktop.\n\n\nAppium will now show you a little welcome message showing the version of Appium\nyou're running and what port it's listening on (the default is \n4723\n). This\nport information is vital since you will have to direct your test client to\nmake sure to connect to Appium on this port. If you want to change, the port,\nyou can do so by using the \n-p\n flag when starting Appium (be sure to check out\nthe full list of \nserver\nparameters\n).\n\n\nRunning Your First Test\n\n\nIn this section we'll run a basic \"Hello World\" Android test. We've chosen\nAndroid because it's available on all platforms. We'll be using the\n\nUiAutomator2 Driver\n so ensure\nyou've read through that doc and gotten your system set up appropriately. We'll\nalso be using JavaScript as the language so that we don't have to deal with\nadditional dependencies.\n\n\n(Chances are, you'll eventually want to automate something other than Android\nusing something other than JavaScript. In that case, check out our\n\nsample-code\n repository, which has code\nsamples for many languages and platforms.)\n\n\nPrerequisites\n\n\n\n\nWe'll assume you have an Android 8.0 emulator configured and running (the\n  example will work on lower versions, just fix the version numbers\n  accordingly)\n\n\nWe'll assume you have \nthis test\n  APK\n\n  downloaded and available on your local filesystem\n\n\n\n\nSetting up the Appium Client\n\n\nFor this example, we'll use \nWebdriver.io\n as our Appium\nclient. Create a directory for this example, then run:\n\n\nnpm install webdriverio\n\n\n\n\nSession Initialization\n\n\nNow we can create our test file (name it whatever you like) and initialize the\nclient object:\n\n\n// javascript\nconst wdio = require('webdriverio');\n\n\n\n\nThe next thing we need to do is to start an Appium session. We do this by\ndefining a set of server options and Desired Capabilities, and calling\n\nwdio.remote()\n with them. Desired Capabilities are just a set of keys and\nvalues that get sent to the Appium server during session initialization, that\ntell Appium what kind of thing we want to automate. The minimum set of required\ncapabilities for any Appium driver should include:\n\n\n\n\nplatformName\n: the name of the platform to automate\n\n\nplatformVersion\n: the version of the platform to automate\n\n\ndeviceName\n: the kind of device to automate\n\n\napp\n: the path to the app you want to automate (but use the \nbrowserName\n\n  capability instead in the case of automating a web browser)\n\n\nautomationName\n: the name of the driver you wish to use\n\n\n\n\nFor more information on Desired Capabilities and for a list of all the\nCapabilities you can use in Appium, see our \nCapabilities\ndoc\n.\n\n\nSo here is how we begin to construct a session in our test file:\n\n\n// javascript\nconst opts = {\n  port: 4723,\n  desiredCapabilities: {\n    platformName: \"Android\",\n    platformVersion: \"8.0\",\n    deviceName: \"Android Emulator\",\n    app: \"/path/to/the/downloaded/ApiDemos.apk\",\n    automationName: \"UiAutomator2\"\n  }\n};\n\nconst client = wdio.remote(opts);\n\n\n\n\nRunning Test Commands\n\n\nYou can see that we've specified our Appium port and also constructed our\nDesired Capabilities to match our requirements (but don't forget to replace the\npath with the actual download path for your system). We've registered this fact\nwith webdriverio and now have a client object which will represent the\nconnection to the Appium server. From here, we can go ahead and start the\nsession, perform some test commands, and end the session. In our case, we will\nsimply tap into a few menus and then back out the way we came before ending the\nsession:\n\n\n// javascript\nclient\n  .init()\n  .click(\"~App\")\n  .click(\"~Alert Dialogs\")\n  .back()\n  .back()\n  .end();\n\n\n\n\nWhat's going on here is that after creating a session and launching our app,\nwe're instructing Appium to find an element in the app hierarchy and click on\nit. Specifically, webdriverio has a convention where the \n~\n prefix means to\nfind an element by its \"accessbility id\", which in the case of Android means an\nelement's \"content description\". So we find and tap on these elements in order\nto navigate through the app's menu system. Then we can use the \nback()\n method\nto trigger the Android \"back\" behavior and get back to where we started before\nending the session.\n\n\nPutting it all together, the file should look like:\n\n\n// javascript\n\nconst wdio = require('webdriverio');\n\nconst opts = {\n  port: 4723,\n  desiredCapabilities: {\n    platformName: \"Android\",\n    platformVersion: \"8.0\",\n    deviceName: \"Android Emulator\",\n    app: \"/path/to/the/downloaded/ApiDemos.apk\",\n    automationName: \"UiAutomator2\"\n  }\n};\n\nconst client = wdio.remote(opts);\n\nclient\n  .init()\n  .click(\"~App\")\n  .click(\"~Alert Dialogs\")\n  .back()\n  .back()\n  .end();\n\n\n\n\nYou can try and run this test on your own. Simply save it and execute it using\n\nnode\n. If everything is set up correctly, you'll see Appium begin spitting out\nlots of logs and eventually the app will pop up on the screen and start\nbehaving as if an invisible user were tapping on it!\n\n\nWhat's Next\n\n\nWe've only scratched the surface of what you can do with Appium. Check out\nthese resources to help you on your journey:\n\n\n\n\nThe Appium \ncommand reference\n - learn about what commands are available, how to use them with specific client libraries, etc...\n\n\nThe \nsample-code\n repository, where lots more code samples are available\n\n\ndiscuss.appium.io\n - this is the Appium community forum, which is a great first place to go for help getting started, or if you think you may have run into a bug\n\n\nThe Appium \nissue tracker\n - let the Appium maintainers know here if you think you've found a bug",
            "title": "Getting started"
        },
        {
            "location": "/en/about-appium/getting-started/#getting-started",
            "text": "This doc will get you up and running with a simple Appium test and introduce\nyou to some basic Appium ideas. For a fuller introduction to Appium concepts,\nplease check out the  conceptual introduction .",
            "title": "Getting Started"
        },
        {
            "location": "/en/about-appium/getting-started/#installing-appium",
            "text": "Appium can be installed in one of two ways: via  NPM  or by\ndownloading  Appium Desktop , which\nis a graphical, desktop-based way to launch the Appium server.",
            "title": "Installing Appium"
        },
        {
            "location": "/en/about-appium/getting-started/#installation-via-npm",
            "text": "If you want to run Appium via an  npm install , hack with Appium, or contribute\nto Appium, you will need  Node.js and NPM  (use nvm , n , or  brew install node  to install\nNode.js. Make sure you have not installed Node or Appium with  sudo , otherwise\nyou'll run into problems). We recommend the latest stable version, though\nAppium supports Node 6+.  The actual installation is as simple as:  npm install -g appium",
            "title": "Installation via NPM"
        },
        {
            "location": "/en/about-appium/getting-started/#installation-via-desktop-app-download",
            "text": "Simply download the latest version of Appium Desktop from the  releases\npage .",
            "title": "Installation via Desktop App Download"
        },
        {
            "location": "/en/about-appium/getting-started/#driver-specific-setup",
            "text": "You probably want to use Appium to automate something specific, like an iOS or\nAndroid application. Support for the automation of a particular platform is\nprovided by an Appium \"driver\". There are a number of such drivers that give\nyou access to different kinds of automation technologies, and each come with\ntheir own particular setup requirements. Most of these requirements are the\nsame requirements as for app development on a specific platform. For example,\nto automate Android applications using one of our Android drivers, you'll need\nthe Android SDK configured on your system.  At some point, make sure you review the driver documentation for the platform\nyou want to automate, so your system is set up correctly:   The  XCUITest Driver  (for iOS apps)  The  UiAutomator2 Driver  (for Android apps)  The  Windows Driver  (for Windows Desktop apps)  The  Mac Driver  (for Mac Desktop apps)  (BETA) The  Espresso Driver  (for Android apps)",
            "title": "Driver-Specific Setup"
        },
        {
            "location": "/en/about-appium/getting-started/#verifying-the-installation",
            "text": "To verify that all of Appium's dependencies are met you can use appium-doctor .  Install it with  npm install -g appium-doctor , then run the appium-doctor  command, supplying the  --ios  or  --android  flags to verify\nthat all of the dependencies are set up correctly.",
            "title": "Verifying the Installation"
        },
        {
            "location": "/en/about-appium/getting-started/#appium-clients",
            "text": "When all is said and done, Appium is just an HTTP server. It sits and waits for\nconnections from a client, which then instructs Appium what kind of session to\nstart and what kind of automation behaviors to enact once a session is started.\nThis means that you never use Appium just by itself. You always have to use it\nwith a client library of some kind (or, if you're adventurous, cURL!).  Luckily, Appium speaks the same protocol as Selenium , called the WebDriver Protocol. You can\ndo a lot of things with Appium just by using one of the standard Selenium\nclients. You may even have one of these on your system already. It's enough to\nget started, especially if you're using Appium for the purpose of testing web\nbrowsers on mobile platforms.  Appium can do things that Selenium can't, though, just like mobile devices can\ndo things that web browsers can't. For that reason, we have a set of Appium\nclients in a variety of programming languages, that extend the regular old\nSelenium clients with additional functionality. You can see the list of clients\nand links to download instructions at the  Appium clients\nlist .  Before moving forward, make sure you have a client downloaded in your favorite\nlanguage and ready to go.",
            "title": "Appium Clients"
        },
        {
            "location": "/en/about-appium/getting-started/#starting-appium",
            "text": "Now we can kick up an Appium server, either by running it from the command line\nlike so (assuming the NPM install was successful):  appium  Or by clicking the huge Start Server button inside of Appium Desktop.  Appium will now show you a little welcome message showing the version of Appium\nyou're running and what port it's listening on (the default is  4723 ). This\nport information is vital since you will have to direct your test client to\nmake sure to connect to Appium on this port. If you want to change, the port,\nyou can do so by using the  -p  flag when starting Appium (be sure to check out\nthe full list of  server\nparameters ).",
            "title": "Starting Appium"
        },
        {
            "location": "/en/about-appium/getting-started/#running-your-first-test",
            "text": "In this section we'll run a basic \"Hello World\" Android test. We've chosen\nAndroid because it's available on all platforms. We'll be using the UiAutomator2 Driver  so ensure\nyou've read through that doc and gotten your system set up appropriately. We'll\nalso be using JavaScript as the language so that we don't have to deal with\nadditional dependencies.  (Chances are, you'll eventually want to automate something other than Android\nusing something other than JavaScript. In that case, check out our sample-code  repository, which has code\nsamples for many languages and platforms.)",
            "title": "Running Your First Test"
        },
        {
            "location": "/en/about-appium/getting-started/#prerequisites",
            "text": "We'll assume you have an Android 8.0 emulator configured and running (the\n  example will work on lower versions, just fix the version numbers\n  accordingly)  We'll assume you have  this test\n  APK \n  downloaded and available on your local filesystem",
            "title": "Prerequisites"
        },
        {
            "location": "/en/about-appium/getting-started/#setting-up-the-appium-client",
            "text": "For this example, we'll use  Webdriver.io  as our Appium\nclient. Create a directory for this example, then run:  npm install webdriverio",
            "title": "Setting up the Appium Client"
        },
        {
            "location": "/en/about-appium/getting-started/#session-initialization",
            "text": "Now we can create our test file (name it whatever you like) and initialize the\nclient object:  // javascript\nconst wdio = require('webdriverio');  The next thing we need to do is to start an Appium session. We do this by\ndefining a set of server options and Desired Capabilities, and calling wdio.remote()  with them. Desired Capabilities are just a set of keys and\nvalues that get sent to the Appium server during session initialization, that\ntell Appium what kind of thing we want to automate. The minimum set of required\ncapabilities for any Appium driver should include:   platformName : the name of the platform to automate  platformVersion : the version of the platform to automate  deviceName : the kind of device to automate  app : the path to the app you want to automate (but use the  browserName \n  capability instead in the case of automating a web browser)  automationName : the name of the driver you wish to use   For more information on Desired Capabilities and for a list of all the\nCapabilities you can use in Appium, see our  Capabilities\ndoc .  So here is how we begin to construct a session in our test file:  // javascript\nconst opts = {\n  port: 4723,\n  desiredCapabilities: {\n    platformName: \"Android\",\n    platformVersion: \"8.0\",\n    deviceName: \"Android Emulator\",\n    app: \"/path/to/the/downloaded/ApiDemos.apk\",\n    automationName: \"UiAutomator2\"\n  }\n};\n\nconst client = wdio.remote(opts);",
            "title": "Session Initialization"
        },
        {
            "location": "/en/about-appium/getting-started/#running-test-commands",
            "text": "You can see that we've specified our Appium port and also constructed our\nDesired Capabilities to match our requirements (but don't forget to replace the\npath with the actual download path for your system). We've registered this fact\nwith webdriverio and now have a client object which will represent the\nconnection to the Appium server. From here, we can go ahead and start the\nsession, perform some test commands, and end the session. In our case, we will\nsimply tap into a few menus and then back out the way we came before ending the\nsession:  // javascript\nclient\n  .init()\n  .click(\"~App\")\n  .click(\"~Alert Dialogs\")\n  .back()\n  .back()\n  .end();  What's going on here is that after creating a session and launching our app,\nwe're instructing Appium to find an element in the app hierarchy and click on\nit. Specifically, webdriverio has a convention where the  ~  prefix means to\nfind an element by its \"accessbility id\", which in the case of Android means an\nelement's \"content description\". So we find and tap on these elements in order\nto navigate through the app's menu system. Then we can use the  back()  method\nto trigger the Android \"back\" behavior and get back to where we started before\nending the session.  Putting it all together, the file should look like:  // javascript\n\nconst wdio = require('webdriverio');\n\nconst opts = {\n  port: 4723,\n  desiredCapabilities: {\n    platformName: \"Android\",\n    platformVersion: \"8.0\",\n    deviceName: \"Android Emulator\",\n    app: \"/path/to/the/downloaded/ApiDemos.apk\",\n    automationName: \"UiAutomator2\"\n  }\n};\n\nconst client = wdio.remote(opts);\n\nclient\n  .init()\n  .click(\"~App\")\n  .click(\"~Alert Dialogs\")\n  .back()\n  .back()\n  .end();  You can try and run this test on your own. Simply save it and execute it using node . If everything is set up correctly, you'll see Appium begin spitting out\nlots of logs and eventually the app will pop up on the screen and start\nbehaving as if an invisible user were tapping on it!",
            "title": "Running Test Commands"
        },
        {
            "location": "/en/about-appium/getting-started/#whats-next",
            "text": "We've only scratched the surface of what you can do with Appium. Check out\nthese resources to help you on your journey:   The Appium  command reference  - learn about what commands are available, how to use them with specific client libraries, etc...  The  sample-code  repository, where lots more code samples are available  discuss.appium.io  - this is the Appium community forum, which is a great first place to go for help getting started, or if you think you may have run into a bug  The Appium  issue tracker  - let the Appium maintainers know here if you think you've found a bug",
            "title": "What's Next"
        },
        {
            "location": "/en/about-appium/intro/",
            "text": "Introduction to Appium\n\n\nAppium is an open-source tool for automating native, mobile web, and hybrid\napplications on iOS mobile, Android mobile, and Windows desktop platforms.\n\nNative apps\n are those written using the iOS, Android, or Windows SDKs.\n\nMobile web apps\n are web apps accessed using a mobile browser (Appium\nsupports Safari on iOS and Chrome or the built-in 'Browser' app on Android).\n\nHybrid apps\n have a wrapper around a \"webview\" -- a native control that\nenables interaction with web content. Projects like\n\nPhonegap\n, make it easy to build apps using web\ntechnologies that are then bundled into a native wrapper, creating a hybrid\napp.\n\n\nImportantly, Appium is \"cross-platform\": it allows you to write tests against\nmultiple platforms (iOS, Android, Windows), using the same API. This enables\ncode reuse between iOS, Android, and Windows testsuites.\n\n\nFor specific information about what it means for Appium to \"support\" its\nplatforms, and automation modalities, please see the \nplatform support\ndoc\n.\n\n\nAppium Philosophy\n\n\nAppium was designed to meet mobile automation needs according to a philosophy\noutlined by the following four tenets:\n\n\n\n\nYou shouldn't have to recompile your app or modify it in any way in order to\n   automate it.\n\n\nYou shouldn't be locked into a specific language or framework to write and\n   run your tests.\n\n\nA mobile automation framework shouldn't reinvent the wheel when it comes to\n   automation APIs.\n\n\nA mobile automation framework should be open source, in spirit and practice\n   as well as in name!\n\n\n\n\nAppium Design\n\n\nSo how does the structure of the Appium project live out this philosophy? We\nmeet requirement #1 by using vendor-provided automation frameworks under the\nhood. That way, we don't need to compile in any Appium-specific or third-party\ncode or frameworks to your app. This means \nyou're testing the same app you're\nshipping\n. The vendor-provided frameworks we use are:\n\n\n\n\niOS 9.3 and above: Apple's \nXCUITest\n\n\niOS 9.3 and lower: Apple's \nUIAutomation\n\n\nAndroid 4.2+: Google's \nUiAutomator/UiAutomator2\n\n\nAndroid 2.3+: Google's \nInstrumentation\n. (Instrumentation support is provided by bundling a separate project, \nSelendroid\n)\n\n\nWindows: Microsoft's \nWinAppDriver\n\n\n\n\nWe meet requirement #2 by wrapping the vendor-provided frameworks in one API,\nthe \nWebDriver\n API.\nWebDriver (aka \"Selenium WebDriver\") specifies a client-server protocol\n(known as the \nJSON Wire Protocol\n).\nGiven this client-server architecture, a client written in any language can\nbe used to send the appropriate HTTP requests to the server. There are\nalready \nclients written in every popular programming language\n. This also\nmeans that you're free to use whatever test runner and test framework you\nwant; the client libraries are simply HTTP clients and can be mixed into your\ncode any way you please. In other words, Appium & WebDriver clients are not\ntechnically \"test frameworks\" -- they are \"automation libraries\". You can\nmanage your test environment any way you like!\n\n\nWe meet requirement #3 in the same way: WebDriver has become the de facto\nstandard for automating web browsers, and is a \nW3C Working\nDraft\n.  Why\ndo something totally different for mobile? Instead we have \nextended the\nprotocol\n\nwith extra API methods useful for mobile automation.\n\n\nIt should be obvious that requirement #4 is a given -- you're reading this\nbecause \nAppium is open source\n.\n\n\nAppium Concepts\n\n\nClient/Server Architecture\n\nAppium is at its heart a webserver that exposes a REST API. It receives\nconnections from a client, listens for commands, executes those commands on\na mobile device, and responds with an HTTP response representing the result of\nthe command execution. The fact that we have a client/server architecture opens\nup a lot of possibilities: we can write our test code in any language that has\na http client API, but it is easier to use one of the \nAppium client\nlibraries\n. We can put the server on a different\nmachine than our tests are running on. We can write test code and rely on\na cloud service like \nSauce Labs\n to receive and\ninterpret the commands.\n\n\nSession\n\nAutomation is always performed in the context of a session. Clients initiate\na session with a server in ways specific to each library,\nbut they all end up sending a \nPOST /session\n request to the server,\nwith a JSON object called  the 'desired capabilities' object. At this point\nthe server will start up the automation session and respond with a session ID\nwhich is used for sending further commands.\n\n\nDesired Capabilities\n\nDesired capabilities are a set of keys and values (i.e., a map or hash) sent to\nthe Appium server to tell the server what kind of automation session we're\ninterested in starting up. There are also various capabilities which can modify\nthe behavior of the server during automation.  For example, we might set the\n\nplatformName\n capability to \niOS\n to tell Appium that we want an iOS session,\nrather than an Android or Windows one. Or we might set the \nsafariAllowPopups\n\ncapability to \ntrue\n in order to ensure that, during a Safari automation\nsession, we're allowed to use JavaScript to open up new windows. See the\n\ncapabilities doc\n for the complete\nlist of capabilities available for Appium.\n\n\nAppium Server\n\nAppium is a server written in Node.js. It can be built and installed \nfrom\nsource\n\nor installed directly from NPM:\n\n\n$ npm install -g appium\n$ appium\n\n\n\n\nAppium Clients\n\nThere are client libraries (in Java, Ruby, Python, PHP, JavaScript, and C#)\nwhich support Appium's extensions to the WebDriver protocol. When using Appium,\nyou want to use these client libraries instead of your regular WebDriver\nclient. You can view the full list of libraries\n\nhere\n.\n\n\nAppium Desktop\n\nThere is a GUI wrapper around the Appium server that can be downloaded for any\nplatform.  It comes bundled with everything required to run the Appium server,\nso you don't need to worry about Node. It also comes with an Inspector, which\nenables you to check out the hierarchy of your app. This can come in handy when\nwriting tests.\n\n\nGetting Started\n\n\nCongratulations! You are now armed with enough knowledge to begin using Appium.\nWhy not head to the \ngetting started\ndoc\n for more detailed requirements\nand instructions?",
            "title": "Intro"
        },
        {
            "location": "/en/about-appium/intro/#introduction-to-appium",
            "text": "Appium is an open-source tool for automating native, mobile web, and hybrid\napplications on iOS mobile, Android mobile, and Windows desktop platforms. Native apps  are those written using the iOS, Android, or Windows SDKs. Mobile web apps  are web apps accessed using a mobile browser (Appium\nsupports Safari on iOS and Chrome or the built-in 'Browser' app on Android). Hybrid apps  have a wrapper around a \"webview\" -- a native control that\nenables interaction with web content. Projects like Phonegap , make it easy to build apps using web\ntechnologies that are then bundled into a native wrapper, creating a hybrid\napp.  Importantly, Appium is \"cross-platform\": it allows you to write tests against\nmultiple platforms (iOS, Android, Windows), using the same API. This enables\ncode reuse between iOS, Android, and Windows testsuites.  For specific information about what it means for Appium to \"support\" its\nplatforms, and automation modalities, please see the  platform support\ndoc .",
            "title": "Introduction to Appium"
        },
        {
            "location": "/en/about-appium/intro/#appium-philosophy",
            "text": "Appium was designed to meet mobile automation needs according to a philosophy\noutlined by the following four tenets:   You shouldn't have to recompile your app or modify it in any way in order to\n   automate it.  You shouldn't be locked into a specific language or framework to write and\n   run your tests.  A mobile automation framework shouldn't reinvent the wheel when it comes to\n   automation APIs.  A mobile automation framework should be open source, in spirit and practice\n   as well as in name!",
            "title": "Appium Philosophy"
        },
        {
            "location": "/en/about-appium/intro/#appium-design",
            "text": "So how does the structure of the Appium project live out this philosophy? We\nmeet requirement #1 by using vendor-provided automation frameworks under the\nhood. That way, we don't need to compile in any Appium-specific or third-party\ncode or frameworks to your app. This means  you're testing the same app you're\nshipping . The vendor-provided frameworks we use are:   iOS 9.3 and above: Apple's  XCUITest  iOS 9.3 and lower: Apple's  UIAutomation  Android 4.2+: Google's  UiAutomator/UiAutomator2  Android 2.3+: Google's  Instrumentation . (Instrumentation support is provided by bundling a separate project,  Selendroid )  Windows: Microsoft's  WinAppDriver   We meet requirement #2 by wrapping the vendor-provided frameworks in one API,\nthe  WebDriver  API.\nWebDriver (aka \"Selenium WebDriver\") specifies a client-server protocol\n(known as the  JSON Wire Protocol ).\nGiven this client-server architecture, a client written in any language can\nbe used to send the appropriate HTTP requests to the server. There are\nalready  clients written in every popular programming language . This also\nmeans that you're free to use whatever test runner and test framework you\nwant; the client libraries are simply HTTP clients and can be mixed into your\ncode any way you please. In other words, Appium & WebDriver clients are not\ntechnically \"test frameworks\" -- they are \"automation libraries\". You can\nmanage your test environment any way you like!  We meet requirement #3 in the same way: WebDriver has become the de facto\nstandard for automating web browsers, and is a  W3C Working\nDraft .  Why\ndo something totally different for mobile? Instead we have  extended the\nprotocol \nwith extra API methods useful for mobile automation.  It should be obvious that requirement #4 is a given -- you're reading this\nbecause  Appium is open source .",
            "title": "Appium Design"
        },
        {
            "location": "/en/about-appium/intro/#appium-concepts",
            "text": "Client/Server Architecture \nAppium is at its heart a webserver that exposes a REST API. It receives\nconnections from a client, listens for commands, executes those commands on\na mobile device, and responds with an HTTP response representing the result of\nthe command execution. The fact that we have a client/server architecture opens\nup a lot of possibilities: we can write our test code in any language that has\na http client API, but it is easier to use one of the  Appium client\nlibraries . We can put the server on a different\nmachine than our tests are running on. We can write test code and rely on\na cloud service like  Sauce Labs  to receive and\ninterpret the commands.  Session \nAutomation is always performed in the context of a session. Clients initiate\na session with a server in ways specific to each library,\nbut they all end up sending a  POST /session  request to the server,\nwith a JSON object called  the 'desired capabilities' object. At this point\nthe server will start up the automation session and respond with a session ID\nwhich is used for sending further commands.  Desired Capabilities \nDesired capabilities are a set of keys and values (i.e., a map or hash) sent to\nthe Appium server to tell the server what kind of automation session we're\ninterested in starting up. There are also various capabilities which can modify\nthe behavior of the server during automation.  For example, we might set the platformName  capability to  iOS  to tell Appium that we want an iOS session,\nrather than an Android or Windows one. Or we might set the  safariAllowPopups \ncapability to  true  in order to ensure that, during a Safari automation\nsession, we're allowed to use JavaScript to open up new windows. See the capabilities doc  for the complete\nlist of capabilities available for Appium.  Appium Server \nAppium is a server written in Node.js. It can be built and installed  from\nsource \nor installed directly from NPM:  $ npm install -g appium\n$ appium  Appium Clients \nThere are client libraries (in Java, Ruby, Python, PHP, JavaScript, and C#)\nwhich support Appium's extensions to the WebDriver protocol. When using Appium,\nyou want to use these client libraries instead of your regular WebDriver\nclient. You can view the full list of libraries here .  Appium Desktop \nThere is a GUI wrapper around the Appium server that can be downloaded for any\nplatform.  It comes bundled with everything required to run the Appium server,\nso you don't need to worry about Node. It also comes with an Inspector, which\nenables you to check out the hierarchy of your app. This can come in handy when\nwriting tests.",
            "title": "Appium Concepts"
        },
        {
            "location": "/en/about-appium/intro/#getting-started",
            "text": "Congratulations! You are now armed with enough knowledge to begin using Appium.\nWhy not head to the  getting started\ndoc  for more detailed requirements\nand instructions?",
            "title": "Getting Started"
        },
        {
            "location": "/en/about-appium/platform-support/",
            "text": "Appium Platform Support\n\n\nAppium supports a variety of platforms and testing modalities (native,\nhybrid, web, real devices, simulators, etc...). This document is designed to\nmake explicit the level of support and requirements for each of these.\n\n\niOS Support\n\n\niOS automation is supported with two drivers:\n\n\n\n\nThe \nXCUITest Driver\n\n\nThe (deprecated) \nUIAutomation Driver\n\n\n\n\nPlease refer to these driver docs for setup instructions.\n\n\n\n\nVersions: 9.0 and up (as a rule, Appium supports the latest two iOS versions)\n\n\nDevices: iPhone Simulator, iPad Simulator, and real iPhones and iPads\n\n\nNative app support: Yes, with debug version of .app (simulator),\n  or correctly-signed .ipa (real devices). Underlying support is provided by\n  Apple's \nXCUITest\n (or \nUIAutomation\n for older versions)\n  framework.\n\n\nMobile web support: Yes, via automation of mobile Safari. For real devices,\n  \nios-webkit-remote-debugger\n is required, and automation of native aspects of\n  the Safari interface is not possible. See the \nmobile web doc\n for instructions.\n\n\nHybrid support: Yes. For real devices, ios-webkit-remote-debugger is\n  required. See the \nhybrid doc\n for instructions.\n\n\nSupport for automating multiple apps in one session: No\n\n\nSupport for automating multiple devices simultaneously: No\n\n\nSupport for automating vendor-provided or third-party apps: Only\n  vendor-provided apps (Preferences, Maps, etc...), and only on the simulator. For iOS 10+, you can automate the home screen as well.\n\n\nSupport for automating custom, non-standard UI controls: Minimal. You need to\n  set accessibility information on the control which enables some basic\n  automation.\n\n\n\n\nAndroid Support\n\n\nAndroid automation is supported with two drivers:\n\n\n\n\nThe \nUiAutomator2 Driver\n\n\nThe (deprecated) \nUiAutomator Driver\n\n\nThe (deprecated) \nSelendroid Driver\n\n\n\n\nPlease refer to these driver docs for setup instructions.\n\n\n\n\nVersions: 2.3 and up\n\n\nVersions 2.3 through 4.2 are supported via Appium's \nSelendroid Driver\n\n\nVersions 4.2 and up are supported via Appium's \nUiAutomator and UiAutomator2\n\n      libraries. UiAutomator is the default driver.\n\n\nDevices: Android emulators and real Android devices\n\n\nNative app support: Yes\n\n\nMobile web support: Yes (but not when using Selendroid backend). Automation\n  is effected using a bundled \nChromedriver\n\n  server as a proxy. With 4.2 and 4.3, automation works on official Chrome\n  browser or Chromium only. With 4.4+, automation also works on the built-in\n  \"Browser\" app. Chrome/Chromium/Browser must already be installed on the\n  device under test. See the \nmobile web doc\n for instructions.\n\n\nHybrid support: Yes. See the \nhybrid doc\n for instructions.\n\n\nWith default Appium automation backend: versions 4.4 and up\n\n\nWith Selendroid automation backend: versions 2.3 and up\n\n\nSupport for automating multiple apps in one session: Yes (but not when\n  using the Selendroid backend)\n\n\nSupport for automating multiple devices simultaneously: Yes,\n  though Appium must be started using different ports for the server\n   parameters \n--port\n, \n--bootstrap-port\n (or \n--selendroid-port\n) and/or\n  \n--chromedriver-port\n. See the \nserver args doc\n for more\n  information on these parameters.\n\n\nSupport for automating vendor-provided or third-party apps: Yes (but not\n  when using the Selendroid backend)\n\n\nSupport for automating custom, non-standard UI controls: No\n\n\n\n\nWindows Desktop Support\n\n\nSee the \nWindows Driver\n doc for details",
            "title": "Platform support"
        },
        {
            "location": "/en/about-appium/platform-support/#appium-platform-support",
            "text": "Appium supports a variety of platforms and testing modalities (native,\nhybrid, web, real devices, simulators, etc...). This document is designed to\nmake explicit the level of support and requirements for each of these.",
            "title": "Appium Platform Support"
        },
        {
            "location": "/en/about-appium/platform-support/#ios-support",
            "text": "iOS automation is supported with two drivers:   The  XCUITest Driver  The (deprecated)  UIAutomation Driver   Please refer to these driver docs for setup instructions.   Versions: 9.0 and up (as a rule, Appium supports the latest two iOS versions)  Devices: iPhone Simulator, iPad Simulator, and real iPhones and iPads  Native app support: Yes, with debug version of .app (simulator),\n  or correctly-signed .ipa (real devices). Underlying support is provided by\n  Apple's  XCUITest  (or  UIAutomation  for older versions)\n  framework.  Mobile web support: Yes, via automation of mobile Safari. For real devices,\n   ios-webkit-remote-debugger  is required, and automation of native aspects of\n  the Safari interface is not possible. See the  mobile web doc  for instructions.  Hybrid support: Yes. For real devices, ios-webkit-remote-debugger is\n  required. See the  hybrid doc  for instructions.  Support for automating multiple apps in one session: No  Support for automating multiple devices simultaneously: No  Support for automating vendor-provided or third-party apps: Only\n  vendor-provided apps (Preferences, Maps, etc...), and only on the simulator. For iOS 10+, you can automate the home screen as well.  Support for automating custom, non-standard UI controls: Minimal. You need to\n  set accessibility information on the control which enables some basic\n  automation.",
            "title": "iOS Support"
        },
        {
            "location": "/en/about-appium/platform-support/#android-support",
            "text": "Android automation is supported with two drivers:   The  UiAutomator2 Driver  The (deprecated)  UiAutomator Driver  The (deprecated)  Selendroid Driver   Please refer to these driver docs for setup instructions.   Versions: 2.3 and up  Versions 2.3 through 4.2 are supported via Appium's  Selendroid Driver  Versions 4.2 and up are supported via Appium's  UiAutomator and UiAutomator2 \n      libraries. UiAutomator is the default driver.  Devices: Android emulators and real Android devices  Native app support: Yes  Mobile web support: Yes (but not when using Selendroid backend). Automation\n  is effected using a bundled  Chromedriver \n  server as a proxy. With 4.2 and 4.3, automation works on official Chrome\n  browser or Chromium only. With 4.4+, automation also works on the built-in\n  \"Browser\" app. Chrome/Chromium/Browser must already be installed on the\n  device under test. See the  mobile web doc  for instructions.  Hybrid support: Yes. See the  hybrid doc  for instructions.  With default Appium automation backend: versions 4.4 and up  With Selendroid automation backend: versions 2.3 and up  Support for automating multiple apps in one session: Yes (but not when\n  using the Selendroid backend)  Support for automating multiple devices simultaneously: Yes,\n  though Appium must be started using different ports for the server\n   parameters  --port ,  --bootstrap-port  (or  --selendroid-port ) and/or\n   --chromedriver-port . See the  server args doc  for more\n  information on these parameters.  Support for automating vendor-provided or third-party apps: Yes (but not\n  when using the Selendroid backend)  Support for automating custom, non-standard UI controls: No",
            "title": "Android Support"
        },
        {
            "location": "/en/about-appium/platform-support/#windows-desktop-support",
            "text": "See the  Windows Driver  doc for details",
            "title": "Windows Desktop Support"
        },
        {
            "location": "/en/advanced-concepts/cross-domain-iframes/",
            "text": "Cross-domain iFrame Automation\n\n\nSame-origin policy\n prevents Appium from automating iFrames that have a different domain to the parent.\n\n\nSubdomain workaround\n\n\nIf the parent and the iFrame share the same domain (e.g. \nsite.com\n and \nshop.site.com\n), you can\nset \ndocument.domain\n on both the parent and each iFrame to a common domain. This solves the same-origin policy issue and allows automation. For example:\n\n\nParent:\n\n\n<html>\n  <head>\n    <script>\n      document.domain = 'site.com';\n    </script>\n  </head>\n  <body>\n    <iframe src=\"http://shop.site.com\" width=\"200\" height=\"200\"></iframe>\n  </body>\n</html>\n\n\n\n\nChild iFrame:\n\n\n<html>\n  <head>\n    <script>\n      document.domain = 'site.com';\n    </script>\n  </head>\n  <body>\n    <p>This is an iFrame!</p>\n  </body>\n</html>",
            "title": "Cross domain iframes"
        },
        {
            "location": "/en/advanced-concepts/cross-domain-iframes/#cross-domain-iframe-automation",
            "text": "Same-origin policy  prevents Appium from automating iFrames that have a different domain to the parent.",
            "title": "Cross-domain iFrame Automation"
        },
        {
            "location": "/en/advanced-concepts/cross-domain-iframes/#subdomain-workaround",
            "text": "If the parent and the iFrame share the same domain (e.g.  site.com  and  shop.site.com ), you can\nset  document.domain  on both the parent and each iFrame to a common domain. This solves the same-origin policy issue and allows automation. For example:  Parent:  <html>\n  <head>\n    <script>\n      document.domain = 'site.com';\n    </script>\n  </head>\n  <body>\n    <iframe src=\"http://shop.site.com\" width=\"200\" height=\"200\"></iframe>\n  </body>\n</html>  Child iFrame:  <html>\n  <head>\n    <script>\n      document.domain = 'site.com';\n    </script>\n  </head>\n  <body>\n    <p>This is an iFrame!</p>\n  </body>\n</html>",
            "title": "Subdomain workaround"
        },
        {
            "location": "/en/advanced-concepts/event-timings/",
            "text": "Appium Event Timing\n\n\nAppium comes with the ability to retrieve timing information about startup\ninformation and command length. This is an advanced feature that is controlled\nby the use of the \neventTimings\n capability (set it to \ntrue\n to log event\ntimings).\n\n\nWith this capability turned on, the \nGET /session/:id\n response (i.e., the\nresponse to \ndriver.getSessionDetails()\n or similar, depending on client) will\nbe decorated with an \nevents\n property. This is the structure of that \nevents\n\nproperty:\n\n\n{\n    \"<event_type>\": [<occurence_timestamp_1>, ...],\n    \"commands\": [\n        {\n            \"cmd\": \"<command_name>\",\n            \"startTime\": <js_timestamp>,\n            \"endTime\": <js_timestamp>\n        },\n        ...\n    ]\n}\n\n\n\n\nIn other words, the \nevents\n property has 2 kinds of properties of its own:\n\n\n\n\nProperties which are the names of event types\n\n\nThe \ncommands\n property\n\n\n\n\nProperties which are names of event types correspond to an array of timestamps\nwhen that event happened. It's an array because events might happen multiple\ntimes in the course of a session. Examples of event types include:\n\n\n\n\nnewSessionRequested\n\n\nnewSessionStarted\n\n\n\n\n(Individual drivers will define their own event types, so we do not have an\nexhaustive list to share here. It's best to actually get one of these responses\nfrom a real session to inspect the possible event types.)\n\n\nThe \ncommands\n property is an array of objects. Each object has the name of the\nAppium-internal command (for example \nclick\n), as well as the time the command\nstarted processing and the time it finished processing.\n\n\nWith this data, you can calculate the time between events, or a strict timeline\nof events, or statistical information about average length of a certain type of\ncommand, and so on.\n\n\nYou can only receive data about events that have happened when you make the\ncall to \n/session/:id\n, so the best time to get data about an entire session is\nright before quitting it.\n\n\nThe Appium team maintains an event timings parser tool that can be used to\ngenerate various kinds of reports from event timings output:\n\nappium/appium-event-parser\n.",
            "title": "Event timings"
        },
        {
            "location": "/en/advanced-concepts/event-timings/#appium-event-timing",
            "text": "Appium comes with the ability to retrieve timing information about startup\ninformation and command length. This is an advanced feature that is controlled\nby the use of the  eventTimings  capability (set it to  true  to log event\ntimings).  With this capability turned on, the  GET /session/:id  response (i.e., the\nresponse to  driver.getSessionDetails()  or similar, depending on client) will\nbe decorated with an  events  property. This is the structure of that  events \nproperty:  {\n    \"<event_type>\": [<occurence_timestamp_1>, ...],\n    \"commands\": [\n        {\n            \"cmd\": \"<command_name>\",\n            \"startTime\": <js_timestamp>,\n            \"endTime\": <js_timestamp>\n        },\n        ...\n    ]\n}  In other words, the  events  property has 2 kinds of properties of its own:   Properties which are the names of event types  The  commands  property   Properties which are names of event types correspond to an array of timestamps\nwhen that event happened. It's an array because events might happen multiple\ntimes in the course of a session. Examples of event types include:   newSessionRequested  newSessionStarted   (Individual drivers will define their own event types, so we do not have an\nexhaustive list to share here. It's best to actually get one of these responses\nfrom a real session to inspect the possible event types.)  The  commands  property is an array of objects. Each object has the name of the\nAppium-internal command (for example  click ), as well as the time the command\nstarted processing and the time it finished processing.  With this data, you can calculate the time between events, or a strict timeline\nof events, or statistical information about average length of a certain type of\ncommand, and so on.  You can only receive data about events that have happened when you make the\ncall to  /session/:id , so the best time to get data about an entire session is\nright before quitting it.  The Appium team maintains an event timings parser tool that can be used to\ngenerate various kinds of reports from event timings output: appium/appium-event-parser .",
            "title": "Appium Event Timing"
        },
        {
            "location": "/en/advanced-concepts/grid/",
            "text": "Selenium Grid\n\n\nYou are able to register your appium server with a local \nSelenium grid\n (\nsetup docs\n) by using the\n\n--nodeconfig\n server parameter.\n\n\n> appium --nodeconfig /path/to/nodeconfig.json\n# or, if running from source:\n> node . --nodeconfig /path/to/nodeconfig.json\n\n\n\n\nIn the node config file you have to define the \nbrowserName\n,\n\nversion\n and \nplatform\n and based on these parameters the grid\nwill re-direct your test to the right device. You will also need to\nconfigure your \nhost\n details and the \nselenium grid\n details. For\na full list of all parameters and descriptions look\n\nhere\n\n\nOnce you start the appium server and it registers with the grid,\nyou will see your device on the grid console page:\n\n\n\"http://\n\\<grid-ip-adress>\n:\n\\<grid-port>\n/grid/console\"\n\n\nGrid Node Configuration Example json file\n\n\n{\n  \"capabilities\":\n      [\n        {\n          \"browserName\": \"<e.g._iPhone5_or_iPad4>\",\n          \"version\":\"<version_of_iOS_e.g._7.1>\",\n          \"maxInstances\": 1,\n          \"platform\":\"<platform_e.g._MAC_or_ANDROID>\"\n        }\n      ],\n  \"configuration\":\n  {\n    \"cleanUpCycle\":2000,\n    \"timeout\":30000,\n    \"proxy\": \"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\n    \"url\":\"http://<host_name_appium_server_or_ip-address_appium_server>:<appium_port>/wd/hub\",\n    \"host\": <host_name_appium_server_or_ip-address_appium_server>,\n    \"port\": <appium_port>,\n    \"maxSession\": 1,\n    \"register\": true,\n    \"registerCycle\": 5000,\n    \"hubPort\": <grid_port>,\n    \"hubHost\": \"<Grid_host_name_or_grid_ip-address>\"\n  }\n}\n\n\n\n\nValid platforms are listed \nhere\n\n\nIf \nurl\n, \nhost\n, and \nport\n are not given, the config will be auto updated\nto point to localhost:whatever-port-Appium-started-on.\n\n\nIf your Appium server is running on a different machine to your Selenium Grid server, make sure you use an external name/IP address in your \nhost\n & \nurl\n docs; \nlocalhost\n and \n127.0.0.1\n will prevent Selenium Grid from connecting correctly.",
            "title": "Grid"
        },
        {
            "location": "/en/advanced-concepts/grid/#selenium-grid",
            "text": "You are able to register your appium server with a local  Selenium grid  ( setup docs ) by using the --nodeconfig  server parameter.  > appium --nodeconfig /path/to/nodeconfig.json\n# or, if running from source:\n> node . --nodeconfig /path/to/nodeconfig.json  In the node config file you have to define the  browserName , version  and  platform  and based on these parameters the grid\nwill re-direct your test to the right device. You will also need to\nconfigure your  host  details and the  selenium grid  details. For\na full list of all parameters and descriptions look here  Once you start the appium server and it registers with the grid,\nyou will see your device on the grid console page:  \"http:// \\<grid-ip-adress> : \\<grid-port> /grid/console\"",
            "title": "Selenium Grid"
        },
        {
            "location": "/en/advanced-concepts/grid/#grid-node-configuration-example-json-file",
            "text": "{\n  \"capabilities\":\n      [\n        {\n          \"browserName\": \"<e.g._iPhone5_or_iPad4>\",\n          \"version\":\"<version_of_iOS_e.g._7.1>\",\n          \"maxInstances\": 1,\n          \"platform\":\"<platform_e.g._MAC_or_ANDROID>\"\n        }\n      ],\n  \"configuration\":\n  {\n    \"cleanUpCycle\":2000,\n    \"timeout\":30000,\n    \"proxy\": \"org.openqa.grid.selenium.proxy.DefaultRemoteProxy\",\n    \"url\":\"http://<host_name_appium_server_or_ip-address_appium_server>:<appium_port>/wd/hub\",\n    \"host\": <host_name_appium_server_or_ip-address_appium_server>,\n    \"port\": <appium_port>,\n    \"maxSession\": 1,\n    \"register\": true,\n    \"registerCycle\": 5000,\n    \"hubPort\": <grid_port>,\n    \"hubHost\": \"<Grid_host_name_or_grid_ip-address>\"\n  }\n}  Valid platforms are listed  here  If  url ,  host , and  port  are not given, the config will be auto updated\nto point to localhost:whatever-port-Appium-started-on.  If your Appium server is running on a different machine to your Selenium Grid server, make sure you use an external name/IP address in your  host  &  url  docs;  localhost  and  127.0.0.1  will prevent Selenium Grid from connecting correctly.",
            "title": "Grid Node Configuration Example json file"
        },
        {
            "location": "/en/advanced-concepts/migrating-to-xcuitest/",
            "text": "Migrating your iOS tests from UIAutomation (iOS 9.3 and below) to XCUITest (iOS 9.3 and up)\n\n\nFor iOS automation, Appium relies on system frameworks provided by Apple. For iOS 9.2 and below, Apple's only automation technology was called UIAutomation, and it ran in the context of a process called \"Instruments\". As of iOS 10, Apple has completely removed the UIAutomation instrument, thus making it impossible for Appium to allow testing in the way it used to. Fortunately, Apple introduced a new automation technology, called XCUITest, beginning with iOS 9.3. For iOS 10 and up, this will be the only supported automation framework from Apple.\n\n\nAppium has built in support for XCUITest beginning with Appium 1.6. For the most part, the capabilities of XCUITest match those of UIAutomation, and so the Appium team was able to ensure that test behavior will stay the same. This is one of the great things about using Appium! Even with Apple completely changing the technology your tests are using, your scripts can stay mostly the same! That being said, there are some differences you'll need to be aware of which might require modification of your test scripts if you want to run them under our XCUITest automation backend. This document will help you with those differences.\n\n\nElement class name schema\n\n\nWith XCUITest, Apple has given different class names to the UI elements which make up the view hierarchy. For example, \nUIAButton\n is now \nXCUIElementTypeButton\n. In many cases, there is a direct mapping between these two classes. If you use the \nclass name\n locator strategy to find elements, Appium 1.6 will rewrite the selector for you. Likewise, if you use the \nxpath\n locator strategy, Appium 1.6 will find any \nUIA*\n elements in your XPath string and rewrite them appropriately.\n\n\nThis does not however guarantee that your tests will work exactly the same, for two reasons:\n\n\n\n\nThe application hierarchy reported to Appium will not necessarily be identical within XCUITest to what it was within UIAutomation. If you have a path-based XPath selector, it may need to be adjusted.\n\n\nThe list of class names is not entirely identical either. Many elements are returned by XCUITest as belonging to the \nXCUIElementTypeOther\n class, a sort of catch-all container.\n\n\n\n\nPage source\n\n\nAs mentioned just above, if you rely on the app source XML from the \npage source\n command, the XML output will now differ significantly from what it was under UIAutomation.\n\n\n-ios uiautomation\n locator strategy\n\n\nThis locator strategy was specifically built on UIAutomation, so it is not included in the XCUITest automation backend. We will be working on a similar \"native\"-type locator strategy in coming releases.\n\n\nxpath\n locator strategy\n\n\n\n\nTry not to use XPath locators unless there is absolutely no other alternatives. In general, xpath locators might be times slower, than other types of locators like accessibility id, class name and predicate (up to 100 times slower in some special cases). They are so slow, because xpath location is not natively supported by Apple's XCTest framework.\n\n\nUse\n\n\n\n\ndriver.findElement(x)\n\n\n\n\ncall instead of\n\n\ndriver.findElements(x)[0]\n\n\n\n\nto lookup single element by xpath. The more possible UI elements are matched by your locator the slower it is.\n3. Be very specific when locating elements by xpath. Such locators like\n\n\n//*\n\n\n\n\nmay take minutes to complete depending on how many UI elements your application has (e. g.\n\n\ndriver.findElement(By.xpath(\"//XCUIElementTypeButton[@value='blabla']\"))\n\n\n\n\nis faster than\n\n\ndriver.findElement(By.xpath(\"//*[@value='blabla']\"))\n\n\n\n\nor\n\n\ndriver.findElement(By.xpath(\"//XCUIElementTypeButton\")))\n\n\n\n\n\n\nIn most cases it would be faster to perform multiple nested findElement calls than to perform a single call by xpath (e.g.\n\n\n\n\ndriver.findElement(x).findElement(y)\n\n\n\n\nis usually faster than\n\n\ndriver.findElement(z)\n\n\n\n\n\nwhere x and y are non-xpath locators and z is a xpath locator).\n\n\nSystem dependencies\n\n\nIn addition to the many gotchas that might come with upgrading any XCode installation (unrelated to Appium), Appium's XCUITest support requires a new system dependency: \nCarthage\n. Appium Doctor has now been updated to ensure that the \ncarthage\n binary is on your path.\n\n\nAPI differences\n\n\nUnfortunately, the XCUITest API and the UIAutomation API are not equivalent. In many cases (like with \ntap/click\n), the behavior is identical. But some features that were available in the UIAutomation backend are not yet available in the new XCUITest backend. These known lacking features include:\n\n Geolocation support (e.g., \ndriver.location\n)\n\n Shaking the device\n\n Locking the device\n\n Rotating the device (note that this is \nNOT\n device \norientation\n, which is supported)\n\n\nWe will endeavor to add these features back in future releases of Appium.\n\n\nScrolling and clicking\n\n\nIn the previous UIAutomation-based driver, if you tried to click on an element that wasn't in view, UIAutomation would scroll to the element automatically and then tap it. With XCUITest, this is no longer the case. You are now responsible for ensuring your element is in view before interacting with it (the same way a user would be responsible for the same).\n\n\nOther known issues\n\n\nFinally, a list of known issues with the initial 1.6 release (we'll strike through issues which have been resolved):\n\n\n\n\n~~Unable to interact with elements on devices in Landscape mode (https://github.com/appium/appium/issues/6994)~~\n\n\nshake\n is not implemented due to lack of support from Apple\n\n\nlock\n is not implemented due to lack of support from Apple\n\n\nSetting geo-location not supported due to lack of support from Apple\n\n\nThrough the TouchAction/MultiAction API, \nzoom\n gestures work but \npinch\n gestures do not, due to an Apple issue.\n\n\n~~Through the TouchAction/MultiAction API, \nswipe\n gestures are currently not supported, though they should be soon (https://github.com/appium/appium/issues/7573)~~\n\n\nThe capabilities \nautoAcceptAlerts\n and \nautoDismissAlerts\n do not currently work, and there is continued debate about whether we will be able to implement them in the future.\n\n\nThere is an issue with the iOS SDK such that PickerWheels built using certain API methods are not automatable by XCUITest. See https://github.com/appium/appium/issues/6962 for the workaround, to ensure your PickerWheels are built properly.\n\n\n\n\nAs far as possible, we will add the missing features and fix other known issues in future versions of Appium.",
            "title": "Migrating to xcuitest"
        },
        {
            "location": "/en/advanced-concepts/migrating-to-xcuitest/#migrating-your-ios-tests-from-uiautomation-ios-93-and-below-to-xcuitest-ios-93-and-up",
            "text": "For iOS automation, Appium relies on system frameworks provided by Apple. For iOS 9.2 and below, Apple's only automation technology was called UIAutomation, and it ran in the context of a process called \"Instruments\". As of iOS 10, Apple has completely removed the UIAutomation instrument, thus making it impossible for Appium to allow testing in the way it used to. Fortunately, Apple introduced a new automation technology, called XCUITest, beginning with iOS 9.3. For iOS 10 and up, this will be the only supported automation framework from Apple.  Appium has built in support for XCUITest beginning with Appium 1.6. For the most part, the capabilities of XCUITest match those of UIAutomation, and so the Appium team was able to ensure that test behavior will stay the same. This is one of the great things about using Appium! Even with Apple completely changing the technology your tests are using, your scripts can stay mostly the same! That being said, there are some differences you'll need to be aware of which might require modification of your test scripts if you want to run them under our XCUITest automation backend. This document will help you with those differences.",
            "title": "Migrating your iOS tests from UIAutomation (iOS 9.3 and below) to XCUITest (iOS 9.3 and up)"
        },
        {
            "location": "/en/advanced-concepts/migrating-to-xcuitest/#element-class-name-schema",
            "text": "With XCUITest, Apple has given different class names to the UI elements which make up the view hierarchy. For example,  UIAButton  is now  XCUIElementTypeButton . In many cases, there is a direct mapping between these two classes. If you use the  class name  locator strategy to find elements, Appium 1.6 will rewrite the selector for you. Likewise, if you use the  xpath  locator strategy, Appium 1.6 will find any  UIA*  elements in your XPath string and rewrite them appropriately.  This does not however guarantee that your tests will work exactly the same, for two reasons:   The application hierarchy reported to Appium will not necessarily be identical within XCUITest to what it was within UIAutomation. If you have a path-based XPath selector, it may need to be adjusted.  The list of class names is not entirely identical either. Many elements are returned by XCUITest as belonging to the  XCUIElementTypeOther  class, a sort of catch-all container.",
            "title": "Element class name schema"
        },
        {
            "location": "/en/advanced-concepts/migrating-to-xcuitest/#page-source",
            "text": "As mentioned just above, if you rely on the app source XML from the  page source  command, the XML output will now differ significantly from what it was under UIAutomation.",
            "title": "Page source"
        },
        {
            "location": "/en/advanced-concepts/migrating-to-xcuitest/#-ios-uiautomation-locator-strategy",
            "text": "This locator strategy was specifically built on UIAutomation, so it is not included in the XCUITest automation backend. We will be working on a similar \"native\"-type locator strategy in coming releases.",
            "title": "-ios uiautomation locator strategy"
        },
        {
            "location": "/en/advanced-concepts/migrating-to-xcuitest/#xpath-locator-strategy",
            "text": "Try not to use XPath locators unless there is absolutely no other alternatives. In general, xpath locators might be times slower, than other types of locators like accessibility id, class name and predicate (up to 100 times slower in some special cases). They are so slow, because xpath location is not natively supported by Apple's XCTest framework.  Use   driver.findElement(x)  call instead of  driver.findElements(x)[0]  to lookup single element by xpath. The more possible UI elements are matched by your locator the slower it is.\n3. Be very specific when locating elements by xpath. Such locators like  //*  may take minutes to complete depending on how many UI elements your application has (e. g.  driver.findElement(By.xpath(\"//XCUIElementTypeButton[@value='blabla']\"))  is faster than  driver.findElement(By.xpath(\"//*[@value='blabla']\"))  or  driver.findElement(By.xpath(\"//XCUIElementTypeButton\")))   In most cases it would be faster to perform multiple nested findElement calls than to perform a single call by xpath (e.g.   driver.findElement(x).findElement(y)  is usually faster than  driver.findElement(z)  where x and y are non-xpath locators and z is a xpath locator).",
            "title": "xpath locator strategy"
        },
        {
            "location": "/en/advanced-concepts/migrating-to-xcuitest/#system-dependencies",
            "text": "In addition to the many gotchas that might come with upgrading any XCode installation (unrelated to Appium), Appium's XCUITest support requires a new system dependency:  Carthage . Appium Doctor has now been updated to ensure that the  carthage  binary is on your path.",
            "title": "System dependencies"
        },
        {
            "location": "/en/advanced-concepts/migrating-to-xcuitest/#api-differences",
            "text": "Unfortunately, the XCUITest API and the UIAutomation API are not equivalent. In many cases (like with  tap/click ), the behavior is identical. But some features that were available in the UIAutomation backend are not yet available in the new XCUITest backend. These known lacking features include:  Geolocation support (e.g.,  driver.location )  Shaking the device  Locking the device  Rotating the device (note that this is  NOT  device  orientation , which is supported)  We will endeavor to add these features back in future releases of Appium.",
            "title": "API differences"
        },
        {
            "location": "/en/advanced-concepts/migrating-to-xcuitest/#scrolling-and-clicking",
            "text": "In the previous UIAutomation-based driver, if you tried to click on an element that wasn't in view, UIAutomation would scroll to the element automatically and then tap it. With XCUITest, this is no longer the case. You are now responsible for ensuring your element is in view before interacting with it (the same way a user would be responsible for the same).",
            "title": "Scrolling and clicking"
        },
        {
            "location": "/en/advanced-concepts/migrating-to-xcuitest/#other-known-issues",
            "text": "Finally, a list of known issues with the initial 1.6 release (we'll strike through issues which have been resolved):   ~~Unable to interact with elements on devices in Landscape mode (https://github.com/appium/appium/issues/6994)~~  shake  is not implemented due to lack of support from Apple  lock  is not implemented due to lack of support from Apple  Setting geo-location not supported due to lack of support from Apple  Through the TouchAction/MultiAction API,  zoom  gestures work but  pinch  gestures do not, due to an Apple issue.  ~~Through the TouchAction/MultiAction API,  swipe  gestures are currently not supported, though they should be soon (https://github.com/appium/appium/issues/7573)~~  The capabilities  autoAcceptAlerts  and  autoDismissAlerts  do not currently work, and there is continued debate about whether we will be able to implement them in the future.  There is an issue with the iOS SDK such that PickerWheels built using certain API methods are not automatable by XCUITest. See https://github.com/appium/appium/issues/6962 for the workaround, to ensure your PickerWheels are built properly.   As far as possible, we will add the missing features and fix other known issues in future versions of Appium.",
            "title": "Other known issues"
        },
        {
            "location": "/en/advanced-concepts/parallel_tests/",
            "text": "Parallel Android Tests\n\n\nAppium provides a way for users to automate multiple Android sessions on a single machine on single server instance. All it involves is starting Appium server on any available port.\n\n\nThe important capabilities:\n\n\n\n\nudid\n the device id\n\n\nchromeDriverPort\n the chromedriver port (if using webviews or chrome)\n\n\nsystemPort\n If you are using \nappium-uiautomator2-driver\n, set a different system port for each Appium instanceset with \nsystemPort\n capability since sometimes there can be a port conflict if different ports aren't used, such as in \nthis issue\n.\n\n\n\n\nParallel iOS Tests\n\n\nWith Xcode9 Appium supports parallel RealDevice and Simulator testing. Start your Appium Server on any available port.\n\n\nThe important capabilities:\n\n\nRealDevice\n\n\n\n\nudid\n the device id\n\n\nwdaLocalPort\n unique wdaPort, as WDA defaults to 8100\n\n\n\n\nSimulator\n\n\n\n\nudid\n simulator UDID,this can be retrieved from xcrun simctl list.\n\n\ndeviceName\n Simulator Name\n\n\nplatformVersion\n Simulator OS version\n\n\nwdaLocalPort\n unique wdaPort, as WDA defaults to 8100\n\n\n\n\nParallel Safari/Webview sessions are not working due to an Apple bug\n\n\nRefer: https://github.com/appium/appium/issues/9209\n\n\nParallel Safari Real device\n\n\n\n\nudid\n the device id\n\n\nwdaLocalPort\n unique wdaPort, as WDA defaults to 8100\n\n\nwebkitDebugProxyPort\n unique webKitProxy, as IWDP defaults to 27753",
            "title": "Parallel tests"
        },
        {
            "location": "/en/advanced-concepts/parallel_tests/#parallel-android-tests",
            "text": "Appium provides a way for users to automate multiple Android sessions on a single machine on single server instance. All it involves is starting Appium server on any available port.  The important capabilities:   udid  the device id  chromeDriverPort  the chromedriver port (if using webviews or chrome)  systemPort  If you are using  appium-uiautomator2-driver , set a different system port for each Appium instanceset with  systemPort  capability since sometimes there can be a port conflict if different ports aren't used, such as in  this issue .",
            "title": "Parallel Android Tests"
        },
        {
            "location": "/en/advanced-concepts/parallel_tests/#parallel-ios-tests",
            "text": "With Xcode9 Appium supports parallel RealDevice and Simulator testing. Start your Appium Server on any available port.  The important capabilities:",
            "title": "Parallel iOS Tests"
        },
        {
            "location": "/en/advanced-concepts/parallel_tests/#realdevice",
            "text": "udid  the device id  wdaLocalPort  unique wdaPort, as WDA defaults to 8100",
            "title": "RealDevice"
        },
        {
            "location": "/en/advanced-concepts/parallel_tests/#simulator",
            "text": "udid  simulator UDID,this can be retrieved from xcrun simctl list.  deviceName  Simulator Name  platformVersion  Simulator OS version  wdaLocalPort  unique wdaPort, as WDA defaults to 8100   Parallel Safari/Webview sessions are not working due to an Apple bug  Refer: https://github.com/appium/appium/issues/9209",
            "title": "Simulator"
        },
        {
            "location": "/en/advanced-concepts/parallel_tests/#parallel-safari-real-device",
            "text": "udid  the device id  wdaLocalPort  unique wdaPort, as WDA defaults to 8100  webkitDebugProxyPort  unique webKitProxy, as IWDP defaults to 27753",
            "title": "Parallel Safari Real device"
        },
        {
            "location": "/en/advanced-concepts/settings/",
            "text": "Settings\n\n\nSettings are a new concept introduced by appium. They are currently not a part of the Mobile JSON Wire Protocol, or the Webdriver spec.\n\n\nSettings are a way to specify the behavior of the appium server.\n\n\nSettings are:\n - Mutable, they can be changed during a session\n - Only relevant during the session they are applied. They are reset for each new session.\n - Control the way the appium server behaves during test automation. They do not apply to controlling the app or device under test.\n\n\nAn example of a setting would be \nignoreUnimportantViews\n for Android. Android can be set to ignore elements in the View Hierarchy which it deems irrelevant. Setting this can cause tests to run faster. A user who \nwants\n to access the ignored elements however, would want to disable \nignoreUnimportantViews\n, and reenable it afterwards.\n\n\nAnother example of a use-case for settings would be telling appium to ignore elements which are not visible.\n\n\nSettings are implemented via the following API endpoints:\n\n\nPOST\n /session/:sessionId/appium/settings\n\n\n\n\nExpects a JSON hash of settings, where keys correspond to setting names, and values to the value of the setting.\n\n\n\n\n{\n  settings: {\n   ignoreUnimportantViews : true\n  }\n}\n\n\n\n\nGET\n /session/:sessionId/appium/settings\n\n\n\n\nReturns a JSON hash of all the currently specified settings.\n\n\n\n\n{\n  ignoreUnimportantViews : true\n}\n\n\n\n\nNote that the actual commands you would use in your test script differ based on the language; see the specific Appium client documention for more information.\n\n\nSupported Settings\n\n\n\"ignoreUnimportantViews\"\n - Boolean which sets whether Android devices should use \nsetCompressedLayoutHeirarchy()\n which ignores all views which are marked IMPORTANT_FOR_ACCESSIBILITY_NO or IMPORTANT_FOR_ACCESSIBILITY_AUTO (and have been deemed not important by the system), in an attempt to make things less confusing or faster.\n\n\nAndroid UiAutomator Configurator\n\n\nsets \nUiAutomator Configurator\n timeouts and delays in Android devices. only works in Android API 18 and above.\n\n\n\"actionAcknowledgmentTimeout\"\n - Int which is the same as \nsetActionAcknowledgmentTimeout\n. If a negative value is given, it would set to default(3 * 1000 milliseconds)\n\n\n\"keyInjectionDelay\"\n - Int which is the same as \nsetKeyInjectionDelay\n. If a negative value is given, it would set to default(0 milliseconds)\n\n\n\"scrollAcknowledgmentTimeout\"\n - Int which is the same as \nsetScrollAcknowledgmentTimeout\n. If a negative value is given, it would set to default(200 milliseconds)\n\n\n\"waitForIdleTimeout\"\n - Int which is the same as \nsetWaitForIdleTimeout\n. If a negative value is given, it would set to default(10 * 1000 milliseconds)\n\n\n\"waitForSelectorTimeout\"\n - Int which is the same as \nsetWaitForSelectorTimeout\n. If a negative value is given, it would set to default(10 * 1000 milliseconds)",
            "title": "Settings"
        },
        {
            "location": "/en/advanced-concepts/settings/#settings",
            "text": "Settings are a new concept introduced by appium. They are currently not a part of the Mobile JSON Wire Protocol, or the Webdriver spec.  Settings are a way to specify the behavior of the appium server.  Settings are:\n - Mutable, they can be changed during a session\n - Only relevant during the session they are applied. They are reset for each new session.\n - Control the way the appium server behaves during test automation. They do not apply to controlling the app or device under test.  An example of a setting would be  ignoreUnimportantViews  for Android. Android can be set to ignore elements in the View Hierarchy which it deems irrelevant. Setting this can cause tests to run faster. A user who  wants  to access the ignored elements however, would want to disable  ignoreUnimportantViews , and reenable it afterwards.  Another example of a use-case for settings would be telling appium to ignore elements which are not visible.  Settings are implemented via the following API endpoints:  POST  /session/:sessionId/appium/settings   Expects a JSON hash of settings, where keys correspond to setting names, and values to the value of the setting.   {\n  settings: {\n   ignoreUnimportantViews : true\n  }\n}  GET  /session/:sessionId/appium/settings   Returns a JSON hash of all the currently specified settings.   {\n  ignoreUnimportantViews : true\n}  Note that the actual commands you would use in your test script differ based on the language; see the specific Appium client documention for more information.",
            "title": "Settings"
        },
        {
            "location": "/en/advanced-concepts/settings/#supported-settings",
            "text": "\"ignoreUnimportantViews\"  - Boolean which sets whether Android devices should use  setCompressedLayoutHeirarchy()  which ignores all views which are marked IMPORTANT_FOR_ACCESSIBILITY_NO or IMPORTANT_FOR_ACCESSIBILITY_AUTO (and have been deemed not important by the system), in an attempt to make things less confusing or faster.",
            "title": "Supported Settings"
        },
        {
            "location": "/en/advanced-concepts/settings/#android-uiautomator-configurator",
            "text": "sets  UiAutomator Configurator  timeouts and delays in Android devices. only works in Android API 18 and above.  \"actionAcknowledgmentTimeout\"  - Int which is the same as  setActionAcknowledgmentTimeout . If a negative value is given, it would set to default(3 * 1000 milliseconds)  \"keyInjectionDelay\"  - Int which is the same as  setKeyInjectionDelay . If a negative value is given, it would set to default(0 milliseconds)  \"scrollAcknowledgmentTimeout\"  - Int which is the same as  setScrollAcknowledgmentTimeout . If a negative value is given, it would set to default(200 milliseconds)  \"waitForIdleTimeout\"  - Int which is the same as  setWaitForIdleTimeout . If a negative value is given, it would set to default(10 * 1000 milliseconds)  \"waitForSelectorTimeout\"  - Int which is the same as  setWaitForSelectorTimeout . If a negative value is given, it would set to default(10 * 1000 milliseconds)",
            "title": "Android UiAutomator Configurator"
        },
        {
            "location": "/en/advanced-concepts/wda-custom-server/",
            "text": "How To Set Up And Customize WebDriverAgent Server\n\n\nAppium for iOS uses \nFacebook's WebDriverAgent\n\nas the automation backend. This backend is based on Apple's XCTest framework and shares all the\nknown problem that are present in XCTest. For some of them we have workarounds, but there\nare some that are hardly possible to workaround, for example https://github.com/facebook/WebDriverAgent/issues/507.\nThe approach described in this article enables you to have full control over how WDA is built, managed,\nand run on the device. This way you may fine-tune your automated tests in CI environment and make them more stable in\nlong-running perspective.\n\n\nImportant points:\n * The steps below are not necessary if default Appium capabilites are used.\n The server will do everything for you, however you won't have so much control over WDA.\n * It is mandatory to have SSH or physical access to the machine to which the device under test\n is connected.\n\n\nWDA Setup\n\n\nWebDriverAgent source is automically downloaded with Appium. The usual folder location\nin case Appium is installed via npm tool (\nnpm install -g appium\n) is\n/usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent\nIf this was a fresh install then it is also necessary to download third-party dependencies\n(\ncarthage\n tool is mandatory for this purpose: \nbrew install carthage\n):\n\n\ncd /usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent\n./Scripts/bootstrap.sh -d\n\n\n\n\nAlso, it might be necessary to create an empty folder for WDA resources:\n\n\nmkdir -p /usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent/Resources/WebDriverAgent.bundle\n\n\n\n\nNo futher confuguration steps are needed if you're going to execute your automated tests on\niOS Simulator.\n\n\nReal device, however, requires some more work to be done. Follow\n\nreal device configuration documentation\n\nto setup code signing. Also, you'll need to have iproxy tool installed:\n\n\nnpm install -g iproxy\n\n\n\n\nIn order to make sure that WDA source is configured properly:\n\n\n\n\nOpen /usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent/WebDriverAgent.xcodeproj\nin Xcode\n\n\nSelect \nWebDriverAgentRunner\n project\n\n\nSelect your real phone/Simulator you'd like to run automated tests on as build target\n\n\nSelect Product->Test from the main menu\n\n\n\n\nXcode should successfully build the project and install it on the real device/Simulator,\nso you'll see the icon of WebDriverAgentRunner application on the springboard.\n\n\nWDA Startup\n\n\nWebDriverAgent application acts as a REST server, which proxies external API requests to native XCTest calls\nfor your application under test. The server address will be \nlocalhost\n if you run your tests on Simulator\nor the actual phone IP address in case of real device. We use \niproxy\n to route network\nrequests to a real device from \nlocalhost\n via USB, which means one can use this tool to unify\nWDA network address for Simulator and for real device.\n\n\nThis helper class written in Java illustrates the main implementation details:\n\n\npublic class WDAServer {\n    private static final Logger log = ZLogger.getLog(WDAServer.class.getSimpleName());\n\n    private static final int MAX_REAL_DEVICE_RESTART_RETRIES = 1;\n    private static final Timedelta REAL_DEVICE_RUNNING_TIMEOUT = Timedelta.ofMinutes(4);\n    private static final Timedelta RESTART_TIMEOUT = Timedelta.ofMinutes(1);\n\n    // These settings are needed to properly sign WDA for real device tests\n    // See https://github.com/appium/appium-xcuitest-driver for more details\n    private static final File KEYCHAIN = new File(String.format(\"%s/%s\",\n            System.getProperty(\"user.home\"), \"/Library/Keychains/MyKeychain.keychain\"));\n    private static final String KEYCHAIN_PASSWORD = \"******\";\n\n    private static final File IPROXY_EXECUTABLE = new File(\"/usr/local/bin/iproxy\");\n    private static final File XCODEBUILD_EXECUTABLE = new File(\"/usr/bin/xcodebuild\");\n    private static final File WDA_PROJECT =\n            new File(\"/usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/\" +\n                    \"WebDriverAgent/WebDriverAgent.xcodeproj\");\n    private static final String WDA_SCHEME = \"WebDriverAgentRunner\";\n    private static final String WDA_CONFIGURATION = \"Debug\";\n    private static final File XCODEBUILD_LOG = new File(\"/usr/local/var/log/appium/build.log\");\n    private static final File IPROXY_LOG = new File(\"/usr/local/var/log/appium/iproxy.log\");\n\n    private static final int PORT = 8100;\n    public static final String SERVER_URL = String.format(\"http://127.0.0.1:%d\", PORT);\n\n    private static final String[] IPROXY_CMDLINE = new String[]{\n            IPROXY_EXECUTABLE.getAbsolutePath(),\n            Integer.toString(PORT),\n            Integer.toString(PORT),\n            String.format(\"> %s 2>&1 &\", IPROXY_LOG.getAbsolutePath())\n    };\n\n    private static WDAServer instance = null;\n    private final boolean isRealDevice;\n    private final String deviceId;\n    private final String platformVersion;\n    private int failedRestartRetriesCount = 0;\n\n    private WDAServer() {\n        try {\n            this.isRealDevice = !getIsSimulatorFromConfig(getClass());\n            final String udid;\n            if (isRealDevice) {\n                udid = IOSRealDeviceHelpers.getUDID();\n            } else {\n                udid = IOSSimulatorHelpers.getId();\n            }\n            this.deviceId = udid;\n            this.platformVersion = getPlatformVersionFromConfig(getClass());\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n        ensureToolsExistence();\n        ensureParentDirExistence();\n    }\n\n    public synchronized static WDAServer getInstance() {\n        if (instance == null) {\n            instance = new WDAServer();\n        }\n        return instance;\n    }\n\n    private boolean waitUntilIsRunning(Timedelta timeout) throws Exception {\n        final URL status = new URL(SERVER_URL + \"/status\");\n        try {\n            if (timeout.asSeconds() > 5) {\n                log.debug(String.format(\"Waiting max %s until WDA server starts responding...\", timeout));\n            }\n            new UrlChecker().waitUntilAvailable(timeout.asMillis(), TimeUnit.MILLISECONDS, status);\n            return true;\n        } catch (UrlChecker.TimeoutException e) {\n            return false;\n        }\n    }\n\n    private static void ensureParentDirExistence() {\n        if (!XCODEBUILD_LOG.getParentFile().exists()) {\n            if (!XCODEBUILD_LOG.getParentFile().mkdirs()) {\n                throw new IllegalStateException(String.format(\n                        \"The script has failed to create '%s' folder for Appium logs. \" +\n                                \"Please make sure your account has correct access permissions on the parent folder(s)\",\n                        XCODEBUILD_LOG.getParentFile().getAbsolutePath()));\n            }\n        }\n    }\n\n    private void ensureToolsExistence() {\n        if (isRealDevice && !IPROXY_EXECUTABLE.exists()) {\n            throw new IllegalStateException(String.format(\"%s tool is expected to be installed (`npm install -g iproxy`)\",\n                    IPROXY_EXECUTABLE.getAbsolutePath()));\n        }\n        if (!XCODEBUILD_EXECUTABLE.exists()) {\n            throw new IllegalStateException(String.format(\"xcodebuild tool is not detected on the current system at %s\",\n                    XCODEBUILD_EXECUTABLE.getAbsolutePath()));\n        }\n        if (!WDA_PROJECT.exists()) {\n            throw new IllegalStateException(String.format(\"WDA project is expected to exist at %s\",\n                    WDA_PROJECT.getAbsolutePath()));\n        }\n    }\n\n    private List<String> generateXcodebuildCmdline() {\n        final List<String> result = new ArrayList<>();\n        result.add(XCODEBUILD_EXECUTABLE.getAbsolutePath());\n        result.add(\"clean build test\");\n        result.add(String.format(\"-project %s\", WDA_PROJECT.getAbsolutePath()));\n        result.add(String.format(\"-scheme %s\", WDA_SCHEME));\n        result.add(String.format(\"-destination id=%s\", deviceId));\n        result.add(String.format(\"-configuration %s\", WDA_CONFIGURATION));\n        result.add(String.format(\"IPHONEOS_DEPLOYMENT_TARGET=%s\", platformVersion));\n        result.add(String.format(\"> %s 2>&1 &\", XCODEBUILD_LOG.getAbsolutePath()));\n        return result;\n    }\n\n    private static List<String> generateKeychainUnlockCmdlines() throws Exception {\n        final List<String> result = new ArrayList<>();\n        result.add(String.format(\"/usr/bin/security -v list-keychains -s %s\", KEYCHAIN.getAbsolutePath()));\n        result.add(String.format(\"/usr/bin/security -v unlock-keychain -p %s %s\",\n                KEYCHAIN_PASSWORD, KEYCHAIN.getAbsolutePath()));\n        result.add(String.format(\"/usr/bin/security set-keychain-settings -t 3600 %s\", KEYCHAIN.getAbsolutePath()));\n        return result;\n    }\n\n    public synchronized void restart() throws Exception {\n        if (isRealDevice && failedRestartRetriesCount >= MAX_REAL_DEVICE_RESTART_RETRIES) {\n            throw new IllegalStateException(String.format(\n                    \"WDA server cannot start on the connected device with udid %s after %s retries. \" +\n                            \"Reboot the device manually and try again\", deviceId, MAX_REAL_DEVICE_RESTART_RETRIES));\n        }\n\n        final String hostname = InetAddress.getLocalHost().getHostName();\n        log.info(String.format(\"Trying to (re)start WDA server on %s:%s...\", hostname, PORT));\n        UnixProcessHelpers.killProcessesGracefully(IPROXY_EXECUTABLE.getName(), XCODEBUILD_EXECUTABLE.getName());\n\n        final File scriptFile = File.createTempFile(\"script\", \".sh\");\n        try {\n            final List<String> scriptContent = new ArrayList<>();\n            scriptContent.add(\"#!/bin/bash\");\n            if (isRealDevice && isRunningInJenkinsNetwork()) {\n                scriptContent.add(String.join(\"\\n\", generateKeychainUnlockCmdlines()));\n            }\n            if (isRealDevice) {\n                scriptContent.add(String.join(\" \", IPROXY_CMDLINE));\n            }\n            final String wdaBuildCmdline = String.join(\" \", generateXcodebuildCmdline());\n            log.debug(String.format(\"Building WDA with command line:\\n%s\\n\", wdaBuildCmdline));\n            scriptContent.add(wdaBuildCmdline);\n            try (Writer output = new BufferedWriter(new FileWriter(scriptFile))) {\n                output.write(String.join(\"\\n\", scriptContent));\n            }\n            new ProcessBuilder(\"/bin/chmod\", \"u+x\", scriptFile.getCanonicalPath())\n                    .redirectErrorStream(true).start().waitFor(5, TimeUnit.SECONDS);\n            final ProcessBuilder pb = new ProcessBuilder(\"/bin/bash\", scriptFile.getCanonicalPath());\n            final Map<String, String> env = pb.environment();\n            // This is needed for Jenkins\n            env.put(\"BUILD_ID\", \"dontKillMe\");\n            // This line is important. If USE_PORT environment variable is not set then WDA\n            // takes port number zero by default and won't accept any incoming requests\n            env.put(\"USE_PORT\", Integer.toString(PORT));\n            log.info(String.format(\"Waiting max %s for WDA to be (re)started on %s:%s...\", RESTART_TIMEOUT.toString(),\n                    hostname, PORT));\n            final Timedelta started = Timedelta.now();\n            pb.redirectErrorStream(true).start().waitFor(RESTART_TIMEOUT.asMillis(), TimeUnit.MILLISECONDS);\n            if (!waitUntilIsRunning(RESTART_TIMEOUT)) {\n                ++failedRestartRetriesCount;\n                throw new IllegalStateException(\n                        String.format(\"WDA server has failed to start after %s timeout on server '%s'.\\n\"\n                                        + \"Please make sure that iDevice is properly connected and you can build \"\n                                        + \"WDA manually from XCode.\\n\"\n                                        + \"Xcodebuild logs:\\n\\n%s\\n\\n\\niproxy logs:\\n\\n%s\\n\\n\\n\",\n                                RESTART_TIMEOUT, hostname,\n                                getLog(XCODEBUILD_LOG).orElse(\"EMPTY\"), getLog(IPROXY_LOG).orElse(\"EMPTY\"))\n                );\n            }\n\n            log.info(String.format(\"WDA server has been successfully (re)started after %s \" +\n                    \"and now is listening on %s:%s\", Timedelta.now().diff(started).toString(), hostname, PORT));\n        } finally {\n            scriptFile.delete();\n        }\n    }\n\n    public boolean isRunning() throws Exception {\n        if (!isProcessRunning(XCODEBUILD_EXECUTABLE.getName())\n                || (isRealDevice && !isProcessRunning(IPROXY_EXECUTABLE.getName()))) {\n            return false;\n        }\n        return waitUntilIsRunning(isRealDevice ? REAL_DEVICE_RUNNING_TIMEOUT : Timedelta.ofSeconds(3));\n    }\n\n    public Optional<String> getLog(File logFile) {\n        if (logFile.exists()) {\n            try {\n                return Optional.of(new String(Files.readAllBytes(logFile.toPath()), Charset.forName(\"UTF-8\")));\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return Optional.empty();\n    }\n}\n\n\n\n\nOne should call this piece of code before to start Appium iOS driver, for example, in setUp method:\n\n\n   if (!WDAServer.getInstance().isRunning()) {\n       WDAServer.getInstance().restart();\n   }\n\n\n\n\nIt is important to set \nwebDriverAgentUrl\n capability for Appium driver to let it know\nthat our WDA driver is ready for use:\n\n\n    capabilities.setCapability(\"webDriverAgentUrl\", WDAServer.SERVER_URL);\n\n\n\n\nImportant Notes\n\n\n\n\nThe process does not have direct access to keychain if it is executed by Jenkins agent,\n so we need to prepare keychain before compiling WDA for real device, otherwise codesigning will fail\n\n\nWe kill xcodebuild and iproxy processes before restart to make sure compilation succeeds even\n if these are frozen\n\n\nWe prepare a separate bash script and detach iproxy/xcodebuild processes, so they can continue\n running in background even after the actual code execution is finished. This is extremely important\n if multiple tests/suites are executed on the same machine/node in automation lab, which requires minimum\n human interaction\n\n\nThe value of \nBUILD_ID\n environment variable is changed to avoid killing of the background process\n by Jenkins agent after the job is finished\n\n\nisRunning\n check is done by verifying the actual network endpoint\n\n\nThe output of daemonized processes is logged, so it is possible to track errors and unexpected failures.\n The content of the log files is automatically added to the actual error message if the server fails to (re)start.\n\n\nReal device id can be parsed from \nsystem_profiler SPUSBDataType\n output\n\n\nSimulator id can be parsed from \nxcrun simctl list\n output\n\n\nUrlChecker\n class is imported from org.openqa.selenium.net package",
            "title": "Wda custom server"
        },
        {
            "location": "/en/advanced-concepts/wda-custom-server/#how-to-set-up-and-customize-webdriveragent-server",
            "text": "Appium for iOS uses  Facebook's WebDriverAgent \nas the automation backend. This backend is based on Apple's XCTest framework and shares all the\nknown problem that are present in XCTest. For some of them we have workarounds, but there\nare some that are hardly possible to workaround, for example https://github.com/facebook/WebDriverAgent/issues/507.\nThe approach described in this article enables you to have full control over how WDA is built, managed,\nand run on the device. This way you may fine-tune your automated tests in CI environment and make them more stable in\nlong-running perspective.  Important points:\n * The steps below are not necessary if default Appium capabilites are used.\n The server will do everything for you, however you won't have so much control over WDA.\n * It is mandatory to have SSH or physical access to the machine to which the device under test\n is connected.",
            "title": "How To Set Up And Customize WebDriverAgent Server"
        },
        {
            "location": "/en/advanced-concepts/wda-custom-server/#wda-setup",
            "text": "WebDriverAgent source is automically downloaded with Appium. The usual folder location\nin case Appium is installed via npm tool ( npm install -g appium ) is\n/usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent\nIf this was a fresh install then it is also necessary to download third-party dependencies\n( carthage  tool is mandatory for this purpose:  brew install carthage ):  cd /usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent\n./Scripts/bootstrap.sh -d  Also, it might be necessary to create an empty folder for WDA resources:  mkdir -p /usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent/Resources/WebDriverAgent.bundle  No futher confuguration steps are needed if you're going to execute your automated tests on\niOS Simulator.  Real device, however, requires some more work to be done. Follow real device configuration documentation \nto setup code signing. Also, you'll need to have iproxy tool installed:  npm install -g iproxy  In order to make sure that WDA source is configured properly:   Open /usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent/WebDriverAgent.xcodeproj\nin Xcode  Select  WebDriverAgentRunner  project  Select your real phone/Simulator you'd like to run automated tests on as build target  Select Product->Test from the main menu   Xcode should successfully build the project and install it on the real device/Simulator,\nso you'll see the icon of WebDriverAgentRunner application on the springboard.",
            "title": "WDA Setup"
        },
        {
            "location": "/en/advanced-concepts/wda-custom-server/#wda-startup",
            "text": "WebDriverAgent application acts as a REST server, which proxies external API requests to native XCTest calls\nfor your application under test. The server address will be  localhost  if you run your tests on Simulator\nor the actual phone IP address in case of real device. We use  iproxy  to route network\nrequests to a real device from  localhost  via USB, which means one can use this tool to unify\nWDA network address for Simulator and for real device.  This helper class written in Java illustrates the main implementation details:  public class WDAServer {\n    private static final Logger log = ZLogger.getLog(WDAServer.class.getSimpleName());\n\n    private static final int MAX_REAL_DEVICE_RESTART_RETRIES = 1;\n    private static final Timedelta REAL_DEVICE_RUNNING_TIMEOUT = Timedelta.ofMinutes(4);\n    private static final Timedelta RESTART_TIMEOUT = Timedelta.ofMinutes(1);\n\n    // These settings are needed to properly sign WDA for real device tests\n    // See https://github.com/appium/appium-xcuitest-driver for more details\n    private static final File KEYCHAIN = new File(String.format(\"%s/%s\",\n            System.getProperty(\"user.home\"), \"/Library/Keychains/MyKeychain.keychain\"));\n    private static final String KEYCHAIN_PASSWORD = \"******\";\n\n    private static final File IPROXY_EXECUTABLE = new File(\"/usr/local/bin/iproxy\");\n    private static final File XCODEBUILD_EXECUTABLE = new File(\"/usr/bin/xcodebuild\");\n    private static final File WDA_PROJECT =\n            new File(\"/usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/\" +\n                    \"WebDriverAgent/WebDriverAgent.xcodeproj\");\n    private static final String WDA_SCHEME = \"WebDriverAgentRunner\";\n    private static final String WDA_CONFIGURATION = \"Debug\";\n    private static final File XCODEBUILD_LOG = new File(\"/usr/local/var/log/appium/build.log\");\n    private static final File IPROXY_LOG = new File(\"/usr/local/var/log/appium/iproxy.log\");\n\n    private static final int PORT = 8100;\n    public static final String SERVER_URL = String.format(\"http://127.0.0.1:%d\", PORT);\n\n    private static final String[] IPROXY_CMDLINE = new String[]{\n            IPROXY_EXECUTABLE.getAbsolutePath(),\n            Integer.toString(PORT),\n            Integer.toString(PORT),\n            String.format(\"> %s 2>&1 &\", IPROXY_LOG.getAbsolutePath())\n    };\n\n    private static WDAServer instance = null;\n    private final boolean isRealDevice;\n    private final String deviceId;\n    private final String platformVersion;\n    private int failedRestartRetriesCount = 0;\n\n    private WDAServer() {\n        try {\n            this.isRealDevice = !getIsSimulatorFromConfig(getClass());\n            final String udid;\n            if (isRealDevice) {\n                udid = IOSRealDeviceHelpers.getUDID();\n            } else {\n                udid = IOSSimulatorHelpers.getId();\n            }\n            this.deviceId = udid;\n            this.platformVersion = getPlatformVersionFromConfig(getClass());\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n        ensureToolsExistence();\n        ensureParentDirExistence();\n    }\n\n    public synchronized static WDAServer getInstance() {\n        if (instance == null) {\n            instance = new WDAServer();\n        }\n        return instance;\n    }\n\n    private boolean waitUntilIsRunning(Timedelta timeout) throws Exception {\n        final URL status = new URL(SERVER_URL + \"/status\");\n        try {\n            if (timeout.asSeconds() > 5) {\n                log.debug(String.format(\"Waiting max %s until WDA server starts responding...\", timeout));\n            }\n            new UrlChecker().waitUntilAvailable(timeout.asMillis(), TimeUnit.MILLISECONDS, status);\n            return true;\n        } catch (UrlChecker.TimeoutException e) {\n            return false;\n        }\n    }\n\n    private static void ensureParentDirExistence() {\n        if (!XCODEBUILD_LOG.getParentFile().exists()) {\n            if (!XCODEBUILD_LOG.getParentFile().mkdirs()) {\n                throw new IllegalStateException(String.format(\n                        \"The script has failed to create '%s' folder for Appium logs. \" +\n                                \"Please make sure your account has correct access permissions on the parent folder(s)\",\n                        XCODEBUILD_LOG.getParentFile().getAbsolutePath()));\n            }\n        }\n    }\n\n    private void ensureToolsExistence() {\n        if (isRealDevice && !IPROXY_EXECUTABLE.exists()) {\n            throw new IllegalStateException(String.format(\"%s tool is expected to be installed (`npm install -g iproxy`)\",\n                    IPROXY_EXECUTABLE.getAbsolutePath()));\n        }\n        if (!XCODEBUILD_EXECUTABLE.exists()) {\n            throw new IllegalStateException(String.format(\"xcodebuild tool is not detected on the current system at %s\",\n                    XCODEBUILD_EXECUTABLE.getAbsolutePath()));\n        }\n        if (!WDA_PROJECT.exists()) {\n            throw new IllegalStateException(String.format(\"WDA project is expected to exist at %s\",\n                    WDA_PROJECT.getAbsolutePath()));\n        }\n    }\n\n    private List<String> generateXcodebuildCmdline() {\n        final List<String> result = new ArrayList<>();\n        result.add(XCODEBUILD_EXECUTABLE.getAbsolutePath());\n        result.add(\"clean build test\");\n        result.add(String.format(\"-project %s\", WDA_PROJECT.getAbsolutePath()));\n        result.add(String.format(\"-scheme %s\", WDA_SCHEME));\n        result.add(String.format(\"-destination id=%s\", deviceId));\n        result.add(String.format(\"-configuration %s\", WDA_CONFIGURATION));\n        result.add(String.format(\"IPHONEOS_DEPLOYMENT_TARGET=%s\", platformVersion));\n        result.add(String.format(\"> %s 2>&1 &\", XCODEBUILD_LOG.getAbsolutePath()));\n        return result;\n    }\n\n    private static List<String> generateKeychainUnlockCmdlines() throws Exception {\n        final List<String> result = new ArrayList<>();\n        result.add(String.format(\"/usr/bin/security -v list-keychains -s %s\", KEYCHAIN.getAbsolutePath()));\n        result.add(String.format(\"/usr/bin/security -v unlock-keychain -p %s %s\",\n                KEYCHAIN_PASSWORD, KEYCHAIN.getAbsolutePath()));\n        result.add(String.format(\"/usr/bin/security set-keychain-settings -t 3600 %s\", KEYCHAIN.getAbsolutePath()));\n        return result;\n    }\n\n    public synchronized void restart() throws Exception {\n        if (isRealDevice && failedRestartRetriesCount >= MAX_REAL_DEVICE_RESTART_RETRIES) {\n            throw new IllegalStateException(String.format(\n                    \"WDA server cannot start on the connected device with udid %s after %s retries. \" +\n                            \"Reboot the device manually and try again\", deviceId, MAX_REAL_DEVICE_RESTART_RETRIES));\n        }\n\n        final String hostname = InetAddress.getLocalHost().getHostName();\n        log.info(String.format(\"Trying to (re)start WDA server on %s:%s...\", hostname, PORT));\n        UnixProcessHelpers.killProcessesGracefully(IPROXY_EXECUTABLE.getName(), XCODEBUILD_EXECUTABLE.getName());\n\n        final File scriptFile = File.createTempFile(\"script\", \".sh\");\n        try {\n            final List<String> scriptContent = new ArrayList<>();\n            scriptContent.add(\"#!/bin/bash\");\n            if (isRealDevice && isRunningInJenkinsNetwork()) {\n                scriptContent.add(String.join(\"\\n\", generateKeychainUnlockCmdlines()));\n            }\n            if (isRealDevice) {\n                scriptContent.add(String.join(\" \", IPROXY_CMDLINE));\n            }\n            final String wdaBuildCmdline = String.join(\" \", generateXcodebuildCmdline());\n            log.debug(String.format(\"Building WDA with command line:\\n%s\\n\", wdaBuildCmdline));\n            scriptContent.add(wdaBuildCmdline);\n            try (Writer output = new BufferedWriter(new FileWriter(scriptFile))) {\n                output.write(String.join(\"\\n\", scriptContent));\n            }\n            new ProcessBuilder(\"/bin/chmod\", \"u+x\", scriptFile.getCanonicalPath())\n                    .redirectErrorStream(true).start().waitFor(5, TimeUnit.SECONDS);\n            final ProcessBuilder pb = new ProcessBuilder(\"/bin/bash\", scriptFile.getCanonicalPath());\n            final Map<String, String> env = pb.environment();\n            // This is needed for Jenkins\n            env.put(\"BUILD_ID\", \"dontKillMe\");\n            // This line is important. If USE_PORT environment variable is not set then WDA\n            // takes port number zero by default and won't accept any incoming requests\n            env.put(\"USE_PORT\", Integer.toString(PORT));\n            log.info(String.format(\"Waiting max %s for WDA to be (re)started on %s:%s...\", RESTART_TIMEOUT.toString(),\n                    hostname, PORT));\n            final Timedelta started = Timedelta.now();\n            pb.redirectErrorStream(true).start().waitFor(RESTART_TIMEOUT.asMillis(), TimeUnit.MILLISECONDS);\n            if (!waitUntilIsRunning(RESTART_TIMEOUT)) {\n                ++failedRestartRetriesCount;\n                throw new IllegalStateException(\n                        String.format(\"WDA server has failed to start after %s timeout on server '%s'.\\n\"\n                                        + \"Please make sure that iDevice is properly connected and you can build \"\n                                        + \"WDA manually from XCode.\\n\"\n                                        + \"Xcodebuild logs:\\n\\n%s\\n\\n\\niproxy logs:\\n\\n%s\\n\\n\\n\",\n                                RESTART_TIMEOUT, hostname,\n                                getLog(XCODEBUILD_LOG).orElse(\"EMPTY\"), getLog(IPROXY_LOG).orElse(\"EMPTY\"))\n                );\n            }\n\n            log.info(String.format(\"WDA server has been successfully (re)started after %s \" +\n                    \"and now is listening on %s:%s\", Timedelta.now().diff(started).toString(), hostname, PORT));\n        } finally {\n            scriptFile.delete();\n        }\n    }\n\n    public boolean isRunning() throws Exception {\n        if (!isProcessRunning(XCODEBUILD_EXECUTABLE.getName())\n                || (isRealDevice && !isProcessRunning(IPROXY_EXECUTABLE.getName()))) {\n            return false;\n        }\n        return waitUntilIsRunning(isRealDevice ? REAL_DEVICE_RUNNING_TIMEOUT : Timedelta.ofSeconds(3));\n    }\n\n    public Optional<String> getLog(File logFile) {\n        if (logFile.exists()) {\n            try {\n                return Optional.of(new String(Files.readAllBytes(logFile.toPath()), Charset.forName(\"UTF-8\")));\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return Optional.empty();\n    }\n}  One should call this piece of code before to start Appium iOS driver, for example, in setUp method:     if (!WDAServer.getInstance().isRunning()) {\n       WDAServer.getInstance().restart();\n   }  It is important to set  webDriverAgentUrl  capability for Appium driver to let it know\nthat our WDA driver is ready for use:      capabilities.setCapability(\"webDriverAgentUrl\", WDAServer.SERVER_URL);",
            "title": "WDA Startup"
        },
        {
            "location": "/en/advanced-concepts/wda-custom-server/#important-notes",
            "text": "The process does not have direct access to keychain if it is executed by Jenkins agent,\n so we need to prepare keychain before compiling WDA for real device, otherwise codesigning will fail  We kill xcodebuild and iproxy processes before restart to make sure compilation succeeds even\n if these are frozen  We prepare a separate bash script and detach iproxy/xcodebuild processes, so they can continue\n running in background even after the actual code execution is finished. This is extremely important\n if multiple tests/suites are executed on the same machine/node in automation lab, which requires minimum\n human interaction  The value of  BUILD_ID  environment variable is changed to avoid killing of the background process\n by Jenkins agent after the job is finished  isRunning  check is done by verifying the actual network endpoint  The output of daemonized processes is logged, so it is possible to track errors and unexpected failures.\n The content of the log files is automatically added to the actual error message if the server fails to (re)start.  Real device id can be parsed from  system_profiler SPUSBDataType  output  Simulator id can be parsed from  xcrun simctl list  output  UrlChecker  class is imported from org.openqa.selenium.net package",
            "title": "Important Notes"
        },
        {
            "location": "/en/commands/example/",
            "text": "Template\n\n\nBrief description\n\n\nExample Usage\n\n\n// Java\nMobileElement el = driver.findElementByAccessibilityId(\"SomeId\");\nel.click();\n\n\n\n\n\n# Python\nel = self.driver.find_element_by_accessibility_id('SomeId')\nel.click();\n\n\n\n\n\n// Javascript\n// webdriver.io example\nawait driver.status();\n\n\n\n// wd example\nawait driver.status();\n\n\n\n\n\n# Ruby\n# Ruby Code here\n\n\n\n\n\n# PHP\n// PHP Code here\n\n\n\n\n\n// C#\n// CSharp Code here\n\n\n\n\n\nDescription\n\n\nAn indepth description of what this command does\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n1.2 to 9.3\n\n\n1.7 to 1.9\n\n\n1.1 to 9.9\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n1.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n8.0+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nNone\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nNone\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nNone\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nNone\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/element/:element_id/click\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session\n\n\n\n\n\n\nelement_id\n\n\nID of the element to blah blah blah\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nitem\n\n\nObject\n\n\nDescription of Item\n\n\n\n\n\n\nitem.1\n\n\nString\n\n\nItem One description\n\n\n\n\n\n\n\n\nResponse\n\n\nA generic release label (i.e. \"2.0rc3\") (\nstring\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification\n\n\nGoogle",
            "title": "Example"
        },
        {
            "location": "/en/commands/example/#template",
            "text": "Brief description",
            "title": "Template"
        },
        {
            "location": "/en/commands/example/#example-usage",
            "text": "// Java\nMobileElement el = driver.findElementByAccessibilityId(\"SomeId\");\nel.click();  # Python\nel = self.driver.find_element_by_accessibility_id('SomeId')\nel.click();  // Javascript\n// webdriver.io example\nawait driver.status();\n\n\n\n// wd example\nawait driver.status();  # Ruby\n# Ruby Code here  # PHP\n// PHP Code here  // C#\n// CSharp Code here",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/example/#description",
            "text": "An indepth description of what this command does",
            "title": "Description"
        },
        {
            "location": "/en/commands/example/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/example/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  1.2 to 9.3  1.7 to 1.9  1.1 to 9.9     UIAutomation  1.0 to 9.3  All  All    Android  UiAutomator2  8.0+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/example/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  github.com    Javascript (WebdriverIO)  None  webdriver.io    Javascript (WD)  None  github.com    Ruby  All  github.com    PHP  None  github.com    C#  None  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/example/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/example/#endpoint",
            "text": "POST /wd/hub/session/:session_id/element/:element_id/click",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/example/#url-parameters",
            "text": "name  description      session_id  ID of the session    element_id  ID of the element to blah blah blah",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/example/#json-parameters",
            "text": "name  type  description      item  Object  Description of Item    item.1  String  Item One description",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/example/#response",
            "text": "A generic release label (i.e. \"2.0rc3\") ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/example/#see-also",
            "text": "W3C Specification  JSONWP Specification  Google",
            "title": "See Also"
        },
        {
            "location": "/en/commands/status/",
            "text": "Status\n\n\nRetrieve the server\u2019s current status\n\n\nExample Usage\n\n\n// Java\n// TODO\n\n\n\n\n# Python\nselenium.webdriver.common.utils.is_url_connectable(port)\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.status();\n\n\n\n// wd example\nawait driver.status();\n\n\n\n\n\n# Ruby\n# TODO\n\n\n\n\n\n# PHP\n// TODO\n\n\n\n\n\n// C#\n// TODO\n\n\n\n\n\nDescription\n\n\nReturns information about whether a remote end is in a state in which it can create new sessions and can additionally include arbitrary meta information that is specific to the implementation.\n\n\nThe readiness state is represented by the ready property of the body, which is false if an attempt to create a session at the current time would fail. However, the value true does not guarantee that a New Session command will succeed.\n\n\nImplementations may optionally include additional meta information as part of the body, but the top-level properties ready and message are reserved and must not be overwritten.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/status\n\n\nURL Parameters\n\n\nNone\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nbuild.version\n\n\nstring\n\n\nA generic release label (i.e. \"2.0rc3\")\n\n\n\n\n\n\nbuild.revision\n\n\nstring\n\n\nThe revision of the local source control client from which the server was built\n\n\n\n\n\n\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Status"
        },
        {
            "location": "/en/commands/status/#status",
            "text": "Retrieve the server\u2019s current status",
            "title": "Status"
        },
        {
            "location": "/en/commands/status/#example-usage",
            "text": "// Java\n// TODO  # Python\nselenium.webdriver.common.utils.is_url_connectable(port)  // Javascript\n// webdriver.io example\ndriver.status();\n\n\n\n// wd example\nawait driver.status();  # Ruby\n# TODO  # PHP\n// TODO  // C#\n// TODO",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/status/#description",
            "text": "Returns information about whether a remote end is in a state in which it can create new sessions and can additionally include arbitrary meta information that is specific to the implementation.  The readiness state is represented by the ready property of the body, which is false if an attempt to create a session at the current time would fail. However, the value true does not guarantee that a New Session command will succeed.  Implementations may optionally include additional meta information as part of the body, but the top-level properties ready and message are reserved and must not be overwritten.",
            "title": "Description"
        },
        {
            "location": "/en/commands/status/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/status/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/status/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/status/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/status/#endpoint",
            "text": "GET /wd/hub/status",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/status/#url-parameters",
            "text": "None",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/status/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/status/#response",
            "text": "name  type  description      build.version  string  A generic release label (i.e. \"2.0rc3\")    build.revision  string  The revision of the local source control client from which the server was built",
            "title": "Response"
        },
        {
            "location": "/en/commands/status/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/context/get-context/",
            "text": "Get Current Context\n\n\nGet the current context in which Appium is running\n\n\nExample Usage\n\n\n// Java\nString context = driver.getContext();\n\n\n\n\n\n# Python\ncontext = driver.current_context\n# or\ncontext = driver.context\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet context = driver.context();\n\n\n\n// wd example\nlet context = await driver.currentContext();\n\n\n\n\n\n# Ruby\ncontext = @driver.current_context\n\n\n\n\n\n# PHP\n$context = $driver->context();\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nRetrieve the current context. This can be either \nNATIVE_APP\n for the native context, or a web view context, which will be:\n\n\n\n\niOS - \nWEBVIEW_<id>\n\n\nAndroid - \nWEBVIEW_<package name>\n\n\n\n\nFor information on contexts, see Appium's \nhybrid automation docs\n.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/context\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nThe name of the current context (\nString\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Get context"
        },
        {
            "location": "/en/commands/context/get-context/#get-current-context",
            "text": "Get the current context in which Appium is running",
            "title": "Get Current Context"
        },
        {
            "location": "/en/commands/context/get-context/#example-usage",
            "text": "// Java\nString context = driver.getContext();  # Python\ncontext = driver.current_context\n# or\ncontext = driver.context  // Javascript\n// webdriver.io example\nlet context = driver.context();\n\n\n\n// wd example\nlet context = await driver.currentContext();  # Ruby\ncontext = @driver.current_context  # PHP\n$context = $driver->context();  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/context/get-context/#description",
            "text": "Retrieve the current context. This can be either  NATIVE_APP  for the native context, or a web view context, which will be:   iOS -  WEBVIEW_<id>  Android -  WEBVIEW_<package name>   For information on contexts, see Appium's  hybrid automation docs .",
            "title": "Description"
        },
        {
            "location": "/en/commands/context/get-context/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/context/get-context/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/context/get-context/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/context/get-context/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/context/get-context/#endpoint",
            "text": "GET /wd/hub/session/:session_id/context",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/context/get-context/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/context/get-context/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/context/get-context/#response",
            "text": "The name of the current context ( String )",
            "title": "Response"
        },
        {
            "location": "/en/commands/context/get-context/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/context/get-contexts/",
            "text": "Get All Contexts\n\n\nGet all the contexts available to automate\n\n\nExample Usage\n\n\n// Java\nSet<String> contextNames = driver.getContextHandles();\n\n\n\n\n\n# Python\ncontexts = driver.contexts\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet contexts = driver.contexts();\n\n\n\n// wd example\nlet contexts = await driver.contexts();\n\n\n\n\n\n# Ruby\ncontexts = @driver.available_contexts\n\n\n\n\n\n# PHP\n$contexts = $driver->contexts();\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nRetrieve all the contexts available to be automated. This will include, at least, the native context. There can also be zero or more web view contexts. For information on the format of the context names, see the \nget context documentation\n.\n\n\nFor information on contexts, see Appium's \nhybrid automation docs\n.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/contexts\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nArray of the names of all available contexts (\nArray<String>\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Get contexts"
        },
        {
            "location": "/en/commands/context/get-contexts/#get-all-contexts",
            "text": "Get all the contexts available to automate",
            "title": "Get All Contexts"
        },
        {
            "location": "/en/commands/context/get-contexts/#example-usage",
            "text": "// Java\nSet<String> contextNames = driver.getContextHandles();  # Python\ncontexts = driver.contexts  // Javascript\n// webdriver.io example\nlet contexts = driver.contexts();\n\n\n\n// wd example\nlet contexts = await driver.contexts();  # Ruby\ncontexts = @driver.available_contexts  # PHP\n$contexts = $driver->contexts();  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/context/get-contexts/#description",
            "text": "Retrieve all the contexts available to be automated. This will include, at least, the native context. There can also be zero or more web view contexts. For information on the format of the context names, see the  get context documentation .  For information on contexts, see Appium's  hybrid automation docs .",
            "title": "Description"
        },
        {
            "location": "/en/commands/context/get-contexts/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/context/get-contexts/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/context/get-contexts/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/context/get-contexts/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/context/get-contexts/#endpoint",
            "text": "GET /wd/hub/session/:session_id/contexts",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/context/get-contexts/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/context/get-contexts/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/context/get-contexts/#response",
            "text": "Array of the names of all available contexts ( Array<String> )",
            "title": "Response"
        },
        {
            "location": "/en/commands/context/get-contexts/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/context/set-context/",
            "text": "Set Current Context\n\n\nSet the context being automated\n\n\nExample Usage\n\n\n// Java\nSet<String> contextNames = driver.getContextHandles();\ndriver.context(contextNames.toArray()[1]);\n// ...\ndriver.context(\"NATIVE_APP\");\n\n\n\n\n\n# Python\nwebview = driver.contexts[1]\ndriver.switch_to.context(webview)\n# ...\ndriver.switch_to.context('NATIVE_APP')\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet contexts = driver.contexts();\ndriver.context(contexts[1]);\n// ...\ndriver.context('NATIVE_APP');\n\n\n\n// wd example\nlet contexts = await driver.contexts();\nawait driver.context(contexts[1]);\n// ...\nawait driver.context('NATIVE_APP');\n\n\n\n\n\n# Ruby\nwebview = @driver.available_contexts[1]\n@driver.switch_to.context(webview)\n# ...\n@driver.switch_to.context('NATIVE_APP')\n\n\n\n\n\n# PHP\n$contexts = $driver->contexts();\n$driver->context($contexts[1]);\n// ...\n$driver->context('NATIVE_APP');\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nSet the current context to that passed in. If this is moving into a web view context it will involve attempting to connect to that web view:\n\n\n\n\niOS - attempt to connect to the application through the remote debugger\n\n\nAndroid - start a \nChromedriver\n\n    process and begin a session to connect to the web view\n\n\n\n\nFor information on contexts, see Appium's \nhybrid automation docs\n.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/context\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nThe name of the context to which to change\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Set context"
        },
        {
            "location": "/en/commands/context/set-context/#set-current-context",
            "text": "Set the context being automated",
            "title": "Set Current Context"
        },
        {
            "location": "/en/commands/context/set-context/#example-usage",
            "text": "// Java\nSet<String> contextNames = driver.getContextHandles();\ndriver.context(contextNames.toArray()[1]);\n// ...\ndriver.context(\"NATIVE_APP\");  # Python\nwebview = driver.contexts[1]\ndriver.switch_to.context(webview)\n# ...\ndriver.switch_to.context('NATIVE_APP')  // Javascript\n// webdriver.io example\nlet contexts = driver.contexts();\ndriver.context(contexts[1]);\n// ...\ndriver.context('NATIVE_APP');\n\n\n\n// wd example\nlet contexts = await driver.contexts();\nawait driver.context(contexts[1]);\n// ...\nawait driver.context('NATIVE_APP');  # Ruby\nwebview = @driver.available_contexts[1]\n@driver.switch_to.context(webview)\n# ...\n@driver.switch_to.context('NATIVE_APP')  # PHP\n$contexts = $driver->contexts();\n$driver->context($contexts[1]);\n// ...\n$driver->context('NATIVE_APP');  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/context/set-context/#description",
            "text": "Set the current context to that passed in. If this is moving into a web view context it will involve attempting to connect to that web view:   iOS - attempt to connect to the application through the remote debugger  Android - start a  Chromedriver \n    process and begin a session to connect to the web view   For information on contexts, see Appium's  hybrid automation docs .",
            "title": "Description"
        },
        {
            "location": "/en/commands/context/set-context/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/context/set-context/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/context/set-context/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/context/set-context/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/context/set-context/#endpoint",
            "text": "POST /wd/hub/session/:session_id/context",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/context/set-context/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/context/set-context/#json-parameters",
            "text": "name  type  description      name  String  The name of the context to which to change",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/context/set-context/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/context/set-context/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/app/background-app/",
            "text": "Background App\n\n\nSend the currently running app for this session to the background\n\n\nExample Usage\n\n\n// Java\ndriver.runAppInBackground(Duration.ofSeconds(10));\n\n\n\n\n\n# Python\nself.driver.background_app(10)\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.background(10);\n\n\n\n// wd example\nawait driver.backgroundApp(10);\n\n\n\n\n\n# Ruby\n@driver.background_app(10)\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/app/background\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nseconds\n\n\nnumber\n\n\nHow long to run app in background. Minimum resolution time is one second.\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Background app"
        },
        {
            "location": "/en/commands/device/app/background-app/#background-app",
            "text": "Send the currently running app for this session to the background",
            "title": "Background App"
        },
        {
            "location": "/en/commands/device/app/background-app/#example-usage",
            "text": "// Java\ndriver.runAppInBackground(Duration.ofSeconds(10));  # Python\nself.driver.background_app(10)  // Javascript\n// webdriver.io example\ndriver.background(10);\n\n\n\n// wd example\nawait driver.backgroundApp(10);  # Ruby\n@driver.background_app(10)  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/app/background-app/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/app/background-app/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/app/background-app/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/app/background-app/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/app/background-app/#endpoint",
            "text": "POST /session/:session_id/appium/app/background",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/app/background-app/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/app/background-app/#json-parameters",
            "text": "name  type  description      seconds  number  How long to run app in background. Minimum resolution time is one second.",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/app/background-app/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/app/background-app/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/app/close-app/",
            "text": "Close an App\n\n\nClose an app on device\n\n\nExample Usage\n\n\n// Java\ndriver.closeApp();\n\n\n\n\n\n# Python\nself.driver.close_app()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.close_app();\n\n\n\n// wd example\nawait driver.closeApp();\n\n\n\n\n\n# Ruby\n@driver.close_app()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/app/close\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Close app"
        },
        {
            "location": "/en/commands/device/app/close-app/#close-an-app",
            "text": "Close an app on device",
            "title": "Close an App"
        },
        {
            "location": "/en/commands/device/app/close-app/#example-usage",
            "text": "// Java\ndriver.closeApp();  # Python\nself.driver.close_app()  // Javascript\n// webdriver.io example\ndriver.close_app();\n\n\n\n// wd example\nawait driver.closeApp();  # Ruby\n@driver.close_app()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/app/close-app/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/app/close-app/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/app/close-app/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/app/close-app/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/app/close-app/#endpoint",
            "text": "POST /session/:session_id/appium/app/close",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/app/close-app/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/app/close-app/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/app/close-app/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/app/close-app/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/app/end-test-coverage/",
            "text": "End Test Coverage\n\n\nGet test coverage data\n\n\nExample Usage\n\n\n// Java\ndriver.endTestCoverage(\"Intent\", \"/path\");\n\n\n\n\n\n# Python\nself.driver.end_test_coverage(\"Intent\", \"/path\")\n\n\n\n\n\n// Not supported\n\n\n// wd example\nawait driver.endTestCoverageForApp(\"Intent\", \"/path\");\n\n\n\n\n\n# Ruby\n@driver.end_coverage(\"Intent\", \"/path\")\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nNone\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/app/end_test_coverage\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nintent\n\n\nstring\n\n\nIntent to broadcast\n\n\n\n\n\n\npath\n\n\nstring\n\n\nPath to .ec file\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "End test coverage"
        },
        {
            "location": "/en/commands/device/app/end-test-coverage/#end-test-coverage",
            "text": "Get test coverage data",
            "title": "End Test Coverage"
        },
        {
            "location": "/en/commands/device/app/end-test-coverage/#example-usage",
            "text": "// Java\ndriver.endTestCoverage(\"Intent\", \"/path\");  # Python\nself.driver.end_test_coverage(\"Intent\", \"/path\")  // Not supported\n\n\n// wd example\nawait driver.endTestCoverageForApp(\"Intent\", \"/path\");  # Ruby\n@driver.end_coverage(\"Intent\", \"/path\")  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/app/end-test-coverage/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/app/end-test-coverage/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/app/end-test-coverage/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All     Javascript (WD)  All  github.com    Ruby  None  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/app/end-test-coverage/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/app/end-test-coverage/#endpoint",
            "text": "POST /session/:session_id/appium/app/end_test_coverage",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/app/end-test-coverage/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/app/end-test-coverage/#json-parameters",
            "text": "name  type  description      intent  string  Intent to broadcast    path  string  Path to .ec file",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/app/end-test-coverage/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/app/end-test-coverage/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/app/get-app-strings/",
            "text": "Get App Strings\n\n\nGet app strings\n\n\nExample Usage\n\n\n// Java\nMap<String, String> appStrings = driver.getAppStringMap(\"en\", \"/path/to/file\");\n\n\n\n\n\n# Python\nappStrings = self.driver.app_strings(\"en\", \"/path/to/file\")\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet appStrings = driver.getAppStrings(\"en\");\n\n\n\n// wd example\nlet appStrings = await driver.getAppStrings();\n\n\n\n\n\n# Ruby\n@driver.app_strings(\"en\")\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/app/strings\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nlanguage\n\n\nstring\n\n\nLanguage code (optional)\n\n\n\n\n\n\nstringFile\n\n\nstring\n\n\nPath to the string file (optional)\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Get app strings"
        },
        {
            "location": "/en/commands/device/app/get-app-strings/#get-app-strings",
            "text": "Get app strings",
            "title": "Get App Strings"
        },
        {
            "location": "/en/commands/device/app/get-app-strings/#example-usage",
            "text": "// Java\nMap<String, String> appStrings = driver.getAppStringMap(\"en\", \"/path/to/file\");  # Python\nappStrings = self.driver.app_strings(\"en\", \"/path/to/file\")  // Javascript\n// webdriver.io example\nlet appStrings = driver.getAppStrings(\"en\");\n\n\n\n// wd example\nlet appStrings = await driver.getAppStrings();  # Ruby\n@driver.app_strings(\"en\")  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/app/get-app-strings/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/app/get-app-strings/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/app/get-app-strings/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/app/get-app-strings/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/app/get-app-strings/#endpoint",
            "text": "POST /session/:session_id/appium/app/strings",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/app/get-app-strings/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/app/get-app-strings/#json-parameters",
            "text": "name  type  description      language  string  Language code (optional)    stringFile  string  Path to the string file (optional)",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/app/get-app-strings/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/app/get-app-strings/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/app/install-app/",
            "text": "Install App\n\n\nInstall the given app onto the device\n\n\nExample Usage\n\n\n// Java\ndriver.installApp(\"/Users/johndoe/path/to/app.apk\");\n\n\n\n\n\n# Python\nself.driver.install_app('/Users/johndoe/path/to/app.apk');\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.installApp('/Users/johndoe/path/to/app.apk')\n\n\n\n// wd example\nawait driver.installAppOnDevice('/Users/johndoe/path/to/app.apk');\n\n\n\n\n\n# Ruby\n@driver.install_app('/Users/johndoe/path/to/app.apk');\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/device/install_app\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nappPath\n\n\nstring\n\n\nPath of the app being installed\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Install app"
        },
        {
            "location": "/en/commands/device/app/install-app/#install-app",
            "text": "Install the given app onto the device",
            "title": "Install App"
        },
        {
            "location": "/en/commands/device/app/install-app/#example-usage",
            "text": "// Java\ndriver.installApp(\"/Users/johndoe/path/to/app.apk\");  # Python\nself.driver.install_app('/Users/johndoe/path/to/app.apk');  // Javascript\n// webdriver.io example\ndriver.installApp('/Users/johndoe/path/to/app.apk')\n\n\n\n// wd example\nawait driver.installAppOnDevice('/Users/johndoe/path/to/app.apk');  # Ruby\n@driver.install_app('/Users/johndoe/path/to/app.apk');  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/app/install-app/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/app/install-app/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/app/install-app/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/app/install-app/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/app/install-app/#endpoint",
            "text": "POST /wd/hub/session/:session_id/device/install_app",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/app/install-app/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/app/install-app/#json-parameters",
            "text": "name  type  description      appPath  string  Path of the app being installed",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/app/install-app/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/app/install-app/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/app/is-app-installed/",
            "text": "Is App Installed\n\n\nCheck whether the specified app is installed on the device\n\n\nExample Usage\n\n\n// Java\ndriver.isAppInstalled(\"com.example.AppName\");\n\n\n\n\n\n# Python\nself.driver.is_app_installed('com.example.AppName');\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.isAppInstalled('com.example.AppName')\n\n\n\n// wd example\nawait driver.isAppInstalledOnDevice('com.example.AppName');\n\n\n\n\n\n# Ruby\n@driver.app_installed?('com.example.AppName');\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/device/app_installed\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nbundleId\n\n\nstring\n\n\niOS bundleID or Android package name\n\n\n\n\n\n\n\n\nResponse\n\n\nReturn true if installed, false if not (\nboolean\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Is app installed"
        },
        {
            "location": "/en/commands/device/app/is-app-installed/#is-app-installed",
            "text": "Check whether the specified app is installed on the device",
            "title": "Is App Installed"
        },
        {
            "location": "/en/commands/device/app/is-app-installed/#example-usage",
            "text": "// Java\ndriver.isAppInstalled(\"com.example.AppName\");  # Python\nself.driver.is_app_installed('com.example.AppName');  // Javascript\n// webdriver.io example\ndriver.isAppInstalled('com.example.AppName')\n\n\n\n// wd example\nawait driver.isAppInstalledOnDevice('com.example.AppName');  # Ruby\n@driver.app_installed?('com.example.AppName');  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/app/is-app-installed/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/app/is-app-installed/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/app/is-app-installed/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/app/is-app-installed/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/app/is-app-installed/#endpoint",
            "text": "POST /wd/hub/session/:session_id/device/app_installed",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/app/is-app-installed/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/app/is-app-installed/#json-parameters",
            "text": "name  type  description      bundleId  string  iOS bundleID or Android package name",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/app/is-app-installed/#response",
            "text": "Return true if installed, false if not ( boolean )",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/app/is-app-installed/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/app/launch-app/",
            "text": "Launch an App\n\n\nLaunch an app on device\n\n\nExample Usage\n\n\n// Java\ndriver.launchApp();\n\n\n\n\n\n# Python\nself.driver.launch_app()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.launch();\n\n\n\n// wd example\nawait driver.launchApp();\n\n\n\n\n\n# Ruby\n@driver.launch_app()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/app/launch\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Launch app"
        },
        {
            "location": "/en/commands/device/app/launch-app/#launch-an-app",
            "text": "Launch an app on device",
            "title": "Launch an App"
        },
        {
            "location": "/en/commands/device/app/launch-app/#example-usage",
            "text": "// Java\ndriver.launchApp();  # Python\nself.driver.launch_app()  // Javascript\n// webdriver.io example\ndriver.launch();\n\n\n\n// wd example\nawait driver.launchApp();  # Ruby\n@driver.launch_app()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/app/launch-app/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/app/launch-app/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/app/launch-app/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/app/launch-app/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/app/launch-app/#endpoint",
            "text": "POST /session/:session_id/appium/app/launch",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/app/launch-app/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/app/launch-app/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/app/launch-app/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/app/launch-app/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/app/remove-app/",
            "text": "Remove App\n\n\nRemove an app from the device\n\n\nExample Usage\n\n\n// Java\ndriver.removeApp(\"com.example.AppName\");\n\n\n\n\n\n# Python\nself.driver.remove_app('com.example.AppName');\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.removeApp('com.example.AppName')\n\n\n\n// wd example\nawait driver.removeAppFromDevice('com.example.AppName');\n\n\n\n\n\n# Ruby\n@driver.remove_app('com.example.AppName');\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/device/remove_app\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nappId\n\n\nstring\n\n\nThe iOS \nApp ID\n\n\n\n\n\n\nbundleId\n\n\nstring\n\n\niOS bundleID or Android package name\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Remove app"
        },
        {
            "location": "/en/commands/device/app/remove-app/#remove-app",
            "text": "Remove an app from the device",
            "title": "Remove App"
        },
        {
            "location": "/en/commands/device/app/remove-app/#example-usage",
            "text": "// Java\ndriver.removeApp(\"com.example.AppName\");  # Python\nself.driver.remove_app('com.example.AppName');  // Javascript\n// webdriver.io example\ndriver.removeApp('com.example.AppName')\n\n\n\n// wd example\nawait driver.removeAppFromDevice('com.example.AppName');  # Ruby\n@driver.remove_app('com.example.AppName');  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/app/remove-app/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/app/remove-app/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/app/remove-app/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/app/remove-app/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/app/remove-app/#endpoint",
            "text": "POST /wd/hub/session/:session_id/device/remove_app",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/app/remove-app/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/app/remove-app/#json-parameters",
            "text": "name  type  description      appId  string  The iOS  App ID    bundleId  string  iOS bundleID or Android package name",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/app/remove-app/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/app/remove-app/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/app/reset-app/",
            "text": "Reset App\n\n\nReset the currently running app for this session\n\n\nExample Usage\n\n\n// Java\ndriver.resetApp();\n\n\n\n\n\n# Python\nself.driver.reset()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.reset();\n\n\n\n// wd example\nawait driver.resetApp();\n\n\n\n\n\n# Ruby\n@driver.reset()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/app/reset\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Reset app"
        },
        {
            "location": "/en/commands/device/app/reset-app/#reset-app",
            "text": "Reset the currently running app for this session",
            "title": "Reset App"
        },
        {
            "location": "/en/commands/device/app/reset-app/#example-usage",
            "text": "// Java\ndriver.resetApp();  # Python\nself.driver.reset()  // Javascript\n// webdriver.io example\ndriver.reset();\n\n\n\n// wd example\nawait driver.resetApp();  # Ruby\n@driver.reset()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/app/reset-app/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/app/reset-app/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/app/reset-app/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/app/reset-app/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/app/reset-app/#endpoint",
            "text": "POST /session/:session_id/appium/app/reset",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/app/reset-app/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/app/reset-app/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/app/reset-app/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/app/reset-app/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/files/pull-file/",
            "text": "Pull File\n\n\nRetrieve a file from the device's file system\n\n\nExample Usage\n\n\n// Java\nbyte[] fileBase64 = driver.pullFile(\"/path/to/device/foo.bar\");\n\n\n\n\n\n# Python\nfile_base64 = self.driver.pull_file('/path/to/device/foo.bar');\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet data = driver.pullFile('/data/local/tmp/file.txt');\n\n\n\n// wd example\nlet fileBase64 = await driver.pullFile('/path/to/device/foo.bar');\n\n\n\n\n\n# Ruby\n@driver.pull_file('/data/local/tmp/file.txt');\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/device/pull_file\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nPath on the device to pull file from\n\n\n\n\n\n\n\n\nResponse\n\n\nContents of file in base64 (\nstring\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Pull file"
        },
        {
            "location": "/en/commands/device/files/pull-file/#pull-file",
            "text": "Retrieve a file from the device's file system",
            "title": "Pull File"
        },
        {
            "location": "/en/commands/device/files/pull-file/#example-usage",
            "text": "// Java\nbyte[] fileBase64 = driver.pullFile(\"/path/to/device/foo.bar\");  # Python\nfile_base64 = self.driver.pull_file('/path/to/device/foo.bar');  // Javascript\n// webdriver.io example\nlet data = driver.pullFile('/data/local/tmp/file.txt');\n\n\n\n// wd example\nlet fileBase64 = await driver.pullFile('/path/to/device/foo.bar');  # Ruby\n@driver.pull_file('/data/local/tmp/file.txt');  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/files/pull-file/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/files/pull-file/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/files/pull-file/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/files/pull-file/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/files/pull-file/#endpoint",
            "text": "POST /wd/hub/session/:session_id/device/pull_file",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/files/pull-file/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/files/pull-file/#json-parameters",
            "text": "name  type  description      path  string  Path on the device to pull file from",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/files/pull-file/#response",
            "text": "Contents of file in base64 ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/files/pull-file/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/files/pull-folder/",
            "text": "Pull Folder\n\n\nRetrieve a folder from the device's file system\n\n\nExample Usage\n\n\n// Java\nbyte[] folder = driver.pullFolder(\"/path/to/device/foo.bar\");\n\n\n\n\n\n# Python\nfolder_base64 = self.driver.pull_folder('/path/to/device/foo.bar');\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet data = driver.pullFolder('/data/local/tmp/file.txt');\n\n\n\n// wd example\nlet folderBase64 = await driver.pullFolder('/path/to/device/foo.bar');\n\n\n\n\n\n# Ruby\n@driver.pull_folder('/data/local/tmp/file.txt');\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/device/pull_folder\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nPath on the device to pull file from\n\n\n\n\n\n\n\n\nResponse\n\n\nContents of file in base64 (\nstring\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Pull folder"
        },
        {
            "location": "/en/commands/device/files/pull-folder/#pull-folder",
            "text": "Retrieve a folder from the device's file system",
            "title": "Pull Folder"
        },
        {
            "location": "/en/commands/device/files/pull-folder/#example-usage",
            "text": "// Java\nbyte[] folder = driver.pullFolder(\"/path/to/device/foo.bar\");  # Python\nfolder_base64 = self.driver.pull_folder('/path/to/device/foo.bar');  // Javascript\n// webdriver.io example\nlet data = driver.pullFolder('/data/local/tmp/file.txt');\n\n\n\n// wd example\nlet folderBase64 = await driver.pullFolder('/path/to/device/foo.bar');  # Ruby\n@driver.pull_folder('/data/local/tmp/file.txt');  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/files/pull-folder/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/files/pull-folder/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/files/pull-folder/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/files/pull-folder/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/files/pull-folder/#endpoint",
            "text": "POST /wd/hub/session/:session_id/device/pull_folder",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/files/pull-folder/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/files/pull-folder/#json-parameters",
            "text": "name  type  description      path  string  Path on the device to pull file from",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/files/pull-folder/#response",
            "text": "Contents of file in base64 ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/files/pull-folder/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/files/push-file/",
            "text": "Push File\n\n\nPlace a file onto the device in a particular place\n\n\nExample Usage\n\n\n// Java\ndriver.pushFile(\"/path/to/device/foo.bar\", new File(\"/Users/johndoe/files/foo.bar\"));\n\n\n\n\n\n# Python\nself.driver.push_file('/path/to/device/foo.bar', 'QXJlIHlvdXIgYmVlcnMgb2theT8=');\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet data = new Buffer(\"Hello World\").toString('base64');\ndriver.pushFile('/data/local/tmp/file.txt', data);\n\n\n\n// wd example\nawait driver.pushFileToDevice('/path/to/device/foo.bar', 'QXJlIHlvdXIgYmVlcnMgb2theT8=');\n\n\n\n\n\n# Ruby\n@driver.push_file('/Users/johndoe/path/to/app.apk');\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/device/push_file\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\npath\n\n\nstring\n\n\nPath to install the data to\n\n\n\n\n\n\ndata\n\n\nstring\n\n\nContents of file in base64\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Push file"
        },
        {
            "location": "/en/commands/device/files/push-file/#push-file",
            "text": "Place a file onto the device in a particular place",
            "title": "Push File"
        },
        {
            "location": "/en/commands/device/files/push-file/#example-usage",
            "text": "// Java\ndriver.pushFile(\"/path/to/device/foo.bar\", new File(\"/Users/johndoe/files/foo.bar\"));  # Python\nself.driver.push_file('/path/to/device/foo.bar', 'QXJlIHlvdXIgYmVlcnMgb2theT8=');  // Javascript\n// webdriver.io example\nlet data = new Buffer(\"Hello World\").toString('base64');\ndriver.pushFile('/data/local/tmp/file.txt', data);\n\n\n\n// wd example\nawait driver.pushFileToDevice('/path/to/device/foo.bar', 'QXJlIHlvdXIgYmVlcnMgb2theT8=');  # Ruby\n@driver.push_file('/Users/johndoe/path/to/app.apk');  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/files/push-file/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/files/push-file/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/files/push-file/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/files/push-file/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/files/push-file/#endpoint",
            "text": "POST /wd/hub/session/:session_id/device/push_file",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/files/push-file/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/files/push-file/#json-parameters",
            "text": "name  type  description      path  string  Path to install the data to    data  string  Contents of file in base64",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/files/push-file/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/files/push-file/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/keys/hide-keyboard/",
            "text": "Hide Keyboard\n\n\nHide soft keyboard\n\n\nExample Usage\n\n\n// Java\ndriver.hideKeyboard();\n\n\n\n\n\n# Python\nself.driver.hide_keyboard()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.hideDeviceKeyboard();\n\n\n\n// wd example\nawait driver.hideDeviceKeyboard();\n\n\n\n\n\n# Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID')\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/element\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nstrategy\n\n\nstring\n\n\nHide keyboard strategy (optional)\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nKey (optional)\n\n\n\n\n\n\nkeyCode\n\n\nstring\n\n\nKey code (optional)\n\n\n\n\n\n\nkeyName\n\n\nstring\n\n\nKey name (optional)\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Hide keyboard"
        },
        {
            "location": "/en/commands/device/keys/hide-keyboard/#hide-keyboard",
            "text": "Hide soft keyboard",
            "title": "Hide Keyboard"
        },
        {
            "location": "/en/commands/device/keys/hide-keyboard/#example-usage",
            "text": "// Java\ndriver.hideKeyboard();  # Python\nself.driver.hide_keyboard()  // Javascript\n// webdriver.io example\ndriver.hideDeviceKeyboard();\n\n\n\n// wd example\nawait driver.hideDeviceKeyboard();  # Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID')  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/keys/hide-keyboard/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/keys/hide-keyboard/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/keys/hide-keyboard/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/keys/hide-keyboard/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/keys/hide-keyboard/#endpoint",
            "text": "POST /wd/hub/session/:session_id/element",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/keys/hide-keyboard/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/keys/hide-keyboard/#json-parameters",
            "text": "name  type  description      strategy  string  Hide keyboard strategy (optional)    key  string  Key (optional)    keyCode  string  Key code (optional)    keyName  string  Key name (optional)",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/keys/hide-keyboard/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/keys/hide-keyboard/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/keys/is-keyboard-shown/",
            "text": "Is Keyboard Shown\n\n\nWhether or not the soft keyboard is shown\n\n\nExample Usage\n\n\n// Java\nboolean isKeyboardShown = driver.manager().isKeyboardShown();\n\n\n\n\n\n# Not supported\n\n\n\n\n// Not supported\n\n\n// Not supported\n\n\n\n\n# Ruby\n@driver.is_keyboard_shown();\n\n\n\n\n\n// Not supported\n\n\n\n\n// Not supported\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WD)\n\n\nNone\n\n\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nNone\n\n\n\n\n\n\n\n\nC#\n\n\nNone\n\n\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/element\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nstrategy\n\n\nstring\n\n\nHide keyboard strategy (optional)\n\n\n\n\n\n\nkey\n\n\nstring\n\n\nKey (optional)\n\n\n\n\n\n\nkeyCode\n\n\nstring\n\n\nKey code (optional)\n\n\n\n\n\n\nkeyName\n\n\nstring\n\n\nKey name (optional)\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Is keyboard shown"
        },
        {
            "location": "/en/commands/device/keys/is-keyboard-shown/#is-keyboard-shown",
            "text": "Whether or not the soft keyboard is shown",
            "title": "Is Keyboard Shown"
        },
        {
            "location": "/en/commands/device/keys/is-keyboard-shown/#example-usage",
            "text": "// Java\nboolean isKeyboardShown = driver.manager().isKeyboardShown();  # Not supported  // Not supported\n\n\n// Not supported  # Ruby\n@driver.is_keyboard_shown();  // Not supported  // Not supported",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/keys/is-keyboard-shown/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/keys/is-keyboard-shown/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/keys/is-keyboard-shown/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  None     Javascript (WebdriverIO)  None     Javascript (WD)  None     Ruby  All  github.com    PHP  None     C#  None",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/keys/is-keyboard-shown/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/keys/is-keyboard-shown/#endpoint",
            "text": "POST /wd/hub/session/:session_id/element",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/keys/is-keyboard-shown/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/keys/is-keyboard-shown/#json-parameters",
            "text": "name  type  description      strategy  string  Hide keyboard strategy (optional)    key  string  Key (optional)    keyCode  string  Key code (optional)    keyName  string  Key name (optional)",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/keys/is-keyboard-shown/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/keys/is-keyboard-shown/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/keys/long-press-keycode/",
            "text": "Long Press Key Code\n\n\nPress and hold a particular key code on the device\n\n\nExample Usage\n\n\n// Java\ndriver.longPressKeyCode(10);\n\n\n\n\n\n# Python\nself.driver.long_press_keycode(10);\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.longPressKeyCode(10);\n\n\n\n// Not supported\n\n\n\n\n# Ruby\n@driver.long_press_keycode(10)\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/device/long_press_keycode\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nkeycode\n\n\nnumber\n\n\n[Key code](http://developer.android.com/reference/android/view/KeyEvent.html) pressed on the device\n\n\n\n\n\n\nmetastate\n\n\nnumber\n\n\nMetastate for the keypress\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Long press keycode"
        },
        {
            "location": "/en/commands/device/keys/long-press-keycode/#long-press-key-code",
            "text": "Press and hold a particular key code on the device",
            "title": "Long Press Key Code"
        },
        {
            "location": "/en/commands/device/keys/long-press-keycode/#example-usage",
            "text": "// Java\ndriver.longPressKeyCode(10);  # Python\nself.driver.long_press_keycode(10);  // Javascript\n// webdriver.io example\ndriver.longPressKeyCode(10);\n\n\n\n// Not supported  # Ruby\n@driver.long_press_keycode(10)  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/keys/long-press-keycode/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/keys/long-press-keycode/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/keys/long-press-keycode/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All     Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/keys/long-press-keycode/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/keys/long-press-keycode/#endpoint",
            "text": "POST /session/:session_id/appium/device/long_press_keycode",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/keys/long-press-keycode/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/keys/long-press-keycode/#json-parameters",
            "text": "name  type  description      keycode  number  [Key code](http://developer.android.com/reference/android/view/KeyEvent.html) pressed on the device    metastate  number  Metastate for the keypress",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/keys/long-press-keycode/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/keys/long-press-keycode/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/keys/press-keycode/",
            "text": "Press Key Code\n\n\nPress a particular key on the device\n\n\nExample Usage\n\n\n// Java\ndriver.pressKeyCode(10);\n\n\n\n\n\n# Python\nself.driver.press_keycode(10);\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.pressKeycode(10);\n\n\n\n// Not supported\n\n\n\n\n# Ruby\n@driver.press_keycode(10)\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/device/press_keycode\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nkeycode\n\n\nnumber\n\n\n[Key code](http://developer.android.com/reference/android/view/KeyEvent.html) pressed on the device\n\n\n\n\n\n\nmetastate\n\n\nnumber\n\n\nMetastate for the keypress\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Press keycode"
        },
        {
            "location": "/en/commands/device/keys/press-keycode/#press-key-code",
            "text": "Press a particular key on the device",
            "title": "Press Key Code"
        },
        {
            "location": "/en/commands/device/keys/press-keycode/#example-usage",
            "text": "// Java\ndriver.pressKeyCode(10);  # Python\nself.driver.press_keycode(10);  // Javascript\n// webdriver.io example\ndriver.pressKeycode(10);\n\n\n\n// Not supported  # Ruby\n@driver.press_keycode(10)  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/keys/press-keycode/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/keys/press-keycode/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/keys/press-keycode/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All     Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/keys/press-keycode/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/keys/press-keycode/#endpoint",
            "text": "POST /session/:session_id/appium/device/press_keycode",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/keys/press-keycode/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/keys/press-keycode/#json-parameters",
            "text": "name  type  description      keycode  number  [Key code](http://developer.android.com/reference/android/view/KeyEvent.html) pressed on the device    metastate  number  Metastate for the keypress",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/keys/press-keycode/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/keys/press-keycode/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/lock/is-locked/",
            "text": "Is Device Locked\n\n\nCheck whether the device is locked or not\n\n\nExample Usage\n\n\n// Java\nboolean isLocked = driver.isLocked();\n\n\n\n\n\n# Not supported\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.isLocked();\n\n\n\n// wd example\nlet isLocked = await driver.isLocked();\n\n\n\n\n\n# Ruby\n@driver.device_locked()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/device/is_locked\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nTrue if the device is locked, false if not (\nboolean\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Is locked"
        },
        {
            "location": "/en/commands/device/lock/is-locked/#is-device-locked",
            "text": "Check whether the device is locked or not",
            "title": "Is Device Locked"
        },
        {
            "location": "/en/commands/device/lock/is-locked/#example-usage",
            "text": "// Java\nboolean isLocked = driver.isLocked();  # Not supported  // Javascript\n// webdriver.io example\ndriver.isLocked();\n\n\n\n// wd example\nlet isLocked = await driver.isLocked();  # Ruby\n@driver.device_locked()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/lock/is-locked/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/lock/is-locked/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/lock/is-locked/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All     Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/lock/is-locked/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/lock/is-locked/#endpoint",
            "text": "POST /session/:session_id/appium/device/is_locked",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/lock/is-locked/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/lock/is-locked/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/lock/is-locked/#response",
            "text": "True if the device is locked, false if not ( boolean )",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/lock/is-locked/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/lock/lock/",
            "text": "Lock\n\n\nLock the device\n\n\nExample Usage\n\n\n// Java\ndriver.lockDevice();\n\n\n\n\n\n# Python\nself.driver.lock();\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.lock();\n\n\n\n// wd example\nawait driver.lock();\n\n\n\n\n\n# Ruby\n@driver.lock()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/device/lock\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Lock"
        },
        {
            "location": "/en/commands/device/lock/lock/#lock",
            "text": "Lock the device",
            "title": "Lock"
        },
        {
            "location": "/en/commands/device/lock/lock/#example-usage",
            "text": "// Java\ndriver.lockDevice();  # Python\nself.driver.lock();  // Javascript\n// webdriver.io example\ndriver.lock();\n\n\n\n// wd example\nawait driver.lock();  # Ruby\n@driver.lock()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/lock/lock/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/lock/lock/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/lock/lock/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/lock/lock/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/lock/lock/#endpoint",
            "text": "POST /session/:session_id/appium/device/lock",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/lock/lock/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/lock/lock/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/lock/lock/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/lock/lock/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/lock/shake/",
            "text": "Shake\n\n\nPerform a shake action on the device\n\n\nExample Usage\n\n\n// Java\ndriver.shake();\n\n\n\n\n\n# Python\nself.driver.shake();\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.shake();\n\n\n\n// wd example\nawait driver.shake();\n\n\n\n\n\n# Ruby\n@driver.shake()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/device/shake\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Shake"
        },
        {
            "location": "/en/commands/device/lock/shake/#shake",
            "text": "Perform a shake action on the device",
            "title": "Shake"
        },
        {
            "location": "/en/commands/device/lock/shake/#example-usage",
            "text": "// Java\ndriver.shake();  # Python\nself.driver.shake();  // Javascript\n// webdriver.io example\ndriver.shake();\n\n\n\n// wd example\nawait driver.shake();  # Ruby\n@driver.shake()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/lock/shake/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/lock/shake/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/lock/shake/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/lock/shake/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/lock/shake/#endpoint",
            "text": "POST /session/:session_id/appium/device/shake",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/lock/shake/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/lock/shake/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/lock/shake/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/lock/shake/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/lock/unlock/",
            "text": "Unlock\n\n\nUnlock the device\n\n\nExample Usage\n\n\n// Java\ndriver.lockDevice();\ndriver.unlockDevice();\n\n\n\n\n\n# Python\nself.driver.lock();\nself.driver.unlock();\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.lock()\n  .unlock();\n\n\n\n// wd example\nawait driver.lock();\nawait driver.unlock();\n\n\n\n\n\n# Not supported\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/device/unlock\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Unlock"
        },
        {
            "location": "/en/commands/device/lock/unlock/#unlock",
            "text": "Unlock the device",
            "title": "Unlock"
        },
        {
            "location": "/en/commands/device/lock/unlock/#example-usage",
            "text": "// Java\ndriver.lockDevice();\ndriver.unlockDevice();  # Python\nself.driver.lock();\nself.driver.unlock();  // Javascript\n// webdriver.io example\ndriver.lock()\n  .unlock();\n\n\n\n// wd example\nawait driver.lock();\nawait driver.unlock();  # Not supported  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/lock/unlock/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/lock/unlock/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/lock/unlock/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All     Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All     PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/lock/unlock/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/lock/unlock/#endpoint",
            "text": "POST /session/:session_id/appium/device/unlock",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/lock/unlock/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/lock/unlock/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/lock/unlock/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/lock/unlock/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/network/gsm-call/",
            "text": "GSM Call\n\n\nMake GSM call (Emulator only)\n\n\nExample Usage\n\n\n// Not supported\n\n\n\n\n# Not supported\n\n\n\n\n// Not supported\n\n\n// wd example\nawait driver.gsmCall('555-123-4567', 'Phone');\n\n\n\n\n\n# Not supported\n\n\n\n\n# PHP\n// TODO\n\n\n\n\n\n// C#\n// TODO\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nNone\n\n\n\n\n\n\n\n\nPython\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/device/gsm_call\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nphoneNumber\n\n\nstring\n\n\nThe phone number to call to\n\n\n\n\n\n\nmessage\n\n\nstring\n\n\nThe action\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Gsm call"
        },
        {
            "location": "/en/commands/device/network/gsm-call/#gsm-call",
            "text": "Make GSM call (Emulator only)",
            "title": "GSM Call"
        },
        {
            "location": "/en/commands/device/network/gsm-call/#example-usage",
            "text": "// Not supported  # Not supported  // Not supported\n\n\n// wd example\nawait driver.gsmCall('555-123-4567', 'Phone');  # Not supported  # PHP\n// TODO  // C#\n// TODO",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/network/gsm-call/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/network/gsm-call/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/network/gsm-call/#appium-clients",
            "text": "Language  Support  Documentation      Java  None     Python  None     Javascript (WebdriverIO)  All     Javascript (WD)  All  github.com    Ruby  All     PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/network/gsm-call/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/network/gsm-call/#endpoint",
            "text": "POST /session/:session_id/device/gsm_call",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/network/gsm-call/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/network/gsm-call/#json-parameters",
            "text": "name  type  description      phoneNumber  string  The phone number to call to    message  string  The action",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/network/gsm-call/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/network/gsm-call/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/network/gsm-signal/",
            "text": "GSM Signal\n\n\nSet GSM signal strength (Emulator only)\n\n\nExample Usage\n\n\n// Not supported\n\n\n\n\n# Not supported\n\n\n\n\n// Not supported\n\n\n// wd example\nawait driver.gsmSignal(3);\n\n\n\n\n\n# Not supported\n\n\n\n\n# PHP\n// TODO\n\n\n\n\n\n// C#\n// TODO\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nNone\n\n\n\n\n\n\n\n\nPython\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/device/gsm_signal\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsignalStrengh\n\n\nstring\n\n\nSignal strength in the range [0, 4]\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Gsm signal"
        },
        {
            "location": "/en/commands/device/network/gsm-signal/#gsm-signal",
            "text": "Set GSM signal strength (Emulator only)",
            "title": "GSM Signal"
        },
        {
            "location": "/en/commands/device/network/gsm-signal/#example-usage",
            "text": "// Not supported  # Not supported  // Not supported\n\n\n// wd example\nawait driver.gsmSignal(3);  # Not supported  # PHP\n// TODO  // C#\n// TODO",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/network/gsm-signal/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/network/gsm-signal/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/network/gsm-signal/#appium-clients",
            "text": "Language  Support  Documentation      Java  None     Python  None     Javascript (WebdriverIO)  All     Javascript (WD)  All  github.com    Ruby  All     PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/network/gsm-signal/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/network/gsm-signal/#endpoint",
            "text": "POST /session/:session_id/device/gsm_signal",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/network/gsm-signal/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/network/gsm-signal/#json-parameters",
            "text": "name  type  description      signalStrengh  string  Signal strength in the range [0, 4]",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/network/gsm-signal/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/network/gsm-signal/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/network/gsm-voice/",
            "text": "GSM Voice\n\n\nSet GSM voice state (Emulator only)\n\n\nExample Usage\n\n\n// Not supported\n\n\n\n\n# Not supported\n\n\n\n\n// Not supported\n\n\n// wd example\nawait driver.gsmVoice('Voice state');\n\n\n\n\n\n# Not supported\n\n\n\n\n# PHP\n// TODO\n\n\n\n\n\n// C#\n// TODO\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nNone\n\n\n\n\n\n\n\n\nPython\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/device/gsm_voice\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nstate\n\n\nstring\n\n\nState of GSM voice\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Gsm voice"
        },
        {
            "location": "/en/commands/device/network/gsm-voice/#gsm-voice",
            "text": "Set GSM voice state (Emulator only)",
            "title": "GSM Voice"
        },
        {
            "location": "/en/commands/device/network/gsm-voice/#example-usage",
            "text": "// Not supported  # Not supported  // Not supported\n\n\n// wd example\nawait driver.gsmVoice('Voice state');  # Not supported  # PHP\n// TODO  // C#\n// TODO",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/network/gsm-voice/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/network/gsm-voice/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/network/gsm-voice/#appium-clients",
            "text": "Language  Support  Documentation      Java  None     Python  None     Javascript (WebdriverIO)  All     Javascript (WD)  All  github.com    Ruby  All     PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/network/gsm-voice/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/network/gsm-voice/#endpoint",
            "text": "POST /session/:session_id/device/gsm_voice",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/network/gsm-voice/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/network/gsm-voice/#json-parameters",
            "text": "name  type  description      state  string  State of GSM voice",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/network/gsm-voice/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/network/gsm-voice/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/network/send-sms/",
            "text": "Send SMS\n\n\nSimulate an SMS message (Emulator only)\n\n\nExample Usage\n\n\n// Not supported\n\n\n\n\n# Not supported\n\n\n\n\n// Not supported\n\n\n// wd example\nawait driver.sendSms('555-123-4567', 'Hey lol');\n\n\n\n\n\n# Ruby\n@driver.toggle_flight_mode();\n\n\n\n\n\n# PHP\n// TODO\n\n\n\n\n\n// C#\n// TODO\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nNone\n\n\n\n\n\n\n\n\nPython\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/device/send_sms\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nphoneNumber\n\n\nstring\n\n\nThe phone number to send the SMS too\n\n\n\n\n\n\nmessage\n\n\nstring\n\n\nThe SMS message\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Send sms"
        },
        {
            "location": "/en/commands/device/network/send-sms/#send-sms",
            "text": "Simulate an SMS message (Emulator only)",
            "title": "Send SMS"
        },
        {
            "location": "/en/commands/device/network/send-sms/#example-usage",
            "text": "// Not supported  # Not supported  // Not supported\n\n\n// wd example\nawait driver.sendSms('555-123-4567', 'Hey lol');  # Ruby\n@driver.toggle_flight_mode();  # PHP\n// TODO  // C#\n// TODO",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/network/send-sms/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/network/send-sms/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/network/send-sms/#appium-clients",
            "text": "Language  Support  Documentation      Java  None     Python  None     Javascript (WebdriverIO)  All     Javascript (WD)  All  github.com    Ruby  All     PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/network/send-sms/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/network/send-sms/#endpoint",
            "text": "POST /session/:session_id/device/send_sms",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/network/send-sms/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/network/send-sms/#json-parameters",
            "text": "name  type  description      phoneNumber  string  The phone number to send the SMS too    message  string  The SMS message",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/network/send-sms/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/network/send-sms/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/network/toggle-airplane-mode/",
            "text": "Toggle Airplane Mode\n\n\nToggle airplane mode on device\n\n\nExample Usage\n\n\n// Not supported\n\n\n\n\n# Not supported\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.toggleAirplaneMode();\n\n\n\n// wd example\nawait driver.toggleAirplaneMode();\n\n\n\n\n\n# Ruby\n@driver.toggle_flight_mode();\n\n\n\n\n\n# PHP\n// TODO\n\n\n\n\n\n// C#\n// TODO\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nNone\n\n\n\n\n\n\n\n\nPython\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/toggle_airplane_mode\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Toggle airplane mode"
        },
        {
            "location": "/en/commands/device/network/toggle-airplane-mode/#toggle-airplane-mode",
            "text": "Toggle airplane mode on device",
            "title": "Toggle Airplane Mode"
        },
        {
            "location": "/en/commands/device/network/toggle-airplane-mode/#example-usage",
            "text": "// Not supported  # Not supported  // Javascript\n// webdriver.io example\ndriver.toggleAirplaneMode();\n\n\n\n// wd example\nawait driver.toggleAirplaneMode();  # Ruby\n@driver.toggle_flight_mode();  # PHP\n// TODO  // C#\n// TODO",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/network/toggle-airplane-mode/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/network/toggle-airplane-mode/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/network/toggle-airplane-mode/#appium-clients",
            "text": "Language  Support  Documentation      Java  None     Python  None     Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/network/toggle-airplane-mode/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/network/toggle-airplane-mode/#endpoint",
            "text": "POST /session/:session_id/toggle_airplane_mode",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/network/toggle-airplane-mode/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/network/toggle-airplane-mode/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/network/toggle-airplane-mode/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/network/toggle-airplane-mode/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/network/toggle-data/",
            "text": "Toggle Data\n\n\nSwitch the state of data service\n\n\nExample Usage\n\n\n// Not supported\n\n\n\n\n# Not supported\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.toggleData();\n\n\n\n// wd example\nawait driver.toggleData();\n\n\n\n\n\n# Not supported\n\n\n\n\n# PHP\n// TODO\n\n\n\n\n\n// C#\n// TODO\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nNone\n\n\n\n\n\n\n\n\nPython\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/device/toggle_data\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Toggle data"
        },
        {
            "location": "/en/commands/device/network/toggle-data/#toggle-data",
            "text": "Switch the state of data service",
            "title": "Toggle Data"
        },
        {
            "location": "/en/commands/device/network/toggle-data/#example-usage",
            "text": "// Not supported  # Not supported  // Javascript\n// webdriver.io example\ndriver.toggleData();\n\n\n\n// wd example\nawait driver.toggleData();  # Not supported  # PHP\n// TODO  // C#\n// TODO",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/network/toggle-data/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/network/toggle-data/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/network/toggle-data/#appium-clients",
            "text": "Language  Support  Documentation      Java  None     Python  None     Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All     PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/network/toggle-data/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/network/toggle-data/#endpoint",
            "text": "POST /session/:session_id/device/toggle_data",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/network/toggle-data/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/network/toggle-data/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/network/toggle-data/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/network/toggle-data/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/network/toggle-location-services/",
            "text": "Toggle Location Services\n\n\nSwitch the state of the location service\n\n\nExample Usage\n\n\n// Java\ndriver.toggleLocationServices();\n\n\n\n\n\n# Python\nself.driver.toggle_location_services();\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.toggleLocationServices();\n\n\n\n// wd example\nawait driver.toggleLocationServices();\n\n\n\n\n\n# Not supported\n\n\n\n\n# PHP\n// TODO\n\n\n\n\n\n// C#\n// TODO\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nNone\n\n\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/device/toggle_location_services\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Toggle location services"
        },
        {
            "location": "/en/commands/device/network/toggle-location-services/#toggle-location-services",
            "text": "Switch the state of the location service",
            "title": "Toggle Location Services"
        },
        {
            "location": "/en/commands/device/network/toggle-location-services/#example-usage",
            "text": "// Java\ndriver.toggleLocationServices();  # Python\nself.driver.toggle_location_services();  // Javascript\n// webdriver.io example\ndriver.toggleLocationServices();\n\n\n\n// wd example\nawait driver.toggleLocationServices();  # Not supported  # PHP\n// TODO  // C#\n// TODO",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/network/toggle-location-services/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/network/toggle-location-services/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/network/toggle-location-services/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  None     PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/network/toggle-location-services/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/network/toggle-location-services/#endpoint",
            "text": "POST /session/:session_id/device/toggle_location_services",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/network/toggle-location-services/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/network/toggle-location-services/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/network/toggle-location-services/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/network/toggle-location-services/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/network/toggle-wifi/",
            "text": "Toggle WiFi\n\n\nSwitch the state of the wifi service\n\n\nExample Usage\n\n\n// Not supported\n\n\n\n\n# Not supported\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.toggleWiFi();\n\n\n\n// wd example\nawait driver.toggleWiFi();\n\n\n\n\n\n# Not supported\n\n\n\n\n# PHP\n// TODO\n\n\n\n\n\n// C#\n// TODO\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nNone\n\n\n\n\n\n\n\n\nPython\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/device/toggle_wifi\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Toggle wifi"
        },
        {
            "location": "/en/commands/device/network/toggle-wifi/#toggle-wifi",
            "text": "Switch the state of the wifi service",
            "title": "Toggle WiFi"
        },
        {
            "location": "/en/commands/device/network/toggle-wifi/#example-usage",
            "text": "// Not supported  # Not supported  // Javascript\n// webdriver.io example\ndriver.toggleWiFi();\n\n\n\n// wd example\nawait driver.toggleWiFi();  # Not supported  # PHP\n// TODO  // C#\n// TODO",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/network/toggle-wifi/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/network/toggle-wifi/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/network/toggle-wifi/#appium-clients",
            "text": "Language  Support  Documentation      Java  None     Python  None     Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All     PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/network/toggle-wifi/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/network/toggle-wifi/#endpoint",
            "text": "POST /session/:session_id/device/toggle_wifi",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/network/toggle-wifi/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/network/toggle-wifi/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/network/toggle-wifi/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/network/toggle-wifi/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/other/current-activity/",
            "text": "Get Current Activity\n\n\nGet the name of the current Android activity\n\n\nExample Usage\n\n\n// Java\nString activity = driver.currentActivity();\n\n\n\n\n\n# Python\nactivity = self.driver.current_activity();\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet activity = driver.currentActivity();\n\n\n\n// wd example\nlet activity = await driver.getCurrentActivity();\n\n\n\n\n\n# Ruby\n@driver.current_activity;\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/device/current_activity\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nName of the current \nactivity\n (\nstring\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Current activity"
        },
        {
            "location": "/en/commands/device/other/current-activity/#get-current-activity",
            "text": "Get the name of the current Android activity",
            "title": "Get Current Activity"
        },
        {
            "location": "/en/commands/device/other/current-activity/#example-usage",
            "text": "// Java\nString activity = driver.currentActivity();  # Python\nactivity = self.driver.current_activity();  // Javascript\n// webdriver.io example\nlet activity = driver.currentActivity();\n\n\n\n// wd example\nlet activity = await driver.getCurrentActivity();  # Ruby\n@driver.current_activity;  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/other/current-activity/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/other/current-activity/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/other/current-activity/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/other/current-activity/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/other/current-activity/#endpoint",
            "text": "GET /wd/hub/session/:session_id/device/current_activity",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/other/current-activity/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/other/current-activity/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/other/current-activity/#response",
            "text": "Name of the current  activity  ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/other/current-activity/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/other/current-package/",
            "text": "Get Current Package\n\n\nGet the name of the current Android package\n\n\nExample Usage\n\n\n// Java\nString package = driver.getCurrentPackage();\n\n\n\n\n\n# Python\npackage = self.driver.current_package();\n\n\n\n\n\n// Not supported\n\n\n// wd example\nlet package = await driver.getCurrentPackage();\n\n\n\n\n\n# Ruby\n@driver.current_package;\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/device/current_package\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nName of the current \npackage\n (\nstring\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Current package"
        },
        {
            "location": "/en/commands/device/other/current-package/#get-current-package",
            "text": "Get the name of the current Android package",
            "title": "Get Current Package"
        },
        {
            "location": "/en/commands/device/other/current-package/#example-usage",
            "text": "// Java\nString package = driver.getCurrentPackage();  # Python\npackage = self.driver.current_package();  // Not supported\n\n\n// wd example\nlet package = await driver.getCurrentPackage();  # Ruby\n@driver.current_package;  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/other/current-package/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/other/current-package/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/other/current-package/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  None     Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/other/current-package/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/other/current-package/#endpoint",
            "text": "GET /wd/hub/session/:session_id/device/current_package",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/other/current-package/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/other/current-package/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/other/current-package/#response",
            "text": "Name of the current  package  ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/other/current-package/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/other/get-performance-data/",
            "text": "Get Performance Data\n\n\nReturns the information of the system state which is supported to read as like cpu, memory, network traffic, and battery\n\n\nExample Usage\n\n\n// Java\nList<String> performanceTypes = driver.getSupportedPerformanceDataTypes();\n\n\n\n\n\n# Not supported\n\n\n\n\n// Not supported\n\n\n// Not supported\n\n\n\n\n# Ruby\n@driver.get_performance_data()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/getPerformanceData\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\npackage_name\n\n\nstring\n\n\nThe package name of the application\n\n\n\n\n\n\ndata_type\n\n\nstring\n\n\nThe type of system state which wants to read. It should be one of the supported performance data types.\n\n\n\n\n\n\ndata_read_timeout\n\n\nnumber\n\n\nThe number of attempts to read (optional)\n\n\n\n\n\n\n\n\nResponse\n\n\nThe information type of the system state which is supported to read as like cpu, memory, network traffic, and battery (\narray<string>\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Get performance data"
        },
        {
            "location": "/en/commands/device/other/get-performance-data/#get-performance-data",
            "text": "Returns the information of the system state which is supported to read as like cpu, memory, network traffic, and battery",
            "title": "Get Performance Data"
        },
        {
            "location": "/en/commands/device/other/get-performance-data/#example-usage",
            "text": "// Java\nList<String> performanceTypes = driver.getSupportedPerformanceDataTypes();  # Not supported  // Not supported\n\n\n// Not supported  # Ruby\n@driver.get_performance_data()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/other/get-performance-data/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/other/get-performance-data/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/other/get-performance-data/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All     Javascript (WebdriverIO)  All     Javascript (WD)  All     Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/other/get-performance-data/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/other/get-performance-data/#endpoint",
            "text": "POST /session/:session_id/appium/getPerformanceData",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/other/get-performance-data/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/other/get-performance-data/#json-parameters",
            "text": "name  type  description      package_name  string  The package name of the application    data_type  string  The type of system state which wants to read. It should be one of the supported performance data types.    data_read_timeout  number  The number of attempts to read (optional)",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/other/get-performance-data/#response",
            "text": "The information type of the system state which is supported to read as like cpu, memory, network traffic, and battery ( array<string> )",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/other/get-performance-data/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/other/performance-data-types/",
            "text": "Get Performance Data Types\n\n\nReturns the information types of the system state which is supported to read as like cpu, memory, network traffic, and battery\n\n\nExample Usage\n\n\n// Java\nList<String> performanceTypes = driver.getSupportedPerformanceDataTypes();\n\n\n\n\n\n# Not supported\n\n\n\n\n// Not supported\n\n\n// Not supported\n\n\n\n\n# Ruby\n@driver.get_performance_data_types()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/appium/performanceData/types\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nThe available performance data types (cpuinfo|batteryinfo|networkinfo|memoryinfo) (\narray<string>\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Performance data types"
        },
        {
            "location": "/en/commands/device/other/performance-data-types/#get-performance-data-types",
            "text": "Returns the information types of the system state which is supported to read as like cpu, memory, network traffic, and battery",
            "title": "Get Performance Data Types"
        },
        {
            "location": "/en/commands/device/other/performance-data-types/#example-usage",
            "text": "// Java\nList<String> performanceTypes = driver.getSupportedPerformanceDataTypes();  # Not supported  // Not supported\n\n\n// Not supported  # Ruby\n@driver.get_performance_data_types()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/other/performance-data-types/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/other/performance-data-types/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/other/performance-data-types/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All     Javascript (WebdriverIO)  All     Javascript (WD)  All     Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/other/performance-data-types/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/other/performance-data-types/#endpoint",
            "text": "POST /session/:session_id/appium/performanceData/types",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/other/performance-data-types/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/other/performance-data-types/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/other/performance-data-types/#response",
            "text": "The available performance data types (cpuinfo|batteryinfo|networkinfo|memoryinfo) ( array<string> )",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/other/performance-data-types/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/other/rotate/",
            "text": "Rotate\n\n\nRotate the device in three dimensions\n\n\nExample Usage\n\n\n// Java\ndriver.rotate(new DeviceRotation(10, 10, 10));\n\n\n\n\n\n# Not supported\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.rotate(100, 100);\n\n\n\n// wd example\ndriver.rotateDevice({x: 114, y: 198, duration: 5, radius: 3, rotation: 220, touchCount: 2});\n\n\n\n\n\n# Not supported\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/device/rotate\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nnumber\n\n\nx offset to use for the center of the rotate gesture\n\n\n\n\n\n\ny\n\n\nnumber\n\n\ny offset to use for the center of the rotate gesture\n\n\n\n\n\n\nradius\n\n\nnumber\n\n\nThe distance in points from the center to the edge of the circular path\n\n\n\n\n\n\nrotation\n\n\nnumber\n\n\nThe length of rotation in radians\n\n\n\n\n\n\ntouchCount\n\n\nnumber\n\n\nThe number of touches to use in the specified gesture. (Effectively, the number of fingers a user would use to make the specified gesture.) Valid values are 1 to 5.\n\n\n\n\n\n\nduration\n\n\nnumber\n\n\nThe length of hold time for the specified gesture, in seconds.\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Rotate"
        },
        {
            "location": "/en/commands/device/other/rotate/#rotate",
            "text": "Rotate the device in three dimensions",
            "title": "Rotate"
        },
        {
            "location": "/en/commands/device/other/rotate/#example-usage",
            "text": "// Java\ndriver.rotate(new DeviceRotation(10, 10, 10));  # Not supported  // Javascript\n// webdriver.io example\ndriver.rotate(100, 100);\n\n\n\n// wd example\ndriver.rotateDevice({x: 114, y: 198, duration: 5, radius: 3, rotation: 220, touchCount: 2});  # Not supported  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/other/rotate/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/other/rotate/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/other/rotate/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All     Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All     PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/other/rotate/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/other/rotate/#endpoint",
            "text": "POST /wd/hub/session/:session_id/device/rotate",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/other/rotate/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/other/rotate/#json-parameters",
            "text": "name  type  description      x  number  x offset to use for the center of the rotate gesture    y  number  y offset to use for the center of the rotate gesture    radius  number  The distance in points from the center to the edge of the circular path    rotation  number  The length of rotation in radians    touchCount  number  The number of touches to use in the specified gesture. (Effectively, the number of fingers a user would use to make the specified gesture.) Valid values are 1 to 5.    duration  number  The length of hold time for the specified gesture, in seconds.",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/other/rotate/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/other/rotate/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/other/start-activity/",
            "text": "Start Activity\n\n\nGet the name of the current Android activity\n\n\nExample Usage\n\n\n// Java\ndriver.currentActivity(new Activity(\"com.example\", \"ActivityName\"));\n\n\n\n\n\n# Python\nself.driver.start_activity(\"com.example\", \"ActivityName\");\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.startActivity(\"com.example\", \"ActivityName\");\n\n\n\n// wd example\nawait driver.startActivity({\n  appPackage: \"com.example\",\n  appActivity: \"ActivityName\"\n});\n\n\n\n\n\n# Ruby\n@driver.start_activity(\"com.example\", \"ActivityName\");\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/device/start_activity\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nappPackage\n\n\nstring\n\n\nName of the \npackage\n\n\n\n\n\n\nappActivity\n\n\nstring\n\n\nName of the \nactivity\n\n\n\n\n\n\nappWaitPackage\n\n\nstring\n\n\nAutomation will begin after this package starts\n\n\n\n\n\n\nintentAction\n\n\nstring\n\n\nIntent\n action which will be used to start activity\n\n\n\n\n\n\nintentCategory\n\n\nstring\n\n\nIntent category which will be used to start activity\n\n\n\n\n\n\nintentFlags\n\n\nstring\n\n\nFlags that will be used to start activity\n\n\n\n\n\n\noptionalIntentArguments\n\n\nstring\n\n\nAdditional intent arguments that will be used to start activity\n\n\n\n\n\n\ndontStopAppOnReset\n\n\nboolean\n\n\nShould the app stop on reset\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Start activity"
        },
        {
            "location": "/en/commands/device/other/start-activity/#start-activity",
            "text": "Get the name of the current Android activity",
            "title": "Start Activity"
        },
        {
            "location": "/en/commands/device/other/start-activity/#example-usage",
            "text": "// Java\ndriver.currentActivity(new Activity(\"com.example\", \"ActivityName\"));  # Python\nself.driver.start_activity(\"com.example\", \"ActivityName\");  // Javascript\n// webdriver.io example\ndriver.startActivity(\"com.example\", \"ActivityName\");\n\n\n\n// wd example\nawait driver.startActivity({\n  appPackage: \"com.example\",\n  appActivity: \"ActivityName\"\n});  # Ruby\n@driver.start_activity(\"com.example\", \"ActivityName\");  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/other/start-activity/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/other/start-activity/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/other/start-activity/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/other/start-activity/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/other/start-activity/#endpoint",
            "text": "POST /wd/hub/session/:session_id/device/start_activity",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/other/start-activity/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/other/start-activity/#json-parameters",
            "text": "name  type  description      appPackage  string  Name of the  package    appActivity  string  Name of the  activity    appWaitPackage  string  Automation will begin after this package starts    intentAction  string  Intent  action which will be used to start activity    intentCategory  string  Intent category which will be used to start activity    intentFlags  string  Flags that will be used to start activity    optionalIntentArguments  string  Additional intent arguments that will be used to start activity    dontStopAppOnReset  boolean  Should the app stop on reset",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/other/start-activity/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/other/start-activity/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/simulator/toggle-touch-id-enrollment/",
            "text": "Toggle Touch ID Enrollment\n\n\nToggle the simulator being \nenrolled\n to accept touchId  (iOS Simulator only)\n\n\nExample Usage\n\n\n// Java\ndriver.toggleTouchIDEnrollment(true);\n\n\n\n\n\n# Python\nself.driver.toggle_touch_id_enrollment()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.toggleTouchIdEnrollment(true);\n\n\n\n// wd example\nawait driver.toggleTouchIdEnrollment();\n\n\n\n\n\n# Ruby\n@driver.toggle_touch_id_enrollment()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nTo enable this feature, the \nallowTouchIdEnroll\n desired capability must be set to true. When \nallowTouchIdEnroll\n is set to true\nthe Simulator will be enrolled by default, and the 'Toggle Touch ID Enrollment' changes the enrollment state.\n\n\nThis call will only work if the Appium process or its parent application (e.g., Terminal.app or Appium.app) has access to Mac OS accessibility in System Preferences > Security & Privacy > Privacy > Accessibility list\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/simulator/toggle_touch_id_enrollment\n\n\nURL Parameters\n\n\nNone\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nenabled\n\n\nboolean\n\n\nIf true, enable, if falsey disable, otherwise toggle (optional)\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Toggle touch id enrollment"
        },
        {
            "location": "/en/commands/device/simulator/toggle-touch-id-enrollment/#toggle-touch-id-enrollment",
            "text": "Toggle the simulator being  enrolled  to accept touchId  (iOS Simulator only)",
            "title": "Toggle Touch ID Enrollment"
        },
        {
            "location": "/en/commands/device/simulator/toggle-touch-id-enrollment/#example-usage",
            "text": "// Java\ndriver.toggleTouchIDEnrollment(true);  # Python\nself.driver.toggle_touch_id_enrollment()  // Javascript\n// webdriver.io example\ndriver.toggleTouchIdEnrollment(true);\n\n\n\n// wd example\nawait driver.toggleTouchIdEnrollment();  # Ruby\n@driver.toggle_touch_id_enrollment()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/simulator/toggle-touch-id-enrollment/#description",
            "text": "To enable this feature, the  allowTouchIdEnroll  desired capability must be set to true. When  allowTouchIdEnroll  is set to true\nthe Simulator will be enrolled by default, and the 'Toggle Touch ID Enrollment' changes the enrollment state.  This call will only work if the Appium process or its parent application (e.g., Terminal.app or Appium.app) has access to Mac OS accessibility in System Preferences > Security & Privacy > Privacy > Accessibility list",
            "title": "Description"
        },
        {
            "location": "/en/commands/device/simulator/toggle-touch-id-enrollment/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/simulator/toggle-touch-id-enrollment/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/simulator/toggle-touch-id-enrollment/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/simulator/toggle-touch-id-enrollment/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/simulator/toggle-touch-id-enrollment/#endpoint",
            "text": "POST /session/:session_id/simulator/toggle_touch_id_enrollment",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/simulator/toggle-touch-id-enrollment/#url-parameters",
            "text": "None",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/simulator/toggle-touch-id-enrollment/#json-parameters",
            "text": "name  type  description      enabled  boolean  If true, enable, if falsey disable, otherwise toggle (optional)",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/simulator/toggle-touch-id-enrollment/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/simulator/toggle-touch-id-enrollment/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/simulator/touch-id/",
            "text": "Perform Touch ID\n\n\nSimulate a \ntouch id\n event (iOS Simulator only)\n\n\nExample Usage\n\n\n// Java\ndriver.performTouchID(false); // Simulates a failed touch\ndriver.performTouchID(true); // Simulates a passing touch\n\n\n\n\n\n# Python\nself.driver.touch_id(false); # Simulates a failed touch\nself.driver.touch_id(true); # Simulates a passing touch\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.touchId(false); // Simulates a failed touch\ndriver.touchId(true); // Simulates a passing touch\n\n\n\n// wd example\nawait driver.touchId(false); // Simulates a failed touch\nawait driver.touchId(true); // Simulates a failed touch\n\n\n\n\n\n# Ruby\n@driver.touch_id(false) # Simulates a failed touch\n@driver.touch_id(true) # Simulates a passing touch\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nTo enable this feature, the \nallowTouchIdEnroll\n desired capability must be set to true and the Simulator\nmust be \nenrolled\n. \n\n\nWhen you set \nallowTouchIdEnroll\n to true, it will set the Simulator to be enrolled by default. \nThe enrollment state can be \ntoggled\n\n\nThis call will only work if Appium process or its parent application (e.g. Terminal.app or Appium.app) has access to Mac OS accessibility in System Preferences > Security & Privacy > Privacy > Accessibility list\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/simulator/touch_id\n\n\nURL Parameters\n\n\nNone\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nmatch\n\n\nboolean\n\n\nAre we simulating a successful touch (true) or a failed touch (false)\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification\n\n\nAppium Docs",
            "title": "Touch id"
        },
        {
            "location": "/en/commands/device/simulator/touch-id/#perform-touch-id",
            "text": "Simulate a  touch id  event (iOS Simulator only)",
            "title": "Perform Touch ID"
        },
        {
            "location": "/en/commands/device/simulator/touch-id/#example-usage",
            "text": "// Java\ndriver.performTouchID(false); // Simulates a failed touch\ndriver.performTouchID(true); // Simulates a passing touch  # Python\nself.driver.touch_id(false); # Simulates a failed touch\nself.driver.touch_id(true); # Simulates a passing touch  // Javascript\n// webdriver.io example\ndriver.touchId(false); // Simulates a failed touch\ndriver.touchId(true); // Simulates a passing touch\n\n\n\n// wd example\nawait driver.touchId(false); // Simulates a failed touch\nawait driver.touchId(true); // Simulates a failed touch  # Ruby\n@driver.touch_id(false) # Simulates a failed touch\n@driver.touch_id(true) # Simulates a passing touch  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/simulator/touch-id/#description",
            "text": "To enable this feature, the  allowTouchIdEnroll  desired capability must be set to true and the Simulator\nmust be  enrolled .   When you set  allowTouchIdEnroll  to true, it will set the Simulator to be enrolled by default. \nThe enrollment state can be  toggled  This call will only work if Appium process or its parent application (e.g. Terminal.app or Appium.app) has access to Mac OS accessibility in System Preferences > Security & Privacy > Privacy > Accessibility list",
            "title": "Description"
        },
        {
            "location": "/en/commands/device/simulator/touch-id/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/simulator/touch-id/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/simulator/touch-id/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/simulator/touch-id/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/simulator/touch-id/#endpoint",
            "text": "POST /session/:session_id/simulator/touch_id",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/simulator/touch-id/#url-parameters",
            "text": "None",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/simulator/touch-id/#json-parameters",
            "text": "name  type  description      match  boolean  Are we simulating a successful touch (true) or a failed touch (false)",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/simulator/touch-id/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/simulator/touch-id/#see-also",
            "text": "JSONWP Specification  Appium Docs",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/system/open-notifications/",
            "text": "Open Notifications\n\n\nOpen Android notifications (Emulator only)\n\n\nExample Usage\n\n\n// Java\ndriver.openNotifications();\n\n\n\n\n\n# Python\nself.driver.open_notifications();\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.openNotifications();\n\n\n\n// wd example\nawait driver.openNotifications();\n\n\n\n\n\n# Ruby\n@driver.open_notifications();\n\n\n\n\n\n# PHP\n// TODO\n\n\n\n\n\n// C#\n// TODO\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/device/open_notifications\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Open notifications"
        },
        {
            "location": "/en/commands/device/system/open-notifications/#open-notifications",
            "text": "Open Android notifications (Emulator only)",
            "title": "Open Notifications"
        },
        {
            "location": "/en/commands/device/system/open-notifications/#example-usage",
            "text": "// Java\ndriver.openNotifications();  # Python\nself.driver.open_notifications();  // Javascript\n// webdriver.io example\ndriver.openNotifications();\n\n\n\n// wd example\nawait driver.openNotifications();  # Ruby\n@driver.open_notifications();  # PHP\n// TODO  // C#\n// TODO",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/system/open-notifications/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/system/open-notifications/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/system/open-notifications/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/system/open-notifications/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/system/open-notifications/#endpoint",
            "text": "POST /session/:session_id/device/open_notifications",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/system/open-notifications/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/system/open-notifications/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/system/open-notifications/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/system/open-notifications/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/system/system-bars/",
            "text": "Get System Bars\n\n\nRetrieve visibility and bounds information of the status and navigation bars\n\n\nExample Usage\n\n\n// Java\nMap<String, String> systemBars = driver.getSystemBars();\n\n\n\n\n\n# Not supported\n\n\n\n\n// Not supported\n\n\n// Not supported\n\n\n\n\n# Ruby\n@driver.get_system_bars();\n\n\n\n\n\n# PHP\n// TODO\n\n\n\n\n\n// C#\n// TODO\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WD)\n\n\nNone\n\n\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nNone\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nNone\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/device/system_bars\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "System bars"
        },
        {
            "location": "/en/commands/device/system/system-bars/#get-system-bars",
            "text": "Retrieve visibility and bounds information of the status and navigation bars",
            "title": "Get System Bars"
        },
        {
            "location": "/en/commands/device/system/system-bars/#example-usage",
            "text": "// Java\nMap<String, String> systemBars = driver.getSystemBars();  # Not supported  // Not supported\n\n\n// Not supported  # Ruby\n@driver.get_system_bars();  # PHP\n// TODO  // C#\n// TODO",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/system/system-bars/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/system/system-bars/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/system/system-bars/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  None     Javascript (WebdriverIO)  None     Javascript (WD)  None     Ruby  All  www.rubydoc.info    PHP  None  github.com    C#  None  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/system/system-bars/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/system/system-bars/#endpoint",
            "text": "POST /session/:session_id/device/system_bars",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/system/system-bars/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/system/system-bars/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/system/system-bars/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/system/system-bars/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/device/system/system-time/",
            "text": "Get System Time\n\n\nGet the time on the device\n\n\nExample Usage\n\n\n// Java\nString time = driver.getDeviceTime();\n\n\n\n\n\n# Python\ntime = self.driver.device_time()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet time = driver.getDeviceTime();\n\n\n\n// wd example\nlet time = await driver.getDeviceTime();\n\n\n\n\n\n# Ruby\n@driver.device_time\n\n\n\n\n\n# PHP\n// TODO\n\n\n\n\n\n// C#\n// TODO\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /session/:session_id/device/system_time\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "System time"
        },
        {
            "location": "/en/commands/device/system/system-time/#get-system-time",
            "text": "Get the time on the device",
            "title": "Get System Time"
        },
        {
            "location": "/en/commands/device/system/system-time/#example-usage",
            "text": "// Java\nString time = driver.getDeviceTime();  # Python\ntime = self.driver.device_time()  // Javascript\n// webdriver.io example\nlet time = driver.getDeviceTime();\n\n\n\n// wd example\nlet time = await driver.getDeviceTime();  # Ruby\n@driver.device_time  # PHP\n// TODO  // C#\n// TODO",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/device/system/system-time/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/device/system/system-time/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/device/system/system-time/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  github.com    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/device/system/system-time/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/device/system/system-time/#endpoint",
            "text": "GET /session/:session_id/device/system_time",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/device/system/system-time/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/device/system/system-time/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/device/system/system-time/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/device/system/system-time/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/find-element/",
            "text": "Find Element\n\n\nSearch for an element on the page\n\n\nExample Usage\n\n\n// Java\nMobileElement elementOne = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nMobileElement elementTwo = (MobileElement) driver.findElementByClassName(\"SomeClassName\");\n\n\n\n\n\n# Python\nel = self.driver.find_element_by_accessibility_id('SomeAccessibilityID')\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.element(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet elementOne = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet elementTwo = await driver.element(\"id\", \"SomeID\");\n\n\n\n\n\n# Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID')\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nThe locator strategy returns the first element it finds. #TODO: Let's make a document with the locator strategies that this links to\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/element\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nusing\n\n\nstring\n\n\nThe locator strategy to use\n\n\n\n\n\n\nvalue\n\n\nstring\n\n\nThe search target\n\n\n\n\n\n\n\n\nResponse\n\n\nA JSON object for the located element (\nobject\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Find element"
        },
        {
            "location": "/en/commands/element/find-element/#find-element",
            "text": "Search for an element on the page",
            "title": "Find Element"
        },
        {
            "location": "/en/commands/element/find-element/#example-usage",
            "text": "// Java\nMobileElement elementOne = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nMobileElement elementTwo = (MobileElement) driver.findElementByClassName(\"SomeClassName\");  # Python\nel = self.driver.find_element_by_accessibility_id('SomeAccessibilityID')  // Javascript\n// webdriver.io example\ndriver.element(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet elementOne = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet elementTwo = await driver.element(\"id\", \"SomeID\");  # Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID')  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/find-element/#description",
            "text": "The locator strategy returns the first element it finds. #TODO: Let's make a document with the locator strategies that this links to",
            "title": "Description"
        },
        {
            "location": "/en/commands/element/find-element/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/find-element/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/find-element/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/find-element/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/find-element/#endpoint",
            "text": "POST /wd/hub/session/:session_id/element",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/find-element/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/find-element/#json-parameters",
            "text": "name  type  description      using  string  The locator strategy to use    value  string  The search target",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/find-element/#response",
            "text": "A JSON object for the located element ( object )",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/find-element/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/find-elements/",
            "text": "Find Elements\n\n\nSearch for multiple elements\n\n\nExample Usage\n\n\n// Java\nList<MobileElement> elementsOne = (MobileElement) driver.findElementsByAccessibilityId(\"SomeAccessibilityID\");\nList<MobileElement> elementsTwo = (MobileElement) driver.findElementsByClassName(\"SomeClassName\");\n\n\n\n\n\n# Python\nel = self.driver.find_elements_by_accessibility_id('SomeAccessibilityID')\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.elements(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet elementsOne = await driver.elementsByAccessibilityId(\"SomeAccessibilityID\");\nlet elementsTwo = await driver.elements(\"id\", \"SomeID\");\n\n\n\n\n\n# Ruby\n@driver.find_elements(\"~SomeAccessibilityID\")\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSelector Strategies\n\n\n\n\n\n\n\n\nStrategy\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nAccessibility ID\n\n\nRead a unique identifier for a UI element. For XCUITest it is the element's \nresource-id\n attribute. For Android it is the element's \ncontent-desc\n attribute.\n\n\n\n\n\n\nClass name\n\n\nFor IOS it is the full name of the XCUI element and begins with XCUIElementType. For Android it is the full name of the UIAutomator2 class (e.g.: android.widget.TextView)\n\n\n\n\n\n\nID\n\n\nNative element identifier. For Android\n\n\n\n\n\n\n@key\n\n\n\n\n\n\n\n\n\n\nDescription\n\n\nGet a list of elements that match the \nlocator selector\n.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/elements\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nusing\n\n\nstring\n\n\nThe locator strategy to use\n\n\n\n\n\n\nvalue\n\n\nstring\n\n\nThe search target\n\n\n\n\n\n\n\n\nResponse\n\n\nA list of of JSON objects for the located elements (\nArray<String>\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Find elements"
        },
        {
            "location": "/en/commands/element/find-elements/#find-elements",
            "text": "Search for multiple elements",
            "title": "Find Elements"
        },
        {
            "location": "/en/commands/element/find-elements/#example-usage",
            "text": "// Java\nList<MobileElement> elementsOne = (MobileElement) driver.findElementsByAccessibilityId(\"SomeAccessibilityID\");\nList<MobileElement> elementsTwo = (MobileElement) driver.findElementsByClassName(\"SomeClassName\");  # Python\nel = self.driver.find_elements_by_accessibility_id('SomeAccessibilityID')  // Javascript\n// webdriver.io example\ndriver.elements(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet elementsOne = await driver.elementsByAccessibilityId(\"SomeAccessibilityID\");\nlet elementsTwo = await driver.elements(\"id\", \"SomeID\");  # Ruby\n@driver.find_elements(\"~SomeAccessibilityID\")  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/find-elements/#selector-strategies",
            "text": "Strategy  Description      Accessibility ID  Read a unique identifier for a UI element. For XCUITest it is the element's  resource-id  attribute. For Android it is the element's  content-desc  attribute.    Class name  For IOS it is the full name of the XCUI element and begins with XCUIElementType. For Android it is the full name of the UIAutomator2 class (e.g.: android.widget.TextView)    ID  Native element identifier. For Android    @key",
            "title": "Selector Strategies"
        },
        {
            "location": "/en/commands/element/find-elements/#description",
            "text": "Get a list of elements that match the  locator selector .",
            "title": "Description"
        },
        {
            "location": "/en/commands/element/find-elements/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/find-elements/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/find-elements/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/find-elements/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/find-elements/#endpoint",
            "text": "POST /wd/hub/session/:session_id/elements",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/find-elements/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/find-elements/#json-parameters",
            "text": "name  type  description      using  string  The locator strategy to use    value  string  The search target",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/find-elements/#response",
            "text": "A list of of JSON objects for the located elements ( Array<String> )",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/find-elements/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/actions/clear/",
            "text": "Clear Element\n\n\nClear an element's value\n\n\nExample Usage\n\n\n// Java\nMobileElement element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nelement.clear();\n\n\n\n\n\n# Python\nself.driver.find_element_by_accessibility_id('SomeAccessibilityID').clear()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.clearElement(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nawait element.clear();\n\n\n\n\n\n# Ruby\n@driver.find_element(:accessibility_id, \"SomeAccessibilityID\").clear()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/element/:element_id/clear\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to clear.\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Clear"
        },
        {
            "location": "/en/commands/element/actions/clear/#clear-element",
            "text": "Clear an element's value",
            "title": "Clear Element"
        },
        {
            "location": "/en/commands/element/actions/clear/#example-usage",
            "text": "// Java\nMobileElement element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nelement.clear();  # Python\nself.driver.find_element_by_accessibility_id('SomeAccessibilityID').clear()  // Javascript\n// webdriver.io example\ndriver.clearElement(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nawait element.clear();  # Ruby\n@driver.find_element(:accessibility_id, \"SomeAccessibilityID\").clear()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/actions/clear/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/actions/clear/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/actions/clear/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/actions/clear/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/actions/clear/#endpoint",
            "text": "POST /wd/hub/session/:session_id/element/:element_id/clear",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/actions/clear/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to clear.",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/actions/clear/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/actions/clear/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/actions/clear/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/actions/click/",
            "text": "Click\n\n\nClick element at its center point.\n\n\nExample Usage\n\n\n// Java\nMobileElement el = driver.findElementByAccessibilityId(\"SomeId\");\nel.click();\n\n\n\n\n\n# Python\nel = self.driver.find_element_by_accessibility_id('SomeId')\nel.click();\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.click('#SomeId');\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId('id', 'SomeId');\nawait element.click();\n\n\n\n\n\n# Ruby\n@driver.find_element(:accessibility_id, 'SomeId').click\n\n\n\n\n\n# PHP\n// TODO\n\n\n\n\n\n// C#\n// TODO\n\n\n\n\n\nDescription\n\n\nClicks element at its center point. If the element's center point is obscured by another element, an element click intercepted error is returned. If the element is outside the viewport, an element not interactable error is returned.\nNot all drivers automatically scroll the element into view and may need to be scrolled to in order to interact with it.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/element/:element_id/click\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nUUID of the session\n\n\n\n\n\n\nelement_id\n\n\nUUID of the element\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Click"
        },
        {
            "location": "/en/commands/element/actions/click/#click",
            "text": "Click element at its center point.",
            "title": "Click"
        },
        {
            "location": "/en/commands/element/actions/click/#example-usage",
            "text": "// Java\nMobileElement el = driver.findElementByAccessibilityId(\"SomeId\");\nel.click();  # Python\nel = self.driver.find_element_by_accessibility_id('SomeId')\nel.click();  // Javascript\n// webdriver.io example\ndriver.click('#SomeId');\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId('id', 'SomeId');\nawait element.click();  # Ruby\n@driver.find_element(:accessibility_id, 'SomeId').click  # PHP\n// TODO  // C#\n// TODO",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/actions/click/#description",
            "text": "Clicks element at its center point. If the element's center point is obscured by another element, an element click intercepted error is returned. If the element is outside the viewport, an element not interactable error is returned.\nNot all drivers automatically scroll the element into view and may need to be scrolled to in order to interact with it.",
            "title": "Description"
        },
        {
            "location": "/en/commands/element/actions/click/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/actions/click/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/actions/click/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/actions/click/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/actions/click/#endpoint",
            "text": "POST /wd/hub/session/:session_id/element/:element_id/click",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/actions/click/#url-parameters",
            "text": "name  description      session_id  UUID of the session    element_id  UUID of the element",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/actions/click/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/actions/click/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/actions/click/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/actions/send-keys/",
            "text": "Send Keys\n\n\nSend a sequence of key strokes to an element\n\n\nExample Usage\n\n\n// Java\nMobileElement element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nelement.sendKeys(\"Hello world!\");\n\n\n\n\n\n# Python\nself.driver.find_element_by_accessibility_id('SomeAccessibilityID').send_keys('Hello world!')\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.setValue(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nawait element.type(\"Hello world!\")\n\n\n\n\n\n# Ruby\n@driver.find_element(:accessibility_id, \"SomeAccessibilityID\").send_keys(\"Hello World!\")\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nAny UTF-8 character may be specified, however, if the server does not support native key events, it should simulate key strokes for a standard US keyboard layout. The Unicode Private Use Area code points, 0xE000-0xF8FF, are used to represent pressable, non-text keys (see table below).\n(See \nUnicode document\n for information on Unicode characters)\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/element/value\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to send keys to.\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nvalue\n\n\narray<string>\n\n\nThe sequence of keys to type. An array must be provided. The server should flatten the array items to a single string to be typed.\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Send keys"
        },
        {
            "location": "/en/commands/element/actions/send-keys/#send-keys",
            "text": "Send a sequence of key strokes to an element",
            "title": "Send Keys"
        },
        {
            "location": "/en/commands/element/actions/send-keys/#example-usage",
            "text": "// Java\nMobileElement element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nelement.sendKeys(\"Hello world!\");  # Python\nself.driver.find_element_by_accessibility_id('SomeAccessibilityID').send_keys('Hello world!')  // Javascript\n// webdriver.io example\ndriver.setValue(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nawait element.type(\"Hello world!\")  # Ruby\n@driver.find_element(:accessibility_id, \"SomeAccessibilityID\").send_keys(\"Hello World!\")  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/actions/send-keys/#description",
            "text": "Any UTF-8 character may be specified, however, if the server does not support native key events, it should simulate key strokes for a standard US keyboard layout. The Unicode Private Use Area code points, 0xE000-0xF8FF, are used to represent pressable, non-text keys (see table below).\n(See  Unicode document  for information on Unicode characters)",
            "title": "Description"
        },
        {
            "location": "/en/commands/element/actions/send-keys/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/actions/send-keys/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/actions/send-keys/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/actions/send-keys/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/actions/send-keys/#endpoint",
            "text": "POST /wd/hub/session/:session_id/element/value",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/actions/send-keys/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to send keys to.",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/actions/send-keys/#json-parameters",
            "text": "name  type  description      value  array<string>  The sequence of keys to type. An array must be provided. The server should flatten the array items to a single string to be typed.",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/actions/send-keys/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/actions/send-keys/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/attributes/attribute/",
            "text": "Get Element Attribute\n\n\nGet the value of an element's attribute\n\n\nExample Usage\n\n\n// Java\nList<MobileElement> element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nString tagName = element.getAttribute(\"content-desc\");\n\n\n\n\n\n# Python\ntagName = self.driver.find_element_by_accessibility_id('SomeAccessibilityID').get_attribute('content-desc')\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet attribute = driver.getAttribute(\"~SomeAccessibilityId\", \"content-desc\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet tagName = await element.getAttribute(\"content-desc\");\n\n\n\n\n\n# Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID').attribute(\"content-desc\")\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/elements/:element_id/attribute/:name\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to get the attribute from\n\n\n\n\n\n\nname\n\n\nThe name of the attribute\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nThe value of the attribute or null if not set (\nstring\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Attribute"
        },
        {
            "location": "/en/commands/element/attributes/attribute/#get-element-attribute",
            "text": "Get the value of an element's attribute",
            "title": "Get Element Attribute"
        },
        {
            "location": "/en/commands/element/attributes/attribute/#example-usage",
            "text": "// Java\nList<MobileElement> element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nString tagName = element.getAttribute(\"content-desc\");  # Python\ntagName = self.driver.find_element_by_accessibility_id('SomeAccessibilityID').get_attribute('content-desc')  // Javascript\n// webdriver.io example\nlet attribute = driver.getAttribute(\"~SomeAccessibilityId\", \"content-desc\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet tagName = await element.getAttribute(\"content-desc\");  # Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID').attribute(\"content-desc\")  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/attributes/attribute/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/attributes/attribute/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/attributes/attribute/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/attributes/attribute/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/attributes/attribute/#endpoint",
            "text": "GET /wd/hub/session/:session_id/elements/:element_id/attribute/:name",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/attributes/attribute/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to get the attribute from    name  The name of the attribute",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/attributes/attribute/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/attributes/attribute/#response",
            "text": "The value of the attribute or null if not set ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/attributes/attribute/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/attributes/css-property/",
            "text": "Get Element CSS Value\n\n\nQuery the value of a web element's computed CSS property\n\n\nExample Usage\n\n\n// Java\nList<MobileElement> element = (MobileElement) driver.findElementById(\"SomeId\");\nString cssProperty = element.getCssValue(\"style\");\n\n\n\n\n\n# Python\ncssProperty = self.driver.find_element_by_accessibility_id('SomeId').value_of_css_property(\"style\")\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet cssProperty = driver.getCssProperty(\"~SomeId\", \"style\");\n\n\n\n// wd example\nlet element = await driver.elementById(\"SomeId\");\nlet cssProperty = await element.getComputedCss();\n\n\n\n\n\n# Ruby\n@driver.find_element(:id, 'SomeId').css_value\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nThe CSS property to query should be specified using the CSS property name, not the JavaScript property name (e.g. background-color instead of backgroundColor).\n\n\nThis command only applies to webview contexts\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/elements/:element_id/css/:property_name\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to get the property from\n\n\n\n\n\n\nproperty_name\n\n\nName of the CSS property\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nValue of the CSS property (\nstring\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Css property"
        },
        {
            "location": "/en/commands/element/attributes/css-property/#get-element-css-value",
            "text": "Query the value of a web element's computed CSS property",
            "title": "Get Element CSS Value"
        },
        {
            "location": "/en/commands/element/attributes/css-property/#example-usage",
            "text": "// Java\nList<MobileElement> element = (MobileElement) driver.findElementById(\"SomeId\");\nString cssProperty = element.getCssValue(\"style\");  # Python\ncssProperty = self.driver.find_element_by_accessibility_id('SomeId').value_of_css_property(\"style\")  // Javascript\n// webdriver.io example\nlet cssProperty = driver.getCssProperty(\"~SomeId\", \"style\");\n\n\n\n// wd example\nlet element = await driver.elementById(\"SomeId\");\nlet cssProperty = await element.getComputedCss();  # Ruby\n@driver.find_element(:id, 'SomeId').css_value  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/attributes/css-property/#description",
            "text": "The CSS property to query should be specified using the CSS property name, not the JavaScript property name (e.g. background-color instead of backgroundColor).  This command only applies to webview contexts",
            "title": "Description"
        },
        {
            "location": "/en/commands/element/attributes/css-property/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/attributes/css-property/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/attributes/css-property/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/attributes/css-property/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/attributes/css-property/#endpoint",
            "text": "GET /wd/hub/session/:session_id/elements/:element_id/css/:property_name",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/attributes/css-property/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to get the property from    property_name  Name of the CSS property",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/attributes/css-property/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/attributes/css-property/#response",
            "text": "Value of the CSS property ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/attributes/css-property/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/attributes/displayed/",
            "text": "Is Element Displayed\n\n\nDetermine if an element is currently displayed\n\n\nExample Usage\n\n\n// Java\nMobileElement element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nboolean isDisplayed = element.isDisplayed();\n\n\n\n\n\n# Python\nself.driver.find_element_by_accessibility_id('SomeAccessibilityID').is_displayed()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet isDisplayed = driver.elementIdDisplayed(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet isDisplayed = await element.isDisplayed();\n\n\n\n\n\n# Ruby\n@driver.find_element(:accessibility_id, \"SomeAccessibilityID\").displayed?()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/element/:element_id/displayed\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to check if it is displayed\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nWhether the element is displayed (\nboolean\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Displayed"
        },
        {
            "location": "/en/commands/element/attributes/displayed/#is-element-displayed",
            "text": "Determine if an element is currently displayed",
            "title": "Is Element Displayed"
        },
        {
            "location": "/en/commands/element/attributes/displayed/#example-usage",
            "text": "// Java\nMobileElement element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nboolean isDisplayed = element.isDisplayed();  # Python\nself.driver.find_element_by_accessibility_id('SomeAccessibilityID').is_displayed()  // Javascript\n// webdriver.io example\nlet isDisplayed = driver.elementIdDisplayed(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet isDisplayed = await element.isDisplayed();  # Ruby\n@driver.find_element(:accessibility_id, \"SomeAccessibilityID\").displayed?()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/attributes/displayed/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/attributes/displayed/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/attributes/displayed/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/attributes/displayed/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/attributes/displayed/#endpoint",
            "text": "GET /wd/hub/session/:session_id/element/:element_id/displayed",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/attributes/displayed/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to check if it is displayed",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/attributes/displayed/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/attributes/displayed/#response",
            "text": "Whether the element is displayed ( boolean )",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/attributes/displayed/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/attributes/enabled/",
            "text": "Is Element Enabled\n\n\nDetermine if an element is currently enabled\n\n\nExample Usage\n\n\n// Java\nMobileElement element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nboolean isEnabled = element.isEnabled();\n\n\n\n\n\n# Python\nself.driver.find_element_by_accessibility_id('SomeAccessibilityID').is_enabled()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet isEnabled = driver.isEnabled(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet isEnabled = await element.isEnabled();\n\n\n\n\n\n# Ruby\n@driver.find_element(:accessibility_id, \"SomeAccessibilityID\").enabled?()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/element/:element_id/enabled\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to check if it is enabled\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nWhether the element is enabled (\nboolean\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Enabled"
        },
        {
            "location": "/en/commands/element/attributes/enabled/#is-element-enabled",
            "text": "Determine if an element is currently enabled",
            "title": "Is Element Enabled"
        },
        {
            "location": "/en/commands/element/attributes/enabled/#example-usage",
            "text": "// Java\nMobileElement element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nboolean isEnabled = element.isEnabled();  # Python\nself.driver.find_element_by_accessibility_id('SomeAccessibilityID').is_enabled()  // Javascript\n// webdriver.io example\nlet isEnabled = driver.isEnabled(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet isEnabled = await element.isEnabled();  # Ruby\n@driver.find_element(:accessibility_id, \"SomeAccessibilityID\").enabled?()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/attributes/enabled/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/attributes/enabled/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/attributes/enabled/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/attributes/enabled/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/attributes/enabled/#endpoint",
            "text": "GET /wd/hub/session/:session_id/element/:element_id/enabled",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/attributes/enabled/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to check if it is enabled",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/attributes/enabled/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/attributes/enabled/#response",
            "text": "Whether the element is enabled ( boolean )",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/attributes/enabled/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/attributes/location-in-view/",
            "text": "Get Element Location in View\n\n\nDetermine an element's location on the screen once it has been scrolled into view (mainly an internal command and not supported by all clients)\n\n\nExample Usage\n\n\n// Not supported\n\n\n\n\n# Not supported\n\n\n\n\n// Javascript\n// webdriver.io example\nlet location = driver.getLocationInView(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet location = await element.getLocationInView();\n\n\n\n\n\n# Not supported\n\n\n\n\n// Not supported\n\n\n\n\n// Not supported\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\n\n\n\n\n\n\nPython\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\n\n\n\n\n\n\nC#\n\n\nAll\n\n\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/elements/:element_id/location_in_view\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to get the location-in-view of\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nnumber\n\n\nX coordinate\n\n\n\n\n\n\ny\n\n\nnumber\n\n\nY coordinate\n\n\n\n\n\n\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Location in view"
        },
        {
            "location": "/en/commands/element/attributes/location-in-view/#get-element-location-in-view",
            "text": "Determine an element's location on the screen once it has been scrolled into view (mainly an internal command and not supported by all clients)",
            "title": "Get Element Location in View"
        },
        {
            "location": "/en/commands/element/attributes/location-in-view/#example-usage",
            "text": "// Not supported  # Not supported  // Javascript\n// webdriver.io example\nlet location = driver.getLocationInView(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet location = await element.getLocationInView();  # Not supported  // Not supported  // Not supported",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/attributes/location-in-view/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/attributes/location-in-view/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/attributes/location-in-view/#appium-clients",
            "text": "Language  Support  Documentation      Java  All     Python  All     Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All     PHP  All     C#  All",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/attributes/location-in-view/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/attributes/location-in-view/#endpoint",
            "text": "GET /wd/hub/session/:session_id/elements/:element_id/location_in_view",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/attributes/location-in-view/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to get the location-in-view of",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/attributes/location-in-view/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/attributes/location-in-view/#response",
            "text": "name  type  description      x  number  X coordinate    y  number  Y coordinate",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/attributes/location-in-view/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/attributes/location/",
            "text": "Get Element Location\n\n\nDetermine an element's location on the page or screen\n\n\nExample Usage\n\n\n// Java\nList<MobileElement> element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nPoint location = element.getLocation();\n\n\n\n\n\n# Python\nlocation = self.driver.find_element_by_accessibility_id('SomeAccessibilityID').location\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet location = driver.getLocation(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet location = await element.getLocation();\n\n\n\n\n\n# Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID').location\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nThe point (0, 0) refers to the upper-left corner of the page. The element's coordinates are returned as a JSON object with x and y properties\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/elements/:element_id/location\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to get the location of\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nnumber\n\n\nX coordinate\n\n\n\n\n\n\ny\n\n\nnumber\n\n\nY coordinate\n\n\n\n\n\n\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Location"
        },
        {
            "location": "/en/commands/element/attributes/location/#get-element-location",
            "text": "Determine an element's location on the page or screen",
            "title": "Get Element Location"
        },
        {
            "location": "/en/commands/element/attributes/location/#example-usage",
            "text": "// Java\nList<MobileElement> element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nPoint location = element.getLocation();  # Python\nlocation = self.driver.find_element_by_accessibility_id('SomeAccessibilityID').location  // Javascript\n// webdriver.io example\nlet location = driver.getLocation(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet location = await element.getLocation();  # Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID').location  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/attributes/location/#description",
            "text": "The point (0, 0) refers to the upper-left corner of the page. The element's coordinates are returned as a JSON object with x and y properties",
            "title": "Description"
        },
        {
            "location": "/en/commands/element/attributes/location/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/attributes/location/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/attributes/location/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/attributes/location/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/attributes/location/#endpoint",
            "text": "GET /wd/hub/session/:session_id/elements/:element_id/location",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/attributes/location/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to get the location of",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/attributes/location/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/attributes/location/#response",
            "text": "name  type  description      x  number  X coordinate    y  number  Y coordinate",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/attributes/location/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/attributes/name/",
            "text": "Get Tag Name\n\n\nGet an element's tag name\n\n\nExample Usage\n\n\n// Java\nList<MobileElement> element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nString tagName = element.getTagName();\n\n\n\n\n\n# Python\ntagName = self.driver.find_element_by_accessibility_id('SomeAccessibilityID').tag_name\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet tagName = driver.getTagName(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet tagName = await element.getTagName();\n\n\n\n\n\n# Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID').tag_name\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/elements/:element_id/name\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to get the name from\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nThe tag name of the element (\nstring\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Name"
        },
        {
            "location": "/en/commands/element/attributes/name/#get-tag-name",
            "text": "Get an element's tag name",
            "title": "Get Tag Name"
        },
        {
            "location": "/en/commands/element/attributes/name/#example-usage",
            "text": "// Java\nList<MobileElement> element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nString tagName = element.getTagName();  # Python\ntagName = self.driver.find_element_by_accessibility_id('SomeAccessibilityID').tag_name  // Javascript\n// webdriver.io example\nlet tagName = driver.getTagName(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet tagName = await element.getTagName();  # Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID').tag_name  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/attributes/name/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/attributes/name/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/attributes/name/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/attributes/name/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/attributes/name/#endpoint",
            "text": "GET /wd/hub/session/:session_id/elements/:element_id/name",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/attributes/name/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to get the name from",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/attributes/name/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/attributes/name/#response",
            "text": "The tag name of the element ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/attributes/name/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/attributes/page-index/",
            "text": "Get Tag Name\n\n\nGet an element's tag name\n\n\nExample Usage\n\n\n// Java\nMobileElement element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nString tagName = element.getTagName();\n\n\n\n\n\n# Python\ntagName = self.driver.find_element_by_accessibility_id('SomeAccessibilityID').tag_name\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet tagName = driver.getTagName(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet tagName = await element.getTagName();\n\n\n\n\n\n# Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID').tag_name\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/elements/:element_id/name\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to get the name from\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nThe tag name of the element (\nstring\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Page index"
        },
        {
            "location": "/en/commands/element/attributes/page-index/#get-tag-name",
            "text": "Get an element's tag name",
            "title": "Get Tag Name"
        },
        {
            "location": "/en/commands/element/attributes/page-index/#example-usage",
            "text": "// Java\nMobileElement element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nString tagName = element.getTagName();  # Python\ntagName = self.driver.find_element_by_accessibility_id('SomeAccessibilityID').tag_name  // Javascript\n// webdriver.io example\nlet tagName = driver.getTagName(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet tagName = await element.getTagName();  # Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID').tag_name  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/attributes/page-index/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/attributes/page-index/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/attributes/page-index/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/attributes/page-index/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/attributes/page-index/#endpoint",
            "text": "GET /wd/hub/session/:session_id/elements/:element_id/name",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/attributes/page-index/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to get the name from",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/attributes/page-index/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/attributes/page-index/#response",
            "text": "The tag name of the element ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/attributes/page-index/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/attributes/rect/",
            "text": "Get Element Rect\n\n\nGets dimensions and coordinates of an element\n\n\nExample Usage\n\n\n// Java\nList<MobileElement> element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nRectangle rect = element.getRect();\n\n\n\n\n\n# Not supported\n\n\n\n\n// Javascript\n// webdriver.io example\nlet rect = driver.elementIdRect(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet rect = await element.getRect();\n\n\n\n\n\n# Not supported\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/elements/:element_id/rect\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to get the rect of\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nnumber\n\n\nX coordinate\n\n\n\n\n\n\ny\n\n\nnumber\n\n\nY coordinate\n\n\n\n\n\n\nheight\n\n\nnumber\n\n\nHeight of the bounding rectangle\n\n\n\n\n\n\nweight\n\n\nnumber\n\n\nWidth of the bounding rectangle\n\n\n\n\n\n\n\n\nSee Also\n\n\n\n\nW3C Specification",
            "title": "Rect"
        },
        {
            "location": "/en/commands/element/attributes/rect/#get-element-rect",
            "text": "Gets dimensions and coordinates of an element",
            "title": "Get Element Rect"
        },
        {
            "location": "/en/commands/element/attributes/rect/#example-usage",
            "text": "// Java\nList<MobileElement> element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nRectangle rect = element.getRect();  # Not supported  // Javascript\n// webdriver.io example\nlet rect = driver.elementIdRect(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet rect = await element.getRect();  # Not supported  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/attributes/rect/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/attributes/rect/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/attributes/rect/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All     Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All     Ruby  All     PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/attributes/rect/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/attributes/rect/#endpoint",
            "text": "GET /wd/hub/session/:session_id/elements/:element_id/rect",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/attributes/rect/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to get the rect of",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/attributes/rect/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/attributes/rect/#response",
            "text": "name  type  description      x  number  X coordinate    y  number  Y coordinate    height  number  Height of the bounding rectangle    weight  number  Width of the bounding rectangle",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/attributes/rect/#see-also",
            "text": "W3C Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/attributes/replace-value/",
            "text": "Get Element Text\n\n\nReturns visible text for element\n\n\nExample Usage\n\n\n// Java\nMobileElement element = (MobileElement) driver.findElementByClassName(\"SomeClassName\");\nlet elText = element.getText();\n\n\n\n\n\n# Python\n# el = self.driver.find_element_by_accessibility_id('SomeId')\n# TODO: Python example\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.getText(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nawait element.submit();\n\n\n\n\n\n# Ruby\n# TODO Ruby sample\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nReturns the visible text for the element.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/element/:element_id/value\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to get the text from\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Replace value"
        },
        {
            "location": "/en/commands/element/attributes/replace-value/#get-element-text",
            "text": "Returns visible text for element",
            "title": "Get Element Text"
        },
        {
            "location": "/en/commands/element/attributes/replace-value/#example-usage",
            "text": "// Java\nMobileElement element = (MobileElement) driver.findElementByClassName(\"SomeClassName\");\nlet elText = element.getText();  # Python\n# el = self.driver.find_element_by_accessibility_id('SomeId')\n# TODO: Python example  // Javascript\n// webdriver.io example\ndriver.getText(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nawait element.submit();  # Ruby\n# TODO Ruby sample  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/attributes/replace-value/#description",
            "text": "Returns the visible text for the element.",
            "title": "Description"
        },
        {
            "location": "/en/commands/element/attributes/replace-value/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/attributes/replace-value/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/attributes/replace-value/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/attributes/replace-value/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/attributes/replace-value/#endpoint",
            "text": "POST /wd/hub/session/:session_id/element/:element_id/value",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/attributes/replace-value/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to get the text from",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/attributes/replace-value/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/attributes/replace-value/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/attributes/replace-value/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/attributes/selected/",
            "text": "Is Element Selected\n\n\nDetermine if a form or form-like element (checkbox, select, etc...) is selected\n\n\nExample Usage\n\n\n// Java\nMobileElement element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nboolean isSelected = element.isSelected();\n\n\n\n\n\n# Python\nself.driver.find_element_by_accessibility_id('SomeAccessibilityID').is_selected()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet isSelected = driver.isSelected(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet isSelected = await element.isSelected();\n\n\n\n\n\n# Ruby\n@driver.find_element(:accessibility_id, \"SomeAccessibilityID\").selected?()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/element/:element_id/selected\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to check if it is selected\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nWhether the element is selected (\nboolean\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Selected"
        },
        {
            "location": "/en/commands/element/attributes/selected/#is-element-selected",
            "text": "Determine if a form or form-like element (checkbox, select, etc...) is selected",
            "title": "Is Element Selected"
        },
        {
            "location": "/en/commands/element/attributes/selected/#example-usage",
            "text": "// Java\nMobileElement element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nboolean isSelected = element.isSelected();  # Python\nself.driver.find_element_by_accessibility_id('SomeAccessibilityID').is_selected()  // Javascript\n// webdriver.io example\nlet isSelected = driver.isSelected(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet isSelected = await element.isSelected();  # Ruby\n@driver.find_element(:accessibility_id, \"SomeAccessibilityID\").selected?()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/attributes/selected/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/attributes/selected/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/attributes/selected/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/attributes/selected/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/attributes/selected/#endpoint",
            "text": "GET /wd/hub/session/:session_id/element/:element_id/selected",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/attributes/selected/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to check if it is selected",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/attributes/selected/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/attributes/selected/#response",
            "text": "Whether the element is selected ( boolean )",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/attributes/selected/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/attributes/size/",
            "text": "Get Element Size\n\n\nDetermine an element's size in pixels\n\n\nExample Usage\n\n\n// Java\nList<MobileElement> element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nDimension elementSize = element.getSize();\n\n\n\n\n\n# Python\nsize = self.driver.find_element_by_accessibility_id('SomeAccessibilityID').size\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet size = driver.getElementSize(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet size = await element.getSize();\n\n\n\n\n\n# Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID').size\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nThe size will be returned as an object with width and height properties.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/elements/:element_id/size\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to get the size of\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nwidth\n\n\nnumber\n\n\nWidth of the element\n\n\n\n\n\n\nheight\n\n\nnumber\n\n\nHeight of the element\n\n\n\n\n\n\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Size"
        },
        {
            "location": "/en/commands/element/attributes/size/#get-element-size",
            "text": "Determine an element's size in pixels",
            "title": "Get Element Size"
        },
        {
            "location": "/en/commands/element/attributes/size/#example-usage",
            "text": "// Java\nList<MobileElement> element = (MobileElement) driver.findElementByAccessibilityId(\"SomeAccessibilityID\");\nDimension elementSize = element.getSize();  # Python\nsize = self.driver.find_element_by_accessibility_id('SomeAccessibilityID').size  // Javascript\n// webdriver.io example\nlet size = driver.getElementSize(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nlet size = await element.getSize();  # Ruby\n@driver.find_element(:accessibility_id, 'SomeAccessibilityID').size  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/attributes/size/#description",
            "text": "The size will be returned as an object with width and height properties.",
            "title": "Description"
        },
        {
            "location": "/en/commands/element/attributes/size/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/attributes/size/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/attributes/size/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/attributes/size/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/attributes/size/#endpoint",
            "text": "GET /wd/hub/session/:session_id/elements/:element_id/size",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/attributes/size/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to get the size of",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/attributes/size/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/attributes/size/#response",
            "text": "name  type  description      width  number  Width of the element    height  number  Height of the element",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/attributes/size/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/attributes/text/",
            "text": "Get Element Text\n\n\nReturns visible text for element\n\n\nExample Usage\n\n\n// Java\nMobileElement element = (MobileElement) driver.findElementByClassName(\"SomeClassName\");\nlet elText = element.getText();\n\n\n\n\n\n# Python\n# el = self.driver.find_element_by_accessibility_id('SomeId')\n# TODO: Python example\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.getText(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nawait element.submit();\n\n\n\n\n\n# Ruby\n# TODO Ruby sample\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nReturns the visible text for the element.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/element/:element_id/text\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to get the text from\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Text"
        },
        {
            "location": "/en/commands/element/attributes/text/#get-element-text",
            "text": "Returns visible text for element",
            "title": "Get Element Text"
        },
        {
            "location": "/en/commands/element/attributes/text/#example-usage",
            "text": "// Java\nMobileElement element = (MobileElement) driver.findElementByClassName(\"SomeClassName\");\nlet elText = element.getText();  # Python\n# el = self.driver.find_element_by_accessibility_id('SomeId')\n# TODO: Python example  // Javascript\n// webdriver.io example\ndriver.getText(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nawait element.submit();  # Ruby\n# TODO Ruby sample  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/attributes/text/#description",
            "text": "Returns the visible text for the element.",
            "title": "Description"
        },
        {
            "location": "/en/commands/element/attributes/text/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/attributes/text/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/attributes/text/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/attributes/text/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/attributes/text/#endpoint",
            "text": "GET /wd/hub/session/:session_id/element/:element_id/text",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/attributes/text/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to get the text from",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/attributes/text/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/attributes/text/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/attributes/text/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/other/active/",
            "text": "Get Active Element\n\n\nGets the active element of the current session\n\n\nExample Usage\n\n\n// Java\nWebElement currentElement = driver.switchTo().activeElement();\n\n\n\n\n\n# Python\nelement = driver.switch_to.active_element\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.elementActive();\n\n\n\n// wd example\nlet element = await driver.active();\n\n\n\n\n\n# Ruby\n# TODO Ruby example\n\n\n\n\n\n# PHP\n// TODO PHP example\n\n\n\n\n\n// C#\n// TODO C# example\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/element/active\n\n\nURL Parameters\n\n\nNone\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nA JSON object for the located element (\nobject\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Active"
        },
        {
            "location": "/en/commands/element/other/active/#get-active-element",
            "text": "Gets the active element of the current session",
            "title": "Get Active Element"
        },
        {
            "location": "/en/commands/element/other/active/#example-usage",
            "text": "// Java\nWebElement currentElement = driver.switchTo().activeElement();  # Python\nelement = driver.switch_to.active_element  // Javascript\n// webdriver.io example\ndriver.elementActive();\n\n\n\n// wd example\nlet element = await driver.active();  # Ruby\n# TODO Ruby example  # PHP\n// TODO PHP example  // C#\n// TODO C# example",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/other/active/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/other/active/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/other/active/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/other/active/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/other/active/#endpoint",
            "text": "POST /wd/hub/session/:session_id/element/active",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/other/active/#url-parameters",
            "text": "None",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/other/active/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/other/active/#response",
            "text": "A JSON object for the located element ( object )",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/other/active/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/other/equals-element/",
            "text": "Are Elements Equal\n\n\nTest if two element IDs refer to the same element\n\n\nExample Usage\n\n\n// Java\n// Overrides the Java Object .equals method\nMobileElement elementOne = (MobileElement) driver.findElementByClassName(\"SomeClassName\");\nMobileElement elementTwo = (MobileElement) driver.findElementByClassName(\"SomeOtherClassName\");\nboolean isEqual = elementOne.equals(elementTwo);\n\n\n\n\n\n# Python\n# TODO Python sample\n\n\n\n\n\n// Javascript\n// webdriver.io example\n# TODO WDIO example\n\n\n\n// wd example\nlet elementOne = await driver.elementByClassName(\"someClass\");\nlet elementTwo = await driver.elementByClassName(\"someOtherClass\");\nlet isEqual = await elementOne.equalsElement(elementTwo);\n\n\n\n\n\n# Ruby\n# TODO Ruby example\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/element/:element_id/equals/:other_element_id\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element\n\n\n\n\n\n\nelement_id\n\n\nID of the other element to check if they're equal\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nWhether the two ID's refer to the same element (\nboolean\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Equals element"
        },
        {
            "location": "/en/commands/element/other/equals-element/#are-elements-equal",
            "text": "Test if two element IDs refer to the same element",
            "title": "Are Elements Equal"
        },
        {
            "location": "/en/commands/element/other/equals-element/#example-usage",
            "text": "// Java\n// Overrides the Java Object .equals method\nMobileElement elementOne = (MobileElement) driver.findElementByClassName(\"SomeClassName\");\nMobileElement elementTwo = (MobileElement) driver.findElementByClassName(\"SomeOtherClassName\");\nboolean isEqual = elementOne.equals(elementTwo);  # Python\n# TODO Python sample  // Javascript\n// webdriver.io example\n# TODO WDIO example\n\n\n\n// wd example\nlet elementOne = await driver.elementByClassName(\"someClass\");\nlet elementTwo = await driver.elementByClassName(\"someOtherClass\");\nlet isEqual = await elementOne.equalsElement(elementTwo);  # Ruby\n# TODO Ruby example  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/other/equals-element/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/other/equals-element/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/other/equals-element/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/other/equals-element/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/other/equals-element/#endpoint",
            "text": "GET /wd/hub/session/:session_id/element/:element_id/equals/:other_element_id",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/other/equals-element/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element    element_id  ID of the other element to check if they're equal",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/other/equals-element/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/other/equals-element/#response",
            "text": "Whether the two ID's refer to the same element ( boolean )",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/other/equals-element/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/element/other/submit/",
            "text": "Submit Form\n\n\nSubmit a FORM element\n\n\nExample Usage\n\n\n// Java\nMobileElement element = (MobileElement) driver.findElementByClassName(\"SomeClassName\");\nelement.submit();\n\n\n\n\n\n# Python\nel = self.driver.find_element_by_accessibility_id('SomeAccessibilityID')\nel.submit();\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.submitForm(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nawait element.submit();\n\n\n\n\n\n# Ruby\n# TODO Ruby sample\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nThe submit command may also be applied to any element that is a descendant of a FORM element (Web only)\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/element/:element_id/submit\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nelement_id\n\n\nID of the element to submit\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Submit"
        },
        {
            "location": "/en/commands/element/other/submit/#submit-form",
            "text": "Submit a FORM element",
            "title": "Submit Form"
        },
        {
            "location": "/en/commands/element/other/submit/#example-usage",
            "text": "// Java\nMobileElement element = (MobileElement) driver.findElementByClassName(\"SomeClassName\");\nelement.submit();  # Python\nel = self.driver.find_element_by_accessibility_id('SomeAccessibilityID')\nel.submit();  // Javascript\n// webdriver.io example\ndriver.submitForm(\"~SomeAccessibilityId\");\n\n\n\n// wd example\nlet element = await driver.elementByAccessibilityId(\"SomeAccessibilityID\");\nawait element.submit();  # Ruby\n# TODO Ruby sample  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/element/other/submit/#description",
            "text": "The submit command may also be applied to any element that is a descendant of a FORM element (Web only)",
            "title": "Description"
        },
        {
            "location": "/en/commands/element/other/submit/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/element/other/submit/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/element/other/submit/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/element/other/submit/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/element/other/submit/#endpoint",
            "text": "POST /wd/hub/session/:session_id/element/:element_id/submit",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/element/other/submit/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    element_id  ID of the element to submit",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/element/other/submit/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/element/other/submit/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/element/other/submit/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/mouse/button-down/",
            "text": "Button Down\n\n\nClick and hold the left mouse button at the current mouse coordinates\n\n\nExample Usage\n\n\n// Java\nActions action = new Actions(driver);\naction.moveTo(element);\naction.clickAndHold();\naction.perform();\n\n\n\n\n\n# Python\nactions = ActionChains(driver)\nactions.move_to_element(element)\nactions.click_and_hold()\nactions.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.moveTo(element)\n  .buttonDown();\n\n\n\n// wd example\nawait driver.moveTo(element);\nawait driver.buttonDown();\n\n\n\n\n\n# Ruby\n@driver.action.move_to(element).click_and_hold.perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nNote that the next mouse-related command that should follow is buttonup . Any other mouse command (such as click or another call to buttondown) will yield undefined behavior\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/buttondown\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nbutton\n\n\nnumber\n\n\nWhich button, {LEFT = 0, MIDDLE = 1 , RIGHT = 2}. Defaults to the left mouse button if not specified\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Button down"
        },
        {
            "location": "/en/commands/interactions/mouse/button-down/#button-down",
            "text": "Click and hold the left mouse button at the current mouse coordinates",
            "title": "Button Down"
        },
        {
            "location": "/en/commands/interactions/mouse/button-down/#example-usage",
            "text": "// Java\nActions action = new Actions(driver);\naction.moveTo(element);\naction.clickAndHold();\naction.perform();  # Python\nactions = ActionChains(driver)\nactions.move_to_element(element)\nactions.click_and_hold()\nactions.perform()  // Javascript\n// webdriver.io example\ndriver.moveTo(element)\n  .buttonDown();\n\n\n\n// wd example\nawait driver.moveTo(element);\nawait driver.buttonDown();  # Ruby\n@driver.action.move_to(element).click_and_hold.perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/mouse/button-down/#description",
            "text": "Note that the next mouse-related command that should follow is buttonup . Any other mouse command (such as click or another call to buttondown) will yield undefined behavior",
            "title": "Description"
        },
        {
            "location": "/en/commands/interactions/mouse/button-down/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/mouse/button-down/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/mouse/button-down/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/mouse/button-down/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/mouse/button-down/#endpoint",
            "text": "POST /session/:session_id/buttondown",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/mouse/button-down/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/mouse/button-down/#json-parameters",
            "text": "name  type  description      button  number  Which button, {LEFT = 0, MIDDLE = 1 , RIGHT = 2}. Defaults to the left mouse button if not specified",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/mouse/button-down/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/mouse/button-down/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/mouse/button-up/",
            "text": "Button Up\n\n\nReleases the mouse button previously held\n\n\nExample Usage\n\n\n// Java\nActions action = new Actions(driver);\naction.moveTo(element);\naction.clickAndHold();\naction.moveTo(element, 10, 10);\naction.release();\naction.perform();\n\n\n\n\n\n# Python\nactions = ActionChains(driver)\nactions.move_to_element(element)\nactions.click_and_hold()\nactions.move_to_element(element, 10, 10)\naction.release();\nactions.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.moveTo(element)\n  .buttonDown()\n  .moveTo(element, 10, 10)\n  .buttonUp();\n\n\n\n// wd example\nawait driver.moveTo(element);\nawait driver.buttonDown();\nawait driver.moveTo(element, 10, 10);\nawait driver.buttonUp();\n\n\n\n\n\n# Ruby\n@driver.action.click_and_hold(el).move_to(el, 10, 10).release.perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nMust be called once for every buttondown command issued. See the note in click and buttondown about implications of out-of-order commands.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/buttonup\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nbutton\n\n\nnumber\n\n\nWhich button, {LEFT = 0, MIDDLE = 1 , RIGHT = 2}. Defaults to the left mouse button if not specified\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Button up"
        },
        {
            "location": "/en/commands/interactions/mouse/button-up/#button-up",
            "text": "Releases the mouse button previously held",
            "title": "Button Up"
        },
        {
            "location": "/en/commands/interactions/mouse/button-up/#example-usage",
            "text": "// Java\nActions action = new Actions(driver);\naction.moveTo(element);\naction.clickAndHold();\naction.moveTo(element, 10, 10);\naction.release();\naction.perform();  # Python\nactions = ActionChains(driver)\nactions.move_to_element(element)\nactions.click_and_hold()\nactions.move_to_element(element, 10, 10)\naction.release();\nactions.perform()  // Javascript\n// webdriver.io example\ndriver.moveTo(element)\n  .buttonDown()\n  .moveTo(element, 10, 10)\n  .buttonUp();\n\n\n\n// wd example\nawait driver.moveTo(element);\nawait driver.buttonDown();\nawait driver.moveTo(element, 10, 10);\nawait driver.buttonUp();  # Ruby\n@driver.action.click_and_hold(el).move_to(el, 10, 10).release.perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/mouse/button-up/#description",
            "text": "Must be called once for every buttondown command issued. See the note in click and buttondown about implications of out-of-order commands.",
            "title": "Description"
        },
        {
            "location": "/en/commands/interactions/mouse/button-up/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/mouse/button-up/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/mouse/button-up/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/mouse/button-up/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/mouse/button-up/#endpoint",
            "text": "POST /session/:session_id/buttonup",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/mouse/button-up/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/mouse/button-up/#json-parameters",
            "text": "name  type  description      button  number  Which button, {LEFT = 0, MIDDLE = 1 , RIGHT = 2}. Defaults to the left mouse button if not specified",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/mouse/button-up/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/mouse/button-up/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/mouse/click/",
            "text": "Click\n\n\nClick any mouse button at the current mouse coordinates\n\n\nExample Usage\n\n\n// Java\nActions action = new Actions(driver);\naction.moveTo(element);\naction.click();\naction.perform();\n\n\n\n\n\n# Python\nactions = ActionChains(driver)\nactions.move_to_element(element)\nactions.click()\nactions.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.moveTo(element)\n  .click();\n\n\n\n// wd example\nawait driver.moveTo(element);\nawait driver.click();\n\n\n\n\n\n# Ruby\n@driver.action.move_to(element).click.perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/click\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nbutton\n\n\nnumber\n\n\nWhich button, {LEFT = 0, MIDDLE = 1 , RIGHT = 2}. Defaults to the left mouse button if not specified\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Click"
        },
        {
            "location": "/en/commands/interactions/mouse/click/#click",
            "text": "Click any mouse button at the current mouse coordinates",
            "title": "Click"
        },
        {
            "location": "/en/commands/interactions/mouse/click/#example-usage",
            "text": "// Java\nActions action = new Actions(driver);\naction.moveTo(element);\naction.click();\naction.perform();  # Python\nactions = ActionChains(driver)\nactions.move_to_element(element)\nactions.click()\nactions.perform()  // Javascript\n// webdriver.io example\ndriver.moveTo(element)\n  .click();\n\n\n\n// wd example\nawait driver.moveTo(element);\nawait driver.click();  # Ruby\n@driver.action.move_to(element).click.perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/mouse/click/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/mouse/click/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/mouse/click/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/mouse/click/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/mouse/click/#endpoint",
            "text": "POST /session/:session_id/click",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/mouse/click/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/mouse/click/#json-parameters",
            "text": "name  type  description      button  number  Which button, {LEFT = 0, MIDDLE = 1 , RIGHT = 2}. Defaults to the left mouse button if not specified",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/mouse/click/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/mouse/click/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/mouse/doubleclick/",
            "text": "Click\n\n\nDouble-clicks at the current mouse coordinates (set by moveto).\n\n\nExample Usage\n\n\n// Java\nActions action = new Actions(driver);\naction.moveTo(element);\naction.doubleClick();\naction.perform();\n\n\n\n\n\n# Python\nactions = ActionChains(driver)\nactions.move_to_element(element)\nactions.double_click()\nactions.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.moveTo(element)\n  .doubleClick();\n\n\n\n// wd example\nawait driver.moveTo(element);\nawait driver.doubleclick();\n\n\n\n\n\n# Ruby\n@driver.action.move_to(element).double_click.perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/doubledoubleClick\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Doubleclick"
        },
        {
            "location": "/en/commands/interactions/mouse/doubleclick/#click",
            "text": "Double-clicks at the current mouse coordinates (set by moveto).",
            "title": "Click"
        },
        {
            "location": "/en/commands/interactions/mouse/doubleclick/#example-usage",
            "text": "// Java\nActions action = new Actions(driver);\naction.moveTo(element);\naction.doubleClick();\naction.perform();  # Python\nactions = ActionChains(driver)\nactions.move_to_element(element)\nactions.double_click()\nactions.perform()  // Javascript\n// webdriver.io example\ndriver.moveTo(element)\n  .doubleClick();\n\n\n\n// wd example\nawait driver.moveTo(element);\nawait driver.doubleclick();  # Ruby\n@driver.action.move_to(element).double_click.perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/mouse/doubleclick/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/mouse/doubleclick/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/mouse/doubleclick/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/mouse/doubleclick/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/mouse/doubleclick/#endpoint",
            "text": "POST /session/:session_id/doubledoubleClick",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/mouse/doubleclick/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/mouse/doubleclick/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/mouse/doubleclick/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/mouse/doubleclick/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/mouse/moveto/",
            "text": "Move Mouse To\n\n\nMove the mouse by an offset of the specificed element\n\n\nExample Usage\n\n\n// Java\nActions action = new Actions(driver);\naction.moveTo(element, 10, 10);\naction.perform()\n\n\n\n\n\n# Python\nactions = ActionChains(driver)\nactions.move_to(element, 10, 10)\nactions.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.moveTo(element, 10, 10);\n\n\n\n// wd example\nawait driver.moveTo(element, 10, 10);\n\n\n\n\n\n# Ruby\n@driver.mouse.move_to(element)\n@driver.mouse.move_to(element, 5, 5)\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nIf no element is specified, the move is relative to the current mouse cursor. If an element is provided but no offset, the mouse will be moved to the center of the element. If the element is not visible, it will be scrolled into view.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/moveto\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nelement\n\n\nstring\n\n\nThe ID of the element to move to. If not specified, relative to mouse position\n\n\n\n\n\n\nxoffset\n\n\nnumber\n\n\nX offset to move to, relative to the top-left corner of the element. If not specified, the mouse will move to the middle of the element\n\n\n\n\n\n\nyoffset\n\n\nnumber\n\n\nY offset to move to, relative to the top-left corner of the element. If not specified, the mouse will move to the middle of the element\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Moveto"
        },
        {
            "location": "/en/commands/interactions/mouse/moveto/#move-mouse-to",
            "text": "Move the mouse by an offset of the specificed element",
            "title": "Move Mouse To"
        },
        {
            "location": "/en/commands/interactions/mouse/moveto/#example-usage",
            "text": "// Java\nActions action = new Actions(driver);\naction.moveTo(element, 10, 10);\naction.perform()  # Python\nactions = ActionChains(driver)\nactions.move_to(element, 10, 10)\nactions.perform()  // Javascript\n// webdriver.io example\ndriver.moveTo(element, 10, 10);\n\n\n\n// wd example\nawait driver.moveTo(element, 10, 10);  # Ruby\n@driver.mouse.move_to(element)\n@driver.mouse.move_to(element, 5, 5)  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/mouse/moveto/#description",
            "text": "If no element is specified, the move is relative to the current mouse cursor. If an element is provided but no offset, the mouse will be moved to the center of the element. If the element is not visible, it will be scrolled into view.",
            "title": "Description"
        },
        {
            "location": "/en/commands/interactions/mouse/moveto/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/mouse/moveto/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/mouse/moveto/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/mouse/moveto/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/mouse/moveto/#endpoint",
            "text": "POST /session/:session_id/moveto",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/mouse/moveto/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/mouse/moveto/#json-parameters",
            "text": "name  type  description      element  string  The ID of the element to move to. If not specified, relative to mouse position    xoffset  number  X offset to move to, relative to the top-left corner of the element. If not specified, the mouse will move to the middle of the element    yoffset  number  Y offset to move to, relative to the top-left corner of the element. If not specified, the mouse will move to the middle of the element",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/mouse/moveto/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/mouse/moveto/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/touch/double-tap/",
            "text": "Double Tap\n\n\nDouble tap on the touch screen using finger motion events\n\n\nExample Usage\n\n\n// Java\nTouchActions action = new TouchActions(driver);\naction.doubleTap(element);\naction.perform();\n\n\n\n\n\n# Python\nactions = TouchActions(driver)\nactions.double_tap(element)\nactions.perform()\n\n\n\n\n\n// Not supported\n\n\n// wd example\n// Using tapElement method\nawait driver.tapElement(elementOne);\n\n// Using touch actions\nlet action = new wd.TouchAction();\naction.tap({el: element});\naction.perform();\nawait driver.performTouchAction(action);\n\n\n\n\n\n# Ruby\n@driver.touch_action.double_tap(element).perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/touch/doubleclick\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nelement\n\n\nnumber\n\n\nID of the element to double tap on\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Double tap"
        },
        {
            "location": "/en/commands/interactions/touch/double-tap/#double-tap",
            "text": "Double tap on the touch screen using finger motion events",
            "title": "Double Tap"
        },
        {
            "location": "/en/commands/interactions/touch/double-tap/#example-usage",
            "text": "// Java\nTouchActions action = new TouchActions(driver);\naction.doubleTap(element);\naction.perform();  # Python\nactions = TouchActions(driver)\nactions.double_tap(element)\nactions.perform()  // Not supported\n\n\n// wd example\n// Using tapElement method\nawait driver.tapElement(elementOne);\n\n// Using touch actions\nlet action = new wd.TouchAction();\naction.tap({el: element});\naction.perform();\nawait driver.performTouchAction(action);  # Ruby\n@driver.touch_action.double_tap(element).perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/touch/double-tap/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/touch/double-tap/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/touch/double-tap/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  seleniumhq.github.io    Javascript (WebdriverIO)  All     Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/touch/double-tap/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/touch/double-tap/#endpoint",
            "text": "POST /session/:session_id/touch/doubleclick",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/touch/double-tap/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/double-tap/#json-parameters",
            "text": "name  type  description      element  number  ID of the element to double tap on",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/double-tap/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/touch/double-tap/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/touch/flick/",
            "text": "Tap\n\n\nFlick on the touch screen using finger motion events\n\n\nExample Usage\n\n\n// Java\nTouchActions action = new TouchActions(driver);\naction.flick(element, 1, 10, 10);\naction.perform();\n\n\n\n\n\n# Python\nactions = TouchActions(driver)\nactions.flick_element(element, 1, 10, 10)\nactions.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.touchFlick('<ELEMENT_ID>', 1, 10, 10);\n\n\n\n// wd example\nawait element.flick(1, 10, 10);\n\n\n\n\n\n# Ruby\n@driver.touch_action.flick(element, 1, 10, 10).perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/touch/flick\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nelement\n\n\nstring\n\n\nID of the element where the flick starts\n\n\n\n\n\n\nxoffset\n\n\nnumber\n\n\nThe x offset in pixels to flick by\n\n\n\n\n\n\nyoffset\n\n\nnumber\n\n\nThe y offset in pixels to flick by\n\n\n\n\n\n\nspeed\n\n\nnumber\n\n\nThe speed in pixels per seconds\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Flick"
        },
        {
            "location": "/en/commands/interactions/touch/flick/#tap",
            "text": "Flick on the touch screen using finger motion events",
            "title": "Tap"
        },
        {
            "location": "/en/commands/interactions/touch/flick/#example-usage",
            "text": "// Java\nTouchActions action = new TouchActions(driver);\naction.flick(element, 1, 10, 10);\naction.perform();  # Python\nactions = TouchActions(driver)\nactions.flick_element(element, 1, 10, 10)\nactions.perform()  // Javascript\n// webdriver.io example\ndriver.touchFlick('<ELEMENT_ID>', 1, 10, 10);\n\n\n\n// wd example\nawait element.flick(1, 10, 10);  # Ruby\n@driver.touch_action.flick(element, 1, 10, 10).perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/touch/flick/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/touch/flick/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/touch/flick/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  seleniumhq.github.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/touch/flick/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/touch/flick/#endpoint",
            "text": "POST /session/:session_id/touch/flick",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/touch/flick/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/flick/#json-parameters",
            "text": "name  type  description      element  string  ID of the element where the flick starts    xoffset  number  The x offset in pixels to flick by    yoffset  number  The y offset in pixels to flick by    speed  number  The speed in pixels per seconds",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/flick/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/touch/flick/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/touch/long-press/",
            "text": "Long Tap\n\n\nLong press on the touch screen using finger motion events\n\n\nExample Usage\n\n\n// Java\nTouchActions action = new TouchActions(driver);\naction.longPress(element);\naction.perform();\n\n\n\n\n\n# Python\nactions = TouchActions(driver)\nactions.long_press(element)\nactions.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.touchPerform({\n  action: 'longPress',\n  options: {\n    element: element\n  }\n});\n\n\n\n// wd example\n// Using touch actions\nlet action = new wd.TouchAction();\naction.longPress({el: element});\naction.perform();\nawait driver.performTouchAction(action);\n\n\n\n\n\n# Ruby\n@driver.touch_action.long_press(element).perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/touch/longclick\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nelement\n\n\nnumber\n\n\nID of the element to double tap on\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Long press"
        },
        {
            "location": "/en/commands/interactions/touch/long-press/#long-tap",
            "text": "Long press on the touch screen using finger motion events",
            "title": "Long Tap"
        },
        {
            "location": "/en/commands/interactions/touch/long-press/#example-usage",
            "text": "// Java\nTouchActions action = new TouchActions(driver);\naction.longPress(element);\naction.perform();  # Python\nactions = TouchActions(driver)\nactions.long_press(element)\nactions.perform()  // Javascript\n// webdriver.io example\ndriver.touchPerform({\n  action: 'longPress',\n  options: {\n    element: element\n  }\n});\n\n\n\n// wd example\n// Using touch actions\nlet action = new wd.TouchAction();\naction.longPress({el: element});\naction.perform();\nawait driver.performTouchAction(action);  # Ruby\n@driver.touch_action.long_press(element).perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/touch/long-press/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/touch/long-press/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/touch/long-press/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  seleniumhq.github.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/touch/long-press/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/touch/long-press/#endpoint",
            "text": "POST /session/:session_id/touch/longclick",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/touch/long-press/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/long-press/#json-parameters",
            "text": "name  type  description      element  number  ID of the element to double tap on",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/long-press/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/touch/long-press/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/touch/move/",
            "text": "Tap\n\n\nFinger move on the screen\n\n\nExample Usage\n\n\n// Java\nTouchActions action = new TouchActions(driver);\naction.down(10, 10);\naction.move(50, 50);\naction.perform();\n\n\n\n\n\n# Python\nactions = TouchActions(driver)\nactions.tap_and_hold(element)\nactions.move(50, 50)\nactions.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.touchMultiPerform([\n  { action: 'press', options: { x: 100, y: 250 }},\n  { action: 'moveTo', options: { x: 300, y: 100 }},\n  { action: 'release' }\n]);\n\n\n\n// wd example\n// Using tapElement method\nawait driver.tapElement(elementOne);\n\n// Using touch actions\nlet action = new wd.TouchAction();\naction.press({x: 10, y: 10});\naction.moveTo({x: 50, y: 50});\naction.perform();\nawait driver.performTouchAction(action);\n\n\n\n\n\n# Ruby\n@driver.touch_action.down(element).move().perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/touch/move\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nnumber\n\n\nX coordinate on the screen\n\n\n\n\n\n\ny\n\n\nnumber\n\n\nY coordinate on the screen\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Move"
        },
        {
            "location": "/en/commands/interactions/touch/move/#tap",
            "text": "Finger move on the screen",
            "title": "Tap"
        },
        {
            "location": "/en/commands/interactions/touch/move/#example-usage",
            "text": "// Java\nTouchActions action = new TouchActions(driver);\naction.down(10, 10);\naction.move(50, 50);\naction.perform();  # Python\nactions = TouchActions(driver)\nactions.tap_and_hold(element)\nactions.move(50, 50)\nactions.perform()  // Javascript\n// webdriver.io example\ndriver.touchMultiPerform([\n  { action: 'press', options: { x: 100, y: 250 }},\n  { action: 'moveTo', options: { x: 300, y: 100 }},\n  { action: 'release' }\n]);\n\n\n\n// wd example\n// Using tapElement method\nawait driver.tapElement(elementOne);\n\n// Using touch actions\nlet action = new wd.TouchAction();\naction.press({x: 10, y: 10});\naction.moveTo({x: 50, y: 50});\naction.perform();\nawait driver.performTouchAction(action);  # Ruby\n@driver.touch_action.down(element).move().perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/touch/move/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/touch/move/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/touch/move/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  seleniumhq.github.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/touch/move/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/touch/move/#endpoint",
            "text": "POST /session/:session_id/touch/move",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/touch/move/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/move/#json-parameters",
            "text": "name  type  description      x  number  X coordinate on the screen    y  number  Y coordinate on the screen",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/move/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/touch/move/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/touch/multi-touch-perform/",
            "text": "Multi Touch Perform\n\n\nPerform a multi touch action sequence\n\n\nExample Usage\n\n\n// Java\nTouchAction actionOne = new TouchAction();\nactionOne.press(10, 10);\nactionOne.moveTo(10, 100);\nactionOne.release();\nTouchAction actionTwo = new TouchAction();\nactionTwo.press(20, 20);\nactionTwo.moveTo(20, 200);\nactionTwo.release();\nMultiTouchAction action = new MultiTouchAction();\naction.add(actionOne);\naction.add(actionTwo);\naction.perform();\n\n\n\n\n\n# Python\nfrom appium.webdriver.common.touch_action import TouchAction\nfrom appium.webdriver.common.multi_action import MultiAction\n# ...\na1 = TouchAction()\na1.press(10, 20)\na1.move_to(10, 200)\na1.release()\n\na2 = TouchAction()\na2.press(10, 10)\na2.move_to(10, 100)\na2.release()\n\nma = MultiAction(self.driver)\nma.add(a1, a2)\nma.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.touchMultiPerform([\n  { action: 'press', options: { x: 100, y: 250 }},\n  { action: 'moveTo', options: { x: 300, y: 100 }},\n  { action: 'release' }\n]);\n\n\n\n// wd example\nlet action = new wd.MultiTouchAction();\naction.press({x: 10, y: 10});\naction.moveTo({x: 10, y: 100});\naction.release();\nawait driver.performMultiTouchAction(action);\n\n\n\n\n\n# Ruby\n@driver.multi_touch.down(element).move_to(10, 100).up(50, 50).perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/touch/multi/perform\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe type of action to perform (moveTo\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nThe parameters of the action\n\n\n\n\n\n\nopts.element\n\n\nstring\n\n\nThe ID of the element\n\n\n\n\n\n\nopts.x\n\n\nnumber\n\n\nThe X coordinate of the operation (relative to top left corner)\n\n\n\n\n\n\nopts.y\n\n\nnumber\n\n\nThe Y coordinate of the operation (relative to top left corner)\n\n\n\n\n\n\nopts.count\n\n\nnumber\n\n\nTap count\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Multi touch perform"
        },
        {
            "location": "/en/commands/interactions/touch/multi-touch-perform/#multi-touch-perform",
            "text": "Perform a multi touch action sequence",
            "title": "Multi Touch Perform"
        },
        {
            "location": "/en/commands/interactions/touch/multi-touch-perform/#example-usage",
            "text": "// Java\nTouchAction actionOne = new TouchAction();\nactionOne.press(10, 10);\nactionOne.moveTo(10, 100);\nactionOne.release();\nTouchAction actionTwo = new TouchAction();\nactionTwo.press(20, 20);\nactionTwo.moveTo(20, 200);\nactionTwo.release();\nMultiTouchAction action = new MultiTouchAction();\naction.add(actionOne);\naction.add(actionTwo);\naction.perform();  # Python\nfrom appium.webdriver.common.touch_action import TouchAction\nfrom appium.webdriver.common.multi_action import MultiAction\n# ...\na1 = TouchAction()\na1.press(10, 20)\na1.move_to(10, 200)\na1.release()\n\na2 = TouchAction()\na2.press(10, 10)\na2.move_to(10, 100)\na2.release()\n\nma = MultiAction(self.driver)\nma.add(a1, a2)\nma.perform()  // Javascript\n// webdriver.io example\ndriver.touchMultiPerform([\n  { action: 'press', options: { x: 100, y: 250 }},\n  { action: 'moveTo', options: { x: 300, y: 100 }},\n  { action: 'release' }\n]);\n\n\n\n// wd example\nlet action = new wd.MultiTouchAction();\naction.press({x: 10, y: 10});\naction.moveTo({x: 10, y: 100});\naction.release();\nawait driver.performMultiTouchAction(action);  # Ruby\n@driver.multi_touch.down(element).move_to(10, 100).up(50, 50).perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/touch/multi-touch-perform/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/touch/multi-touch-perform/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/touch/multi-touch-perform/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/touch/multi-touch-perform/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/touch/multi-touch-perform/#endpoint",
            "text": "POST /session/:session_id/touch/multi/perform",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/touch/multi-touch-perform/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/multi-touch-perform/#json-parameters",
            "text": "name  type  description      action  string  The type of action to perform (moveTo    options  object  The parameters of the action    opts.element  string  The ID of the element    opts.x  number  The X coordinate of the operation (relative to top left corner)    opts.y  number  The Y coordinate of the operation (relative to top left corner)    opts.count  number  Tap count",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/multi-touch-perform/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/touch/multi-touch-perform/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/touch/scroll/",
            "text": "Scroll\n\n\nScroll on the touch screen using finger based motion events\n\n\nExample Usage\n\n\n// Java\nTouchActions action = new TouchActions(driver);\naction.scroll(element, 10, 100);\naction.perform();\n\n\n\n\n\n# Python\nactions = TouchActions(driver)\nactions.scroll_from_element(element, 10, 100)\nactions.scroll(10, 100)\nactions.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.touchScroll({\n  el: element,\n  xOffset: 10,\n  yOffset: 100\n});\n\n\n\n// wd example\nawait driver.scroll(10, 100);\n\n\n\n\n\n# Ruby\n@driver.touch_action.scroll(element, 10, 100).perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/touch/scroll\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nnumber\n\n\nX coordinate on the screen\n\n\n\n\n\n\ny\n\n\nnumber\n\n\nY coordinate on the screen\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Scroll"
        },
        {
            "location": "/en/commands/interactions/touch/scroll/#scroll",
            "text": "Scroll on the touch screen using finger based motion events",
            "title": "Scroll"
        },
        {
            "location": "/en/commands/interactions/touch/scroll/#example-usage",
            "text": "// Java\nTouchActions action = new TouchActions(driver);\naction.scroll(element, 10, 100);\naction.perform();  # Python\nactions = TouchActions(driver)\nactions.scroll_from_element(element, 10, 100)\nactions.scroll(10, 100)\nactions.perform()  // Javascript\n// webdriver.io example\ndriver.touchScroll({\n  el: element,\n  xOffset: 10,\n  yOffset: 100\n});\n\n\n\n// wd example\nawait driver.scroll(10, 100);  # Ruby\n@driver.touch_action.scroll(element, 10, 100).perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/touch/scroll/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/touch/scroll/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/touch/scroll/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  seleniumhq.github.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/touch/scroll/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/touch/scroll/#endpoint",
            "text": "POST /session/:session_id/touch/scroll",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/touch/scroll/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/scroll/#json-parameters",
            "text": "name  type  description      x  number  X coordinate on the screen    y  number  Y coordinate on the screen",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/scroll/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/touch/scroll/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/touch/tap/",
            "text": "Tap\n\n\nSingle tap on the touch enabled device\n\n\nExample Usage\n\n\n// Java\nTouchActions action = new TouchActions(driver);\naction.singleTap(element);\naction.perform();\n\n\n\n\n\n# Python\nactions = TouchActions(driver)\nactions.tap(element)\nactions.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.touchPerform({\n  action: 'tap',\n  options: {\n    element: element\n  }\n});\n\n\n\n// wd example\n// Using tapElement method\nawait driver.tapElement(elementOne);\n\n// Using touch actions\nlet action = new wd.TouchAction();\naction.tap({el: element});\naction.perform();\nawait driver.performTouchAction(action);\n\n\n\n\n\n# Ruby\n@driver.touch_action.single_tap(element).perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/touch/click\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nelement\n\n\nnumber\n\n\nID of the element to double tap on\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Tap"
        },
        {
            "location": "/en/commands/interactions/touch/tap/#tap",
            "text": "Single tap on the touch enabled device",
            "title": "Tap"
        },
        {
            "location": "/en/commands/interactions/touch/tap/#example-usage",
            "text": "// Java\nTouchActions action = new TouchActions(driver);\naction.singleTap(element);\naction.perform();  # Python\nactions = TouchActions(driver)\nactions.tap(element)\nactions.perform()  // Javascript\n// webdriver.io example\ndriver.touchPerform({\n  action: 'tap',\n  options: {\n    element: element\n  }\n});\n\n\n\n// wd example\n// Using tapElement method\nawait driver.tapElement(elementOne);\n\n// Using touch actions\nlet action = new wd.TouchAction();\naction.tap({el: element});\naction.perform();\nawait driver.performTouchAction(action);  # Ruby\n@driver.touch_action.single_tap(element).perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/touch/tap/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/touch/tap/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/touch/tap/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  seleniumhq.github.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/touch/tap/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/touch/tap/#endpoint",
            "text": "POST /session/:session_id/touch/click",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/touch/tap/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/tap/#json-parameters",
            "text": "name  type  description      element  number  ID of the element to double tap on",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/tap/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/touch/tap/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/touch/touch-down/",
            "text": "Touch Down\n\n\nFinger down on the screen\n\n\nExample Usage\n\n\n// Java\nTouchActions action = new TouchActions(driver);\naction.down(10, 10);\naction.move(50, 50);\naction.perform();\n\n\n\n\n\n# Python\nactions = TouchActions(driver)\nactions.tap_and_hold(element)\nactions.move(50, 50)\nactions.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.touchMultiPerform([\n  { action: 'press', options: { x: 100, y: 250 }},\n  { action: 'moveTo', options: { x: 300, y: 100 }},\n  { action: 'release' }\n]);\n\n\n\n// wd example\n// Using tapElement method\nawait driver.tapElement(elementOne);\n\n// Using touch actions\nlet action = new wd.TouchAction();\naction.press({x: 10, y: 10});\naction.moveTo({x: 50, y: 50});\naction.perform();\nawait driver.performTouchAction(action);\n\n\n\n\n\n# Ruby\n@driver.touch_action.down(element).move().perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/touch/down\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nnumber\n\n\nX coordinate on the screen\n\n\n\n\n\n\ny\n\n\nnumber\n\n\nY coordinate on the screen\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Touch down"
        },
        {
            "location": "/en/commands/interactions/touch/touch-down/#touch-down",
            "text": "Finger down on the screen",
            "title": "Touch Down"
        },
        {
            "location": "/en/commands/interactions/touch/touch-down/#example-usage",
            "text": "// Java\nTouchActions action = new TouchActions(driver);\naction.down(10, 10);\naction.move(50, 50);\naction.perform();  # Python\nactions = TouchActions(driver)\nactions.tap_and_hold(element)\nactions.move(50, 50)\nactions.perform()  // Javascript\n// webdriver.io example\ndriver.touchMultiPerform([\n  { action: 'press', options: { x: 100, y: 250 }},\n  { action: 'moveTo', options: { x: 300, y: 100 }},\n  { action: 'release' }\n]);\n\n\n\n// wd example\n// Using tapElement method\nawait driver.tapElement(elementOne);\n\n// Using touch actions\nlet action = new wd.TouchAction();\naction.press({x: 10, y: 10});\naction.moveTo({x: 50, y: 50});\naction.perform();\nawait driver.performTouchAction(action);  # Ruby\n@driver.touch_action.down(element).move().perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/touch/touch-down/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/touch/touch-down/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/touch/touch-down/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  seleniumhq.github.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/touch/touch-down/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/touch/touch-down/#endpoint",
            "text": "POST /session/:session_id/touch/down",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/touch/touch-down/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/touch-down/#json-parameters",
            "text": "name  type  description      x  number  X coordinate on the screen    y  number  Y coordinate on the screen",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/touch-down/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/touch/touch-down/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/touch/touch-perform/",
            "text": "Touch Perform\n\n\nPerform a touch action sequence\n\n\nExample Usage\n\n\n// Java\nTouchAction action = new TouchAction(driver);\naction.press(10, 10);\naction.moveTo(10, 100);\naction.release();\naction.perform();\n\n\n\n\n\n# Python\nfrom appium.webdriver.common.touch_action import TouchAction\n\nactions = TouchAction(driver)\nactions.tap_and_hold(20, 20)\nactions.move_to(10, 100)\nactions.release()\nactions.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.touchPerform([\n  { action: 'press', options: { x: 100, y: 250 }},\n  { action: 'moveTo', options: { x: 300, y: 100 }},\n  { action: 'release' }\n]);\n\n\n\n// wd example\nlet action = new wd.TouchAction();\naction.press({x: 10, y: 10});\naction.moveTo({x: 10, y: 100});\naction.release();\naction.perform();\nawait driver.performTouchAction(action);\n\n\n\n\n\n# Ruby\n@driver.touch_action.down(element).move_to(10, 100).up(50, 50).perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nThis functionality is only available from within a native context\n\n\n'Touch Perform' works similarly to the other singular touch interactions, except that this allows you to chain together more than one touch action as one\ncommand. This is useful because Appium commands are sent over the network and there's latency between commands. This latency can make certain touch \ninteractions impossible because some interactions need to be performed in one sequence. Vertical, for example, requires pressing down, moving to a different\ny coordinate, and then releasing. For it to work, there can't be a delay between the interactions.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/touch/perform\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\naction\n\n\nstring\n\n\nThe type of action to perform (moveTo\n\n\n\n\n\n\noptions\n\n\nobject\n\n\nThe parameters of the action\n\n\n\n\n\n\nopts.element\n\n\nstring\n\n\nThe ID of the element\n\n\n\n\n\n\nopts.x\n\n\nnumber\n\n\nThe X coordinate of the operation (relative to top left corner)\n\n\n\n\n\n\nopts.y\n\n\nnumber\n\n\nThe Y coordinate of the operation (relative to top left corner)\n\n\n\n\n\n\nopts.count\n\n\nnumber\n\n\nTap count\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Touch perform"
        },
        {
            "location": "/en/commands/interactions/touch/touch-perform/#touch-perform",
            "text": "Perform a touch action sequence",
            "title": "Touch Perform"
        },
        {
            "location": "/en/commands/interactions/touch/touch-perform/#example-usage",
            "text": "// Java\nTouchAction action = new TouchAction(driver);\naction.press(10, 10);\naction.moveTo(10, 100);\naction.release();\naction.perform();  # Python\nfrom appium.webdriver.common.touch_action import TouchAction\n\nactions = TouchAction(driver)\nactions.tap_and_hold(20, 20)\nactions.move_to(10, 100)\nactions.release()\nactions.perform()  // Javascript\n// webdriver.io example\ndriver.touchPerform([\n  { action: 'press', options: { x: 100, y: 250 }},\n  { action: 'moveTo', options: { x: 300, y: 100 }},\n  { action: 'release' }\n]);\n\n\n\n// wd example\nlet action = new wd.TouchAction();\naction.press({x: 10, y: 10});\naction.moveTo({x: 10, y: 100});\naction.release();\naction.perform();\nawait driver.performTouchAction(action);  # Ruby\n@driver.touch_action.down(element).move_to(10, 100).up(50, 50).perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/touch/touch-perform/#description",
            "text": "This functionality is only available from within a native context  'Touch Perform' works similarly to the other singular touch interactions, except that this allows you to chain together more than one touch action as one\ncommand. This is useful because Appium commands are sent over the network and there's latency between commands. This latency can make certain touch \ninteractions impossible because some interactions need to be performed in one sequence. Vertical, for example, requires pressing down, moving to a different\ny coordinate, and then releasing. For it to work, there can't be a delay between the interactions.",
            "title": "Description"
        },
        {
            "location": "/en/commands/interactions/touch/touch-perform/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/touch/touch-perform/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/touch/touch-perform/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  All  github.com    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/touch/touch-perform/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/touch/touch-perform/#endpoint",
            "text": "POST /session/:session_id/touch/perform",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/touch/touch-perform/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/touch-perform/#json-parameters",
            "text": "name  type  description      action  string  The type of action to perform (moveTo    options  object  The parameters of the action    opts.element  string  The ID of the element    opts.x  number  The X coordinate of the operation (relative to top left corner)    opts.y  number  The Y coordinate of the operation (relative to top left corner)    opts.count  number  Tap count",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/touch-perform/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/touch/touch-perform/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/interactions/touch/touch-up/",
            "text": "Touch Up\n\n\nFinger up on the screen\n\n\nExample Usage\n\n\n// Java\nTouchActions action = new TouchActions(driver);\naction.down(10, 10);\naction.up(20, 20);\naction.perform();\n\n\n\n\n\n# Python\nactions = TouchActions(driver)\nactions.tap_and_hold(20, 20)\nactions.release(50, 50)\nactions.perform()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.touchMultiPerform([\n  { action: 'press', options: { x: 100, y: 250 }},\n  { action: 'moveTo', options: { x: 300, y: 100 }},\n  { action: 'release' }\n]);\n\n\n\n// wd example\n// Using tapElement method\nawait driver.tapElement(elementOne);\n\n// Using touch actions\nlet action = new wd.TouchAction();\naction.press({x: 10, y: 10});\naction.release({x: 20, y: 20});\naction.perform();\nawait driver.performTouchAction(action);\n\n\n\n\n\n# Ruby\n@driver.touch_action.down(element).up(50, 50).perform\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/touch/up\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nnumber\n\n\nX coordinate on the screen\n\n\n\n\n\n\ny\n\n\nnumber\n\n\nY coordinate on the screen\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Touch up"
        },
        {
            "location": "/en/commands/interactions/touch/touch-up/#touch-up",
            "text": "Finger up on the screen",
            "title": "Touch Up"
        },
        {
            "location": "/en/commands/interactions/touch/touch-up/#example-usage",
            "text": "// Java\nTouchActions action = new TouchActions(driver);\naction.down(10, 10);\naction.up(20, 20);\naction.perform();  # Python\nactions = TouchActions(driver)\nactions.tap_and_hold(20, 20)\nactions.release(50, 50)\nactions.perform()  // Javascript\n// webdriver.io example\ndriver.touchMultiPerform([\n  { action: 'press', options: { x: 100, y: 250 }},\n  { action: 'moveTo', options: { x: 300, y: 100 }},\n  { action: 'release' }\n]);\n\n\n\n// wd example\n// Using tapElement method\nawait driver.tapElement(elementOne);\n\n// Using touch actions\nlet action = new wd.TouchAction();\naction.press({x: 10, y: 10});\naction.release({x: 20, y: 20});\naction.perform();\nawait driver.performTouchAction(action);  # Ruby\n@driver.touch_action.down(element).up(50, 50).perform  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/interactions/touch/touch-up/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/interactions/touch/touch-up/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/interactions/touch/touch-up/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  seleniumhq.github.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/interactions/touch/touch-up/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/interactions/touch/touch-up/#endpoint",
            "text": "POST /session/:session_id/touch/up",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/interactions/touch/touch-up/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/touch-up/#json-parameters",
            "text": "name  type  description      x  number  X coordinate on the screen    y  number  Y coordinate on the screen",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/interactions/touch/touch-up/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/interactions/touch/touch-up/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/back/",
            "text": "Go Back\n\n\nNavigate backwards in the browser history, if possible (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.back();\n\n\n\n\n\n# Python\nself.driver.back()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.back();\n\n\n\n// wd example\nawait driver.back();\n\n\n\n\n\n# Ruby\n@driver.back()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/back\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Back"
        },
        {
            "location": "/en/commands/session/back/#go-back",
            "text": "Navigate backwards in the browser history, if possible (Web context only)",
            "title": "Go Back"
        },
        {
            "location": "/en/commands/session/back/#example-usage",
            "text": "// Java\ndriver.back();  # Python\nself.driver.back()  // Javascript\n// webdriver.io example\ndriver.back();\n\n\n\n// wd example\nawait driver.back();  # Ruby\n@driver.back()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/back/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/back/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/back/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/back/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/back/#endpoint",
            "text": "POST /wd/hub/session/:session_id/back",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/back/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/back/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/back/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/back/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/create/",
            "text": "Create New Session\n\n\nCreate a new session\n\n\nExample Usage\n\n\n// Java\nDesiredCapabilities desiredCapabilities = new DesiredCapabilities();\ndesiredCapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"10.3\");\ndesiredCapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"iPhone Simulator\");\ndesiredCapabilities.setCapability(MobileCapabilityType.AUTOMATION_NAME, \"XCUITest\");\ndesiredCapabilities.setCapability(MobileCapabilityType.APP, \"/path/to/ios/app.zip\");\n\nURL url = new URL(\"http://127.0.0.1:4723/wd/hub\");\n\nIOSDriver driver = new IOSDriver(url, desiredCapabilities);\nString sessionId = driver.getSessionId().toString();\n\n\n\n\n\n# Python\ndesired_caps = desired_caps = {\n  'platformName': 'Android',\n  'platformVersion': '7.0',\n  'deviceName': 'Android Emulator',\n  'automationName': 'UiAutomator2',\n  'app': PATH('/path/to/app')\n}\nself.driver = webdriver.Remote('http://127.0.0.1:4723/wd/hub', desired_caps)\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet options = { desiredCapabilities: { \n  platformName: 'Android',\n  platformVersion: '7.0',\n  automationName: 'UiAutomator2',\n  app: path.resolve('path', 'to', 'app.apk')\n}};\nlet client = webdriverio.remote(options);\n\n\n\n// wd example\nlet driver = await wd.promiseChainRemote({\n  host: '127.0.0.1',\n  port: 4723\n});\nlet desiredCaps = {\n  platformName: 'Android',\n  platformVersion: '7.0',\n  deviceName: 'Android Emulator',\n  app: path.resolve('path', 'to', 'app.apk')\n};\nawait driver.init(desiredCaps);\n\n\n\n\n\n# Ruby\nAPP_PATH = '../../path/to/app.app'\n\ndesired_caps = {\n  caps: {\n    platformName:  'iOS',\n    platformVersion: '10.2',\n    deviceName:    'iPhone 6',\n    app:           APP_PATH,\n    automationName: \"XCUITest\"\n  }\n}\n\nAppium::Driver.new(desired_caps).start_driver\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nThe server should attempt to create a session that most closely matches the desired and required capabilities. \n\n\n\n\nJSONWP Spec\n Required capabilities have higher priority than desired capabilities and must be set for the session to be created\n\n\nW3C Spec\n capabilities.alwaysMatch must be set for session to be created; capabilities.firstMatch must match at least one (the first one to match will be used)\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session\n\n\nURL Parameters\n\n\nNone\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\ndesiredCapabilities\n\n\nobject\n\n\n(\nJSONWP specification\n) Object describing session's \ndesired capabilities\n\n\n\n\n\n\nrequiredCapabilities\n\n\nobject\n\n\n(\nJSONWP specification\n) Object describing session's required capabilities that must be applied by remote end\n\n\n\n\n\n\ncapabilities\n\n\nobject\n\n\n([W3C specification])(https://www.w3.org/TR/webdriver/#dfn-new-session) object containing 'alwaysMatch' and 'firstMatch' properties\n\n\n\n\n\n\ncapabilities.alwaysMatch\n\n\nobject\n\n\nThe \ndesired capabilities\n that the remote end must match\n\n\n\n\n\n\ncapabilities.firstMatch\n\n\narray<object>\n\n\nList of capabilities that the remote end tries to match. Matches the first in the list\n\n\n\n\n\n\n\n\nResponse\n\n\nAn object describing the session's capabilities (\nobject\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Create"
        },
        {
            "location": "/en/commands/session/create/#create-new-session",
            "text": "Create a new session",
            "title": "Create New Session"
        },
        {
            "location": "/en/commands/session/create/#example-usage",
            "text": "// Java\nDesiredCapabilities desiredCapabilities = new DesiredCapabilities();\ndesiredCapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"10.3\");\ndesiredCapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"iPhone Simulator\");\ndesiredCapabilities.setCapability(MobileCapabilityType.AUTOMATION_NAME, \"XCUITest\");\ndesiredCapabilities.setCapability(MobileCapabilityType.APP, \"/path/to/ios/app.zip\");\n\nURL url = new URL(\"http://127.0.0.1:4723/wd/hub\");\n\nIOSDriver driver = new IOSDriver(url, desiredCapabilities);\nString sessionId = driver.getSessionId().toString();  # Python\ndesired_caps = desired_caps = {\n  'platformName': 'Android',\n  'platformVersion': '7.0',\n  'deviceName': 'Android Emulator',\n  'automationName': 'UiAutomator2',\n  'app': PATH('/path/to/app')\n}\nself.driver = webdriver.Remote('http://127.0.0.1:4723/wd/hub', desired_caps)  // Javascript\n// webdriver.io example\nlet options = { desiredCapabilities: { \n  platformName: 'Android',\n  platformVersion: '7.0',\n  automationName: 'UiAutomator2',\n  app: path.resolve('path', 'to', 'app.apk')\n}};\nlet client = webdriverio.remote(options);\n\n\n\n// wd example\nlet driver = await wd.promiseChainRemote({\n  host: '127.0.0.1',\n  port: 4723\n});\nlet desiredCaps = {\n  platformName: 'Android',\n  platformVersion: '7.0',\n  deviceName: 'Android Emulator',\n  app: path.resolve('path', 'to', 'app.apk')\n};\nawait driver.init(desiredCaps);  # Ruby\nAPP_PATH = '../../path/to/app.app'\n\ndesired_caps = {\n  caps: {\n    platformName:  'iOS',\n    platformVersion: '10.2',\n    deviceName:    'iPhone 6',\n    app:           APP_PATH,\n    automationName: \"XCUITest\"\n  }\n}\n\nAppium::Driver.new(desired_caps).start_driver  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/create/#description",
            "text": "The server should attempt to create a session that most closely matches the desired and required capabilities.    JSONWP Spec  Required capabilities have higher priority than desired capabilities and must be set for the session to be created  W3C Spec  capabilities.alwaysMatch must be set for session to be created; capabilities.firstMatch must match at least one (the first one to match will be used)",
            "title": "Description"
        },
        {
            "location": "/en/commands/session/create/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/create/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/create/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/create/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/create/#endpoint",
            "text": "POST /session",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/create/#url-parameters",
            "text": "None",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/create/#json-parameters",
            "text": "name  type  description      desiredCapabilities  object  ( JSONWP specification ) Object describing session's  desired capabilities    requiredCapabilities  object  ( JSONWP specification ) Object describing session's required capabilities that must be applied by remote end    capabilities  object  ([W3C specification])(https://www.w3.org/TR/webdriver/#dfn-new-session) object containing 'alwaysMatch' and 'firstMatch' properties    capabilities.alwaysMatch  object  The  desired capabilities  that the remote end must match    capabilities.firstMatch  array<object>  List of capabilities that the remote end tries to match. Matches the first in the list",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/create/#response",
            "text": "An object describing the session's capabilities ( object )",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/create/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/delete/",
            "text": "End Session\n\n\nEnd the running session\n\n\nExample Usage\n\n\n// Java\ndriver.quit();\n\n\n\n\n\n# Python\nself.driver.quit()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.end();\n\n\n\n// wd example\nawait driver.quit();\n\n\n\n\n\n# Ruby\n@driver.quit();\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nDELETE /session/:session_id\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to delete\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Delete"
        },
        {
            "location": "/en/commands/session/delete/#end-session",
            "text": "End the running session",
            "title": "End Session"
        },
        {
            "location": "/en/commands/session/delete/#example-usage",
            "text": "// Java\ndriver.quit();  # Python\nself.driver.quit()  // Javascript\n// webdriver.io example\ndriver.end();\n\n\n\n// wd example\nawait driver.quit();  # Ruby\n@driver.quit();  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/delete/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/delete/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/delete/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/delete/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/delete/#endpoint",
            "text": "DELETE /session/:session_id",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/delete/#url-parameters",
            "text": "name  description      session_id  ID of the session to delete",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/delete/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/delete/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/delete/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/get/",
            "text": "Get Session Capabilities\n\n\nRetrieve the capabilities of the specified session\n\n\nExample Usage\n\n\n// Java\nMap<String, Object> caps = driver.getSessionDetails();\n\n\n\n\n\n# Python\ndesired_caps = self.driver.desired_capabilities()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet caps = driver.session('c8db88a0-47a6-47a1-802d-164d746c06aa');\n\n\n\n// wd example\nlet caps = await driver.sessionCapabilities('c8db88a0-47a6-47a1-802d-164d746c06aa');\n\n\n\n\n\n# Ruby\n@driver.session_capabilities()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /session/:session_id\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nAn object describing the session's capabilities (\nobject\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Get"
        },
        {
            "location": "/en/commands/session/get/#get-session-capabilities",
            "text": "Retrieve the capabilities of the specified session",
            "title": "Get Session Capabilities"
        },
        {
            "location": "/en/commands/session/get/#example-usage",
            "text": "// Java\nMap<String, Object> caps = driver.getSessionDetails();  # Python\ndesired_caps = self.driver.desired_capabilities()  // Javascript\n// webdriver.io example\nlet caps = driver.session('c8db88a0-47a6-47a1-802d-164d746c06aa');\n\n\n\n// wd example\nlet caps = await driver.sessionCapabilities('c8db88a0-47a6-47a1-802d-164d746c06aa');  # Ruby\n@driver.session_capabilities()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/get/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/get/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/get/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/get/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/get/#endpoint",
            "text": "GET /session/:session_id",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/get/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/get/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/get/#response",
            "text": "An object describing the session's capabilities ( object )",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/get/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/screenshot/",
            "text": "Take Screenshot\n\n\nTake a screenshot of the current viewport/window/page\n\n\nExample Usage\n\n\n// Java\nFile scrFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);\n\n\n\n\n\n# Python\nscreenshotBase64 = self.driver.get_screenshot_as_base64()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet screenshot = driver.screenshot();\n\n\n\n// wd example\nlet screenshot = await driver.takeScreenshot();\n\n\n\n\n\n# Ruby\n@driver.screenshot_as(:base64)\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nTakes a screenshot of the viewport in a native context (iOS, Android) and takes a screenshot of the window in web context\n\n\nNote that some platforms may have settings that prevent screenshots from being taken, for security reason. One such feature is \nthe \nAndroid FLAG_SECURE layout parameter\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/screenshot\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nThe screenshot as a base64 encoded PNG (\nstring\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Screenshot"
        },
        {
            "location": "/en/commands/session/screenshot/#take-screenshot",
            "text": "Take a screenshot of the current viewport/window/page",
            "title": "Take Screenshot"
        },
        {
            "location": "/en/commands/session/screenshot/#example-usage",
            "text": "// Java\nFile scrFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);  # Python\nscreenshotBase64 = self.driver.get_screenshot_as_base64()  // Javascript\n// webdriver.io example\nlet screenshot = driver.screenshot();\n\n\n\n// wd example\nlet screenshot = await driver.takeScreenshot();  # Ruby\n@driver.screenshot_as(:base64)  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/screenshot/#description",
            "text": "Takes a screenshot of the viewport in a native context (iOS, Android) and takes a screenshot of the window in web context  Note that some platforms may have settings that prevent screenshots from being taken, for security reason. One such feature is \nthe  Android FLAG_SECURE layout parameter",
            "title": "Description"
        },
        {
            "location": "/en/commands/session/screenshot/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/screenshot/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/screenshot/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/screenshot/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/screenshot/#endpoint",
            "text": "GET /wd/hub/session/:session_id/screenshot",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/screenshot/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/screenshot/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/screenshot/#response",
            "text": "The screenshot as a base64 encoded PNG ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/screenshot/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/source/",
            "text": "Get Page Source\n\n\nGet the current application hierarchy XML (app) or page source (web)\n\n\nExample Usage\n\n\n// Java\nString pageSource = driver.getPageSource();\n\n\n\n\n\n# Python\nsource = self.driver.page_source()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet source = driver.source();\n\n\n\n// wd example\nlet pageSource = await driver.source();\n\n\n\n\n\n# Ruby\n@driver.page_source\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nIn a web context, the source returns the source HTML of the current window. In a native context (iOS, Android, etc...) it will return the application hierarchy XML.\n\n\nThis method is useful for inspecting your application hierarchy and using that to write \nselectors\n\n\n(NOTE: iOS and Android don't have standard ways of defining their application source, so on calls to 'Get Page Source' Appium traverses the app hierarchy \nand creates an XML document. Thus, getting the source can oftentime be an expensive and time-consuming operation) \n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/source\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Source"
        },
        {
            "location": "/en/commands/session/source/#get-page-source",
            "text": "Get the current application hierarchy XML (app) or page source (web)",
            "title": "Get Page Source"
        },
        {
            "location": "/en/commands/session/source/#example-usage",
            "text": "// Java\nString pageSource = driver.getPageSource();  # Python\nsource = self.driver.page_source()  // Javascript\n// webdriver.io example\nlet source = driver.source();\n\n\n\n// wd example\nlet pageSource = await driver.source();  # Ruby\n@driver.page_source  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/source/#description",
            "text": "In a web context, the source returns the source HTML of the current window. In a native context (iOS, Android, etc...) it will return the application hierarchy XML.  This method is useful for inspecting your application hierarchy and using that to write  selectors  (NOTE: iOS and Android don't have standard ways of defining their application source, so on calls to 'Get Page Source' Appium traverses the app hierarchy \nand creates an XML document. Thus, getting the source can oftentime be an expensive and time-consuming operation)",
            "title": "Description"
        },
        {
            "location": "/en/commands/session/source/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/source/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/source/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/source/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/source/#endpoint",
            "text": "GET /wd/hub/session/:session_id/source",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/source/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/source/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/source/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/source/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/other/get-geolocation/",
            "text": "Get Geolocation\n\n\nGet the current geo location\n\n\nExample Usage\n\n\n// Java\nLocation location = driver.location(); // Must be a driver that implements LocationContext\n\n\n\n\n\n# Python\nlocation = self.driver.location()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet location = driver.location();\n\n\n\n// wd example\nlet location = await driver.sessionCapabilities('c8db88a0-47a6-47a1-802d-164d746c06aa');\n\n\n\n\n\n# Ruby\n@driver.location()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /session/:session_id/location\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nlatitude\n\n\nnumber\n\n\nThe current geolocation latitude\n\n\n\n\n\n\nlongitude\n\n\nnumber\n\n\nThe current geolocation longitude\n\n\n\n\n\n\naltitude\n\n\nnumber\n\n\nThe current geolocation altitude\n\n\n\n\n\n\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Get geolocation"
        },
        {
            "location": "/en/commands/session/other/get-geolocation/#get-geolocation",
            "text": "Get the current geo location",
            "title": "Get Geolocation"
        },
        {
            "location": "/en/commands/session/other/get-geolocation/#example-usage",
            "text": "// Java\nLocation location = driver.location(); // Must be a driver that implements LocationContext  # Python\nlocation = self.driver.location()  // Javascript\n// webdriver.io example\nlet location = driver.location();\n\n\n\n// wd example\nlet location = await driver.sessionCapabilities('c8db88a0-47a6-47a1-802d-164d746c06aa');  # Ruby\n@driver.location()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/other/get-geolocation/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/other/get-geolocation/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/other/get-geolocation/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/other/get-geolocation/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/other/get-geolocation/#endpoint",
            "text": "GET /session/:session_id/location",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/other/get-geolocation/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/other/get-geolocation/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/other/get-geolocation/#response",
            "text": "name  type  description      latitude  number  The current geolocation latitude    longitude  number  The current geolocation longitude    altitude  number  The current geolocation altitude",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/other/get-geolocation/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/other/get-log-types/",
            "text": "Get available log types\n\n\nGet the log for a given log type. Log buffer is reset after each request\n\n\nExample Usage\n\n\n// Java\nSet<String> logEntries = driver.manage().logs().getAvailableLogTypes();\n\n\n\n\n\n# Python\nlog_types = driver.log_types();\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.log()\n\n\n\n// wd example\nconst logTypes = await driver.logTypes();\n\n\n\n\n\n# Ruby\nlog_types = @driver.logTypes\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/log/types\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nThe list of log types (\narray<string>\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Get log types"
        },
        {
            "location": "/en/commands/session/other/get-log-types/#get-available-log-types",
            "text": "Get the log for a given log type. Log buffer is reset after each request",
            "title": "Get available log types"
        },
        {
            "location": "/en/commands/session/other/get-log-types/#example-usage",
            "text": "// Java\nSet<String> logEntries = driver.manage().logs().getAvailableLogTypes();  # Python\nlog_types = driver.log_types();  // Javascript\n// webdriver.io example\ndriver.log()\n\n\n\n// wd example\nconst logTypes = await driver.logTypes();  # Ruby\nlog_types = @driver.logTypes  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/other/get-log-types/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/other/get-log-types/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/other/get-log-types/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/other/get-log-types/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/other/get-log-types/#endpoint",
            "text": "POST /session/:session_id/log/types",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/other/get-log-types/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/other/get-log-types/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/other/get-log-types/#response",
            "text": "The list of log types ( array<string> )",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/other/get-log-types/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/other/get-log/",
            "text": "Get Logs\n\n\nGet the log for a given log type. Log buffer is reset after each request\n\n\nExample Usage\n\n\n// Java\nLogEntries logEntries = driver.manage().logs().get(\"driver\");\n\n\n\n\n\n# Python\nlogs = driver.get_log('driver');\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet logs = driver.log('driver')\n\n\n\n// wd example\nconst logs = await driver.log('driver');\n\n\n\n\n\n# Ruby\n@driver.logs('driver')\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/log\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nstring\n\n\nThe log type\n\n\n\n\n\n\n\n\nResponse\n\n\nThe list of log entries (\narray<object>\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Get log"
        },
        {
            "location": "/en/commands/session/other/get-log/#get-logs",
            "text": "Get the log for a given log type. Log buffer is reset after each request",
            "title": "Get Logs"
        },
        {
            "location": "/en/commands/session/other/get-log/#example-usage",
            "text": "// Java\nLogEntries logEntries = driver.manage().logs().get(\"driver\");  # Python\nlogs = driver.get_log('driver');  // Javascript\n// webdriver.io example\nlet logs = driver.log('driver')\n\n\n\n// wd example\nconst logs = await driver.log('driver');  # Ruby\n@driver.logs('driver')  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/other/get-log/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/other/get-log/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/other/get-log/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/other/get-log/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/other/get-log/#endpoint",
            "text": "POST /session/:session_id/log",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/other/get-log/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/other/get-log/#json-parameters",
            "text": "name  type  description      type  string  The log type",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/other/get-log/#response",
            "text": "The list of log entries ( array<object> )",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/other/get-log/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/other/get-orientation/",
            "text": "Get Orientation\n\n\nGet the current device/browser orientation\n\n\nExample Usage\n\n\n// Java\nScreenOrientation orientation = driver.getOrientation();\n\n\n\n\n\n# Python\norientation = self.driver.orientation()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet orientation = driver.orientation();\n\n\n\n// wd example\nlet orientation = await driver.getOrientation();\n\n\n\n\n\n# Ruby\n@driver.orientation()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /session/:session_id/orientation\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nThe current browser orientation {LANDSCAPE|PORTRAIT} (\nstring\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Get orientation"
        },
        {
            "location": "/en/commands/session/other/get-orientation/#get-orientation",
            "text": "Get the current device/browser orientation",
            "title": "Get Orientation"
        },
        {
            "location": "/en/commands/session/other/get-orientation/#example-usage",
            "text": "// Java\nScreenOrientation orientation = driver.getOrientation();  # Python\norientation = self.driver.orientation()  // Javascript\n// webdriver.io example\nlet orientation = driver.orientation();\n\n\n\n// wd example\nlet orientation = await driver.getOrientation();  # Ruby\n@driver.orientation()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/other/get-orientation/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/other/get-orientation/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/other/get-orientation/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/other/get-orientation/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/other/get-orientation/#endpoint",
            "text": "GET /session/:session_id/orientation",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/other/get-orientation/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/other/get-orientation/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/other/get-orientation/#response",
            "text": "The current browser orientation {LANDSCAPE|PORTRAIT} ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/other/get-orientation/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/other/get-settings/",
            "text": "Retrieve Device Settings\n\n\nRetrieve the current setting on the device\n\n\nExample Usage\n\n\n// Java\nMap<String, Object> settings = driver.getSettings();\n\n\n\n\n\n# Not supported\n\n\n\n\n// Javascript\n// webdriver.io example\nlet settings = driver.settings(settings);\n\n\n\n// wd example\nawait driver.settings(settings);\n\n\n\n\n\n# Not supported\n\n\n\n\n// Not supported\n\n\n\n\n// Not supported\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nNone\n\n\n\n\n\n\n\n\nPHP\n\n\nNone\n\n\n\n\n\n\n\n\nC#\n\n\nNone\n\n\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/appium/settings\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsettings\n\n\nstring\n\n\nSettings string\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Get settings"
        },
        {
            "location": "/en/commands/session/other/get-settings/#retrieve-device-settings",
            "text": "Retrieve the current setting on the device",
            "title": "Retrieve Device Settings"
        },
        {
            "location": "/en/commands/session/other/get-settings/#example-usage",
            "text": "// Java\nMap<String, Object> settings = driver.getSettings();  # Not supported  // Javascript\n// webdriver.io example\nlet settings = driver.settings(settings);\n\n\n\n// wd example\nawait driver.settings(settings);  # Not supported  // Not supported  // Not supported",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/other/get-settings/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/other/get-settings/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/other/get-settings/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  None     Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  None     PHP  None     C#  None",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/other/get-settings/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/other/get-settings/#endpoint",
            "text": "POST /wd/hub/session/:session_id/appium/settings",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/other/get-settings/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/other/get-settings/#json-parameters",
            "text": "name  type  description      settings  string  Settings string",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/other/get-settings/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/other/get-settings/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/other/set-geolocation/",
            "text": "Set Geolocation\n\n\nSet the current geo location\n\n\nExample Usage\n\n\n// Java\ndriver.setLocation(new Location(49, 123, 10)); // Must be a driver that implements LocationContext\n\n\n\n\n\n# Python\nself.driver.set_location(49, 123, 10)\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.location({latitude: 121.21, longitude: 11.56, altitude: 94.23});\n\n\n\n// wd example\nlet location = await driver.sessionCapabilities('c8db88a0-47a6-47a1-802d-164d746c06aa');\n\n\n\n\n\n# Ruby\n@driver.set_location(121.21, 11.56, 94.23)\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/location\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nlatitude\n\n\nnumber\n\n\nThe current geolocation latitude\n\n\n\n\n\n\nlongitude\n\n\nnumber\n\n\nThe current geolocation longitude\n\n\n\n\n\n\naltitude\n\n\nnumber\n\n\nThe current geolocation altitude\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Set geolocation"
        },
        {
            "location": "/en/commands/session/other/set-geolocation/#set-geolocation",
            "text": "Set the current geo location",
            "title": "Set Geolocation"
        },
        {
            "location": "/en/commands/session/other/set-geolocation/#example-usage",
            "text": "// Java\ndriver.setLocation(new Location(49, 123, 10)); // Must be a driver that implements LocationContext  # Python\nself.driver.set_location(49, 123, 10)  // Javascript\n// webdriver.io example\ndriver.location({latitude: 121.21, longitude: 11.56, altitude: 94.23});\n\n\n\n// wd example\nlet location = await driver.sessionCapabilities('c8db88a0-47a6-47a1-802d-164d746c06aa');  # Ruby\n@driver.set_location(121.21, 11.56, 94.23)  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/other/set-geolocation/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/other/set-geolocation/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/other/set-geolocation/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/other/set-geolocation/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/other/set-geolocation/#endpoint",
            "text": "POST /session/:session_id/location",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/other/set-geolocation/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/other/set-geolocation/#json-parameters",
            "text": "name  type  description      latitude  number  The current geolocation latitude    longitude  number  The current geolocation longitude    altitude  number  The current geolocation altitude",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/other/set-geolocation/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/other/set-geolocation/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/other/set-orientation/",
            "text": "Set Orientation\n\n\nSet the current device/browser orientation\n\n\nExample Usage\n\n\n// Java\nScreenOrientation orientation = driver.rotate(ScreenOrientation.LANDSCAPE);\n\n\n\n\n\n# Python\ndriver.orientation = \"LANDSCAPE\"\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.orientation(\"LANDSCAPE\");\n\n\n\n// wd example\nawait driver.setOrientation();\n\n\n\n\n\n# Ruby\n@driver.orientation(\"LANDSCAPE\")\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /session/:session_id/orientation\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nThe current browser orientation {LANDSCAPE|PORTRAIT} (\nstring\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Set orientation"
        },
        {
            "location": "/en/commands/session/other/set-orientation/#set-orientation",
            "text": "Set the current device/browser orientation",
            "title": "Set Orientation"
        },
        {
            "location": "/en/commands/session/other/set-orientation/#example-usage",
            "text": "// Java\nScreenOrientation orientation = driver.rotate(ScreenOrientation.LANDSCAPE);  # Python\ndriver.orientation = \"LANDSCAPE\"  // Javascript\n// webdriver.io example\ndriver.orientation(\"LANDSCAPE\");\n\n\n\n// wd example\nawait driver.setOrientation();  # Ruby\n@driver.orientation(\"LANDSCAPE\")  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/other/set-orientation/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/other/set-orientation/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/other/set-orientation/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/other/set-orientation/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/other/set-orientation/#endpoint",
            "text": "GET /session/:session_id/orientation",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/other/set-orientation/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/other/set-orientation/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/other/set-orientation/#response",
            "text": "The current browser orientation {LANDSCAPE|PORTRAIT} ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/other/set-orientation/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/other/update-settings/",
            "text": "Update Device Settings\n\n\nUpdate the current setting on the device\n\n\nExample Usage\n\n\n// Java\ndriver.setSetting(Setting.WAIT_FOR_IDLE_TIMEOUT, new Boolean(true));\n\n\n\n\n\n# Not supported\n\n\n\n\n// Javascript\n// webdriver.io example\nlet settings = driver.settings(\"settings\");\n\n\n\n// wd example\nlet settings = await driver.settings(\"settings\");\n\n\n\n\n\n# Not supported\n\n\n\n\n// Not supported\n\n\n\n\n// Not supported\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nappium.github.io\n\n\n\n\n\n\nPython\n\n\nNone\n\n\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nNone\n\n\n\n\n\n\n\n\nPHP\n\n\nNone\n\n\n\n\n\n\n\n\nC#\n\n\nNone\n\n\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/appium/settings\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nSettings string (\nstring\n)\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Update settings"
        },
        {
            "location": "/en/commands/session/other/update-settings/#update-device-settings",
            "text": "Update the current setting on the device",
            "title": "Update Device Settings"
        },
        {
            "location": "/en/commands/session/other/update-settings/#example-usage",
            "text": "// Java\ndriver.setSetting(Setting.WAIT_FOR_IDLE_TIMEOUT, new Boolean(true));  # Not supported  // Javascript\n// webdriver.io example\nlet settings = driver.settings(\"settings\");\n\n\n\n// wd example\nlet settings = await driver.settings(\"settings\");  # Not supported  // Not supported  // Not supported",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/other/update-settings/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/other/update-settings/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/other/update-settings/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  appium.github.io    Python  None     Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  None     PHP  None     C#  None",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/other/update-settings/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/other/update-settings/#endpoint",
            "text": "GET /wd/hub/session/:session_id/appium/settings",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/other/update-settings/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/other/update-settings/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/other/update-settings/#response",
            "text": "Settings string ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/other/update-settings/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/timeouts/async-script/",
            "text": "Set Script Timeout\n\n\nSet the amount of time, in milliseconds, that asynchronous scripts executed by \nexecute async\n are permitted to run before they are aborted (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.manage().timeouts().setScriptTimeout(30, TimeUnit.SECONDS);\n\n\n\n\n\n# Python\nself.driver.set_script_timeout(5000)\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.timeoutsAsyncScript(5000)\n\n\n\n// wd example\nawait driver.setAsyncScriptTimeout(5000);\n\n\n\n\n\n# Ruby\n@driver.script_timeout(5) # Ruby translates it to seconds\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/timeouts/async_script\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nms\n\n\nnumber\n\n\nThe amount of time, in milliseconds, that time-limited commands are permitted to run\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Async script"
        },
        {
            "location": "/en/commands/session/timeouts/async-script/#set-script-timeout",
            "text": "Set the amount of time, in milliseconds, that asynchronous scripts executed by  execute async  are permitted to run before they are aborted (Web context only)",
            "title": "Set Script Timeout"
        },
        {
            "location": "/en/commands/session/timeouts/async-script/#example-usage",
            "text": "// Java\ndriver.manage().timeouts().setScriptTimeout(30, TimeUnit.SECONDS);  # Python\nself.driver.set_script_timeout(5000)  // Javascript\n// webdriver.io example\ndriver.timeoutsAsyncScript(5000)\n\n\n\n// wd example\nawait driver.setAsyncScriptTimeout(5000);  # Ruby\n@driver.script_timeout(5) # Ruby translates it to seconds  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/timeouts/async-script/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/timeouts/async-script/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/timeouts/async-script/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/timeouts/async-script/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/timeouts/async-script/#endpoint",
            "text": "POST /session/:session_id/timeouts/async_script",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/timeouts/async-script/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/timeouts/async-script/#json-parameters",
            "text": "name  type  description      ms  number  The amount of time, in milliseconds, that time-limited commands are permitted to run",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/timeouts/async-script/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/timeouts/async-script/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/timeouts/implicit-wait/",
            "text": "Set Implicit Wait Timeout\n\n\nSet the amount of time the driver should wait when searching for elements\n\n\nExample Usage\n\n\n// Java\ndriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\n\n\n\n\n# Python\nself.driver.implicitly_wait(5000)\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.timeoutsImplicitWait(5000)\n\n\n\n// wd example\nawait driver.setImplicitWaitTimeout(5000);\n\n\n\n\n\n# Ruby\n@driver.implicit_wait(5) # Ruby translates it to seconds\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nWhen  searching for a single element, the driver should poll the page until an element is found or\nthe timeout expires, whichever occurs first. When searching for multiple elements, the driver\nshould poll the page until at least one element is found or the timeout expires, at which point\nit should return an empty list.\n\n\nIf this command is never sent, the driver should default to an implicit wait of 0ms\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/timeouts/implicit_wait\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nms\n\n\nnumber\n\n\nThe amount of time, in milliseconds, that time-limited commands are permitted to run\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Implicit wait"
        },
        {
            "location": "/en/commands/session/timeouts/implicit-wait/#set-implicit-wait-timeout",
            "text": "Set the amount of time the driver should wait when searching for elements",
            "title": "Set Implicit Wait Timeout"
        },
        {
            "location": "/en/commands/session/timeouts/implicit-wait/#example-usage",
            "text": "// Java\ndriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);  # Python\nself.driver.implicitly_wait(5000)  // Javascript\n// webdriver.io example\ndriver.timeoutsImplicitWait(5000)\n\n\n\n// wd example\nawait driver.setImplicitWaitTimeout(5000);  # Ruby\n@driver.implicit_wait(5) # Ruby translates it to seconds  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/timeouts/implicit-wait/#description",
            "text": "When  searching for a single element, the driver should poll the page until an element is found or\nthe timeout expires, whichever occurs first. When searching for multiple elements, the driver\nshould poll the page until at least one element is found or the timeout expires, at which point\nit should return an empty list.  If this command is never sent, the driver should default to an implicit wait of 0ms",
            "title": "Description"
        },
        {
            "location": "/en/commands/session/timeouts/implicit-wait/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/timeouts/implicit-wait/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/timeouts/implicit-wait/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/timeouts/implicit-wait/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/timeouts/implicit-wait/#endpoint",
            "text": "POST /session/:session_id/timeouts/implicit_wait",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/timeouts/implicit-wait/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/timeouts/implicit-wait/#json-parameters",
            "text": "name  type  description      ms  number  The amount of time, in milliseconds, that time-limited commands are permitted to run",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/timeouts/implicit-wait/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/timeouts/implicit-wait/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/session/timeouts/timeout/",
            "text": "Set Timeouts\n\n\nConfigure the amount of time that a particular type of operation can execute for before they are aborted\n\n\nExample Usage\n\n\n// Java\ndriver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);\n\n\n\n\n\n# Python\nself.driver.set_page_load_timeout(5000)\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.timeouts('pageLoad', 5000)\n\n\n\n// wd example\nawait driver.setPageLoadTimeout(5000);\n\n\n\n\n\n# Ruby\n@driver.page_load(5) # Ruby translates it to seconds\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nThe types of timeouts are 'page load', \n'script'\n and \n'implicit'\n. (The example usage is just 'page load')\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\n?+\n\n\n1.6.4+\n\n\nAll\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\n10+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /session/:session_id/timeouts\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\ntype\n\n\nstring\n\n\nThe type of operation to set the timeout for. Valid values are: 'script' for script timeouts, 'implicit' for modifying the implicit wait timeout and 'page load' for setting a page load timeout.\n\n\n\n\n\n\nms\n\n\nnumber\n\n\nThe amount of time, in milliseconds, that time-limited commands are permitted to run\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Timeout"
        },
        {
            "location": "/en/commands/session/timeouts/timeout/#set-timeouts",
            "text": "Configure the amount of time that a particular type of operation can execute for before they are aborted",
            "title": "Set Timeouts"
        },
        {
            "location": "/en/commands/session/timeouts/timeout/#example-usage",
            "text": "// Java\ndriver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);  # Python\nself.driver.set_page_load_timeout(5000)  // Javascript\n// webdriver.io example\ndriver.timeouts('pageLoad', 5000)\n\n\n\n// wd example\nawait driver.setPageLoadTimeout(5000);  # Ruby\n@driver.page_load(5) # Ruby translates it to seconds  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/session/timeouts/timeout/#description",
            "text": "The types of timeouts are 'page load',  'script'  and  'implicit' . (The example usage is just 'page load')",
            "title": "Description"
        },
        {
            "location": "/en/commands/session/timeouts/timeout/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/session/timeouts/timeout/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  ?+  1.6.4+  All    Windows  Windows  10+  1.6.0+  All",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/session/timeouts/timeout/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/session/timeouts/timeout/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/session/timeouts/timeout/#endpoint",
            "text": "POST /session/:session_id/timeouts",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/session/timeouts/timeout/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/session/timeouts/timeout/#json-parameters",
            "text": "name  type  description      type  string  The type of operation to set the timeout for. Valid values are: 'script' for script timeouts, 'implicit' for modifying the implicit wait timeout and 'page load' for setting a page load timeout.    ms  number  The amount of time, in milliseconds, that time-limited commands are permitted to run",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/session/timeouts/timeout/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/session/timeouts/timeout/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/execute-async/",
            "text": "Execute Async Script\n\n\nInject a snippet of JavaScript into the page for execution in the context of the currently selected frame (Web context only)\n\n\nExample Usage\n\n\n// Java\n((JavascriptExecutor) driver).executeAsyncScript(\"window.setTimeout(arguments[arguments.length - 1], 500);\");\n\n\n\n\n\n# Python\nself.driver.execute_async_script(\u2018document.title\u2019)\n\n\n\n\n\n// Javascript\n// webdriver.io example\nbrowser.timeoutsAsyncScript(5000);\nvar result = browser.executeAsync(function(a, b, c, d, done) {\n    // browser context - you may access neither client nor console\n    setTimeout(function() {\n        done(a + b + c + d);\n    }, 3000);\n}, 1, 2, 3, 4)\n\n// node.js context - client and console are available\nconsole.log(result.value); // outputs: 10\n\n\n\n// wd example\nawait driver.safeExecuteAsync('document.title');\n\n\n\n\n\n# Ruby\n@driver.execute_async_script(\"document.title\")\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nThe executed script is assumed to be asynchronous and must signal that is done by invoking the provided callback, which is always provided as the final argument to the function. The value to this callback will be returned to the client.\n\n\nAsynchronous script commands may not span page loads. If an unload event is fired while waiting for a script result, an error should be returned to the client.\n\n\nThe script argument defines the script to execute in teh form of a function body. The function will be invoked with the provided args array and the values may be accessed via the arguments object in the order specified. The final argument will always be a callback function that must be invoked to signal that the script has finished.\n\n\nArguments may be any JSON-primitive, array, or JSON object. JSON objects that define a WebElement reference will be converted to the corresponding DOM element. Likewise, any WebElements in the script result will be returned to the client as WebElement JSON objects.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nNone\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nNone\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nNone\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nNone\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nNone\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nNone\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nNone\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/execute_async\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nscript\n\n\nstring\n\n\nThe script to execute\n\n\n\n\n\n\nargs\n\n\narray\n\n\nThe script arguments\n\n\n\n\n\n\n\n\nResponse\n\n\nThe script result (\nany\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Execute async"
        },
        {
            "location": "/en/commands/web/execute-async/#execute-async-script",
            "text": "Inject a snippet of JavaScript into the page for execution in the context of the currently selected frame (Web context only)",
            "title": "Execute Async Script"
        },
        {
            "location": "/en/commands/web/execute-async/#example-usage",
            "text": "// Java\n((JavascriptExecutor) driver).executeAsyncScript(\"window.setTimeout(arguments[arguments.length - 1], 500);\");  # Python\nself.driver.execute_async_script(\u2018document.title\u2019)  // Javascript\n// webdriver.io example\nbrowser.timeoutsAsyncScript(5000);\nvar result = browser.executeAsync(function(a, b, c, d, done) {\n    // browser context - you may access neither client nor console\n    setTimeout(function() {\n        done(a + b + c + d);\n    }, 3000);\n}, 1, 2, 3, 4)\n\n// node.js context - client and console are available\nconsole.log(result.value); // outputs: 10\n\n\n\n// wd example\nawait driver.safeExecuteAsync('document.title');  # Ruby\n@driver.execute_async_script(\"document.title\")  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/execute-async/#description",
            "text": "The executed script is assumed to be asynchronous and must signal that is done by invoking the provided callback, which is always provided as the final argument to the function. The value to this callback will be returned to the client.  Asynchronous script commands may not span page loads. If an unload event is fired while waiting for a script result, an error should be returned to the client.  The script argument defines the script to execute in teh form of a function body. The function will be invoked with the provided args array and the values may be accessed via the arguments object in the order specified. The final argument will always be a callback function that must be invoked to signal that the script has finished.  Arguments may be any JSON-primitive, array, or JSON object. JSON objects that define a WebElement reference will be converted to the corresponding DOM element. Likewise, any WebElements in the script result will be returned to the client as WebElement JSON objects.",
            "title": "Description"
        },
        {
            "location": "/en/commands/web/execute-async/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/execute-async/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/execute-async/#appium-clients",
            "text": "Language  Support  Documentation      Java  None  seleniumhq.github.io    Python  None  selenium-python.readthedocs.io    Javascript (WebdriverIO)  None  webdriver.io    Javascript (WD)  None  github.com    Ruby  None  www.rubydoc.info    PHP  None  github.com    C#  None  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/execute-async/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/execute-async/#endpoint",
            "text": "GET /wd/hub/session/:session_id/execute_async",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/execute-async/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/execute-async/#json-parameters",
            "text": "name  type  description      script  string  The script to execute    args  array  The script arguments",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/execute-async/#response",
            "text": "The script result ( any )",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/execute-async/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/execute/",
            "text": "Execute Script\n\n\nInject a snippet of JavaScript into the page for execution in the context of the currently selected frame (Web context only)\n\n\nExample Usage\n\n\n// Java\n((JavascriptExecutor) driver).executeScript(\"window.setTimeout(arguments[arguments.length - 1], 500);\");\n\n\n\n\n\n# Python\nself.driver.execute_script(\u2018document.title\u2019)\n\n\n\n\n\n// Javascript\n// webdriver.io example\nvar result = browser.execute(function(a, b, c, d) {\n  // browser context - you may not access client or console\n  return a + b + c + d;\n}, 1, 2, 3, 4)\n\n// node.js context - client and console are available\nconsole.log(result.value); // outputs: 10\n\n\n\n// wd example\nawait driver.safeAsync('document.title');\n\n\n\n\n\n# Ruby\n@driver.execute_script(\"document.title\")\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nThe executed script is assumed to be synchronous and the result of evaluating the script is returned to the client.\n\n\nThe script argument defines the script to execute in the form of a function body. The value returned by that function will be returned to the client. The function will be invoked with the provided args array and the values may be accessed via the arguments object in the order specified.\n\n\nArguments may be any JSON-primitive, array, or JSON object. JSON objects that define a WebElement reference will be converted to the corresponding DOM element. Likewise, any WebElements in the script result will be returned to the client as WebElement JSON objects.\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nNone\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nNone\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nNone\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nNone\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nNone\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nNone\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nNone\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/execute_async\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nscript\n\n\nstring\n\n\nThe script to execute\n\n\n\n\n\n\nargs\n\n\narray\n\n\nThe script arguments\n\n\n\n\n\n\n\n\nResponse\n\n\nThe script result (\nany\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Execute"
        },
        {
            "location": "/en/commands/web/execute/#execute-script",
            "text": "Inject a snippet of JavaScript into the page for execution in the context of the currently selected frame (Web context only)",
            "title": "Execute Script"
        },
        {
            "location": "/en/commands/web/execute/#example-usage",
            "text": "// Java\n((JavascriptExecutor) driver).executeScript(\"window.setTimeout(arguments[arguments.length - 1], 500);\");  # Python\nself.driver.execute_script(\u2018document.title\u2019)  // Javascript\n// webdriver.io example\nvar result = browser.execute(function(a, b, c, d) {\n  // browser context - you may not access client or console\n  return a + b + c + d;\n}, 1, 2, 3, 4)\n\n// node.js context - client and console are available\nconsole.log(result.value); // outputs: 10\n\n\n\n// wd example\nawait driver.safeAsync('document.title');  # Ruby\n@driver.execute_script(\"document.title\")  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/execute/#description",
            "text": "The executed script is assumed to be synchronous and the result of evaluating the script is returned to the client.  The script argument defines the script to execute in the form of a function body. The value returned by that function will be returned to the client. The function will be invoked with the provided args array and the values may be accessed via the arguments object in the order specified.  Arguments may be any JSON-primitive, array, or JSON object. JSON objects that define a WebElement reference will be converted to the corresponding DOM element. Likewise, any WebElements in the script result will be returned to the client as WebElement JSON objects.",
            "title": "Description"
        },
        {
            "location": "/en/commands/web/execute/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/execute/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/execute/#appium-clients",
            "text": "Language  Support  Documentation      Java  None  seleniumhq.github.io    Python  None  selenium-python.readthedocs.io    Javascript (WebdriverIO)  None  webdriver.io    Javascript (WD)  None  github.com    Ruby  None  www.rubydoc.info    PHP  None  github.com    C#  None  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/execute/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/execute/#endpoint",
            "text": "GET /wd/hub/session/:session_id/execute_async",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/execute/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/execute/#json-parameters",
            "text": "name  type  description      script  string  The script to execute    args  array  The script arguments",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/execute/#response",
            "text": "The script result ( any )",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/execute/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/frame/parent/",
            "text": "Switch to Parent Frame\n\n\nChange focus to the parent context (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.switchTo().parentFrame();\n\n\n\n\n\n# Python\nself.driver.switch_to.parent()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.frameParent();\n\n\n\n// Not supported\n\n\n\n\n# Ruby\n@driver.parent_frame()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nIf the current context is the top level browsing context, the context remains unchanged\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/url\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nThe current URL (\nstring\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Parent"
        },
        {
            "location": "/en/commands/web/frame/parent/#switch-to-parent-frame",
            "text": "Change focus to the parent context (Web context only)",
            "title": "Switch to Parent Frame"
        },
        {
            "location": "/en/commands/web/frame/parent/#example-usage",
            "text": "// Java\ndriver.switchTo().parentFrame();  # Python\nself.driver.switch_to.parent()  // Javascript\n// webdriver.io example\ndriver.frameParent();\n\n\n\n// Not supported  # Ruby\n@driver.parent_frame()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/frame/parent/#description",
            "text": "If the current context is the top level browsing context, the context remains unchanged",
            "title": "Description"
        },
        {
            "location": "/en/commands/web/frame/parent/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/frame/parent/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/frame/parent/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All     Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/frame/parent/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/frame/parent/#endpoint",
            "text": "GET /wd/hub/session/:session_id/url",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/frame/parent/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/frame/parent/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/frame/parent/#response",
            "text": "The current URL ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/frame/parent/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/frame/switch/",
            "text": "Switch to Frame\n\n\nChange focus to another frame on the page (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.switchTo().frame(3);\n\n\n\n\n\n# Python\nself.driver.switch_to.frame(3)\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.frame(3);\n\n\n\n// wd example\nawait driver.frame(3);\n\n\n\n\n\n# Ruby\n@driver.switch_to.frame(3)\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nDescription\n\n\nIf the frame id is null, the server should switch to the page's default content\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/frame\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nstring|number|null|WebElement JSON Object\n\n\nIdentifier for the frame to change focus to.\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Switch"
        },
        {
            "location": "/en/commands/web/frame/switch/#switch-to-frame",
            "text": "Change focus to another frame on the page (Web context only)",
            "title": "Switch to Frame"
        },
        {
            "location": "/en/commands/web/frame/switch/#example-usage",
            "text": "// Java\ndriver.switchTo().frame(3);  # Python\nself.driver.switch_to.frame(3)  // Javascript\n// webdriver.io example\ndriver.frame(3);\n\n\n\n// wd example\nawait driver.frame(3);  # Ruby\n@driver.switch_to.frame(3)  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/frame/switch/#description",
            "text": "If the frame id is null, the server should switch to the page's default content",
            "title": "Description"
        },
        {
            "location": "/en/commands/web/frame/switch/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/frame/switch/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/frame/switch/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/frame/switch/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/frame/switch/#endpoint",
            "text": "POST /wd/hub/session/:session_id/frame",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/frame/switch/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/frame/switch/#json-parameters",
            "text": "name  type  description      id  string|number|null|WebElement JSON Object  Identifier for the frame to change focus to.",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/frame/switch/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/frame/switch/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/navigation/back/",
            "text": "Go Back\n\n\nNavigate backwards in the browser history, if possible (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.back();\n\n\n\n\n\n# Python\nself.driver.back()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.back();\n\n\n\n// wd example\nawait driver.back();\n\n\n\n\n\n# Ruby\n@driver.back()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\n9.3+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUIAutomation\n\n\n8.0 to 9.3\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\n?+\n\n\n1.6.0+\n\n\nAll\n\n\n\n\n\n\n\n\nUiAutomator\n\n\n4.2+\n\n\nAll\n\n\nAll\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/back\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Back"
        },
        {
            "location": "/en/commands/web/navigation/back/#go-back",
            "text": "Navigate backwards in the browser history, if possible (Web context only)",
            "title": "Go Back"
        },
        {
            "location": "/en/commands/web/navigation/back/#example-usage",
            "text": "// Java\ndriver.back();  # Python\nself.driver.back()  // Javascript\n// webdriver.io example\ndriver.back();\n\n\n\n// wd example\nawait driver.back();  # Ruby\n@driver.back()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/navigation/back/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/navigation/back/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  9.3+  1.6.0+  All     UIAutomation  8.0 to 9.3  All  All    Android  UiAutomator2  ?+  1.6.0+  All     UiAutomator  4.2+  All  All    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/navigation/back/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/navigation/back/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/navigation/back/#endpoint",
            "text": "POST /wd/hub/session/:session_id/back",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/navigation/back/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/navigation/back/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/navigation/back/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/navigation/back/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/navigation/forward/",
            "text": "Go Forward\n\n\nNavigate forwards in the browser history, if possible (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.forward();\n\n\n\n\n\n# Python\nself.driver.forward()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.forward();\n\n\n\n// wd example\nawait driver.forward();\n\n\n\n\n\n# Ruby\n@driver.forward()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/forward\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Forward"
        },
        {
            "location": "/en/commands/web/navigation/forward/#go-forward",
            "text": "Navigate forwards in the browser history, if possible (Web context only)",
            "title": "Go Forward"
        },
        {
            "location": "/en/commands/web/navigation/forward/#example-usage",
            "text": "// Java\ndriver.forward();  # Python\nself.driver.forward()  // Javascript\n// webdriver.io example\ndriver.forward();\n\n\n\n// wd example\nawait driver.forward();  # Ruby\n@driver.forward()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/navigation/forward/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/navigation/forward/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/navigation/forward/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/navigation/forward/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/navigation/forward/#endpoint",
            "text": "POST /wd/hub/session/:session_id/forward",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/navigation/forward/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/navigation/forward/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/navigation/forward/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/navigation/forward/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/navigation/go-to-url/",
            "text": "Navigate to URL\n\n\nNavigate to a new URL (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.get(\"http://appium.io/\");\n\n\n\n\n\n# Python\nself.driver.get(\"http://appium.io/\")\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.url(\"http://appium.io\");\n\n\n\n// wd example\nawait driver.url(\"http://appium.io/\");\n\n\n\n\n\n# Ruby\n@driver.get(\"http://appium.io\")\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/url\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nurl\n\n\nstring\n\n\nThe URL to navigate to\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Go to url"
        },
        {
            "location": "/en/commands/web/navigation/go-to-url/#navigate-to-url",
            "text": "Navigate to a new URL (Web context only)",
            "title": "Navigate to URL"
        },
        {
            "location": "/en/commands/web/navigation/go-to-url/#example-usage",
            "text": "// Java\ndriver.get(\"http://appium.io/\");  # Python\nself.driver.get(\"http://appium.io/\")  // Javascript\n// webdriver.io example\ndriver.url(\"http://appium.io\");\n\n\n\n// wd example\nawait driver.url(\"http://appium.io/\");  # Ruby\n@driver.get(\"http://appium.io\")  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/navigation/go-to-url/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/navigation/go-to-url/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/navigation/go-to-url/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/navigation/go-to-url/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/navigation/go-to-url/#endpoint",
            "text": "POST /wd/hub/session/:session_id/url",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/navigation/go-to-url/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/navigation/go-to-url/#json-parameters",
            "text": "name  type  description      url  string  The URL to navigate to",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/navigation/go-to-url/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/navigation/go-to-url/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/navigation/refresh/",
            "text": "Refresh\n\n\nRefresh the current page. (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.refresh();\n\n\n\n\n\n# Python\nself.driver.refresh()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.refresh();\n\n\n\n// wd example\nawait driver.refresh();\n\n\n\n\n\n# Ruby\n@driver.refresh()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/refresh\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Refresh"
        },
        {
            "location": "/en/commands/web/navigation/refresh/#refresh",
            "text": "Refresh the current page. (Web context only)",
            "title": "Refresh"
        },
        {
            "location": "/en/commands/web/navigation/refresh/#example-usage",
            "text": "// Java\ndriver.refresh();  # Python\nself.driver.refresh()  // Javascript\n// webdriver.io example\ndriver.refresh();\n\n\n\n// wd example\nawait driver.refresh();  # Ruby\n@driver.refresh()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/navigation/refresh/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/navigation/refresh/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/navigation/refresh/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/navigation/refresh/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/navigation/refresh/#endpoint",
            "text": "POST /wd/hub/session/:session_id/refresh",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/navigation/refresh/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/navigation/refresh/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/navigation/refresh/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/navigation/refresh/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/navigation/url/",
            "text": "Get URL\n\n\nRetrieve the URL of the current page (Web context only)\n\n\nExample Usage\n\n\n// Java\nString url = driver.getCurrentUrl();\n\n\n\n\n\n# Python\nurl = self.driver.current_url()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet url = driver.url();\n\n\n\n// wd example\nlet url = await driver.url();\n\n\n\n\n\n# Ruby\n@driver.current_url\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/url\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nThe current URL (\nstring\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Url"
        },
        {
            "location": "/en/commands/web/navigation/url/#get-url",
            "text": "Retrieve the URL of the current page (Web context only)",
            "title": "Get URL"
        },
        {
            "location": "/en/commands/web/navigation/url/#example-usage",
            "text": "// Java\nString url = driver.getCurrentUrl();  # Python\nurl = self.driver.current_url()  // Javascript\n// webdriver.io example\nlet url = driver.url();\n\n\n\n// wd example\nlet url = await driver.url();  # Ruby\n@driver.current_url  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/navigation/url/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/navigation/url/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/navigation/url/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/navigation/url/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/navigation/url/#endpoint",
            "text": "GET /wd/hub/session/:session_id/url",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/navigation/url/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/navigation/url/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/navigation/url/#response",
            "text": "The current URL ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/navigation/url/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/storage/delete-all-cookies/",
            "text": "Delete All Cookies\n\n\nDelete all cookies visible to current page (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.manage().deleteAllCookies();\n\n\n\n\n\n# Python\nself.driver.delete_all_cookies()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.cookie(\"delete\");\n\n\n\n// wd example\nawait driver.deleteAllCookies();\n\n\n\n\n\n# Ruby\n@driver.delete_all_cookies()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nDELETE /wd/hub/session/:sessionId/cookie\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Delete all cookies"
        },
        {
            "location": "/en/commands/web/storage/delete-all-cookies/#delete-all-cookies",
            "text": "Delete all cookies visible to current page (Web context only)",
            "title": "Delete All Cookies"
        },
        {
            "location": "/en/commands/web/storage/delete-all-cookies/#example-usage",
            "text": "// Java\ndriver.manage().deleteAllCookies();  # Python\nself.driver.delete_all_cookies()  // Javascript\n// webdriver.io example\ndriver.cookie(\"delete\");\n\n\n\n// wd example\nawait driver.deleteAllCookies();  # Ruby\n@driver.delete_all_cookies()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/storage/delete-all-cookies/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/storage/delete-all-cookies/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/storage/delete-all-cookies/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/storage/delete-all-cookies/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/storage/delete-all-cookies/#endpoint",
            "text": "DELETE /wd/hub/session/:sessionId/cookie",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/storage/delete-all-cookies/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/storage/delete-all-cookies/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/storage/delete-all-cookies/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/storage/delete-all-cookies/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/storage/delete-cookie/",
            "text": "Delete Cookie\n\n\nDelete the cookie with the given name (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.manage().deleteCookieNamed(\"cookie_name\");\n\n\n\n\n\n# Python\nself.driver.delete_cookie(\"cookie_name\")\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.cookie(\"delete\", \"cookie_name\");\n\n\n\n// wd example\nawait driver.deleteCookie(\"cookie_name\");\n\n\n\n\n\n# Ruby\n@driver.delete_cookie(\"cookie_name\")\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nDELETE /wd/hub/session/:sessionId/cookie/:name\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nname\n\n\nName of cookie to delete\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Delete cookie"
        },
        {
            "location": "/en/commands/web/storage/delete-cookie/#delete-cookie",
            "text": "Delete the cookie with the given name (Web context only)",
            "title": "Delete Cookie"
        },
        {
            "location": "/en/commands/web/storage/delete-cookie/#example-usage",
            "text": "// Java\ndriver.manage().deleteCookieNamed(\"cookie_name\");  # Python\nself.driver.delete_cookie(\"cookie_name\")  // Javascript\n// webdriver.io example\ndriver.cookie(\"delete\", \"cookie_name\");\n\n\n\n// wd example\nawait driver.deleteCookie(\"cookie_name\");  # Ruby\n@driver.delete_cookie(\"cookie_name\")  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/storage/delete-cookie/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/storage/delete-cookie/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/storage/delete-cookie/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/storage/delete-cookie/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/storage/delete-cookie/#endpoint",
            "text": "DELETE /wd/hub/session/:sessionId/cookie/:name",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/storage/delete-cookie/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    name  Name of cookie to delete",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/storage/delete-cookie/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/storage/delete-cookie/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/storage/delete-cookie/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/storage/get-all-cookies/",
            "text": "Get All Cookies\n\n\nRetrieve all cookies visible to the current page (Web context only)\n\n\nExample Usage\n\n\n// Java\nSet<Cookie> allcookies = driver.manage().getCookies();\n\n\n\n\n\n# Python\ncookies = self.driver.get_cookies()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet cookies = driver.cookie();\n\n\n\n// wd example\nlet cookies = await driver.allCookies();\n\n\n\n\n\n# Ruby\n@driver.all_cookies\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:sessionId/cookie\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nA list of cookies (\narray<object>\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Get all cookies"
        },
        {
            "location": "/en/commands/web/storage/get-all-cookies/#get-all-cookies",
            "text": "Retrieve all cookies visible to the current page (Web context only)",
            "title": "Get All Cookies"
        },
        {
            "location": "/en/commands/web/storage/get-all-cookies/#example-usage",
            "text": "// Java\nSet<Cookie> allcookies = driver.manage().getCookies();  # Python\ncookies = self.driver.get_cookies()  // Javascript\n// webdriver.io example\nlet cookies = driver.cookie();\n\n\n\n// wd example\nlet cookies = await driver.allCookies();  # Ruby\n@driver.all_cookies  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/storage/get-all-cookies/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/storage/get-all-cookies/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/storage/get-all-cookies/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/storage/get-all-cookies/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/storage/get-all-cookies/#endpoint",
            "text": "GET /wd/hub/session/:sessionId/cookie",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/storage/get-all-cookies/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/storage/get-all-cookies/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/storage/get-all-cookies/#response",
            "text": "A list of cookies ( array<object> )",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/storage/get-all-cookies/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/storage/set-cookie/",
            "text": "Set Cookie\n\n\nSet a cookie (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.manage().addCookie(new Cookie(\"foo\", \"bar\"));\n\n\n\n\n\n# Python\nself.driver.add_cookie({name: 'foo', value: 'bar'})\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.cookie('post', {\n  name: 'myCookie',\n  value: 'some content'\n});\n\n\n\n// wd example\nlet cookies = await driver.setCookie({name: 'foo', value: 'bar'});\n\n\n\n\n\n# Ruby\n@driver.add_cookie(:name => 'foo', :value => 'bar')\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:sessionId/cookie\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\ncookie\n\n\nobject\n\n\nThe cookie to add\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Set cookie"
        },
        {
            "location": "/en/commands/web/storage/set-cookie/#set-cookie",
            "text": "Set a cookie (Web context only)",
            "title": "Set Cookie"
        },
        {
            "location": "/en/commands/web/storage/set-cookie/#example-usage",
            "text": "// Java\ndriver.manage().addCookie(new Cookie(\"foo\", \"bar\"));  # Python\nself.driver.add_cookie({name: 'foo', value: 'bar'})  // Javascript\n// webdriver.io example\ndriver.cookie('post', {\n  name: 'myCookie',\n  value: 'some content'\n});\n\n\n\n// wd example\nlet cookies = await driver.setCookie({name: 'foo', value: 'bar'});  # Ruby\n@driver.add_cookie(:name => 'foo', :value => 'bar')  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/storage/set-cookie/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/storage/set-cookie/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/storage/set-cookie/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/storage/set-cookie/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/storage/set-cookie/#endpoint",
            "text": "POST /wd/hub/session/:sessionId/cookie",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/storage/set-cookie/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/storage/set-cookie/#json-parameters",
            "text": "name  type  description      cookie  object  The cookie to add",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/storage/set-cookie/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/storage/set-cookie/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/window/close-window/",
            "text": "Close Window\n\n\nClose the current window (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.close();\n\n\n\n\n\n# Python\nself.driver.close()\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.close();\n\n\n\n// wd example\nawait driver.close();\n\n\n\n\n\n# Ruby\n@driver.close()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nDELETE /wd/hub/session/:session_id/window\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Close window"
        },
        {
            "location": "/en/commands/web/window/close-window/#close-window",
            "text": "Close the current window (Web context only)",
            "title": "Close Window"
        },
        {
            "location": "/en/commands/web/window/close-window/#example-usage",
            "text": "// Java\ndriver.close();  # Python\nself.driver.close()  // Javascript\n// webdriver.io example\ndriver.close();\n\n\n\n// wd example\nawait driver.close();  # Ruby\n@driver.close()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/window/close-window/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/window/close-window/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/window/close-window/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/window/close-window/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/window/close-window/#endpoint",
            "text": "DELETE /wd/hub/session/:session_id/window",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/window/close-window/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/window/close-window/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/window/close-window/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/window/close-window/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/window/get-handle/",
            "text": "Get Window Handle\n\n\nRetrieve the current window handle (Web context only)\n\n\nExample Usage\n\n\n// Java\nString windowHandle = driver.getWindowHandle();\n\n\n\n\n\n# Python\nwindow_handle = self.driver.current_window_handle()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet handle = driver.windowHandle();\n\n\n\n// wd example\nlet windowHandle = await driver.windowHandle();\n\n\n\n\n\n# Ruby\n@driver.window_handle\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/window_handle\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Get handle"
        },
        {
            "location": "/en/commands/web/window/get-handle/#get-window-handle",
            "text": "Retrieve the current window handle (Web context only)",
            "title": "Get Window Handle"
        },
        {
            "location": "/en/commands/web/window/get-handle/#example-usage",
            "text": "// Java\nString windowHandle = driver.getWindowHandle();  # Python\nwindow_handle = self.driver.current_window_handle()  // Javascript\n// webdriver.io example\nlet handle = driver.windowHandle();\n\n\n\n// wd example\nlet windowHandle = await driver.windowHandle();  # Ruby\n@driver.window_handle  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/window/get-handle/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/window/get-handle/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/window/get-handle/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/window/get-handle/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/window/get-handle/#endpoint",
            "text": "GET /wd/hub/session/:session_id/window_handle",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/window/get-handle/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/window/get-handle/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/window/get-handle/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/window/get-handle/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/window/get-handles/",
            "text": "Get Window Handles\n\n\nRetrieve the list of all window handles available to the session (Web context only)\n\n\nExample Usage\n\n\n// Java\nSet<String> windowHandles = driver.getWindowHandles();\n\n\n\n\n\n# Python\nwindow_handles = self.driver.window_handles()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet handles = driver.windowHandles();\n\n\n\n// wd example\nlet windowHandle = await driver.windowHandles();\n\n\n\n\n\n# Ruby\n@driver.window_handles\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/window_handles\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nA list of window handles (\narray<string>\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Get handles"
        },
        {
            "location": "/en/commands/web/window/get-handles/#get-window-handles",
            "text": "Retrieve the list of all window handles available to the session (Web context only)",
            "title": "Get Window Handles"
        },
        {
            "location": "/en/commands/web/window/get-handles/#example-usage",
            "text": "// Java\nSet<String> windowHandles = driver.getWindowHandles();  # Python\nwindow_handles = self.driver.window_handles()  // Javascript\n// webdriver.io example\nlet handles = driver.windowHandles();\n\n\n\n// wd example\nlet windowHandle = await driver.windowHandles();  # Ruby\n@driver.window_handles  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/window/get-handles/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/window/get-handles/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/window/get-handles/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/window/get-handles/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/window/get-handles/#endpoint",
            "text": "GET /wd/hub/session/:session_id/window_handles",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/window/get-handles/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/window/get-handles/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/window/get-handles/#response",
            "text": "A list of window handles ( array<string> )",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/window/get-handles/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/window/get-window-position/",
            "text": "Get Window Position\n\n\nGet the position of the specified window (Web context only)\n\n\nExample Usage\n\n\n// Java\nPoint windowPosition = driver.manage().window().getPosition();\n\n\n\n\n\n# Python\nhandle_one_position = self.driver.get_window_position()\nhandle_two_position = self.driver.get_window_position(\"handleName\")\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet handleOnePosition = driver.windowHandlePosition();\nlet handleTwoPosition = driver.windowHandlePosition(\"handleName\");\n\n\n\n// wd example\nlet handleOnePosition = await driver.getWindowPosition();\nlet handleTwoPosition = await driver.getWindowPosition(\"handleName\");\n\n\n\n\n\n# Ruby\n@driver.window_position()\n@driver.window_position(\"handleName\")\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/window/:window_handle/position\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nwindow_handle\n\n\nHandle of the window to get position of. If 'current' it will get position of current window.\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nnumber\n\n\nThe x coordinate relative to the top left corner of the window\n\n\n\n\n\n\ny\n\n\nnumber\n\n\nThe y coordinate relative to the top left corner of the window\n\n\n\n\n\n\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Get window position"
        },
        {
            "location": "/en/commands/web/window/get-window-position/#get-window-position",
            "text": "Get the position of the specified window (Web context only)",
            "title": "Get Window Position"
        },
        {
            "location": "/en/commands/web/window/get-window-position/#example-usage",
            "text": "// Java\nPoint windowPosition = driver.manage().window().getPosition();  # Python\nhandle_one_position = self.driver.get_window_position()\nhandle_two_position = self.driver.get_window_position(\"handleName\")  // Javascript\n// webdriver.io example\nlet handleOnePosition = driver.windowHandlePosition();\nlet handleTwoPosition = driver.windowHandlePosition(\"handleName\");\n\n\n\n// wd example\nlet handleOnePosition = await driver.getWindowPosition();\nlet handleTwoPosition = await driver.getWindowPosition(\"handleName\");  # Ruby\n@driver.window_position()\n@driver.window_position(\"handleName\")  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/window/get-window-position/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/window/get-window-position/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/window/get-window-position/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/window/get-window-position/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/window/get-window-position/#endpoint",
            "text": "GET /wd/hub/session/:session_id/window/:window_handle/position",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/window/get-window-position/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    window_handle  Handle of the window to get position of. If 'current' it will get position of current window.",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/window/get-window-position/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/window/get-window-position/#response",
            "text": "name  type  description      x  number  The x coordinate relative to the top left corner of the window    y  number  The y coordinate relative to the top left corner of the window",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/window/get-window-position/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/window/get-window-size/",
            "text": "Get Window Size\n\n\nGet the size of the specified window (Web context only)\n\n\nExample Usage\n\n\n// Java\nDimension windowSize = driver.manage().window().getSize();\n\n\n\n\n\n# Python\nhandle_one_size = self.driver.get_window_size()\nhandle_two_size = self.driver.get_window_size(\"handleName\")\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet handleOneSize = driver.windowHandleSize();\nlet handleTwoSize = driver.windowHandleSize(\"handleName\");\n\n\n\n// wd example\nlet handleOneSize = await driver.getWindowSize();\nlet handleTwoSize = await driver.getWindowSize(\"handleName\");\n\n\n\n\n\n# Ruby\n@driver.window_size()\n@driver.window_size(\"handleName\")\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/window/:window_handle/size\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nwindow_handle\n\n\nHandle of the window to get size of. If 'current' it will get size of current window.\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nwidth\n\n\nnumber\n\n\nThe width of the window\n\n\n\n\n\n\nheight\n\n\nnumber\n\n\nThe height of the window\n\n\n\n\n\n\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Get window size"
        },
        {
            "location": "/en/commands/web/window/get-window-size/#get-window-size",
            "text": "Get the size of the specified window (Web context only)",
            "title": "Get Window Size"
        },
        {
            "location": "/en/commands/web/window/get-window-size/#example-usage",
            "text": "// Java\nDimension windowSize = driver.manage().window().getSize();  # Python\nhandle_one_size = self.driver.get_window_size()\nhandle_two_size = self.driver.get_window_size(\"handleName\")  // Javascript\n// webdriver.io example\nlet handleOneSize = driver.windowHandleSize();\nlet handleTwoSize = driver.windowHandleSize(\"handleName\");\n\n\n\n// wd example\nlet handleOneSize = await driver.getWindowSize();\nlet handleTwoSize = await driver.getWindowSize(\"handleName\");  # Ruby\n@driver.window_size()\n@driver.window_size(\"handleName\")  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/window/get-window-size/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/window/get-window-size/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/window/get-window-size/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/window/get-window-size/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/window/get-window-size/#endpoint",
            "text": "GET /wd/hub/session/:session_id/window/:window_handle/size",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/window/get-window-size/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    window_handle  Handle of the window to get size of. If 'current' it will get size of current window.",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/window/get-window-size/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/window/get-window-size/#response",
            "text": "name  type  description      width  number  The width of the window    height  number  The height of the window",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/window/get-window-size/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/window/maximize-window/",
            "text": "Maximize Window\n\n\nMaximize the specified window (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.manage().window().maximize();\n\n\n\n\n\n# Python\nself.driver.maximize_window();\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.windowHandleMaximize(\"handleName\"); // Set by window handle hame\ndriver.windowHandleMaximize(); // Current window\n\n\n\n// wd example\nawait driver.maximize(\"handleName\"); // Set size of window by handle name\nawait driver.maximize(); // Set current window\n\n\n\n\n\n# Ruby\n@driver.resize_to(10, 10)\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/window/:window_handle/maximize\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nwindow_handle\n\n\nHandle of the window to maximize. If 'current' it will maximize current window\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Maximize window"
        },
        {
            "location": "/en/commands/web/window/maximize-window/#maximize-window",
            "text": "Maximize the specified window (Web context only)",
            "title": "Maximize Window"
        },
        {
            "location": "/en/commands/web/window/maximize-window/#example-usage",
            "text": "// Java\ndriver.manage().window().maximize();  # Python\nself.driver.maximize_window();  // Javascript\n// webdriver.io example\ndriver.windowHandleMaximize(\"handleName\"); // Set by window handle hame\ndriver.windowHandleMaximize(); // Current window\n\n\n\n// wd example\nawait driver.maximize(\"handleName\"); // Set size of window by handle name\nawait driver.maximize(); // Set current window  # Ruby\n@driver.resize_to(10, 10)  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/window/maximize-window/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/window/maximize-window/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/window/maximize-window/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/window/maximize-window/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/window/maximize-window/#endpoint",
            "text": "POST /wd/hub/session/:session_id/window/:window_handle/maximize",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/window/maximize-window/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    window_handle  Handle of the window to maximize. If 'current' it will maximize current window",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/window/maximize-window/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/window/maximize-window/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/window/maximize-window/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/window/set-window-position/",
            "text": "Set Window Position\n\n\nChange the position of the specified window (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.manage().window().setPosition(new Dimension(10, 10));\n\n\n\n\n\n# Python\nself.driver.set_window_position(10, 10)\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.windowHandlePosition(\"handleName\", {x: 10, y: 10}); // Set by window handle hame\ndriver.windowHandlePosition({x: 10, y: 10}); // Current window\n\n\n\n// wd example\nawait driver.setWindowPosition(10, 10, \"handleName\"); // Set position of window by handle name\nawait driver.setWindowPosition(10, 10); // Set current window\n\n\n\n\n\n# Ruby\n@driver.reposition_window(10, 10)\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/window/:window_handle/position\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nwindow_handle\n\n\nHandle of the window to get position of. If 'current' it will get position of current window.\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nx\n\n\nnumber\n\n\nThe x coordinate relative to the top left corner of the window\n\n\n\n\n\n\ny\n\n\nnumber\n\n\nThe y coordinate relative to the top left corner of the window\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Set window position"
        },
        {
            "location": "/en/commands/web/window/set-window-position/#set-window-position",
            "text": "Change the position of the specified window (Web context only)",
            "title": "Set Window Position"
        },
        {
            "location": "/en/commands/web/window/set-window-position/#example-usage",
            "text": "// Java\ndriver.manage().window().setPosition(new Dimension(10, 10));  # Python\nself.driver.set_window_position(10, 10)  // Javascript\n// webdriver.io example\ndriver.windowHandlePosition(\"handleName\", {x: 10, y: 10}); // Set by window handle hame\ndriver.windowHandlePosition({x: 10, y: 10}); // Current window\n\n\n\n// wd example\nawait driver.setWindowPosition(10, 10, \"handleName\"); // Set position of window by handle name\nawait driver.setWindowPosition(10, 10); // Set current window  # Ruby\n@driver.reposition_window(10, 10)  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/window/set-window-position/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/window/set-window-position/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/window/set-window-position/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/window/set-window-position/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/window/set-window-position/#endpoint",
            "text": "POST /wd/hub/session/:session_id/window/:window_handle/position",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/window/set-window-position/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    window_handle  Handle of the window to get position of. If 'current' it will get position of current window.",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/window/set-window-position/#json-parameters",
            "text": "name  type  description      x  number  The x coordinate relative to the top left corner of the window    y  number  The y coordinate relative to the top left corner of the window",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/window/set-window-position/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/window/set-window-position/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/window/set-window-size/",
            "text": "Set Window Size\n\n\nChange the size of the specified window (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.manage().window().setSize(new Dimension(10, 10));\n\n\n\n\n\n# Python\nself.driver.set_window_size(10, 10)\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.windowHandleSize(\"handleName\", {height: 10, width: 10}); // Set by window handle hame\ndriver.windowHandleSize({height: 10, width: 10}); // Current window\n\n\n\n// wd example\nawait driver.setWindowSize(10, 10, \"handleName\"); // Set size of window by handle name\nawait driver.setWindowSize(10, 10); // Set current window\n\n\n\n\n\n# Ruby\n@driver.maximize_window()\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/window/:window_handle/size\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\nwindow_handle\n\n\nHandle of the window to get size of. If 'current' it will get size of current window.\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nwidth\n\n\nnumber\n\n\nThe new window width\n\n\n\n\n\n\nheight\n\n\nnumber\n\n\nThe new window height\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nJSONWP Specification",
            "title": "Set window size"
        },
        {
            "location": "/en/commands/web/window/set-window-size/#set-window-size",
            "text": "Change the size of the specified window (Web context only)",
            "title": "Set Window Size"
        },
        {
            "location": "/en/commands/web/window/set-window-size/#example-usage",
            "text": "// Java\ndriver.manage().window().setSize(new Dimension(10, 10));  # Python\nself.driver.set_window_size(10, 10)  // Javascript\n// webdriver.io example\ndriver.windowHandleSize(\"handleName\", {height: 10, width: 10}); // Set by window handle hame\ndriver.windowHandleSize({height: 10, width: 10}); // Current window\n\n\n\n// wd example\nawait driver.setWindowSize(10, 10, \"handleName\"); // Set size of window by handle name\nawait driver.setWindowSize(10, 10); // Set current window  # Ruby\n@driver.maximize_window()  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/window/set-window-size/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/window/set-window-size/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/window/set-window-size/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/window/set-window-size/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/window/set-window-size/#endpoint",
            "text": "POST /wd/hub/session/:session_id/window/:window_handle/size",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/window/set-window-size/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to    window_handle  Handle of the window to get size of. If 'current' it will get size of current window.",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/window/set-window-size/#json-parameters",
            "text": "name  type  description      width  number  The new window width    height  number  The new window height",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/window/set-window-size/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/window/set-window-size/#see-also",
            "text": "JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/window/set-window/",
            "text": "Switch to Window\n\n\nChange focus to another window (Web context only)\n\n\nExample Usage\n\n\n// Java\ndriver.switchTo().window(\"handle\");\n\n\n\n\n\n# Python\nself.driver.switch_to.window(\"handle\")\n\n\n\n\n\n// Javascript\n// webdriver.io example\ndriver.window(\"handle\");\n\n\n\n// wd example\nawait driver.window(\"handle\");\n\n\n\n\n\n# Ruby\n@driver.switch_to.window(\"handle\")\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nPOST /wd/hub/session/:session_id/window\n\n\nURL Parameters\n\n\n\n\n\n\n\n\nname\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nsession_id\n\n\nID of the session to route the command to\n\n\n\n\n\n\n\n\nJSON Parameters\n\n\n\n\n\n\n\n\nname\n\n\ntype\n\n\ndescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nThe window to change focus to\n\n\n\n\n\n\n\n\nResponse\n\n\nnull\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Set window"
        },
        {
            "location": "/en/commands/web/window/set-window/#switch-to-window",
            "text": "Change focus to another window (Web context only)",
            "title": "Switch to Window"
        },
        {
            "location": "/en/commands/web/window/set-window/#example-usage",
            "text": "// Java\ndriver.switchTo().window(\"handle\");  # Python\nself.driver.switch_to.window(\"handle\")  // Javascript\n// webdriver.io example\ndriver.window(\"handle\");\n\n\n\n// wd example\nawait driver.window(\"handle\");  # Ruby\n@driver.switch_to.window(\"handle\")  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/window/set-window/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/window/set-window/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/window/set-window/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/window/set-window/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/window/set-window/#endpoint",
            "text": "POST /wd/hub/session/:session_id/window",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/window/set-window/#url-parameters",
            "text": "name  description      session_id  ID of the session to route the command to",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/window/set-window/#json-parameters",
            "text": "name  type  description      name  string  The window to change focus to",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/window/set-window/#response",
            "text": "null",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/window/set-window/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/commands/web/window/title/",
            "text": "Get Title\n\n\nGet the current page title (Web context only)\n\n\nExample Usage\n\n\n// Java\nString title = driver.getTitle();\n\n\n\n\n\n# Python\ntitle = self.driver.title()\n\n\n\n\n\n// Javascript\n// webdriver.io example\nlet handle = driver.title();\n\n\n\n// wd example\nlet title = await driver.title();\n\n\n\n\n\n# Ruby\n@driver.title\n\n\n\n\n\n# PHP\n// TODO PHP sample\n\n\n\n\n\n// C#\n// TODO C# sample\n\n\n\n\n\nSupport\n\n\nAppium Server\n\n\n\n\n\n\n\n\nPlatform\n\n\nDriver\n\n\nPlatform Versions\n\n\nAppium Version\n\n\nDriver Version\n\n\n\n\n\n\n\n\n\n\niOS\n\n\nXCUITest\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUIAutomation\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nAndroid\n\n\nUiAutomator2\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nUiAutomator\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nMac\n\n\nMac\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\nWindows\n\n\nWindows\n\n\nNone\n\n\nNone\n\n\nNone\n\n\n\n\n\n\n\n\nAppium Clients\n\n\n\n\n\n\n\n\nLanguage\n\n\nSupport\n\n\nDocumentation\n\n\n\n\n\n\n\n\n\n\nJava\n\n\nAll\n\n\nseleniumhq.github.io\n\n\n\n\n\n\nPython\n\n\nAll\n\n\nselenium-python.readthedocs.io\n\n\n\n\n\n\nJavascript (WebdriverIO)\n\n\nAll\n\n\nwebdriver.io\n\n\n\n\n\n\nJavascript (WD)\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nRuby\n\n\nAll\n\n\nwww.rubydoc.info\n\n\n\n\n\n\nPHP\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\nC#\n\n\nAll\n\n\ngithub.com\n\n\n\n\n\n\n\n\nHTTP API Specifications\n\n\nEndpoint\n\n\nGET /wd/hub/session/:session_id/title\n\n\nURL Parameters\n\n\nNone\n\n\nJSON Parameters\n\n\nNone\n\n\nResponse\n\n\nThe current page title (\nstring\n)\n\n\nSee Also\n\n\n\n\nW3C Specification\n\n\nJSONWP Specification",
            "title": "Title"
        },
        {
            "location": "/en/commands/web/window/title/#get-title",
            "text": "Get the current page title (Web context only)",
            "title": "Get Title"
        },
        {
            "location": "/en/commands/web/window/title/#example-usage",
            "text": "// Java\nString title = driver.getTitle();  # Python\ntitle = self.driver.title()  // Javascript\n// webdriver.io example\nlet handle = driver.title();\n\n\n\n// wd example\nlet title = await driver.title();  # Ruby\n@driver.title  # PHP\n// TODO PHP sample  // C#\n// TODO C# sample",
            "title": "Example Usage"
        },
        {
            "location": "/en/commands/web/window/title/#support",
            "text": "",
            "title": "Support"
        },
        {
            "location": "/en/commands/web/window/title/#appium-server",
            "text": "Platform  Driver  Platform Versions  Appium Version  Driver Version      iOS  XCUITest  None  None  None     UIAutomation  None  None  None    Android  UiAutomator2  None  None  None     UiAutomator  None  None  None    Mac  Mac  None  None  None    Windows  Windows  None  None  None",
            "title": "Appium Server"
        },
        {
            "location": "/en/commands/web/window/title/#appium-clients",
            "text": "Language  Support  Documentation      Java  All  seleniumhq.github.io    Python  All  selenium-python.readthedocs.io    Javascript (WebdriverIO)  All  webdriver.io    Javascript (WD)  All  github.com    Ruby  All  www.rubydoc.info    PHP  All  github.com    C#  All  github.com",
            "title": "Appium Clients"
        },
        {
            "location": "/en/commands/web/window/title/#http-api-specifications",
            "text": "",
            "title": "HTTP API Specifications"
        },
        {
            "location": "/en/commands/web/window/title/#endpoint",
            "text": "GET /wd/hub/session/:session_id/title",
            "title": "Endpoint"
        },
        {
            "location": "/en/commands/web/window/title/#url-parameters",
            "text": "None",
            "title": "URL Parameters"
        },
        {
            "location": "/en/commands/web/window/title/#json-parameters",
            "text": "None",
            "title": "JSON Parameters"
        },
        {
            "location": "/en/commands/web/window/title/#response",
            "text": "The current page title ( string )",
            "title": "Response"
        },
        {
            "location": "/en/commands/web/window/title/#see-also",
            "text": "W3C Specification  JSONWP Specification",
            "title": "See Also"
        },
        {
            "location": "/en/contributing-to-appium/appium-from-source/",
            "text": "Running Appium from Source\n\n\nSo you want to run Appium from source and help fix bugs and add features?\nGreat! Just fork the project, make a change, and send a pull request! Please\nhave a look at our \nStyle Guide\n before getting to work.\nPlease make sure the unit and functional tests pass before sending a pull\nrequest; for more information on how to run tests, keep reading!\n\n\nMake sure you read and follow the setup instructions in the README first.\n\n\nSetting up Appium from Source\n\n\nAn Appium setup involves the Appium server, which sends messages back and forth\nbetween your test code and devices/emulators, and a test script, written in\nwhatever language binding exists that is compatible with Appium. Run an\ninstance of an Appium server, and then run your test.\n\n\nThe quick way to get started:\n\n\ngit clone https://github.com/appium/appium.git\ncd appium\nnpm install\ngulp transpile # requires gulp, see below\nnpm install -g authorize-ios # for ios only\nauthorize-ios                # for ios only\nnode .\n\n\n\n\nHacking on Appium\n\n\nMake sure you have \nant\n, \nmaven\n, \nadb\n installed and added to system \nPATH\n, also you\nwould need the android-16 sdk (for Selendroid) and android-19 sdk installed.\nFrom your local repo's command prompt, install the following packages using the\nfollowing commands (if you didn't install \nnode\n using Homebrew, you might have\nto run \nnpm\n with sudo privileges):\n\n\nnpm install -g mocha\nnpm install -g gulp\nnpm install -g gulp-cli\nnpm install -g appium-doctor && appium-doctor --dev\nnpm install\ngulp transpile\n\n\n\n\nThe first two commands install test and build tools (\nsudo\n may not be\nnecessary if you installed node.js via Homebrew). The third command verifies\nthat all of the dependencies are set up correctly (since dependencies for\nbuilding Appium are different from those for simply running Appium) and fourth\ncommand installs all app dependencies and builds supporting binaries and test\napps. The final command transpiles all the code so that \nnode\n can run it.\n\n\nWhen pulling new code from GitHub, if there are changes to \npackage.json\n it\nis necessary to remove the old dependencies and re-run \nnpm install\n:\n\n\nrm -rf node_modules\nnpm install\ngulp transpile\n\n\n\n\nAt this point, you will be able to start the Appium server:\n\n\nnode .\n\n\n\n\nSee \nthe server documentation\n\nfor a full list of arguments.\n\n\nHacking with Appium for iOS\n\n\nTo avoid a security dialog that may appear when launching your iOS apps you'll\nhave to modify your \n/etc/authorization\n file in one of two ways:\n\n\n\n\n\n\nManually modify the element following \n<allow-root>\n under \n<key>system.privilege.taskport</key>\n\n   in your \n/etc/authorization\n file to \n<true/>\n.\n\n\n\n\n\n\nRun the following command which automatically modifies your\n   \n/etc/authorization\n file for you:\n\n\ncenter\nnpm install -g authorize-ios\nsudo authorize-ios\n\n\n\n\n\n\nAt this point, run:\n\n\nrm -rf node-modules\nnpm install\ngulp transpile\n\n\n\n\nNow your Appium instance is ready to go. Run \nnode .\n to kick up the Appium server.\n\n\nHacking with Appium for Android\n\n\nSet up Appium by running:\n\n\nrm -rf node-modules\nnpm install\ngulp transpile\n\n\n\n\nMake sure you have one and only one Android emulator or device running, e.g.,\nby running this command in another process (assuming the \nemulator\n command is\non your path):\n\n\nemulator -avd <MyAvdName>\n\n\n\n\nNow you are ready to run the Appium server via \nnode .\n.\n\n\nMaking sure you're up to date\n\n\nSince Appium uses dev versions of some packages, it often becomes necessary to\ninstall new \nnpm\n packages or update various things. Running \nnpm install\n will\nupdate everything necessary. You will also need to do this when Appium bumps\nits version up. Prior to running \nnpm install\n it is recommended to remove\nall the old dependencies in the \nnode_modules\n directory:\n\n\nrm -rf node-modules\nnpm install\ngulp transpile\n\n\n\n\nRunning Tests\n\n\nFirst, check out our documentation on \nrunning tests in\ngeneral\n Make sure your\nsystem is set up properly for the platforms you desire to test on.\n\n\nOnce your system is set up and your code is up to date, you can run unit tests\nwith:\n\n\ngulp once\n\n\n\n\nYou can run functional tests for all supported platforms (after ensuring that\nAppium is running in another window with \nnode .\n) with:\n\n\ngulp e2e-test\n\n\n\n\nBefore committing code, please run \ngulp once\n to execute some basic tests and\ncheck your changes against code quality standards.",
            "title": "Appium from source"
        },
        {
            "location": "/en/contributing-to-appium/appium-from-source/#running-appium-from-source",
            "text": "So you want to run Appium from source and help fix bugs and add features?\nGreat! Just fork the project, make a change, and send a pull request! Please\nhave a look at our  Style Guide  before getting to work.\nPlease make sure the unit and functional tests pass before sending a pull\nrequest; for more information on how to run tests, keep reading!  Make sure you read and follow the setup instructions in the README first.",
            "title": "Running Appium from Source"
        },
        {
            "location": "/en/contributing-to-appium/appium-from-source/#setting-up-appium-from-source",
            "text": "An Appium setup involves the Appium server, which sends messages back and forth\nbetween your test code and devices/emulators, and a test script, written in\nwhatever language binding exists that is compatible with Appium. Run an\ninstance of an Appium server, and then run your test.  The quick way to get started:  git clone https://github.com/appium/appium.git\ncd appium\nnpm install\ngulp transpile # requires gulp, see below\nnpm install -g authorize-ios # for ios only\nauthorize-ios                # for ios only\nnode .",
            "title": "Setting up Appium from Source"
        },
        {
            "location": "/en/contributing-to-appium/appium-from-source/#hacking-on-appium",
            "text": "Make sure you have  ant ,  maven ,  adb  installed and added to system  PATH , also you\nwould need the android-16 sdk (for Selendroid) and android-19 sdk installed.\nFrom your local repo's command prompt, install the following packages using the\nfollowing commands (if you didn't install  node  using Homebrew, you might have\nto run  npm  with sudo privileges):  npm install -g mocha\nnpm install -g gulp\nnpm install -g gulp-cli\nnpm install -g appium-doctor && appium-doctor --dev\nnpm install\ngulp transpile  The first two commands install test and build tools ( sudo  may not be\nnecessary if you installed node.js via Homebrew). The third command verifies\nthat all of the dependencies are set up correctly (since dependencies for\nbuilding Appium are different from those for simply running Appium) and fourth\ncommand installs all app dependencies and builds supporting binaries and test\napps. The final command transpiles all the code so that  node  can run it.  When pulling new code from GitHub, if there are changes to  package.json  it\nis necessary to remove the old dependencies and re-run  npm install :  rm -rf node_modules\nnpm install\ngulp transpile  At this point, you will be able to start the Appium server:  node .  See  the server documentation \nfor a full list of arguments.",
            "title": "Hacking on Appium"
        },
        {
            "location": "/en/contributing-to-appium/appium-from-source/#hacking-with-appium-for-ios",
            "text": "To avoid a security dialog that may appear when launching your iOS apps you'll\nhave to modify your  /etc/authorization  file in one of two ways:    Manually modify the element following  <allow-root>  under  <key>system.privilege.taskport</key> \n   in your  /etc/authorization  file to  <true/> .    Run the following command which automatically modifies your\n    /etc/authorization  file for you:  center\nnpm install -g authorize-ios\nsudo authorize-ios    At this point, run:  rm -rf node-modules\nnpm install\ngulp transpile  Now your Appium instance is ready to go. Run  node .  to kick up the Appium server.",
            "title": "Hacking with Appium for iOS"
        },
        {
            "location": "/en/contributing-to-appium/appium-from-source/#hacking-with-appium-for-android",
            "text": "Set up Appium by running:  rm -rf node-modules\nnpm install\ngulp transpile  Make sure you have one and only one Android emulator or device running, e.g.,\nby running this command in another process (assuming the  emulator  command is\non your path):  emulator -avd <MyAvdName>  Now you are ready to run the Appium server via  node . .",
            "title": "Hacking with Appium for Android"
        },
        {
            "location": "/en/contributing-to-appium/appium-from-source/#making-sure-youre-up-to-date",
            "text": "Since Appium uses dev versions of some packages, it often becomes necessary to\ninstall new  npm  packages or update various things. Running  npm install  will\nupdate everything necessary. You will also need to do this when Appium bumps\nits version up. Prior to running  npm install  it is recommended to remove\nall the old dependencies in the  node_modules  directory:  rm -rf node-modules\nnpm install\ngulp transpile",
            "title": "Making sure you're up to date"
        },
        {
            "location": "/en/contributing-to-appium/appium-from-source/#running-tests",
            "text": "First, check out our documentation on  running tests in\ngeneral  Make sure your\nsystem is set up properly for the platforms you desire to test on.  Once your system is set up and your code is up to date, you can run unit tests\nwith:  gulp once  You can run functional tests for all supported platforms (after ensuring that\nAppium is running in another window with  node . ) with:  gulp e2e-test  Before committing code, please run  gulp once  to execute some basic tests and\ncheck your changes against code quality standards.",
            "title": "Running Tests"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/",
            "text": "Appium in a Nutshell\n\n\n\n\nappium\n\n\n\n\nruns basic checks\n\n\nnode version (>= 5)\n\n\nCLI arguments checks\n\n\ncontains all available and supported CLI arguments\n\n\ncheck for deprecation and mutual exclusion\n\n\n\n\n\n\nput logging together\n\n\nmixture out of npmlog, winston and a custom logger\n\n\ninitiates AppiumDriver (extends Basedriver)\n\n\nassigns iOS/Android/Selendroid/Fake driver to session\n\n\ncreates/deletes Appium session\n\n\nstarts baseServer (appium-express)\n\n\npasses routes given by driver\n\n\n\n\nappium-express (part of appium-base-driver)\n\n\n\n\nstarts express server (allows x-domain-origin)\n\n\ninitialises routes from AppiumDriver\n\n\ntimeout handling\n\n\nserves a static page for test purposes\n\n\nconnects req/res events to logger\n\n\n\n\nmobile-json-wire-protocol (part of appium-base-driver)\n\n\n\n\nprovides list of Appium commands\n\n\nsubclassed by drivers that will use the protocol\n\n\nkind of middleware between client and driver\n\n\nhandles jwp proxy for driver\n\n\ncontains error classes for all types of errors\n\n\nsanitises error responses\n\n\n(un)wraps params to commands\n\n\nchecks required params, validates params\n\n\n\n\nappium-base-driver\n\n\n\n\ndesigned to have a single testing session per instantiation\n\n\ncontains constraints on caps (platformName has to be present, etc)\n\n\nvalidates capabilities\n\n\nruns chain of promised commands with single concurrency\n\n\nhandles session restart\n\n\nhandles swipe options\n\n\nexports class (DeviceSettings) to manage device settings (get/update)\n\n\ncontains basic commands\n\n\nto find elements\n\n\ncreate/delete sessions\n\n\nhandle timeouts\n\n\nset/update device settings\n\n\nprovides helper methods for commands\n\n\n\n\nappium-ios-driver\n\n\n\n\ncan also run as standalone server (has a small server part that extends from appium-express)\n\n\nsupported strategies: \"name\", \"xpath\", \"id\", \"-ios uiautomation\", \"class name\", \"accessibility id\u201d\n\n\ncan start a simulator or a real device (if udid is given)\n\n\nruns for each type a huge set of instructions\n\n\nremoveInstrumentsSocket\n\n\nsetBundleIdFromApp\n\n\ncreateInstruments\n\n\nrunSimReset, isolateSimDevice, setLocale || runRealDeviceReset\n\n\nsetPreferences || runRealDeviceReset\n\n\nstartLogCapture\n\n\nprelaunchSimulator || (noop)\n\n\nstartInstruments\n\n\nonInstrumentsLaunch\n\n\nconfigureBootstrap\n\n\nsetBundleId\n\n\nsetInitialOrientation\n\n\ninitAutoWebview\n\n\nwaitForAppLaunched\n\n\n\n\n\n\nall instructions are helper methods within driver.js\n\n\ncontains a more specific set of capability constraints\n\n\nhas logic to build and run Safari (safari-launcher) using appium-xcode\n\n\nimplements commands for iOS driver\n\n\nSelenium commands are compiled to ui-automator commands\n\n\ncommands will be send out to uiAutoClient (appium-uiauto)\n\n\nconnects to appium remote debugger\n\n\n\n\nappium-xcode\n\n\n\n\nruns shell commands to return useful data from Xcode like\n\n\ngetPath\n\n\ngetVersion\n\n\ngetAutomationTraceTemplatePath\n\n\ngetMaxIOSSDK\n\n\n\u2026\n\n\nhas an auto-retry built in\n\n\n\n\nappium-uiauto\n\n\n\n\nwrapper for the iOS UI Automation framework\n\n\ntalks to it via socket connection\n\n\nruns a command queue that get filled up by the sendCommand function\n\n\nhandles responses (as a buffer) from the ui-automation framework\n\n\nuses osascript to rotate screenshots\n\n\nprovides method to bootstrap simulator/realdevice (dynamic-bootstrap)\n\n\njavascript files which are run in the iOS UI Automation context (not node)\n\n\nresponsible to execute actual iOS UI Automation commands\n\n\nsee \nUIAutomation docs\n\n\ncommand flow is like\n\n\nWebdriver command -> iOS driver command -> uiauto-command\n\n\n\n\n\n\n\n\nappium-instruments\n\n\n\n\nwrapper to run instruments commands\n\n\na lot of exec calls to talk to instruments binary\n\n\nall of them take callbacks to propagate the result\n\n\nuses \"iwd\" (instruments without delay) packages which have to be compiled first\n\n\nspecial Instruments package that gets rid of a delay between commands\n\n\ncontains also older versions of iwd instrument (v4 - v7)\n\n\n\n\nappium-ios-log\n\n\n\n\ncaptures console, performance and crash logs from the iOS simulator or real device\n\n\nby either calling tail to grab logs from a system path (simulator devices)\n\n\nor by calling deviceconsole (real devices)\n\n\nperformance logs are getting grabbed using the remote-debugger\n\n\ncrash logs remain in \u201c.crash\u201d files on the system\n\n\n\n\nappium-ios-simulator\n\n\n\n\nwrapper around iOS simulator app\n\n\nstart and shutdown (kill all) simulators\n\n\nupdating settings and locals\n\n\nupdate/clean safari\n\n\ngrabs meta data about the simulator device\n\n\nuses simctl to talk to the simulator\n\n\nworks for Xcode 6 and 7\n\n\n\n\nauthorize-ios\n\n\n\n\nutility that pre-authorizes Instruments to run UIAutomation scripts against iOS devices\n\n\nenables developer tools by calling \u201cDevToolsSecurity \u2014enable\u201d\n\n\nauthorises user as developer calling \u201cauthorizationdb\"\n\n\nchanges ownerships of simulator directories\n\n\n\n\nnode-simctl\n\n\n\n\nwrapper around simctl binary (cli utility to control an iOS simulator)\n\n\nexecuted as a subcommand of xcrun (locate or invoke developer tools from the command-line)\n\n\ncontains functions to\n\n\ninstall/remove apps\n\n\nlaunch and shutdown simulators\n\n\ncreate/erase/delete devices\n\n\nget list of devices\n\n\n\n\nappium-cookies\n\n\n\n\nsimple package to create and receive cookies\n\n\nused in the appium-ios-driver to implement jswonwire cookie commands within the web context\n\n\n\n\nappium-chromedriver\n\n\n\n\nwrapper around the chrome driver\n\n\ndownloads and installs chromedriver binaries\n\n\nlaunches, restarts and stops (or kills all) chrome instances\n\n\nuses appium-jsonwp-proxy to send json wire protocol commands to the driver\n\n\n\n\njsonwp-proxy (part of appium-base-driver)\n\n\n\n\nallows to send json wire protocol commands to a server that understands it (browser drivers)\n\n\nparses response into json\n\n\nallows to proxy requests to a proxied server\n\n\nused for communication in appium-chromedriver and appium-selendroid-driver\n\n\n\n\nappium-android-driver\n\n\n\n\nsimilar to appium-ios-driver it can run as standalone server\n\n\nautomates native, hybrid and mobile web apps on emulators/simulators and real devices\n\n\ntakes care of installing android packages to the device\n\n\nruns chromedriver sessions if desired\n\n\ncontains a more specific set of capability constraints\n\n\nuses appium-adb to talk to the emulator/simulator/realdevice\n\n\nand appium-android-bootstrap to execute the actual commands\n\n\ncontains helpers to figure out which web view belongs to which app package vice versa\n\n\n\n\nappium-adb\n\n\n\n\nwrapper around the Android Debug Bridge (adb)\n\n\ncontains a bunch of commands that are basically just rpc to the adb binary\n\n\nhouses jar files to run for special use cases like signing, verifying apps or moving manifests\n\n\nallows special (mobile specific) emulator commands that are not related to the webdriver protocol like\n\n\nlocking the screen\n\n\npress back button\n\n\npress home button\n\n\nset/get airplane mode\n\n\nset/get wifi state\n\n\ncaptures logcat\n\n\nhandles emulator/simulator actions (e.g. reboot)\n\n\n\n\nappium-android-bootstrap\n\n\n\n\nJavaScript interface, and Java code, for interacting with Android UI Automator\n\n\nbuilds AppiumBootstrap.jar that contains logic to execute the commands\n\n\ncounterpart to appium-uiauto\n\n\nonce started it creates a web socket connection to the device\n\n\napplication provides start/shutdown/sendCommand interface\n\n\ncommand flow is like:\n\n\nSelenium command -> appium-adb -> appium-android-bootstrap -> Java code using the Android UI Automator framework\n\n\n\n\nappium-uiautomator\n\n\n\n\nstarts and shutdowns uiautomator server given by appium-android-bootstrap jar build\n\n\ncommand flow is like\n\n\nappium-android-bootstrap:start -> appium-uiautomator:start -> appium-adb:install bootstrap\n\n\n\n\nappium-selendroid-driver\n\n\n\n\nsimilar to appium-android-driver it can run as standalone server\n\n\ndownloads and installs Selendroid using appium-selendroid-installer\n\n\ncontains several Selendroid specific logic to ensure a seamless integration\n\n\ncontains a more specific set of capability constraints\n\n\nuses jsonwp-proxy to talk to the server\n\n\nused appium-adb to enable commands not implemented in Selendroid\n\n\n\n\nappium-selendroid-installer\n\n\n\n\ncontains and exports a setup logic to\n\n\ndownload Selendroid\n\n\ndetermine AndroidManifest location\n\n\ndetermine Server APK location\n\n\nextracting both files\n\n\ncopying and cleaning files\n\n\n\n\nappium-android-ime\n\n\n\n\nallows to send and receive unicode characters from/to the Android device\n\n\nencodes text into UTF-7 sends it to the device and recodes it as Unicode\n\n\nused by appium-android-driver and appium-selendroid-driver\n\n\n\n\nappium-doctor\n\n\n\n\ndiagnoses, reports and fixes common Node, iOS and Android configuration issues before starting Appium\n\n\nexposes cli command \u201cappium-doctor\"\n\n\nit checks for\n\n\nAndroid:\n\n\nandroid sdk exists and configured properly\n\n\nenv variables and path check\n\n\n\n\n\n\niOS:\n\n\nxcode is installed (with command line tools)\n\n\ndev tools security check\n\n\nauth check\n\n\nnode binary check\n\n\n\n\n\n\n\n\nappium-gulp-plugins\n\n\n\n\ndev package with custom plugins used accross appium modules (for Appium development only)\n\n\ncontains task for\n\n\ne2e and unit tests (with coverage reporting)\n\n\ntranspiling ES2016 into ES5\n\n\nstatic code analysis (eslint)\n\n\nwatch task for dev\n\n\n\n\nappium-remote-debugger\n\n\n\n\nRPC client to connect Appium to iOS webviews\n\n\ncan connect to WebKit devtools\n\n\nfor iOS only\n\n\nhas two rpc client classes\n\n\nremote-debugger-rpc-client: uses tcp6 that connects to localhost:27753\n\n\nwebkit-rpc-client: uses WebSockets to connect to ws://localhost:27753/devtools/page/${pageId}\n\n\n\n\nnode-teen_process\n\n\n\n\nhelper module that exposes:\n\n\nexec: ES7 (async/await) implementation of exec that uses spawn under the hood\n\n\nSubProcess: cuts down boilerplate when using spawn (especially when using in an async/await context)\n\n\n\n\nappium-logger\n\n\n\n\nbasic logger defaulting to npmlog with special consideration for running tests\n\n\nexposes getLogger function that gets used by almost all Appium packages\n\n\ndefers to already-running logger if there is one, so everything bubbles up\n\n\n\n\nappium-support\n\n\n\n\nutility functions used to support libs used across appium packages.\n\n\nprovides promise wrappers for some common operations like\n\n\nsystem methods (isWindows, isLinux \u2026)\n\n\nutility methods like hasValue, escapeSpace\n\n\na bunch of fs methods\n\n\nplist helpers for parsing and updating plist files",
            "title": "Appium packages"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-in-a-nutshell",
            "text": "",
            "title": "Appium in a Nutshell"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium",
            "text": "runs basic checks  node version (>= 5)  CLI arguments checks  contains all available and supported CLI arguments  check for deprecation and mutual exclusion    put logging together  mixture out of npmlog, winston and a custom logger  initiates AppiumDriver (extends Basedriver)  assigns iOS/Android/Selendroid/Fake driver to session  creates/deletes Appium session  starts baseServer (appium-express)  passes routes given by driver",
            "title": "appium"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-express-part-of-appium-base-driver",
            "text": "starts express server (allows x-domain-origin)  initialises routes from AppiumDriver  timeout handling  serves a static page for test purposes  connects req/res events to logger",
            "title": "appium-express (part of appium-base-driver)"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#mobile-json-wire-protocol-part-of-appium-base-driver",
            "text": "provides list of Appium commands  subclassed by drivers that will use the protocol  kind of middleware between client and driver  handles jwp proxy for driver  contains error classes for all types of errors  sanitises error responses  (un)wraps params to commands  checks required params, validates params",
            "title": "mobile-json-wire-protocol (part of appium-base-driver)"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-base-driver",
            "text": "designed to have a single testing session per instantiation  contains constraints on caps (platformName has to be present, etc)  validates capabilities  runs chain of promised commands with single concurrency  handles session restart  handles swipe options  exports class (DeviceSettings) to manage device settings (get/update)  contains basic commands  to find elements  create/delete sessions  handle timeouts  set/update device settings  provides helper methods for commands",
            "title": "appium-base-driver"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-ios-driver",
            "text": "can also run as standalone server (has a small server part that extends from appium-express)  supported strategies: \"name\", \"xpath\", \"id\", \"-ios uiautomation\", \"class name\", \"accessibility id\u201d  can start a simulator or a real device (if udid is given)  runs for each type a huge set of instructions  removeInstrumentsSocket  setBundleIdFromApp  createInstruments  runSimReset, isolateSimDevice, setLocale || runRealDeviceReset  setPreferences || runRealDeviceReset  startLogCapture  prelaunchSimulator || (noop)  startInstruments  onInstrumentsLaunch  configureBootstrap  setBundleId  setInitialOrientation  initAutoWebview  waitForAppLaunched    all instructions are helper methods within driver.js  contains a more specific set of capability constraints  has logic to build and run Safari (safari-launcher) using appium-xcode  implements commands for iOS driver  Selenium commands are compiled to ui-automator commands  commands will be send out to uiAutoClient (appium-uiauto)  connects to appium remote debugger",
            "title": "appium-ios-driver"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-xcode",
            "text": "runs shell commands to return useful data from Xcode like  getPath  getVersion  getAutomationTraceTemplatePath  getMaxIOSSDK  \u2026  has an auto-retry built in",
            "title": "appium-xcode"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-uiauto",
            "text": "wrapper for the iOS UI Automation framework  talks to it via socket connection  runs a command queue that get filled up by the sendCommand function  handles responses (as a buffer) from the ui-automation framework  uses osascript to rotate screenshots  provides method to bootstrap simulator/realdevice (dynamic-bootstrap)  javascript files which are run in the iOS UI Automation context (not node)  responsible to execute actual iOS UI Automation commands  see  UIAutomation docs  command flow is like  Webdriver command -> iOS driver command -> uiauto-command",
            "title": "appium-uiauto"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-instruments",
            "text": "wrapper to run instruments commands  a lot of exec calls to talk to instruments binary  all of them take callbacks to propagate the result  uses \"iwd\" (instruments without delay) packages which have to be compiled first  special Instruments package that gets rid of a delay between commands  contains also older versions of iwd instrument (v4 - v7)",
            "title": "appium-instruments"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-ios-log",
            "text": "captures console, performance and crash logs from the iOS simulator or real device  by either calling tail to grab logs from a system path (simulator devices)  or by calling deviceconsole (real devices)  performance logs are getting grabbed using the remote-debugger  crash logs remain in \u201c.crash\u201d files on the system",
            "title": "appium-ios-log"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-ios-simulator",
            "text": "wrapper around iOS simulator app  start and shutdown (kill all) simulators  updating settings and locals  update/clean safari  grabs meta data about the simulator device  uses simctl to talk to the simulator  works for Xcode 6 and 7",
            "title": "appium-ios-simulator"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#authorize-ios",
            "text": "utility that pre-authorizes Instruments to run UIAutomation scripts against iOS devices  enables developer tools by calling \u201cDevToolsSecurity \u2014enable\u201d  authorises user as developer calling \u201cauthorizationdb\"  changes ownerships of simulator directories",
            "title": "authorize-ios"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#node-simctl",
            "text": "wrapper around simctl binary (cli utility to control an iOS simulator)  executed as a subcommand of xcrun (locate or invoke developer tools from the command-line)  contains functions to  install/remove apps  launch and shutdown simulators  create/erase/delete devices  get list of devices",
            "title": "node-simctl"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-cookies",
            "text": "simple package to create and receive cookies  used in the appium-ios-driver to implement jswonwire cookie commands within the web context",
            "title": "appium-cookies"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-chromedriver",
            "text": "wrapper around the chrome driver  downloads and installs chromedriver binaries  launches, restarts and stops (or kills all) chrome instances  uses appium-jsonwp-proxy to send json wire protocol commands to the driver",
            "title": "appium-chromedriver"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#jsonwp-proxy-part-of-appium-base-driver",
            "text": "allows to send json wire protocol commands to a server that understands it (browser drivers)  parses response into json  allows to proxy requests to a proxied server  used for communication in appium-chromedriver and appium-selendroid-driver",
            "title": "jsonwp-proxy (part of appium-base-driver)"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-android-driver",
            "text": "similar to appium-ios-driver it can run as standalone server  automates native, hybrid and mobile web apps on emulators/simulators and real devices  takes care of installing android packages to the device  runs chromedriver sessions if desired  contains a more specific set of capability constraints  uses appium-adb to talk to the emulator/simulator/realdevice  and appium-android-bootstrap to execute the actual commands  contains helpers to figure out which web view belongs to which app package vice versa",
            "title": "appium-android-driver"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-adb",
            "text": "wrapper around the Android Debug Bridge (adb)  contains a bunch of commands that are basically just rpc to the adb binary  houses jar files to run for special use cases like signing, verifying apps or moving manifests  allows special (mobile specific) emulator commands that are not related to the webdriver protocol like  locking the screen  press back button  press home button  set/get airplane mode  set/get wifi state  captures logcat  handles emulator/simulator actions (e.g. reboot)",
            "title": "appium-adb"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-android-bootstrap",
            "text": "JavaScript interface, and Java code, for interacting with Android UI Automator  builds AppiumBootstrap.jar that contains logic to execute the commands  counterpart to appium-uiauto  once started it creates a web socket connection to the device  application provides start/shutdown/sendCommand interface  command flow is like:  Selenium command -> appium-adb -> appium-android-bootstrap -> Java code using the Android UI Automator framework",
            "title": "appium-android-bootstrap"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-uiautomator",
            "text": "starts and shutdowns uiautomator server given by appium-android-bootstrap jar build  command flow is like  appium-android-bootstrap:start -> appium-uiautomator:start -> appium-adb:install bootstrap",
            "title": "appium-uiautomator"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-selendroid-driver",
            "text": "similar to appium-android-driver it can run as standalone server  downloads and installs Selendroid using appium-selendroid-installer  contains several Selendroid specific logic to ensure a seamless integration  contains a more specific set of capability constraints  uses jsonwp-proxy to talk to the server  used appium-adb to enable commands not implemented in Selendroid",
            "title": "appium-selendroid-driver"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-selendroid-installer",
            "text": "contains and exports a setup logic to  download Selendroid  determine AndroidManifest location  determine Server APK location  extracting both files  copying and cleaning files",
            "title": "appium-selendroid-installer"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-android-ime",
            "text": "allows to send and receive unicode characters from/to the Android device  encodes text into UTF-7 sends it to the device and recodes it as Unicode  used by appium-android-driver and appium-selendroid-driver",
            "title": "appium-android-ime"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-doctor",
            "text": "diagnoses, reports and fixes common Node, iOS and Android configuration issues before starting Appium  exposes cli command \u201cappium-doctor\"  it checks for  Android:  android sdk exists and configured properly  env variables and path check    iOS:  xcode is installed (with command line tools)  dev tools security check  auth check  node binary check",
            "title": "appium-doctor"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-gulp-plugins",
            "text": "dev package with custom plugins used accross appium modules (for Appium development only)  contains task for  e2e and unit tests (with coverage reporting)  transpiling ES2016 into ES5  static code analysis (eslint)  watch task for dev",
            "title": "appium-gulp-plugins"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-remote-debugger",
            "text": "RPC client to connect Appium to iOS webviews  can connect to WebKit devtools  for iOS only  has two rpc client classes  remote-debugger-rpc-client: uses tcp6 that connects to localhost:27753  webkit-rpc-client: uses WebSockets to connect to ws://localhost:27753/devtools/page/${pageId}",
            "title": "appium-remote-debugger"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#node-teen_process",
            "text": "helper module that exposes:  exec: ES7 (async/await) implementation of exec that uses spawn under the hood  SubProcess: cuts down boilerplate when using spawn (especially when using in an async/await context)",
            "title": "node-teen_process"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-logger",
            "text": "basic logger defaulting to npmlog with special consideration for running tests  exposes getLogger function that gets used by almost all Appium packages  defers to already-running logger if there is one, so everything bubbles up",
            "title": "appium-logger"
        },
        {
            "location": "/en/contributing-to-appium/appium-packages/#appium-support",
            "text": "utility functions used to support libs used across appium packages.  provides promise wrappers for some common operations like  system methods (isWindows, isLinux \u2026)  utility methods like hasValue, escapeSpace  a bunch of fs methods  plist helpers for parsing and updating plist files",
            "title": "appium-support"
        },
        {
            "location": "/en/contributing-to-appium/credits/",
            "text": "Credits\n\n\nThese are the projects that inspired us, or are depended upon to make Appium awesome.\n\n\n\n\nApple UIAutomation\n\n\nGhostDriver\n\n\nIOS Auto\n\n\nIOS Driver\n\n\nMechanic.js\n\n\nnode-webkit\n\n\nRemote Debug\n\n\nSelenium Project\n\n\nios-webkit-debug-proxy\n\n\ninstruments-without-delay\n\n\ndeviceconsole\n\n\nWinAppDriver\n\n\nWebDriverAgent",
            "title": "Credits"
        },
        {
            "location": "/en/contributing-to-appium/credits/#credits",
            "text": "",
            "title": "Credits"
        },
        {
            "location": "/en/contributing-to-appium/credits/#these-are-the-projects-that-inspired-us-or-are-depended-upon-to-make-appium-awesome",
            "text": "Apple UIAutomation  GhostDriver  IOS Auto  IOS Driver  Mechanic.js  node-webkit  Remote Debug  Selenium Project  ios-webkit-debug-proxy  instruments-without-delay  deviceconsole  WinAppDriver  WebDriverAgent",
            "title": "These are the projects that inspired us, or are depended upon to make Appium awesome."
        },
        {
            "location": "/en/contributing-to-appium/developers-overview/",
            "text": "A Developer's Overview of Appium\n\n\nBefore reading this document, please ensure that you have read and understood\nthe more general \nintroduction to Appium\nconcepts\n and the more general \ncontribution\ninstructions\n.\n\n\nTechnical Vision\n\n\nAppium aims to be a Mobile JSONWP front-end for the best app automation\ntechnologies. That's it. We want to take all the different useful automation\nengines and smooth away their differences and gotchas by making Appium drivers\nfor them and bringing them under the umbrella of Appium itself. This is very\nsimilar to the goal of the Selenium project. For our part, we want to have\nevery driver be an independent entity (separate repo, tests, etc...) even as it\nuses shared libraries that make the development of an Appium driver as simple\nand boilerplate-free as possible. We use modern JavaScript because JavaScript\nis everywhere and it's easy for many developers to understand and contribute\nback to.\n\n\nDeveloper Community\n\n\nAnyone is welcome to become an Appium developer; just read this guide and get\nsome of your code merged, and you are one of us! If you stick around and help\na lot, we will also make you a committer so that you can continue to help the\ncommunity more easily. If you are developing code for Appium and have\nquestions, reach out to the developer community at\n\nappium-developers@googlegroups.com\n. Note that this is a mailing list for\n\ndevelopment\n questions, not \nusage\n questions or bug reports. Usage questions\nbelong on \ndiscuss.appium.io\n. The GitHub issue\ntracker is for bug reports and feature requests only.\n\n\nAgile Development Workflow\n\n\nThe Appium team runs development according to a very lightweight version of\nSCRUM. Every two weeks we begin a new \"sprint\", or a period of time in which we\nhave decided what we want to accomplish. Anyone familiar with the Appium\ncodebase is welcome to attend our sprint planning and participate as a SCRUM\nteam member for that sprint. No long-term commitments required! During the\nsprint, we update each other with daily progress in the \n#standup\n room in our\n\nAppium Slack Group\n (there are no real-time daily\nstandups). At the end of the sprint, to celebrate our accomplishments and\nreflect on how things went, we hold a \"retrospective\", which might result in\na list of things we can try differently or do better next time around.\n\n\nUltimately, the goal is to time an Appium release at the end of each sprint, so\nevery two weeks. We're not quite there, but hopefully we will be soon.\n\n\nCurrent meeting times:\n\n Sprint Planning: every other Monday from 10:00 AM - 10:45 AM (Pacific Time)\n\n Sprint Retrospective: every other \nother\n Friday from 1:00 PM - 1:30 PM (Pacific Time)\n\n\nWe hold meetings using \nZoom\n video chat.\n\n\nFor project management, we use the \nZenHub\n browser plugin,\nwhich adds various features like Kanban boards and Epics to the GitHub\ninterface. To fully participate in Appium SCRUM, you'll need to have this\nbrowser plugin installed.\n\n\nIf you are interested in participating a sprint, ping \n@jlipps\n or \n@isaac\n in\nthe Appium Slack Group, or DM \n@jlipps\n on Twitter, and we'll share how to join\nthe video chat for the next sprint.\n\n\nArchitecture\n\n\nAppium is primarily a collection of \nnode.js\n packages that\ncombine to form a running node.js server. These packages are maintained\nindependently of one another and each have their own GitHub repo, CI, and\nrelease process. Some packages (like \nappium-ios-driver\n) are large and add\nsignificant functionality to Appium, while others play a support role and\nexpose one specific bit of functionality that is reused by other packages.\n\n\nFor an overview of the package hierarchy and the role that each package plays,\nplease check out our \npackage\noverview\n doc.\n\n\nTranspilation\n\n\nAppium is written in a new form of JavaScript, called ES6 (or now ES2015).\nBecause this version of the language is not yet supported natively by older\nversions of node.js, Appium code is \ntranspiled\n to ES5 (the more\nwidely-supported version of JS). This transpilation process must occur before\nany code is run. In addition to the new language features of ES6, we have\nadopted two very important keywords from the \nsubsequent\n version of JS, namely\n\nasync\n and \nawait\n, which assist in writing asynchronous code cleanly. Because\nof the transpilation step, Appium packages include tools which watch code for\nchanges and automatically re-transpile the code. Usually, the same tool will\nautomatically run unit tests as well to ensure that nothing small has broken.\nMost Appium packages have this as the default behavior when running \ngulp\n.\n\n\nLinting and Style\n\n\nIt's important for all of Appium's JS to look and feel the same. This includes\nstyle conventions as well as coding patterns and which libraries we use to\nsolve various problems. You should get familiar with our new \nES2015 Style\nGuide\n. When transpiling,\nAppium packages will automatically run JSHint or other lint tools and provide\nwarning or error feedback if the code doesn't conform to our style. These tools\nare not necessarily exhaustive of the kinds of style issues we care about, so\nwe may also mention style issues in our reviews. This isn't to be nit-picky but\nto have a clean, consistent, and readable codebase!\n\n\nSubmitting Code\n\n\nGetting your code into Appium is easy: just submit a PR to one of our repos and\nengage with the maintainers in the review process. We have a number of\nrequirements for code submissions (but don't worry! If the following seems like\na lot, we will helpfully and patiently walk you through each step. Just send in\nyour PR and we'll go from there):\n\n\n\n\nFollow the style of the surrounding code and our Style Guide\n\n\nAtomic commits--one commit per logical change (i.e., make sure that commits don't need to come in a group in order for the program to work. It should work at any given commit). Usually this means one commit per PR. You'll want to get very familiar with \ngit rebase -i\n and squashing!\n\n\nNo merge commits: always rebase on top of latest master (or whatever other branch you're asking to merge into) before submitting your PR.\n\n\nAlmost all changes should have tests. Bugfixes should at the least have unit tests that prove that the bug has been fixed. New features should have unit tests and in most cases e2e tests to prove that the feature actually works. We will be happy to walk you through the test creation process. Reading the surrounding test code is a good place to start. Our CI systems usually run test coverage statistics and we will likely not merge code that decreases test coverage.\n\n\n\n\nIf you do all of these things before submission, your code will almost\ncertainly be accepted very quickly! Of course, if you're thinking of making\na change to Appium that requires a lot of work, you might reach out to the\ndevelopers list to make sure that the change is in line with our philosophy and\nin principle something that we'll accept before you get going.\n\n\nTesting\n\n\nAlways make sure that your changes are tested! In addition to writing unit and\ne2e tests, make sure you run existing tests before you begin to make changes\nand before you push code to be reviewed. We do have CI set up for every Appium\nrepository as a safety net for reviewers to know whether the code they are\nreviewing has passed muster. Running tests in any Appium package is easy!\nUnless the README says otherwise, here are the things you can do:\n\n\ngulp                    # watch directory to re-transpile on code change, and run unit tests\ngulp once               # same as above but don't watch\ngulp unit-test          # transpile and run unit tests\ngulp e2e-test           # transpile and run end-to-end/functional tests\n_FORCE_LOGS=1 <command> # show module log output during test run\n\n\n\n\nNote that we have a convention for unit test files to end in \n-specs.js\n and\nfor e2e test files to end in \n-e2e-specs.js\n.\n\n\nReleasing\n\n\nThe release process for any Appium module other than the main Appium package is\npretty straightforward (note that you will need to be an NPM owner for the\npackage if you want to publish it. Ownership is managed by the Appium\ncommitters; talk to @jlipps or @imurchie if you believe you should be an owner\nand are not):\n\n\n\n\nrm -rf node_modules && npm install\n and run tests to make sure a clean install works.\n\n\nDetermine whether we have a patch (bugfix), minor (feature), or major (breaking) release according to the principles of \nSemVer\n (see also this explanation of \nhow SemVer works with NPM\n).\n\n\nUpdate the CHANGELOG and/or README with any appropriate changes and commit. Most subpackages don't have a CHANGELOG.\n\n\nRun \nnpm version <version-type>\n with the appropriate version type.\n\n\nPush the appropriate branch to GitHub, and don't forget to include the \n--tags\n flag to include the tag just created by \nnpm version\n.\n\n\nRun \nnpm publish\n (with \n--tag beta\n if this isn't an official release).\n\n\n\n\nFor the main Appium packages, all the above steps must be taken, but with\nseveral changes. One reason is that for the main package we use NPM shrinkwrap\nto ensure dependencies don't change between installations. Another reason is\nthat we develop on master and release on various branches. The way it works is\nas follows: we always develop and add new code to master. When we are ready to\nmake a new minor or major release (i.e., \n1.5.0\n or \n2.0.0\n), we create\na release branch (\n1.5\n or \n2.0\n respectively). We then publish off of that\nbranch. As we feel the need to make patch releases, we first pull the patch\ninto master, then cherry-pick individual patches to the release branch (perhaps\neven multiple release branches). Then we again publish from those branches with\nthe updated patch version (\n1.5.1\n or \n2.0.1\n for example).\n\n\nA note about \nnpm shrinkwrap\n:\n We use \nnpm shrinkwrap\n\nin order to lock dependencies on release. Without it, any development on dependent\npackages will be reflected when Appium is installed, which may lead to issues. Since\nthe configuration file, \nnpm-shrinkwrap.json\n, only exists on release branches,\nit is necessary to manually manage it during the release process. It needs to be\nchecked in to GitHub along with changes to \npackage.json\n.\n\n\n\n\nRemove the NPM shrinkwrap JSON file if it exists.\n\n\nrm -rf node_modules && npm install\n and run tests to make sure a clean install works.\n\n\nrm -rf node_modules && npm install --production\n to get just the production deps.\n\n\nnpm shrinkwrap\n to write the new NPM shrinkwrap JSON file.\n\n\nDetermine whether we have a patch (bugfix), minor (feature), or major (breaking) release according to the principles of SemVer.\n\n\nUpdate \npackage.json\n with the appropriate new version.\n\n\nUpdate the CHANGELOG/README with appropriate changes and submit for review as a PR, along with shrinkwrap and \npackage.json\n changes. Wait for it to be merged, then pull it into the release branch.\n\n\nCreate a tag of the form \nv<version>\n on the release branch (usually a minor branch like \n1.5\n or \n1.4\n), with: \ngit tag -a v<version>\n, e.g., \ngit tag -a v1.5.0\n. This is not necessary for beta versions.\n\n\nPush the tag to upstream: \ngit push --tags <remote> <branch>\n\n\nInstall dev dependencies (or at least \ngulp\n and \nappium-gulp-plugins\n).\n\n\nRun \nnpm publish\n (with \n--tag beta\n if this isn't an official release).\n\n\nUpdate the docs at appium.io. Check out the appium.io repo from github, check out the \ngh-pages\n branch and pull latest. Run \nrake publish\n.\n\n\nCreate a new release on GitHub: go to \nhttps://github.com/appium/appium/releases/tag/v<VERSION>\n and hit \"Edit Tag\". Make the release name \n<VERSION>\n (e.g., \n2.0.5\n), then paste in the changelog (but not the changelog header for this version). If it's a beta release, mark as pre-release.\n\n\nCreate a new post on discuss.appium.io announcing the release. Post it in the \"News\" category. Paste in the changelog and any choice comments. Pin it and unpin the previous release post.\n\n\nBegin process of releasing \nappium-desktop\n.\n\n\nNotify @jlipps to so he can tweet a link to the discuss post.",
            "title": "Developers overview"
        },
        {
            "location": "/en/contributing-to-appium/developers-overview/#a-developers-overview-of-appium",
            "text": "Before reading this document, please ensure that you have read and understood\nthe more general  introduction to Appium\nconcepts  and the more general  contribution\ninstructions .",
            "title": "A Developer's Overview of Appium"
        },
        {
            "location": "/en/contributing-to-appium/developers-overview/#technical-vision",
            "text": "Appium aims to be a Mobile JSONWP front-end for the best app automation\ntechnologies. That's it. We want to take all the different useful automation\nengines and smooth away their differences and gotchas by making Appium drivers\nfor them and bringing them under the umbrella of Appium itself. This is very\nsimilar to the goal of the Selenium project. For our part, we want to have\nevery driver be an independent entity (separate repo, tests, etc...) even as it\nuses shared libraries that make the development of an Appium driver as simple\nand boilerplate-free as possible. We use modern JavaScript because JavaScript\nis everywhere and it's easy for many developers to understand and contribute\nback to.",
            "title": "Technical Vision"
        },
        {
            "location": "/en/contributing-to-appium/developers-overview/#developer-community",
            "text": "Anyone is welcome to become an Appium developer; just read this guide and get\nsome of your code merged, and you are one of us! If you stick around and help\na lot, we will also make you a committer so that you can continue to help the\ncommunity more easily. If you are developing code for Appium and have\nquestions, reach out to the developer community at appium-developers@googlegroups.com . Note that this is a mailing list for development  questions, not  usage  questions or bug reports. Usage questions\nbelong on  discuss.appium.io . The GitHub issue\ntracker is for bug reports and feature requests only.",
            "title": "Developer Community"
        },
        {
            "location": "/en/contributing-to-appium/developers-overview/#agile-development-workflow",
            "text": "The Appium team runs development according to a very lightweight version of\nSCRUM. Every two weeks we begin a new \"sprint\", or a period of time in which we\nhave decided what we want to accomplish. Anyone familiar with the Appium\ncodebase is welcome to attend our sprint planning and participate as a SCRUM\nteam member for that sprint. No long-term commitments required! During the\nsprint, we update each other with daily progress in the  #standup  room in our Appium Slack Group  (there are no real-time daily\nstandups). At the end of the sprint, to celebrate our accomplishments and\nreflect on how things went, we hold a \"retrospective\", which might result in\na list of things we can try differently or do better next time around.  Ultimately, the goal is to time an Appium release at the end of each sprint, so\nevery two weeks. We're not quite there, but hopefully we will be soon.  Current meeting times:  Sprint Planning: every other Monday from 10:00 AM - 10:45 AM (Pacific Time)  Sprint Retrospective: every other  other  Friday from 1:00 PM - 1:30 PM (Pacific Time)  We hold meetings using  Zoom  video chat.  For project management, we use the  ZenHub  browser plugin,\nwhich adds various features like Kanban boards and Epics to the GitHub\ninterface. To fully participate in Appium SCRUM, you'll need to have this\nbrowser plugin installed.  If you are interested in participating a sprint, ping  @jlipps  or  @isaac  in\nthe Appium Slack Group, or DM  @jlipps  on Twitter, and we'll share how to join\nthe video chat for the next sprint.",
            "title": "Agile Development Workflow"
        },
        {
            "location": "/en/contributing-to-appium/developers-overview/#architecture",
            "text": "Appium is primarily a collection of  node.js  packages that\ncombine to form a running node.js server. These packages are maintained\nindependently of one another and each have their own GitHub repo, CI, and\nrelease process. Some packages (like  appium-ios-driver ) are large and add\nsignificant functionality to Appium, while others play a support role and\nexpose one specific bit of functionality that is reused by other packages.  For an overview of the package hierarchy and the role that each package plays,\nplease check out our  package\noverview  doc.",
            "title": "Architecture"
        },
        {
            "location": "/en/contributing-to-appium/developers-overview/#transpilation",
            "text": "Appium is written in a new form of JavaScript, called ES6 (or now ES2015).\nBecause this version of the language is not yet supported natively by older\nversions of node.js, Appium code is  transpiled  to ES5 (the more\nwidely-supported version of JS). This transpilation process must occur before\nany code is run. In addition to the new language features of ES6, we have\nadopted two very important keywords from the  subsequent  version of JS, namely async  and  await , which assist in writing asynchronous code cleanly. Because\nof the transpilation step, Appium packages include tools which watch code for\nchanges and automatically re-transpile the code. Usually, the same tool will\nautomatically run unit tests as well to ensure that nothing small has broken.\nMost Appium packages have this as the default behavior when running  gulp .",
            "title": "Transpilation"
        },
        {
            "location": "/en/contributing-to-appium/developers-overview/#linting-and-style",
            "text": "It's important for all of Appium's JS to look and feel the same. This includes\nstyle conventions as well as coding patterns and which libraries we use to\nsolve various problems. You should get familiar with our new  ES2015 Style\nGuide . When transpiling,\nAppium packages will automatically run JSHint or other lint tools and provide\nwarning or error feedback if the code doesn't conform to our style. These tools\nare not necessarily exhaustive of the kinds of style issues we care about, so\nwe may also mention style issues in our reviews. This isn't to be nit-picky but\nto have a clean, consistent, and readable codebase!",
            "title": "Linting and Style"
        },
        {
            "location": "/en/contributing-to-appium/developers-overview/#submitting-code",
            "text": "Getting your code into Appium is easy: just submit a PR to one of our repos and\nengage with the maintainers in the review process. We have a number of\nrequirements for code submissions (but don't worry! If the following seems like\na lot, we will helpfully and patiently walk you through each step. Just send in\nyour PR and we'll go from there):   Follow the style of the surrounding code and our Style Guide  Atomic commits--one commit per logical change (i.e., make sure that commits don't need to come in a group in order for the program to work. It should work at any given commit). Usually this means one commit per PR. You'll want to get very familiar with  git rebase -i  and squashing!  No merge commits: always rebase on top of latest master (or whatever other branch you're asking to merge into) before submitting your PR.  Almost all changes should have tests. Bugfixes should at the least have unit tests that prove that the bug has been fixed. New features should have unit tests and in most cases e2e tests to prove that the feature actually works. We will be happy to walk you through the test creation process. Reading the surrounding test code is a good place to start. Our CI systems usually run test coverage statistics and we will likely not merge code that decreases test coverage.   If you do all of these things before submission, your code will almost\ncertainly be accepted very quickly! Of course, if you're thinking of making\na change to Appium that requires a lot of work, you might reach out to the\ndevelopers list to make sure that the change is in line with our philosophy and\nin principle something that we'll accept before you get going.",
            "title": "Submitting Code"
        },
        {
            "location": "/en/contributing-to-appium/developers-overview/#testing",
            "text": "Always make sure that your changes are tested! In addition to writing unit and\ne2e tests, make sure you run existing tests before you begin to make changes\nand before you push code to be reviewed. We do have CI set up for every Appium\nrepository as a safety net for reviewers to know whether the code they are\nreviewing has passed muster. Running tests in any Appium package is easy!\nUnless the README says otherwise, here are the things you can do:  gulp                    # watch directory to re-transpile on code change, and run unit tests\ngulp once               # same as above but don't watch\ngulp unit-test          # transpile and run unit tests\ngulp e2e-test           # transpile and run end-to-end/functional tests\n_FORCE_LOGS=1 <command> # show module log output during test run  Note that we have a convention for unit test files to end in  -specs.js  and\nfor e2e test files to end in  -e2e-specs.js .",
            "title": "Testing"
        },
        {
            "location": "/en/contributing-to-appium/developers-overview/#releasing",
            "text": "The release process for any Appium module other than the main Appium package is\npretty straightforward (note that you will need to be an NPM owner for the\npackage if you want to publish it. Ownership is managed by the Appium\ncommitters; talk to @jlipps or @imurchie if you believe you should be an owner\nand are not):   rm -rf node_modules && npm install  and run tests to make sure a clean install works.  Determine whether we have a patch (bugfix), minor (feature), or major (breaking) release according to the principles of  SemVer  (see also this explanation of  how SemVer works with NPM ).  Update the CHANGELOG and/or README with any appropriate changes and commit. Most subpackages don't have a CHANGELOG.  Run  npm version <version-type>  with the appropriate version type.  Push the appropriate branch to GitHub, and don't forget to include the  --tags  flag to include the tag just created by  npm version .  Run  npm publish  (with  --tag beta  if this isn't an official release).   For the main Appium packages, all the above steps must be taken, but with\nseveral changes. One reason is that for the main package we use NPM shrinkwrap\nto ensure dependencies don't change between installations. Another reason is\nthat we develop on master and release on various branches. The way it works is\nas follows: we always develop and add new code to master. When we are ready to\nmake a new minor or major release (i.e.,  1.5.0  or  2.0.0 ), we create\na release branch ( 1.5  or  2.0  respectively). We then publish off of that\nbranch. As we feel the need to make patch releases, we first pull the patch\ninto master, then cherry-pick individual patches to the release branch (perhaps\neven multiple release branches). Then we again publish from those branches with\nthe updated patch version ( 1.5.1  or  2.0.1  for example).  A note about  npm shrinkwrap :  We use  npm shrinkwrap \nin order to lock dependencies on release. Without it, any development on dependent\npackages will be reflected when Appium is installed, which may lead to issues. Since\nthe configuration file,  npm-shrinkwrap.json , only exists on release branches,\nit is necessary to manually manage it during the release process. It needs to be\nchecked in to GitHub along with changes to  package.json .   Remove the NPM shrinkwrap JSON file if it exists.  rm -rf node_modules && npm install  and run tests to make sure a clean install works.  rm -rf node_modules && npm install --production  to get just the production deps.  npm shrinkwrap  to write the new NPM shrinkwrap JSON file.  Determine whether we have a patch (bugfix), minor (feature), or major (breaking) release according to the principles of SemVer.  Update  package.json  with the appropriate new version.  Update the CHANGELOG/README with appropriate changes and submit for review as a PR, along with shrinkwrap and  package.json  changes. Wait for it to be merged, then pull it into the release branch.  Create a tag of the form  v<version>  on the release branch (usually a minor branch like  1.5  or  1.4 ), with:  git tag -a v<version> , e.g.,  git tag -a v1.5.0 . This is not necessary for beta versions.  Push the tag to upstream:  git push --tags <remote> <branch>  Install dev dependencies (or at least  gulp  and  appium-gulp-plugins ).  Run  npm publish  (with  --tag beta  if this isn't an official release).  Update the docs at appium.io. Check out the appium.io repo from github, check out the  gh-pages  branch and pull latest. Run  rake publish .  Create a new release on GitHub: go to  https://github.com/appium/appium/releases/tag/v<VERSION>  and hit \"Edit Tag\". Make the release name  <VERSION>  (e.g.,  2.0.5 ), then paste in the changelog (but not the changelog header for this version). If it's a beta release, mark as pre-release.  Create a new post on discuss.appium.io announcing the release. Post it in the \"News\" category. Paste in the changelog and any choice comments. Pin it and unpin the previous release post.  Begin process of releasing  appium-desktop .  Notify @jlipps to so he can tweet a link to the discuss post.",
            "title": "Releasing"
        },
        {
            "location": "/en/contributing-to-appium/gulp/",
            "text": "Appium gulp commands\n\n\nGulp\n is like \nmake\n for Node.js! We use it to automate all\nkinds of appium dev tasks. Here's what you can do:\n\n\n\n\n\n\n\n\nTask\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngulp once\n\n\nCleans, lints, transpiles and runs unit tests\n\n\n\n\n\n\ngulp watch\n\n\nAutomatically runs \ngulp once\n when code changes\n\n\n\n\n\n\ngulp lint\n\n\nRuns JSLint\n\n\n\n\n\n\ngulp jshint\n\n\nRuns JSHint\n\n\n\n\n\n\ngulp transpile\n\n\nTranspiles our ES7/ES2015 code to ES5, generates \n/build\n directory + contents\n\n\n\n\n\n\ngulp unit-test\n\n\nRuns unit tests\n\n\n\n\n\n\ngulp e2e-test\n\n\nRuns e2e tests\n\n\n\n\n\n\ngulp docs\n\n\nGenerates docs/en/writing-running-appium/server-args.md doc",
            "title": "Gulp"
        },
        {
            "location": "/en/contributing-to-appium/gulp/#appium-gulp-commands",
            "text": "Gulp  is like  make  for Node.js! We use it to automate all\nkinds of appium dev tasks. Here's what you can do:     Task  Description      gulp once  Cleans, lints, transpiles and runs unit tests    gulp watch  Automatically runs  gulp once  when code changes    gulp lint  Runs JSLint    gulp jshint  Runs JSHint    gulp transpile  Transpiles our ES7/ES2015 code to ES5, generates  /build  directory + contents    gulp unit-test  Runs unit tests    gulp e2e-test  Runs e2e tests    gulp docs  Generates docs/en/writing-running-appium/server-args.md doc",
            "title": "Appium gulp commands"
        },
        {
            "location": "/en/contributing-to-appium/how-to-write-docs/",
            "text": "How to write docs\n\n\n##\n is used to write a h2 header. Each document must start with a h2 header.\nThis is to support appium.io docs generation. Don't use the \n---\n underline method of creating headers.\nDon't use h1 \n#\n or \n===\n for heading as it is not supported for table of contents (folder name is used as h1).\n\n\nSubheaders\n\n\n###\n is used to write subheaders.\n\n\nRegular headers\n\n\n####\n is used for headers that don't appear in the table of contents.\nDon't use h5 \n#####\n, or h6 \n######\n.\n\n\nLine breaks\n\n\nDon't use line breaks such as \n--\n or \n---\n.\n\n\nLinking\n\n\nLink to the readme:\n\n\n[readme](../../README.md)\n\n\nLink to contributing:\n\n\n[contributing](../../CONTRIBUTING.md)\n\n\nLink to another document\n\n\n[link text](filename.md)\n\n\nWriting Commands Documents\n\n\nThe \ncommand documents\n located in \ndocs/en/commands\n, are generated\ndocs and aren't meant to be edited directly. The command documentation is defined in\n\ncommands-yml/commands\n.\n\n\nGenerating Commands Documents\n\n\nTo generate the commands docs, run \nnpm run generate-docs\n. This will generate the markdown\nfiles in \ndocs/en/commands\n and then they need to be committed and pushed.\n\n\nAdding Documents to Appium.io\n\n\nMarkdown files in \ndocs/\n aren't automatically added to the site. To add a document to https://appium.io\nyou need to add it as an entry in \ntoc.js\n\n\nPublishing\n\n\nTo publish documentation on appium.io see \nappium.io\n.",
            "title": "How to write docs"
        },
        {
            "location": "/en/contributing-to-appium/how-to-write-docs/#how-to-write-docs",
            "text": "##  is used to write a h2 header. Each document must start with a h2 header.\nThis is to support appium.io docs generation. Don't use the  ---  underline method of creating headers.\nDon't use h1  #  or  ===  for heading as it is not supported for table of contents (folder name is used as h1).",
            "title": "How to write docs"
        },
        {
            "location": "/en/contributing-to-appium/how-to-write-docs/#subheaders",
            "text": "###  is used to write subheaders.",
            "title": "Subheaders"
        },
        {
            "location": "/en/contributing-to-appium/how-to-write-docs/#regular-headers",
            "text": "####  is used for headers that don't appear in the table of contents.\nDon't use h5  ##### , or h6  ###### .",
            "title": "Regular headers"
        },
        {
            "location": "/en/contributing-to-appium/how-to-write-docs/#line-breaks",
            "text": "Don't use line breaks such as  --  or  --- .",
            "title": "Line breaks"
        },
        {
            "location": "/en/contributing-to-appium/how-to-write-docs/#linking",
            "text": "Link to the readme:  [readme](../../README.md)  Link to contributing:  [contributing](../../CONTRIBUTING.md)  Link to another document  [link text](filename.md)",
            "title": "Linking"
        },
        {
            "location": "/en/contributing-to-appium/how-to-write-docs/#writing-commands-documents",
            "text": "The  command documents  located in  docs/en/commands , are generated\ndocs and aren't meant to be edited directly. The command documentation is defined in commands-yml/commands .",
            "title": "Writing Commands Documents"
        },
        {
            "location": "/en/contributing-to-appium/how-to-write-docs/#generating-commands-documents",
            "text": "To generate the commands docs, run  npm run generate-docs . This will generate the markdown\nfiles in  docs/en/commands  and then they need to be committed and pushed.",
            "title": "Generating Commands Documents"
        },
        {
            "location": "/en/contributing-to-appium/how-to-write-docs/#adding-documents-to-appiumio",
            "text": "Markdown files in  docs/  aren't automatically added to the site. To add a document to https://appium.io\nyou need to add it as an entry in  toc.js",
            "title": "Adding Documents to Appium.io"
        },
        {
            "location": "/en/contributing-to-appium/how-to-write-docs/#publishing",
            "text": "To publish documentation on appium.io see  appium.io .",
            "title": "Publishing"
        },
        {
            "location": "/en/contributing-to-appium/real-device-ci/",
            "text": "Real Device Continuous Integration\n\n\nAppium uses a service called \nTestObject\n that allows us to run automated functional tests against real devices.\n\n\nHow it works\n\n\n\n\nSee \nhere\n for details on how TestObject runs Appium tests\n\n\nFor tests that use \nwd\n, to run TestObject tests we must use a method called \nenableTestObject\n from \nappium-test-support\n which is called before the tests are run\n\n\nThis method does the following:\n\n\nPulls down appium and runs git command from the shell to clone it\n\n\nRewrites it and changes the version of the driver we want to test to point to a git URL with a commit hash\n\n\nInstalls the npm modules\n\n\nZips the folder\n\n\nUploads it to S3\n\n\nOverrides wd so that it includes testobject specific desired capabilities including a path to the S3 url\n\n\n\n\nEnvironment\n\n\n\n\nIn order to use this you need to set some environment variables\n\n\nAWS_ACCESS_KEY_ID: ID with S3 write access\n\n\nAWS_SECRET_ACCESS_KEY\n\n\nAWS_REGION\n\n\nAWS_S3_BUCKET: Name of the bucket being written to\n\n\nTESTOBJECT_API_KEY\n\n\n\n\nExample\n\n\n// This script, if run before the rest of the tests, will use TestObject appium staging server\nimport { enableTestObject, disableTestObject } from 'appium-test-support';\nimport wd from 'wd';\nimport { startServer, DEFAULT_PORT } from '../../..';\nimport logger from '../../../lib/logger';\n\nif (process.env.TESTOBJECT_E2E_TESTS) {\n  logger.debug('Running tests on TestObject');\n\n  let wdObject;\n  before(async function () {\n    // Use a commit SHA as the git branch\n    const branch = process.env.COMMIT_HASH || process.env.TRAVIS_COMMIT;\n    if (!branch) {\n      throw new Error(`A commit must be provided in $COMMIT_HASH`);\n    }\n    // Uploads the zip and injects 'appium-uiautomator2-driver' as the branch\n    wdObject = await enableTestObject(wd, 'appium-uiautomator2-driver', `git@github.com:appium/appium-uiautomator2-driver.git#${branch}`);\n  });\n  after(async function () {\n    // Reverses the overriding of 'wd'\n    await disableTestObject(wdObject);\n  });\n\n} else {\n  before(async function () {\n    // If we're not using TestObject, we're using a local server\n    await startServer(DEFAULT_PORT, 'localhost');\n  });\n}",
            "title": "Real device ci"
        },
        {
            "location": "/en/contributing-to-appium/real-device-ci/#real-device-continuous-integration",
            "text": "Appium uses a service called  TestObject  that allows us to run automated functional tests against real devices.",
            "title": "Real Device Continuous Integration"
        },
        {
            "location": "/en/contributing-to-appium/real-device-ci/#how-it-works",
            "text": "See  here  for details on how TestObject runs Appium tests  For tests that use  wd , to run TestObject tests we must use a method called  enableTestObject  from  appium-test-support  which is called before the tests are run  This method does the following:  Pulls down appium and runs git command from the shell to clone it  Rewrites it and changes the version of the driver we want to test to point to a git URL with a commit hash  Installs the npm modules  Zips the folder  Uploads it to S3  Overrides wd so that it includes testobject specific desired capabilities including a path to the S3 url",
            "title": "How it works"
        },
        {
            "location": "/en/contributing-to-appium/real-device-ci/#environment",
            "text": "In order to use this you need to set some environment variables  AWS_ACCESS_KEY_ID: ID with S3 write access  AWS_SECRET_ACCESS_KEY  AWS_REGION  AWS_S3_BUCKET: Name of the bucket being written to  TESTOBJECT_API_KEY",
            "title": "Environment"
        },
        {
            "location": "/en/contributing-to-appium/real-device-ci/#example",
            "text": "// This script, if run before the rest of the tests, will use TestObject appium staging server\nimport { enableTestObject, disableTestObject } from 'appium-test-support';\nimport wd from 'wd';\nimport { startServer, DEFAULT_PORT } from '../../..';\nimport logger from '../../../lib/logger';\n\nif (process.env.TESTOBJECT_E2E_TESTS) {\n  logger.debug('Running tests on TestObject');\n\n  let wdObject;\n  before(async function () {\n    // Use a commit SHA as the git branch\n    const branch = process.env.COMMIT_HASH || process.env.TRAVIS_COMMIT;\n    if (!branch) {\n      throw new Error(`A commit must be provided in $COMMIT_HASH`);\n    }\n    // Uploads the zip and injects 'appium-uiautomator2-driver' as the branch\n    wdObject = await enableTestObject(wd, 'appium-uiautomator2-driver', `git@github.com:appium/appium-uiautomator2-driver.git#${branch}`);\n  });\n  after(async function () {\n    // Reverses the overriding of 'wd'\n    await disableTestObject(wdObject);\n  });\n\n} else {\n  before(async function () {\n    // If we're not using TestObject, we're using a local server\n    await startServer(DEFAULT_PORT, 'localhost');\n  });\n}",
            "title": "Example"
        },
        {
            "location": "/en/contributing-to-appium/style-guide-2.0/",
            "text": "Style guide for contributors\n\n\nThanks for your contribution to Appium! Here are the principles we use when\nwriting javascript. Please conform to these so we can merge your pull request\n without going back and forth about style. The main principle is: \nmake your\n code look like the surrounding code\n.\n\n\nRebasing\n\n\nCommits in a pull request should consist of \nlogical changes\n.\nIf there are multiple authors, make sure each author has their own commit.\nIt's not a good idea to modify author information. Merge commits should be\nrebased out of pull requests.\n\n\nLinting\n\n\nAll code (except for code in \nbootstrap.js\n which uses proprietary Apple\nmethods) must pass JSLint. To check your code, you can simply run \ngrunt\nlint\n from the Appium repo dir. If you've created a new .js file,\nplease make sure it is covered by the wildcards in \ngrunt.js\n or that it is\nadded specifically.\n\n\nIt's easy to have your code linted as you type, which makes the whole process\nmuch smoother. We like \njshint\n,\nwhich has integrations with a lot of source code editors. The file \n.jshintrc\n is checked into the repo, so by adding jshint to your editor, you'll\ntake advantage of the linting.\n\n\nSince jshint does not enforce code style anymore, we also use\n\njscs\n, for which it also exists some\nsource editor integrations.\n\n\nThese configuration files define the warnings you will see in your favorite\neditor. See \nthis page for jshint\n and\n\nthis page for jscs\n to\nget the list of editors and platforms supported and how setup your editor for\nautomatic linting.\n\n\nStyle notes\n\n\nWe use a future version of JavaScript and take advantage of the Babel\ntranspiler to render it down to what is supported by current versions of\nNode.js. We use ES2015 (link needed) (formerly called ES6) with some\nnot-yet-standard features, namely \nasync/await\n (link needed). This style guide\nmust be followed diligently in all Appium contributions!\n\n\n\n\nUse two spaces for indentation, \nno tabs\n\n\n\n\nUse single spaces around operators\n\n\njavascript\nvar x = 1;\n\nnot\n\njavascript\nvar x=1;\n\n\n\n\n\n\nSpaces after commas and colons in lists, objects, function calls, etc...\n\n\njavascript\nvar x = myFunc(\"lol\", {foo: bar, baz: boo});\n\nnot\n\njavascript\nvar x = myFunc(\"lol\",{foo:bar,baz:boo});\n\n\n\n\n\n\nAlways end statements with semicolons\n\n\n\n\n\n\nComma-first\n\n\njavascript\nvar x = {\n  foo: 'bar'\n, baz: 'boo'\n, wuz: 'foz'\n};\n\n\n\n\n\n\nBrackets for \nfunction\n, \nif\n, etc... go on same line, \nelse\n gets sandwiched\n\n\njavascript\nif (foo === bar) {\n  // do something\n} else {\n  // do something else\n}\n\n\n\n\n\n\nSpace after \nif\n, \nfor\n, and \nfunction\n:\n\n\njavascript\nif (foo === bar) {\n\n\njavascript\nfor (var i = 0; i < 10; i ++) {\n\n\njavascript\nvar lol = function (foo) {\n\nnot\n\njavascript\nif(foo === bar) {\n\n\njavascript\nfor(var i = 0; i < 10; i ++) {\n\n\njavascript\nvar lol = function(foo) {\n\n\n\n\n\n\nAvoid bracketless \nif\n for one-liners:\n\n\njavascript\nif (foo === bar) {\n  foo++;\n}\n\nnot\n\njavascript\nif (foo === bar)\n  foo++;\n\nexcept in the case of short-circuiting to a callback in the event of an error\n\njavascript\nif (err) return cb(err);\n\n\n\n\n\n\nUse \n===\n, not \n==\n, and \n!==\n, not \n!=\n for no surprises\n\n\n\n\nLine length shouldn't be longer than 79 characters\n\n\n\n\nBreak up long strings like this:\n\n\njavascript\nmyFunc(\"This is a really long string that's longer \" +\n        \"than 79 characters so I broke it up, woo\");\n\n\n\n\n\n\nComments should line up with code\n\n\njavascript\nif (foo === 5) {\n  myFunc(foo);\n  // foo++;\n}\n\nnot\n\njavascript\nif (foo === 5) {\n  myFunc(foo);\n//foo++;\n}\n\n\n\n\n\n\nSubclassing by extending prototypes\n\n\n```javascript\nvar _ = require('underscore');\n\n\nvar SuperClass = function () {\n  this.init();\n};\n\n\nSuperClass.prototype.init = function () {\n  // initialize\n};\n\n\n// Create a subclass\n\n\nvar SubClass = function () {\n    this.init();\n};\n\n\n_.extend(SubClass.prototype, SuperClass.prototype);\n```\n\n\n\n\n\n\nCallbacks are always last in function definitions\n\n\njavascript\nvar foo = function (arg1, arg2, cb) {\n  ...\n};\n\n\n\n\n\n\nDefine functions as variables\n\n\njavascript\nvar myFunc = function (a, b, c) {};\n\nnot\n\njavascript\nfunction myFunc (a, b, c) {}\n\n\n\n\n\n\nVariable names should be camelCased:\n\n\njavascript\nvar myVariable = 42;\n\nnot\n\njavascript\nvar my_variable = 42;\n\n\n\n\n\n\nCheck for undefined\n\n\njavascript\ntypeof myVariable === \"undefined\"\n\nnot\n\njavascript\nmyVariable === undefined\n\n\n\n\n\n\nDefine a variable with a default value\n\n\njavascript\nvar x = y || z;\n\nnot\n\njavascript\nvar x = y ? y : z;\n\n\n\n\n\n\nTest Style:\n\n\nKeep on the same line if it makes sense semantically and length is not an issue:\n\n\nExamples:\n\n\n  driver.elementByTagName('el1').should.become(\"123\")\n    .nodeify(done);\n\n  driver\n    .elementsByTagName('el1').should.eventually.have.length(0)\n    .nodeify(done);\n\n\n\n\nAlternatively use extra indents to improve readability:\n\n\nh.driver\n  .elementById('comments')\n    .clear()\n    .click()\n    .keys(\"hello world\")\n    .getValue()\n    .should.become(\"hello world\")\n  .elementById('comments')\n    .getValue().should.become(\"hello world\")\n  .nodeify(done);\n\nh.driver\n  .execute(\"'nan'--\")\n    .should.be.rejectedWith(\"status: 13\")\n  .nodeify(done);",
            "title": "Style guide 2.0"
        },
        {
            "location": "/en/contributing-to-appium/style-guide-2.0/#style-guide-for-contributors",
            "text": "Thanks for your contribution to Appium! Here are the principles we use when\nwriting javascript. Please conform to these so we can merge your pull request\n without going back and forth about style. The main principle is:  make your\n code look like the surrounding code .",
            "title": "Style guide for contributors"
        },
        {
            "location": "/en/contributing-to-appium/style-guide-2.0/#rebasing",
            "text": "Commits in a pull request should consist of  logical changes .\nIf there are multiple authors, make sure each author has their own commit.\nIt's not a good idea to modify author information. Merge commits should be\nrebased out of pull requests.",
            "title": "Rebasing"
        },
        {
            "location": "/en/contributing-to-appium/style-guide-2.0/#linting",
            "text": "All code (except for code in  bootstrap.js  which uses proprietary Apple\nmethods) must pass JSLint. To check your code, you can simply run  grunt\nlint  from the Appium repo dir. If you've created a new .js file,\nplease make sure it is covered by the wildcards in  grunt.js  or that it is\nadded specifically.  It's easy to have your code linted as you type, which makes the whole process\nmuch smoother. We like  jshint ,\nwhich has integrations with a lot of source code editors. The file  .jshintrc  is checked into the repo, so by adding jshint to your editor, you'll\ntake advantage of the linting.  Since jshint does not enforce code style anymore, we also use jscs , for which it also exists some\nsource editor integrations.  These configuration files define the warnings you will see in your favorite\neditor. See  this page for jshint  and this page for jscs  to\nget the list of editors and platforms supported and how setup your editor for\nautomatic linting.",
            "title": "Linting"
        },
        {
            "location": "/en/contributing-to-appium/style-guide-2.0/#style-notes",
            "text": "We use a future version of JavaScript and take advantage of the Babel\ntranspiler to render it down to what is supported by current versions of\nNode.js. We use ES2015 (link needed) (formerly called ES6) with some\nnot-yet-standard features, namely  async/await  (link needed). This style guide\nmust be followed diligently in all Appium contributions!   Use two spaces for indentation,  no tabs   Use single spaces around operators  javascript\nvar x = 1; \nnot javascript\nvar x=1;    Spaces after commas and colons in lists, objects, function calls, etc...  javascript\nvar x = myFunc(\"lol\", {foo: bar, baz: boo}); \nnot javascript\nvar x = myFunc(\"lol\",{foo:bar,baz:boo});    Always end statements with semicolons    Comma-first  javascript\nvar x = {\n  foo: 'bar'\n, baz: 'boo'\n, wuz: 'foz'\n};    Brackets for  function ,  if , etc... go on same line,  else  gets sandwiched  javascript\nif (foo === bar) {\n  // do something\n} else {\n  // do something else\n}    Space after  if ,  for , and  function :  javascript\nif (foo === bar) {  javascript\nfor (var i = 0; i < 10; i ++) {  javascript\nvar lol = function (foo) { \nnot javascript\nif(foo === bar) {  javascript\nfor(var i = 0; i < 10; i ++) {  javascript\nvar lol = function(foo) {    Avoid bracketless  if  for one-liners:  javascript\nif (foo === bar) {\n  foo++;\n} \nnot javascript\nif (foo === bar)\n  foo++; \nexcept in the case of short-circuiting to a callback in the event of an error javascript\nif (err) return cb(err);    Use  === , not  == , and  !== , not  !=  for no surprises   Line length shouldn't be longer than 79 characters   Break up long strings like this:  javascript\nmyFunc(\"This is a really long string that's longer \" +\n        \"than 79 characters so I broke it up, woo\");    Comments should line up with code  javascript\nif (foo === 5) {\n  myFunc(foo);\n  // foo++;\n} \nnot javascript\nif (foo === 5) {\n  myFunc(foo);\n//foo++;\n}    Subclassing by extending prototypes  ```javascript\nvar _ = require('underscore');  var SuperClass = function () {\n  this.init();\n};  SuperClass.prototype.init = function () {\n  // initialize\n};  // Create a subclass  var SubClass = function () {\n    this.init();\n};  _.extend(SubClass.prototype, SuperClass.prototype);\n```    Callbacks are always last in function definitions  javascript\nvar foo = function (arg1, arg2, cb) {\n  ...\n};    Define functions as variables  javascript\nvar myFunc = function (a, b, c) {}; \nnot javascript\nfunction myFunc (a, b, c) {}    Variable names should be camelCased:  javascript\nvar myVariable = 42; \nnot javascript\nvar my_variable = 42;    Check for undefined  javascript\ntypeof myVariable === \"undefined\" \nnot javascript\nmyVariable === undefined    Define a variable with a default value  javascript\nvar x = y || z; \nnot javascript\nvar x = y ? y : z;",
            "title": "Style notes"
        },
        {
            "location": "/en/contributing-to-appium/style-guide-2.0/#test-style",
            "text": "Keep on the same line if it makes sense semantically and length is not an issue:  Examples:    driver.elementByTagName('el1').should.become(\"123\")\n    .nodeify(done);\n\n  driver\n    .elementsByTagName('el1').should.eventually.have.length(0)\n    .nodeify(done);  Alternatively use extra indents to improve readability:  h.driver\n  .elementById('comments')\n    .clear()\n    .click()\n    .keys(\"hello world\")\n    .getValue()\n    .should.become(\"hello world\")\n  .elementById('comments')\n    .getValue().should.become(\"hello world\")\n  .nodeify(done);\n\nh.driver\n  .execute(\"'nan'--\")\n    .should.be.rejectedWith(\"status: 13\")\n  .nodeify(done);",
            "title": "Test Style:"
        },
        {
            "location": "/en/contributing-to-appium/style-guide/",
            "text": "Style guide for contributors\n\n\nThanks for your contribution to Appium! Here are the principles we use when\nwriting javascript. Please conform to these so we can merge your pull request\n without going back and forth about style. The main principle is: \nmake your\n code look like the surrounding code\n.\n\n\nRebasing\n\n\nCommits in a pull request should consist of \nlogical changes\n.\nIf there are multiple authors, make sure each author has their own commit.\nIt's not a good idea to modify author information. Merge commits should be\nrebased out of pull requests.\n\n\nLinting\n\n\nAll code (except for code in \nbootstrap.js\n which uses proprietary Apple\nmethods) must pass JSLint. To check your code, you can simply run \ngrunt\nlint\n from the Appium repo dir. If you've created a new .js file,\nplease make sure it is covered by the wildcards in \ngrunt.js\n or that it is\nadded specifically.\n\n\nIt's easy to have your code linted as you type, which makes the whole process\nmuch smoother. We like \njshint\n,\nwhich has integrations with a lot of source code editors. The file \n.jshintrc\n is checked into the repo, and its contents are:\n\n\n{\n  \"laxcomma\": true,\n  \"strict\": true,\n  \"undef\": true,\n  \"unused\": true,\n  \"node\": true,\n  \"eqeqeq\": true,\n  \"trailing\": true,\n  \"indent\": 2\n}\n\n\n\n\nSince jshint does not enforce code style anymore, we also use\n\njscs\n, for which it also exists some\nsource editor integrations. The configuration file is:\n\n\n{\n  \"excludeFiles\": [\"submodules/**\", \"node_modules/**\",\n    \"./lib/server/static/**\", \"./lib/devices/firefoxos/atoms/*.js\",\n    \"./test/harmony/**/*.js\", \"./sample-code/examples/node/**/*-yiewd.js\",\n    \"./sample-code/apps/**\", \"./sample-code/examples/php/vendor/**\"],\n  \"requireCurlyBraces\": [\"for\", \"while\", \"do\", \"try\", \"catch\"],\n  \"requireSpaceAfterKeywords\": [\"if\", \"else\", \"for\", \"while\", \"do\", \"switch\",\n    \"return\", \"try\", \"catch\", \"function\"],\n  \"disallowMixedSpacesAndTabs\": true,\n  \"disallowTrailingWhitespace\": true,\n  \"requireSpacesInFunctionExpression\": {\n    \"beforeOpeningCurlyBrace\": true\n  }\n}\n\n\n\n\nThese configuration files define the warnings you will see in your favorite\neditor. See \nthis page for jshint\n and\n\nthis page for jscs\n to\nget the list of editors and platforms supported and how setup your editor for\nautomatic linting.\n\n\nStyle notes\n\n\n\n\nUse two spaces for indentation, \nno tabs\n\n\n\n\nUse single spaces around operators\n\n\njavascript\nvar x = 1;\n\nnot\n\njavascript\nvar x=1;\n\n\n\n\n\n\nSpaces after commas and colons in lists, objects, function calls, etc...\n\n\njavascript\nvar x = myFunc(\"lol\", {foo: bar, baz: boo});\n\nnot\n\njavascript\nvar x = myFunc(\"lol\",{foo:bar,baz:boo});\n\n\n\n\n\n\nAlways end statements with semicolons\n\n\n\n\n\n\nComma-first\n\n\njavascript\nvar x = {\n  foo: 'bar'\n, baz: 'boo'\n, wuz: 'foz'\n};\n\n\n\n\n\n\nBrackets for \nfunction\n, \nif\n, etc... go on same line, \nelse\n gets sandwiched\n\n\njavascript\nif (foo === bar) {\n  // do something\n} else {\n  // do something else\n}\n\n\n\n\n\n\nSpace after \nif\n, \nfor\n, and \nfunction\n:\n\n\njavascript\nif (foo === bar) {\n\n\njavascript\nfor (var i = 0; i < 10; i ++) {\n\n\njavascript\nvar lol = function (foo) {\n\nnot\n\njavascript\nif(foo === bar) {\n\n\njavascript\nfor(var i = 0; i < 10; i ++) {\n\n\njavascript\nvar lol = function(foo) {\n\n\n\n\n\n\nAvoid bracketless \nif\n for one-liners:\n\n\njavascript\nif (foo === bar) {\n  foo++;\n}\n\nnot\n\njavascript\nif (foo === bar)\n  foo++;\n\nexcept in the case of short-circuiting to a callback in the event of an error\n\njavascript\nif (err) return cb(err);\n\n\n\n\n\n\nUse \n===\n, not \n==\n, and \n!==\n, not \n!=\n for no surprises\n\n\n\n\nLine length shouldn't be longer than 79 characters\n\n\n\n\nBreak up long strings like this:\n\n\njavascript\nmyFunc(\"This is a really long string that's longer \" +\n        \"than 79 characters so I broke it up, woo\");\n\n\n\n\n\n\nComments should line up with code\n\n\njavascript\nif (foo === 5) {\n  myFunc(foo);\n  // foo++;\n}\n\nnot\n\njavascript\nif (foo === 5) {\n  myFunc(foo);\n//foo++;\n}\n\n\n\n\n\n\nSubclassing by extending prototypes\n\n\n```javascript\nvar _ = require('underscore');\n\n\nvar SuperClass = function () {\n  this.init();\n};\n\n\nSuperClass.prototype.init = function () {\n  // initialize\n};\n\n\n// Create a subclass\n\n\nvar SubClass = function () {\n    this.init();\n};\n\n\n_.extend(SubClass.prototype, SuperClass.prototype);\n```\n\n\n\n\n\n\nCallbacks are always last in function definitions\n\n\njavascript\nvar foo = function (arg1, arg2, cb) {\n  ...\n};\n\n\n\n\n\n\nDefine functions as variables\n\n\njavascript\nvar myFunc = function (a, b, c) {};\n\nnot\n\njavascript\nfunction myFunc (a, b, c) {}\n\n\n\n\n\n\nVariable names should be camelCased:\n\n\njavascript\nvar myVariable = 42;\n\nnot\n\njavascript\nvar my_variable = 42;\n\n\n\n\n\n\nCheck for undefined\n\n\njavascript\ntypeof myVariable === \"undefined\"\n\nnot\n\njavascript\nmyVariable === undefined\n\n\n\n\n\n\nDefine a variable with a default value\n\n\njavascript\nvar x = y || z;\n\nnot\n\njavascript\nvar x = y ? y : z;\n\n\n\n\n\n\nTest Style:\n\n\nKeep on the same line if it makes sense semantically and length is not an issue:\n\n\nExamples:\n\n\n  driver.elementByTagName('el1').should.become(\"123\")\n    .nodeify(done);\n\n  driver\n    .elementsByTagName('el1').should.eventually.have.length(0)\n    .nodeify(done);\n\n\n\n\nAlternatively use extra indents to improve readability:\n\n\nh.driver\n  .elementById('comments')\n    .clear()\n    .click()\n    .keys(\"hello world\")\n    .getValue()\n    .should.become(\"hello world\")\n  .elementById('comments')\n    .getValue().should.become(\"hello world\")\n  .nodeify(done);\n\nh.driver\n  .execute(\"'nan'--\")\n    .should.be.rejectedWith(\"status: 13\")\n  .nodeify(done);",
            "title": "Style guide"
        },
        {
            "location": "/en/contributing-to-appium/style-guide/#style-guide-for-contributors",
            "text": "Thanks for your contribution to Appium! Here are the principles we use when\nwriting javascript. Please conform to these so we can merge your pull request\n without going back and forth about style. The main principle is:  make your\n code look like the surrounding code .",
            "title": "Style guide for contributors"
        },
        {
            "location": "/en/contributing-to-appium/style-guide/#rebasing",
            "text": "Commits in a pull request should consist of  logical changes .\nIf there are multiple authors, make sure each author has their own commit.\nIt's not a good idea to modify author information. Merge commits should be\nrebased out of pull requests.",
            "title": "Rebasing"
        },
        {
            "location": "/en/contributing-to-appium/style-guide/#linting",
            "text": "All code (except for code in  bootstrap.js  which uses proprietary Apple\nmethods) must pass JSLint. To check your code, you can simply run  grunt\nlint  from the Appium repo dir. If you've created a new .js file,\nplease make sure it is covered by the wildcards in  grunt.js  or that it is\nadded specifically.  It's easy to have your code linted as you type, which makes the whole process\nmuch smoother. We like  jshint ,\nwhich has integrations with a lot of source code editors. The file  .jshintrc  is checked into the repo, and its contents are:  {\n  \"laxcomma\": true,\n  \"strict\": true,\n  \"undef\": true,\n  \"unused\": true,\n  \"node\": true,\n  \"eqeqeq\": true,\n  \"trailing\": true,\n  \"indent\": 2\n}  Since jshint does not enforce code style anymore, we also use jscs , for which it also exists some\nsource editor integrations. The configuration file is:  {\n  \"excludeFiles\": [\"submodules/**\", \"node_modules/**\",\n    \"./lib/server/static/**\", \"./lib/devices/firefoxos/atoms/*.js\",\n    \"./test/harmony/**/*.js\", \"./sample-code/examples/node/**/*-yiewd.js\",\n    \"./sample-code/apps/**\", \"./sample-code/examples/php/vendor/**\"],\n  \"requireCurlyBraces\": [\"for\", \"while\", \"do\", \"try\", \"catch\"],\n  \"requireSpaceAfterKeywords\": [\"if\", \"else\", \"for\", \"while\", \"do\", \"switch\",\n    \"return\", \"try\", \"catch\", \"function\"],\n  \"disallowMixedSpacesAndTabs\": true,\n  \"disallowTrailingWhitespace\": true,\n  \"requireSpacesInFunctionExpression\": {\n    \"beforeOpeningCurlyBrace\": true\n  }\n}  These configuration files define the warnings you will see in your favorite\neditor. See  this page for jshint  and this page for jscs  to\nget the list of editors and platforms supported and how setup your editor for\nautomatic linting.",
            "title": "Linting"
        },
        {
            "location": "/en/contributing-to-appium/style-guide/#style-notes",
            "text": "Use two spaces for indentation,  no tabs   Use single spaces around operators  javascript\nvar x = 1; \nnot javascript\nvar x=1;    Spaces after commas and colons in lists, objects, function calls, etc...  javascript\nvar x = myFunc(\"lol\", {foo: bar, baz: boo}); \nnot javascript\nvar x = myFunc(\"lol\",{foo:bar,baz:boo});    Always end statements with semicolons    Comma-first  javascript\nvar x = {\n  foo: 'bar'\n, baz: 'boo'\n, wuz: 'foz'\n};    Brackets for  function ,  if , etc... go on same line,  else  gets sandwiched  javascript\nif (foo === bar) {\n  // do something\n} else {\n  // do something else\n}    Space after  if ,  for , and  function :  javascript\nif (foo === bar) {  javascript\nfor (var i = 0; i < 10; i ++) {  javascript\nvar lol = function (foo) { \nnot javascript\nif(foo === bar) {  javascript\nfor(var i = 0; i < 10; i ++) {  javascript\nvar lol = function(foo) {    Avoid bracketless  if  for one-liners:  javascript\nif (foo === bar) {\n  foo++;\n} \nnot javascript\nif (foo === bar)\n  foo++; \nexcept in the case of short-circuiting to a callback in the event of an error javascript\nif (err) return cb(err);    Use  === , not  == , and  !== , not  !=  for no surprises   Line length shouldn't be longer than 79 characters   Break up long strings like this:  javascript\nmyFunc(\"This is a really long string that's longer \" +\n        \"than 79 characters so I broke it up, woo\");    Comments should line up with code  javascript\nif (foo === 5) {\n  myFunc(foo);\n  // foo++;\n} \nnot javascript\nif (foo === 5) {\n  myFunc(foo);\n//foo++;\n}    Subclassing by extending prototypes  ```javascript\nvar _ = require('underscore');  var SuperClass = function () {\n  this.init();\n};  SuperClass.prototype.init = function () {\n  // initialize\n};  // Create a subclass  var SubClass = function () {\n    this.init();\n};  _.extend(SubClass.prototype, SuperClass.prototype);\n```    Callbacks are always last in function definitions  javascript\nvar foo = function (arg1, arg2, cb) {\n  ...\n};    Define functions as variables  javascript\nvar myFunc = function (a, b, c) {}; \nnot javascript\nfunction myFunc (a, b, c) {}    Variable names should be camelCased:  javascript\nvar myVariable = 42; \nnot javascript\nvar my_variable = 42;    Check for undefined  javascript\ntypeof myVariable === \"undefined\" \nnot javascript\nmyVariable === undefined    Define a variable with a default value  javascript\nvar x = y || z; \nnot javascript\nvar x = y ? y : z;",
            "title": "Style notes"
        },
        {
            "location": "/en/contributing-to-appium/style-guide/#test-style",
            "text": "Keep on the same line if it makes sense semantically and length is not an issue:  Examples:    driver.elementByTagName('el1').should.become(\"123\")\n    .nodeify(done);\n\n  driver\n    .elementsByTagName('el1').should.eventually.have.length(0)\n    .nodeify(done);  Alternatively use extra indents to improve readability:  h.driver\n  .elementById('comments')\n    .clear()\n    .click()\n    .keys(\"hello world\")\n    .getValue()\n    .should.become(\"hello world\")\n  .elementById('comments')\n    .getValue().should.become(\"hello world\")\n  .nodeify(done);\n\nh.driver\n  .execute(\"'nan'--\")\n    .should.be.rejectedWith(\"status: 13\")\n  .nodeify(done);",
            "title": "Test Style:"
        },
        {
            "location": "/en/contributing-to-appium/version-branch-release/",
            "text": "Appium Version, Branch, and Release Models\n\n\nVersioning\n\n\nFollowing 1.3.6, Appium switched to semantic versioning: \nmajor | minor | patch | [-beta{N}]\n. E.g., \n1.4.1\n or \n2.4.0-Beta4\n.\n\n Major: API-breaking changes; new features\n\n Minor: Backward-compatible changes; may or may not include new features\n* Patch: Quick fix engineering; no new features\n\n\nThis makes Appium\u2019s versioning consistent with other major projects in the NPM ecosystem. It also works well with the trunk-based development model described below.\n\n\nBranching and Release Model\n\n\nAppium uses \nTrunk Based Development\n. As Paul Hammant explains,\n\n\n\n\nTrunk Based Development (TBD) is where all developers (for a particular deployable unit) commit to one shared branch under source-control. That branch is going to be colloquially known as trunk. \n\n\n\u2026 Branches are made for a release. Developers are not allowed to make branches in that shared place. Only release engineers commit to those branches, and indeed create each release branch. They may also cherry-pick individual commits to that branch if there is a desire to do so. \n\n\n\u2026 The release branch that will live for a short time before it is replaced by another release branch, takes everything from trunk when it is created. In terms of merges, only cherry-picks FROM trunk TO the release branch are supported.\n\n\n\n\nMilestones\n\n\nThe versioning and release model shape how we set Appium milestones. The next milestone is always a Major.Minor release. Triaged bugs and features that aren't associated with the next Major.Minor release should be backlogged in eponymously-named milestones (i.e., \nBugs\n and \nFeatures\n). In general, our goal is a minor release every 8 to 10 weeks. This includes approximately a week of Beta testing and another week for fixes and final changes. Hotfixes are released (Major.Minor.Patch) as needed between the Major.Minor versions. This allows us to get fixes out quickly while minimizing the risk of regression.\n\n\nWorkflow\n\n\nFor Appium, the basic flow looks like this:\n\n\n\n\nAll PRs go to \nmaster\n (aka \ntrunk\n).\n\n\nWhoever is leading a release acts as the \"release engineer\" (RE). When the release is ready to be shared (\u201cBeta\" status or better), the RE creates a new branch \nv[Major].[Minor].[Patch]-branch\n.\n\n\nPRs continue to go to \nmaster\n.\n\n\nIf the release requires fixes committed to \nmaster\n, the RE cherrypicks those commits into the release branch. \n\n\nThe release branch can be amended with hotfixes for subsequent patch releases. This allows the team to carefully scope small changesets for quick release. Fixes can also be pulled into previous release  branches branches when needed.  \n\n\nRinse, repeat.\n\n\n\n\nDevelopers can maintain working branches however they like. These are strictly for personal use. All \u201cofficial\u201d branches should conform to the model defined above.\n\n\nExample\n\n\n\n\nIt\u2019s 1 June. The Appium team plans on releasing 20.1-beta on 15 July and the full 20.1 release on 1 August.\n\n\nFor the next six weeks, the team commits their work to \nmaster\n.\n\n\nOn 15 July, the acting RE creates \n20.1-branch\n. The first node is tagged \u201c20.1.0 Beta\u201d.\n\n\nOne team member begins fixing bugs in the beta. The fixes are committed to \nmaster\n.\n\n\nOther contributors begin committing changes that are planned for 20.2. These also go to \nmaster\n.\n\n\nThe RE cherrypicks the fixes into \n20.1-branch\n, leaving the other changes on \nmaster\n.\n\n\nThe team celebrates that all the beta bugs are fixed for the 1 August release.\n\n\nThe RE tags HEAD of \n20.1-branch\n as \n20.1.0\n and publishes the release.\n\n\nA few weeks later, a crash is discovered in \n20.1.0\n and users need a fix NOW.\n\n\nThe acting RE pulls the crash fix from master into \n20.1-branch\n, tags HEAD as \n20.1.1\n, and publishes the hotfix.\n\n\nThe cycle repeats once the \n20.2\n release is ready.",
            "title": "Version branch release"
        },
        {
            "location": "/en/contributing-to-appium/version-branch-release/#appium-version-branch-and-release-models",
            "text": "",
            "title": "Appium Version, Branch, and Release Models"
        },
        {
            "location": "/en/contributing-to-appium/version-branch-release/#versioning",
            "text": "Following 1.3.6, Appium switched to semantic versioning:  major | minor | patch | [-beta{N}] . E.g.,  1.4.1  or  2.4.0-Beta4 .  Major: API-breaking changes; new features  Minor: Backward-compatible changes; may or may not include new features\n* Patch: Quick fix engineering; no new features  This makes Appium\u2019s versioning consistent with other major projects in the NPM ecosystem. It also works well with the trunk-based development model described below.",
            "title": "Versioning"
        },
        {
            "location": "/en/contributing-to-appium/version-branch-release/#branching-and-release-model",
            "text": "Appium uses  Trunk Based Development . As Paul Hammant explains,   Trunk Based Development (TBD) is where all developers (for a particular deployable unit) commit to one shared branch under source-control. That branch is going to be colloquially known as trunk.   \u2026 Branches are made for a release. Developers are not allowed to make branches in that shared place. Only release engineers commit to those branches, and indeed create each release branch. They may also cherry-pick individual commits to that branch if there is a desire to do so.   \u2026 The release branch that will live for a short time before it is replaced by another release branch, takes everything from trunk when it is created. In terms of merges, only cherry-picks FROM trunk TO the release branch are supported.",
            "title": "Branching and Release Model"
        },
        {
            "location": "/en/contributing-to-appium/version-branch-release/#milestones",
            "text": "The versioning and release model shape how we set Appium milestones. The next milestone is always a Major.Minor release. Triaged bugs and features that aren't associated with the next Major.Minor release should be backlogged in eponymously-named milestones (i.e.,  Bugs  and  Features ). In general, our goal is a minor release every 8 to 10 weeks. This includes approximately a week of Beta testing and another week for fixes and final changes. Hotfixes are released (Major.Minor.Patch) as needed between the Major.Minor versions. This allows us to get fixes out quickly while minimizing the risk of regression.",
            "title": "Milestones"
        },
        {
            "location": "/en/contributing-to-appium/version-branch-release/#workflow",
            "text": "For Appium, the basic flow looks like this:   All PRs go to  master  (aka  trunk ).  Whoever is leading a release acts as the \"release engineer\" (RE). When the release is ready to be shared (\u201cBeta\" status or better), the RE creates a new branch  v[Major].[Minor].[Patch]-branch .  PRs continue to go to  master .  If the release requires fixes committed to  master , the RE cherrypicks those commits into the release branch.   The release branch can be amended with hotfixes for subsequent patch releases. This allows the team to carefully scope small changesets for quick release. Fixes can also be pulled into previous release  branches branches when needed.    Rinse, repeat.   Developers can maintain working branches however they like. These are strictly for personal use. All \u201cofficial\u201d branches should conform to the model defined above.",
            "title": "Workflow"
        },
        {
            "location": "/en/contributing-to-appium/version-branch-release/#example",
            "text": "It\u2019s 1 June. The Appium team plans on releasing 20.1-beta on 15 July and the full 20.1 release on 1 August.  For the next six weeks, the team commits their work to  master .  On 15 July, the acting RE creates  20.1-branch . The first node is tagged \u201c20.1.0 Beta\u201d.  One team member begins fixing bugs in the beta. The fixes are committed to  master .  Other contributors begin committing changes that are planned for 20.2. These also go to  master .  The RE cherrypicks the fixes into  20.1-branch , leaving the other changes on  master .  The team celebrates that all the beta bugs are fixed for the 1 August release.  The RE tags HEAD of  20.1-branch  as  20.1.0  and publishes the release.  A few weeks later, a crash is discovered in  20.1.0  and users need a fix NOW.  The acting RE pulls the crash fix from master into  20.1-branch , tags HEAD as  20.1.1 , and publishes the hotfix.  The cycle repeats once the  20.2  release is ready.",
            "title": "Example"
        },
        {
            "location": "/en/drivers/android-espresso/",
            "text": "The Espresso Driver for Android\n\n\nAppium currently has beta-level support for the\n\nEspresso\n\nautomation technology via its own Espresso driver. This driver works by kicking\noff an Espresso run on a device, with our own automation server as part of the\nEspresso test APK.  Appium can then communicate with this automation server and\ntrigger Espresso commands as the result of Appium client calls.\n\n\nDevelopment of the Espresso driver happens at the\n\nappium-espresso-driver\n\nrepo.\n\n\n(If you don't want a beta driver, Appium's current standard Android automation\ndriver is the \nUiAutomator2 Driver\n.)\n\n\nRequirements and Support\n\n\nIn addition to Appium's general requirements:\n\n\n\n\nJava 7 installed and configured correctly for your platform\n\n\nMac, Windows, or Linux OS with the ability to run the Android SDK\n\n\n\n\nUsage\n\n\nThe way to start a session using the Espresso driver is to include the\n\nautomationName\n \ncapability\n in your \nnew session request\n, with\nthe value \nEspresso\n. Of course, you must also include appropriate\n\nplatformName\n (=\nAndroid\n), \nplatformVersion\n, \ndeviceName\n, and \napp\n\ncapabilities, at a minimum.\n\n\nCapabilities\n\n\nThe Espresso driver currently supports a subset of the standard \nAndroid\ncapabilities\n.\n\n\nSetup\n\n\nSetup for the Espresso driver basically entails getting the Android SDK and\nbuild tools ready to go. You can follow the instructions at the \nUiAutomator2\nDriver doc\n, since the steps are the same.",
            "title": "Android espresso"
        },
        {
            "location": "/en/drivers/android-espresso/#the-espresso-driver-for-android",
            "text": "Appium currently has beta-level support for the Espresso \nautomation technology via its own Espresso driver. This driver works by kicking\noff an Espresso run on a device, with our own automation server as part of the\nEspresso test APK.  Appium can then communicate with this automation server and\ntrigger Espresso commands as the result of Appium client calls.  Development of the Espresso driver happens at the appium-espresso-driver \nrepo.  (If you don't want a beta driver, Appium's current standard Android automation\ndriver is the  UiAutomator2 Driver .)",
            "title": "The Espresso Driver for Android"
        },
        {
            "location": "/en/drivers/android-espresso/#requirements-and-support",
            "text": "In addition to Appium's general requirements:   Java 7 installed and configured correctly for your platform  Mac, Windows, or Linux OS with the ability to run the Android SDK",
            "title": "Requirements and Support"
        },
        {
            "location": "/en/drivers/android-espresso/#usage",
            "text": "The way to start a session using the Espresso driver is to include the automationName   capability  in your  new session request , with\nthe value  Espresso . Of course, you must also include appropriate platformName  (= Android ),  platformVersion ,  deviceName , and  app \ncapabilities, at a minimum.",
            "title": "Usage"
        },
        {
            "location": "/en/drivers/android-espresso/#capabilities",
            "text": "The Espresso driver currently supports a subset of the standard  Android\ncapabilities .",
            "title": "Capabilities"
        },
        {
            "location": "/en/drivers/android-espresso/#setup",
            "text": "Setup for the Espresso driver basically entails getting the Android SDK and\nbuild tools ready to go. You can follow the instructions at the  UiAutomator2\nDriver doc , since the steps are the same.",
            "title": "Setup"
        },
        {
            "location": "/en/drivers/android-selendroid/",
            "text": "The Selendroid Driver for Android\n\n\n\n\nNote\n: This driver is \nDEPRECATED\n and should not be used unless\nabsolutely necessary. The information in this doc may not keep up to date\nwith reality, and the driver will be removed in a future version of Appium.\nTo begin Android automation with Appium today, please use the \nUiAutomator2\nDriver\n instead.\n\n\n\n\nAppium's support for very old versions of Android (4.1 and below) comes via\na project called \nSelendroid\n. Selendroid is an\nInstrumentation-based automation framework.\n\n\nDevelopment of the Selendroid driver happens at the\n\nappium-selendroid-driver\n\nrepo.\n\n\nRequirements and Support\n\n\nIn addition to Appium's general requirements:\n\n\n\n\nJava 6+ installed and configured correctly for your platform\n\n\nMac, Windows, or Linux OS with the ability to run the Android SDK\n\n\n\n\nUsage\n\n\nThe way to start a session using the Selendroid driver is to include the\n\nautomationName\n \ncapability\n in your \nnew session request\n, with\nthe value \nSelendroid\n. Of course, you must also include appropriate\n\nplatformName\n (=\nAndroid\n), \nplatformVersion\n, \ndeviceName\n, and \napp\n\ncapabilities, at a minimum.\n\n\nIt is highly recommended to also set the \nappPackage\n and \nappActivity\n\ncapabilities in order to let Appium know exactly which package and activity\nshould be launched for your application.\n\n\nCapabilities\n\n\nThe Selendroid driver supports a subset of the standard \nAndroid\ncapabilities\n.\n\n\nCommands\n\n\nSelendroid's API differs from Appium's other Android drivers significantly. We\nrecommend you thoroughly read \nSelendroid's\ndocumentation\n before writing your scripts\nfor older devices or hybrid apps.\n\n\nSetup\n\n\nSetup for the Selendroid driver basically entails getting the Android SDK and\nbuild tools ready to go. You can follow the instructions at the \nUiAutomator2\nDriver doc\n, since the steps are the same.",
            "title": "Android selendroid"
        },
        {
            "location": "/en/drivers/android-selendroid/#the-selendroid-driver-for-android",
            "text": "Note : This driver is  DEPRECATED  and should not be used unless\nabsolutely necessary. The information in this doc may not keep up to date\nwith reality, and the driver will be removed in a future version of Appium.\nTo begin Android automation with Appium today, please use the  UiAutomator2\nDriver  instead.   Appium's support for very old versions of Android (4.1 and below) comes via\na project called  Selendroid . Selendroid is an\nInstrumentation-based automation framework.  Development of the Selendroid driver happens at the appium-selendroid-driver \nrepo.",
            "title": "The Selendroid Driver for Android"
        },
        {
            "location": "/en/drivers/android-selendroid/#requirements-and-support",
            "text": "In addition to Appium's general requirements:   Java 6+ installed and configured correctly for your platform  Mac, Windows, or Linux OS with the ability to run the Android SDK",
            "title": "Requirements and Support"
        },
        {
            "location": "/en/drivers/android-selendroid/#usage",
            "text": "The way to start a session using the Selendroid driver is to include the automationName   capability  in your  new session request , with\nthe value  Selendroid . Of course, you must also include appropriate platformName  (= Android ),  platformVersion ,  deviceName , and  app \ncapabilities, at a minimum.  It is highly recommended to also set the  appPackage  and  appActivity \ncapabilities in order to let Appium know exactly which package and activity\nshould be launched for your application.",
            "title": "Usage"
        },
        {
            "location": "/en/drivers/android-selendroid/#capabilities",
            "text": "The Selendroid driver supports a subset of the standard  Android\ncapabilities .",
            "title": "Capabilities"
        },
        {
            "location": "/en/drivers/android-selendroid/#commands",
            "text": "Selendroid's API differs from Appium's other Android drivers significantly. We\nrecommend you thoroughly read  Selendroid's\ndocumentation  before writing your scripts\nfor older devices or hybrid apps.",
            "title": "Commands"
        },
        {
            "location": "/en/drivers/android-selendroid/#setup",
            "text": "Setup for the Selendroid driver basically entails getting the Android SDK and\nbuild tools ready to go. You can follow the instructions at the  UiAutomator2\nDriver doc , since the steps are the same.",
            "title": "Setup"
        },
        {
            "location": "/en/drivers/android-uiautomator/",
            "text": "The UiAutomator Driver for Android\n\n\nAppium's older support for automating Android apps is via the \nUiAutomator\n\ndriver.  \n(New to Appium? Read our \nintroduction to Appium drivers\n)\n.\nThis driver leverages Google's\n\nUiAutomator\n\ntechnology to launch automation sessions on a device.\n\n\nDevelopment of the UiAutomator driver happens at the\n\nappium-android-driver\n\nrepo.\n\n\nWe recommend you upgrade to the \nUiAutomator2 Driver\n\nand use that driver instead, since this driver will not be supported moving\nforward.\n\n\nRequirements and Support\n\n\nIn addition to Appium's general requirements:\n\n\n\n\nJava 7 installed and configured correctly for your platform\n\n\nMac, Windows, or Linux OS with the ability to run the Android SDK\n\n\n\n\nUsage\n\n\nThe way to start a session using the UiAutomator driver is to include the\n\nplatformName\n \ncapability\n in your \nnew session request\n, with\nthe value \nAndroid\n. Of course, you must also include appropriate\n\nplatformVersion\n, \ndeviceName\n, and \napp\n capabilities, at a minimum. In the\ncase of this driver, no \nautomationName\n capability should be used.\n\n\nIt is highly recommended to also set the \nappPackage\n and \nappActivity\n\ncapabilities in order to let Appium know exactly which package and activity\nshould be launched for your application. Otherwise, Appium will try to\ndetermine these automatically from your app manifest.\n\n\nCapabilities\n\n\nThe UiAutomator driver supports a number of standard \nAppium\ncapabilities\n, but has an additional\nset of capabilities that modulate the behavior of the driver. These can be\nfound currently at the \nAndroid\nsection\n of the\naforementioned doc.\n\n\nFor web tests, to automate Chrome instead of your own application, leave the\n\napp\n capability empty and instead set the \nbrowserName\n capability to\n\nChrome\n. Note that you are responsible for ensuring that Chrome is on the\nemulator/device, and that it is of a version compatible with Chromedriver.\n\n\nCommands\n\n\nTo see the various commands Appium supports, and specifically for information\non how the commands map to behaviors for the UiAutomator driver, see the \nAPI\nReference\n.\n\n\nSetup\n\n\nGiven that the setup instructions for this driver and the newer UiAutomator2\nDriver are identical, please refer to the system, emulator, and device setup\ninstructions on the \nUiAutomator2\nDriver\n doc.",
            "title": "Android uiautomator"
        },
        {
            "location": "/en/drivers/android-uiautomator/#the-uiautomator-driver-for-android",
            "text": "Appium's older support for automating Android apps is via the  UiAutomator \ndriver.   (New to Appium? Read our  introduction to Appium drivers ) .\nThis driver leverages Google's UiAutomator \ntechnology to launch automation sessions on a device.  Development of the UiAutomator driver happens at the appium-android-driver \nrepo.  We recommend you upgrade to the  UiAutomator2 Driver \nand use that driver instead, since this driver will not be supported moving\nforward.",
            "title": "The UiAutomator Driver for Android"
        },
        {
            "location": "/en/drivers/android-uiautomator/#requirements-and-support",
            "text": "In addition to Appium's general requirements:   Java 7 installed and configured correctly for your platform  Mac, Windows, or Linux OS with the ability to run the Android SDK",
            "title": "Requirements and Support"
        },
        {
            "location": "/en/drivers/android-uiautomator/#usage",
            "text": "The way to start a session using the UiAutomator driver is to include the platformName   capability  in your  new session request , with\nthe value  Android . Of course, you must also include appropriate platformVersion ,  deviceName , and  app  capabilities, at a minimum. In the\ncase of this driver, no  automationName  capability should be used.  It is highly recommended to also set the  appPackage  and  appActivity \ncapabilities in order to let Appium know exactly which package and activity\nshould be launched for your application. Otherwise, Appium will try to\ndetermine these automatically from your app manifest.",
            "title": "Usage"
        },
        {
            "location": "/en/drivers/android-uiautomator/#capabilities",
            "text": "The UiAutomator driver supports a number of standard  Appium\ncapabilities , but has an additional\nset of capabilities that modulate the behavior of the driver. These can be\nfound currently at the  Android\nsection  of the\naforementioned doc.  For web tests, to automate Chrome instead of your own application, leave the app  capability empty and instead set the  browserName  capability to Chrome . Note that you are responsible for ensuring that Chrome is on the\nemulator/device, and that it is of a version compatible with Chromedriver.",
            "title": "Capabilities"
        },
        {
            "location": "/en/drivers/android-uiautomator/#commands",
            "text": "To see the various commands Appium supports, and specifically for information\non how the commands map to behaviors for the UiAutomator driver, see the  API\nReference .",
            "title": "Commands"
        },
        {
            "location": "/en/drivers/android-uiautomator/#setup",
            "text": "Given that the setup instructions for this driver and the newer UiAutomator2\nDriver are identical, please refer to the system, emulator, and device setup\ninstructions on the  UiAutomator2\nDriver  doc.",
            "title": "Setup"
        },
        {
            "location": "/en/drivers/android-uiautomator2/",
            "text": "The UiAutomator2 Driver for Android\n\n\nAppium's flagship support for automating Android apps is via the \nUiAutomator2\n\ndriver.  \n(New to Appium? Read our \nintroduction to Appium drivers\n)\n.\nThis driver leverages Google's\n\nUiAutomator2\n\ntechnology to facilitate automation on a device or emulator.\n\n\nDevelopment of the UiAutomator2 driver happens at the\n\nappium-uiautomator2-driver\n\nrepo.\n\n\nOlder Android-based drivers include:\n\n The \nUiAutomator Driver\n\n\n The \nSelendroid Driver\n\n\nRequirements and Support\n\n\nIn addition to Appium's general requirements:\n\n\n\n\nJava 7 installed and configured correctly for your platform\n\n\nMac, Windows, or Linux OS with the ability to run the Android SDK\n\n\n\n\nUsage\n\n\nThe way to start a session using the UiAutomator2 driver is to include the\n\nautomationName\n \ncapability\n in your \nnew session request\n, with\nthe value \nUiAutomator2\n. Of course, you must also include appropriate\n\nplatformName\n (=\nAndroid\n), \nplatformVersion\n, \ndeviceName\n, and \napp\n\ncapabilities, at a minimum.\n\n\nIt is highly recommended to also set the \nappPackage\n and \nappActivity\n\ncapabilities in order to let Appium know exactly which package and activity\nshould be launched for your application. Otherwise, Appium will try to\ndetermine these automatically from your app manifest.\n\n\nCapabilities\n\n\nThe UiAutomator2 driver supports a number of standard \nAppium\ncapabilities\n, but has an additional\nset of capabilities that modulate the behavior of the driver. These can be\nfound currently at the \nAndroid\nsection\n of the\naforementioned doc.\n\n\nFor web tests, to automate Chrome instead of your own application, leave the\n\napp\n capability empty and instead set the \nbrowserName\n capability to\n\nChrome\n. Note that you are responsible for ensuring that Chrome is on the\nemulator/device, and that it is of a \nversion compatible with\nChromedriver\n.\n\n\nCommands\n\n\nTo see the various commands Appium supports, and specifically for information\non how the commands map to behaviors for the UiAutomator2 driver, see the \nAPI\nReference\n.\n\n\nBasic Setup\n\n\n\n\n\n\nEnsure that you have Appium's general dependencies (e.g., Node\n   & NPM) installed and configured.\n\n\n\n\n\n\nEnsure that Java (the JDK, not just the JRE) is installed and Java binaries\n   are added to your path. The instructions for this step differ for Mac/Linux\n   and for Windows. Please consult platform-specific documentation, as this is\n   a common task. An example of how to change the PATH on Windows is\n   \nhere\n.\n\n\n\n\n\n\nEnsure that the \nJAVA_HOME\n environment variable is also set to the JDK\n   path. For Mac/Linux, for example (the specifics of this path will vary\n   greatly by system), put this in your login script:\n\n\nexport JAVA_HOME=\"/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home\"\n\n\n\n\n\n\nOn Windows, this will be done by setting the environment variable in the\n   control panel, using the same strategy as for setting PATH above.\n\n\n\n\n\n\nInstall the \nAndroid SDK\n. The\n   supported way of doing this nowadays is to use \nAndroid\n   Studio\n. Use the provided\n   GUI to install the Android SDK to a path of your choosing.\n\n\n\n\n\n\nSet the \nANDROID_HOME\n environment variable to match this path. For example,\n   if you installed the SDK to \n/usr/local/adt\n, then there will typically be\n   a \nsdk\n folder inside of that which contains the SDK files. In that case, on\n   Mac and Linux, add the following line to your login script (e.g.,\n   \n~/.bashrc\n, \n~/.bash_profile\n, etc...):\n\n\nexport ANDROID_HOME=\"/usr/local/adt/sdk\"\n\n\n\n\n\n\nOn Windows, follow the same steps as before to set the environment variable\n   in the control panel.\n\n\n\n\n\n\nUsing the SDK manager, ensure you have installed the SDK for Android API\n   levels you wish to automate (e.g., 24).\n\n\n\n\n\n\nOn Windows, ensure that you always run Appium in Administrator mode.\n\n\n\n\n\n\nAt this point, your general system setup is done. Follow the steps below based\non whether you want to automate an emulator or a real device. In addition you\nwill need your app's APK (preferably built in Debug mode), whose path or URL\nyou will use as the value of the \napp\n capability when running your tests.\n\n\nEmulator Setup\n\n\nTo run tests on emulators, use the AVD Manager included with Android Studio or\nthe SDK. With this tool, create the emulator that matches your needs. With the\nemulator launched, Appium will automatically find and use it for its tests.\nOtherwise, if you specify the \navd\n capability with the value matching the name\nof your emulator, then Appium will attempt to launch the emulator for you.\n\n\nAdditional tips for emulators:\n\n\n\n\nThere exists a hardware accelerated emulator for Android, though it has its\n  own limitations. It can be installed from Intel's website, or through the\n  Android SDK Manager. For more information, go\n  \nhere\n.\n\n\nMake sure that \nhw.battery=yes\n in your AVD's \nconfig.ini\n, if you want to\n  run any of the Appium tests, or use any of the power commands. (As of Android\n  5.0, this is the default.)\n\n\n\n\nReal Device Setup\n\n\nFor Android automation, no additional setup is required for testing on real\ndevices, other than these simple requirements:\n\n\n\n\nEnsure that \nDeveloper\n  mode\n is turned\n  on for the device.\n\n\nEnsure that the device is connected via USB to the Appium host, and can be\n  seen by \nADB\n\n  (run \nadb devices\n to make sure).\n\n\nEnsure that \"Verify Apps\" in settings is disabled, to allow Appium's helper\n  apps to function without manual intervention.\n\n\n\n\n(For some specific commands, the device might need to be rooted, though this is\nnot the norm.)",
            "title": "Android uiautomator2"
        },
        {
            "location": "/en/drivers/android-uiautomator2/#the-uiautomator2-driver-for-android",
            "text": "Appium's flagship support for automating Android apps is via the  UiAutomator2 \ndriver.   (New to Appium? Read our  introduction to Appium drivers ) .\nThis driver leverages Google's UiAutomator2 \ntechnology to facilitate automation on a device or emulator.  Development of the UiAutomator2 driver happens at the appium-uiautomator2-driver \nrepo.  Older Android-based drivers include:  The  UiAutomator Driver   The  Selendroid Driver",
            "title": "The UiAutomator2 Driver for Android"
        },
        {
            "location": "/en/drivers/android-uiautomator2/#requirements-and-support",
            "text": "In addition to Appium's general requirements:   Java 7 installed and configured correctly for your platform  Mac, Windows, or Linux OS with the ability to run the Android SDK",
            "title": "Requirements and Support"
        },
        {
            "location": "/en/drivers/android-uiautomator2/#usage",
            "text": "The way to start a session using the UiAutomator2 driver is to include the automationName   capability  in your  new session request , with\nthe value  UiAutomator2 . Of course, you must also include appropriate platformName  (= Android ),  platformVersion ,  deviceName , and  app \ncapabilities, at a minimum.  It is highly recommended to also set the  appPackage  and  appActivity \ncapabilities in order to let Appium know exactly which package and activity\nshould be launched for your application. Otherwise, Appium will try to\ndetermine these automatically from your app manifest.",
            "title": "Usage"
        },
        {
            "location": "/en/drivers/android-uiautomator2/#capabilities",
            "text": "The UiAutomator2 driver supports a number of standard  Appium\ncapabilities , but has an additional\nset of capabilities that modulate the behavior of the driver. These can be\nfound currently at the  Android\nsection  of the\naforementioned doc.  For web tests, to automate Chrome instead of your own application, leave the app  capability empty and instead set the  browserName  capability to Chrome . Note that you are responsible for ensuring that Chrome is on the\nemulator/device, and that it is of a  version compatible with\nChromedriver .",
            "title": "Capabilities"
        },
        {
            "location": "/en/drivers/android-uiautomator2/#commands",
            "text": "To see the various commands Appium supports, and specifically for information\non how the commands map to behaviors for the UiAutomator2 driver, see the  API\nReference .",
            "title": "Commands"
        },
        {
            "location": "/en/drivers/android-uiautomator2/#basic-setup",
            "text": "Ensure that you have Appium's general dependencies (e.g., Node\n   & NPM) installed and configured.    Ensure that Java (the JDK, not just the JRE) is installed and Java binaries\n   are added to your path. The instructions for this step differ for Mac/Linux\n   and for Windows. Please consult platform-specific documentation, as this is\n   a common task. An example of how to change the PATH on Windows is\n    here .    Ensure that the  JAVA_HOME  environment variable is also set to the JDK\n   path. For Mac/Linux, for example (the specifics of this path will vary\n   greatly by system), put this in your login script:  export JAVA_HOME=\"/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home\"    On Windows, this will be done by setting the environment variable in the\n   control panel, using the same strategy as for setting PATH above.    Install the  Android SDK . The\n   supported way of doing this nowadays is to use  Android\n   Studio . Use the provided\n   GUI to install the Android SDK to a path of your choosing.    Set the  ANDROID_HOME  environment variable to match this path. For example,\n   if you installed the SDK to  /usr/local/adt , then there will typically be\n   a  sdk  folder inside of that which contains the SDK files. In that case, on\n   Mac and Linux, add the following line to your login script (e.g.,\n    ~/.bashrc ,  ~/.bash_profile , etc...):  export ANDROID_HOME=\"/usr/local/adt/sdk\"    On Windows, follow the same steps as before to set the environment variable\n   in the control panel.    Using the SDK manager, ensure you have installed the SDK for Android API\n   levels you wish to automate (e.g., 24).    On Windows, ensure that you always run Appium in Administrator mode.    At this point, your general system setup is done. Follow the steps below based\non whether you want to automate an emulator or a real device. In addition you\nwill need your app's APK (preferably built in Debug mode), whose path or URL\nyou will use as the value of the  app  capability when running your tests.",
            "title": "Basic Setup"
        },
        {
            "location": "/en/drivers/android-uiautomator2/#emulator-setup",
            "text": "To run tests on emulators, use the AVD Manager included with Android Studio or\nthe SDK. With this tool, create the emulator that matches your needs. With the\nemulator launched, Appium will automatically find and use it for its tests.\nOtherwise, if you specify the  avd  capability with the value matching the name\nof your emulator, then Appium will attempt to launch the emulator for you.  Additional tips for emulators:   There exists a hardware accelerated emulator for Android, though it has its\n  own limitations. It can be installed from Intel's website, or through the\n  Android SDK Manager. For more information, go\n   here .  Make sure that  hw.battery=yes  in your AVD's  config.ini , if you want to\n  run any of the Appium tests, or use any of the power commands. (As of Android\n  5.0, this is the default.)",
            "title": "Emulator Setup"
        },
        {
            "location": "/en/drivers/android-uiautomator2/#real-device-setup",
            "text": "For Android automation, no additional setup is required for testing on real\ndevices, other than these simple requirements:   Ensure that  Developer\n  mode  is turned\n  on for the device.  Ensure that the device is connected via USB to the Appium host, and can be\n  seen by  ADB \n  (run  adb devices  to make sure).  Ensure that \"Verify Apps\" in settings is disabled, to allow Appium's helper\n  apps to function without manual intervention.   (For some specific commands, the device might need to be rooted, though this is\nnot the norm.)",
            "title": "Real Device Setup"
        },
        {
            "location": "/en/drivers/ios-uiautomation-safari-launcher/",
            "text": "SafariLauncher Setup Instructions\n\n\nRunning mobile web tests on iOS real devices with iOS 9.3 or below, using Instruments,\nrequires the introduction of a third-party app, \nSafariLauncher\n.\nThis is necessary because with Instruments there is no way to start the Safari\napp on the device. The \nSafariLauncher\n app just launches, and then launches\nSafari. Simple!\n\n\nIn some configurations, Appium is able to automatically build, sign, and install\n\nSafariLauncher\n as it needs, and there is nothing else necessary to be done. If,\nhowever, this is not the case, as is more often so with later versions of\n\nXcode\n, the following configuration needs to\nbe done before Safari tests on real devices can be successfully run.\n\n\nAutomatic SafariLauncher configuration\n\n\nThe only thing needed for automatic \nSafariLauncher\n configuration is to create\na \nprovisioning profile\n that can be used to deploy the \nSafariLauncher\n App.\nThis requires, in particular, a wildcard certificate, which is not possible if\nyour Apple developer account is a free one. If that is the case, skip to the\nmanual configuration below.\n\n\nTo create a profile for the launcher go into the \nApple Developers Member Center\n and:\n\n\n\n\nStep 1:\n Create a \nnew App Id\n and select the WildCard App ID option and set it to \"*\"\n\n\nStep 2:\n Create a \nnew Development Profile\n and for App Id select the one created in step 1.\n\n\nStep 3:\n Select your \ncertificate(s) and device(s)\n and click next.\n\n\nStep 4:\n Set the profile name and \ngenerate the profile\n.\n\n\nStep 5:\n Download the profile and open it with a text editor.\n\n\nStep 6:\n Search for the \nUUID\n and the string for it is your \nidentity code\n.\n\n\n\n\nNow simply include your UDID and device name in your desired capabilities:\n\n\n{\n  udid: '...',\n  deviceName: '...',\n  platformName: 'iOS',\n  platformVersion: '9.3',\n  browserName: 'Safari'\n}\n\n\n\n\nManual SafariLauncher configuration\n\n\nNote:\n This procedure assumes you have \nXcode\n 7.3 or 7.3.1.\n\n\nIt is possible to use the version of \nSafariLauncher\n\nthat comes with the \nappium-ios-driver\n,\nbut if you do, each time you update Appium the procedure will have to be done again.\n\n\nTo get a local copy of \nSafariLauncher\n, first clone it from \nGitHub\n:\n\n\ngit clone https://github.com/snevesbarros/SafariLauncher.git\n\n\n\n\nOnce you have a local copy of the source code for the \nSafariLauncher\n app, open\n\nXcode\n and then open the \nSafariLauncher\n project\n\n\n\n\nIn the \nSafariLauncher\n target pane you will see an error, saying that there needs\nto be a provisioning profile for this app\n\n\n\n\nIn order to fix this, you first need to enter a \"Bundle Identifier\" for the app. The default\nexpected by Appium is \ncom.bytearc.SafariLauncher\n, but this might not be available\nfor you to build. In that case, choose something else, and make note of it. Then\nchoose a \"Team\", and allow the provisioning profile to be created\n\n\n\n\nFinally, make sure your device is connected to the computer, and choose it as the\ntarget\n\n\n\n\nAnd run the build and install actions to compile the app and push it onto your\ndevice\n\n\n\n\nNow you have a working \nSafariLauncher\n on your device. The app itself is a plain\nscreen that will launch \nSafari\n at the click of a button\n\n\n\n\nThe last step is only necessary if you chose a bundle identifier for the app that\nis different from the default (\ncom.bytearc.SafariLauncher\n). If you did, it is\nnecessary to send that to Appium when creating a session, using the \nbundleId\n\ndesired capability:\n\n\n{\n  udid: '...',\n  deviceName: '...',\n  platformName: 'iOS',\n  platformVersion: '9.3',\n  browserName: 'Safari',\n  bundleId: 'com.imurchie.SafariLauncher'\n}",
            "title": "Ios uiautomation safari launcher"
        },
        {
            "location": "/en/drivers/ios-uiautomation-safari-launcher/#safarilauncher-setup-instructions",
            "text": "Running mobile web tests on iOS real devices with iOS 9.3 or below, using Instruments,\nrequires the introduction of a third-party app,  SafariLauncher .\nThis is necessary because with Instruments there is no way to start the Safari\napp on the device. The  SafariLauncher  app just launches, and then launches\nSafari. Simple!  In some configurations, Appium is able to automatically build, sign, and install SafariLauncher  as it needs, and there is nothing else necessary to be done. If,\nhowever, this is not the case, as is more often so with later versions of Xcode , the following configuration needs to\nbe done before Safari tests on real devices can be successfully run.",
            "title": "SafariLauncher Setup Instructions"
        },
        {
            "location": "/en/drivers/ios-uiautomation-safari-launcher/#automatic-safarilauncher-configuration",
            "text": "The only thing needed for automatic  SafariLauncher  configuration is to create\na  provisioning profile  that can be used to deploy the  SafariLauncher  App.\nThis requires, in particular, a wildcard certificate, which is not possible if\nyour Apple developer account is a free one. If that is the case, skip to the\nmanual configuration below.  To create a profile for the launcher go into the  Apple Developers Member Center  and:   Step 1:  Create a  new App Id  and select the WildCard App ID option and set it to \"*\"  Step 2:  Create a  new Development Profile  and for App Id select the one created in step 1.  Step 3:  Select your  certificate(s) and device(s)  and click next.  Step 4:  Set the profile name and  generate the profile .  Step 5:  Download the profile and open it with a text editor.  Step 6:  Search for the  UUID  and the string for it is your  identity code .   Now simply include your UDID and device name in your desired capabilities:  {\n  udid: '...',\n  deviceName: '...',\n  platformName: 'iOS',\n  platformVersion: '9.3',\n  browserName: 'Safari'\n}",
            "title": "Automatic SafariLauncher configuration"
        },
        {
            "location": "/en/drivers/ios-uiautomation-safari-launcher/#manual-safarilauncher-configuration",
            "text": "Note:  This procedure assumes you have  Xcode  7.3 or 7.3.1.  It is possible to use the version of  SafariLauncher \nthat comes with the  appium-ios-driver ,\nbut if you do, each time you update Appium the procedure will have to be done again.  To get a local copy of  SafariLauncher , first clone it from  GitHub :  git clone https://github.com/snevesbarros/SafariLauncher.git  Once you have a local copy of the source code for the  SafariLauncher  app, open Xcode  and then open the  SafariLauncher  project   In the  SafariLauncher  target pane you will see an error, saying that there needs\nto be a provisioning profile for this app   In order to fix this, you first need to enter a \"Bundle Identifier\" for the app. The default\nexpected by Appium is  com.bytearc.SafariLauncher , but this might not be available\nfor you to build. In that case, choose something else, and make note of it. Then\nchoose a \"Team\", and allow the provisioning profile to be created   Finally, make sure your device is connected to the computer, and choose it as the\ntarget   And run the build and install actions to compile the app and push it onto your\ndevice   Now you have a working  SafariLauncher  on your device. The app itself is a plain\nscreen that will launch  Safari  at the click of a button   The last step is only necessary if you chose a bundle identifier for the app that\nis different from the default ( com.bytearc.SafariLauncher ). If you did, it is\nnecessary to send that to Appium when creating a session, using the  bundleId \ndesired capability:  {\n  udid: '...',\n  deviceName: '...',\n  platformName: 'iOS',\n  platformVersion: '9.3',\n  browserName: 'Safari',\n  bundleId: 'com.imurchie.SafariLauncher'\n}",
            "title": "Manual SafariLauncher configuration"
        },
        {
            "location": "/en/drivers/ios-uiautomation/",
            "text": "The UIAutomation Driver for iOS\n\n\n\n\nNote\n: This driver is \nDEPRECATED\n and should not be used unless\nabsolutely necessary. The information in this doc may not keep up to date\nwith reality, and the driver will be removed in a future version of Appium.\nTo begin iOS automation with Appium today, please use the \nXCUITest\nDriver\n instead.\n\n\n\n\nAppium's former method for iOS app automation was based on \nUIAutomation\n, an\nApple-provided framework that shipped with the iOS SDK until iOS 10, when it\nwas removed. \nUIAutomation\n was one of the tools included in Apple's\nInstruments profiling system, and provided a JavaScript API that ran\nsynchronously in the context of a single app. The Appium UIAutomation driver\nestablished an asynchronous, session-based WebDriver front end for this API.\n\n\nDevelopment of the UIAutomation driver is done at the\n\nappium-ios-driver\n repo.\n\n\nRequirements and Support\n\n\nIn addition to Appium's general requirements:\n\n\n\n\nXcode 7 or lower.\n\n\niOS simulators or devices with version 9.3 or lower.\n\n\nAll versions of Appium ship with this driver.\n\n\nFor correct functioning of the driver, see additional setup below.\n\n\n\n\nUsage\n\n\nThe way to start a session using the UIAutomation driver is to set the\n\nplatformName\n \ncapability\n in your \nnew session request\n to the\nvalue of \niOS\n. Of course, you must also include appropriate \nplatformVersion\n,\n\ndeviceName\n, and \napp\n capabilities, at a minimum.\n\n\nCapabilities\n\n\nThe UIAutomation driver supports a number of standard \nAppium\ncapabilities\n, but has an additional\nset of capabilities that work for this driver only (see the \niOS\nsection\n of the\naforementioned doc).\n\n\nTo automate Safari instead of your own application, leave the \napp\n capability\nempty and instead set the \nbrowserName\n capability to \nSafari\n.\n\n\nCommands\n\n\nTo see the various commands Appium supports, and specifically for information\non how the commands map to behaviors for the UIAutomation driver, see the \nAPI\nReference\n.\n\n\nSimulator Setup\n\n\n(Note that due to limitations of Xcode and the iOS simulator, only one\nsimulator may be open, and automated, at any given time. For multiple simulator\nsupport, you will need to upgrade to the \nXCUITest driver\n).\n\n\n\n\n\n\nTo allow the iOS simulator to be automated by Instruments, you need to\n   modify the authorization database for the system. Appium provides an easy\n   way to do this by installing and running an authorization script:\n\n\nnpm install -g authorize-ios\nsudo authorize-ios\n\n\n\n\n\n\nBy default, Instruments-based automation is limited by the inclusion of\n   a 1-second hard-coded delay between commands, implemented for obscure\n   reasons by Apple's engineers. There is a way around this limitation called\n   \ninstruments-without-delay\n\n   (IWD). IWD ships with Appium for Xcode versions < 7. For 7.x and up, IWD\n   must be installed manually by the user in advance of using Appium. The way\n   to do this is as follows:\n\n\n\n\nClone the \nappium-ios-driver\n\n  repository.\n\n\n\n\nInside the repo, run the \nxcode-iwd.sh\n script included in the \nbin\n dir,\n  passing it several arguments: (1) the path to the Xcode app you are\n  using. (2) The path to the appium-instruments directory. For example:\n\n\nsh ./bin/xcode-iwd.sh /Applications/Xcode.app /Users/me/appium-instruments/\n\n\n\n\n\n\n\n\n\n\nFor best results, launch each simulator you wish to use and ensure the following:\n\n\n\n\nThe soft keyboard is enabled (Command+K in the Simulator app)\n\n\nUIAutomation is enabled in the Developer settings menu\n\n\nThere is not more than one simulator with the same name in Xcode's\n  \"Devices\" organizer\n\n\n\n\n\n\n\n\nReal Device Setup\n\n\nRunning tests on real devices is considerably more complicated due to code\nsigning and additional workarounds to Apple limitations. The basic process for\na successful automation strategy using this driver are as follows:\n\n\n\n\n\n\nBuild your app with a Debug configuration, for the specific type of real\n   device you will run the test on, ensuring that the app is also signed for\n   running on your specific device. For example:\n\n\nxcodebuild -sdk <iphoneos> -target <target_name> -configuration Debug \\\n    CODE_SIGN_IDENTITY=\"iPhone Developer: Mister Smith\" \\\n    PROVISIONING_PROFILE=\"XXXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXX\"\n\n\n\n\n\n\nInstall the built app (usually now located in a build directory specified in\n   Xcode) to your test device yourself, ensuring it exists on the device and\n   there are no signing issues. There are a number of methods for installing\n   apps onto devices. One is to just use Xcode itself. Another is to use the\n   \nideviceinstaller\n tool provided as part of the \nlibimobiledevice\n suite.\n   A third is to use \nios-deploy\n.\n   Here's an example for \nideviceinstaller\n:\n\n\n```\n\n\nfirst install ideviceinstaller, using Homebrew (http://brew.sh)\n\n\nbrew install libimobiledevice\nideviceinstaller -u \n -i \n\n```\n\n\n\n\n\n\nUse the bundle ID of your application as the value of the \napp\n capability.\n\n\n\n\nUse the UDID of your device as the \nudid\n capability.\n\n\nAs above, ensure that UI Automation is enabled in the Developer settings.\n\n\n\n\nFollowing these steps should ensure your success! If you're using newer\nversions of Xcode (7.x, for example), you may wish to consult the \nXCUITest\nDriver Real Device Docs\n as they\nmay contain some pertinent information as well.\n\n\nReal Device Hybrid / Web Testing\n\n\nFor hybrid and web testing, Appium requires the use of the Remote Debugging\nProtocol to send JavaScript to execute inside a web view. For real iOS devices,\nthis protocol is encrypted and access must be facilitated using a 3rd-party\ntool, provided by Google, called\n\nios-webkit-debug-proxy\n\n(IWDP). For information on installing and using IWDP within Appium, check out\nthe \nIWDP doc\n.\n\n\nFor web testing, i.e., tests that run in the Safari browser, we have another\nhurdle to jump. On real devices, apps that are not signed by the developer\ncannot be instrumented with UIAutomation. Safari is one such app. Thus we have\na helper app called \nSafariLauncher\n, which \ncan\n be signed by the developer.\nIts sole purpose upon launching is to turn around and launch Safari, which can\nthen be automated via the Remote Debugger in conjunction with IWDP. Unfortunately\nyou cannot, in this case, move into the native context and do any automation of\nthe browser itself.\n\n\nFor instructions on setting up \nSafariLauncher\n, check out the \nSafariLauncher\ndoc\n.\n\n\nFiles generated by iOS test runs\n\n\nTesting on iOS generates files that can sometimes get large. These include\nlogs, temporary files, and derived data from Xcode runs. Generally the\nfollowing locations are where they are found, should they need to be deleted:\n\n\n$HOME/Library/Logs/CoreSimulator/*\n/Library/Caches/com.apple.dt.instruments/*\n\n\n\n\nRunning iOS tests using Jenkins\n\n\nFirst download the \njenkins-cli.jar\n and verify that the Mac successfully\nconnects to Jenkins master. Ensure you've run the \nauthorize-ios\n command\nmentioned above.\n\n\nwget https://jenkins.ci.cloudbees.com/jnlpJars/jenkins-cli.jar\n\njava -jar jenkins-cli.jar \\\n -s https://team-appium.ci.cloudbees.com \\\n -i ~/.ssh/id_rsa \\\n on-premise-executor \\\n -fsroot ~/jenkins \\\n -labels osx \\\n -name mac_appium\n\n\n\n\nNext define a LaunchAgent for Jenkins to launch automatically on login.\nA LaunchDaemon will not work because daemons don't have GUI access. Make sure\nthe plist doesn't contain the \nSessionCreate\n or \nUser\n key as that may prevent\ntests from running. You'll see a \nFailed to authorize rights\n error if\nmisconfigured.\n\n\n$ sudo nano /Library/LaunchAgents/com.jenkins.ci.plist\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>Label</key>\n    <string>com.jenkins.ci</string>\n    <key>ProgramArguments</key>\n    <array>\n        <string>java</string>\n        <string>-Djava.awt.headless=true</string>\n        <string>-jar</string>\n        <string>/Users/appium/jenkins/jenkins-cli.jar</string>\n        <string>-s</string>\n        <string>https://instructure.ci.cloudbees.com</string>\n        <string>on-premise-executor</string>\n        <string>-fsroot</string>\n        <string>/Users/appium/jenkins</string>\n        <string>-executors</string>\n        <string>1</string>\n        <string>-labels</string>\n        <string>mac</string>\n        <string>-name</string>\n        <string>mac_appium</string>\n        <string>-persistent</string>\n    </array>\n    <key>KeepAlive</key>\n    <true/>\n    <key>StandardOutPath</key>\n    <string>/Users/appium/jenkins/stdout.log</string>\n    <key>StandardErrorPath</key>\n    <string>/Users/appium/jenkins/error.log</string>\n</dict>\n</plist>\n\n\n\n\nFinally set the owner, permissions, and then start the agent.\n\n\nsudo chown root:wheel /Library/LaunchAgents/com.jenkins.ci.plist\nsudo chmod 644 /Library/LaunchAgents/com.jenkins.ci.plist\n\nlaunchctl load /Library/LaunchAgents/com.jenkins.ci.plist\nlaunchctl start com.jenkins.ci",
            "title": "Ios uiautomation"
        },
        {
            "location": "/en/drivers/ios-uiautomation/#the-uiautomation-driver-for-ios",
            "text": "Note : This driver is  DEPRECATED  and should not be used unless\nabsolutely necessary. The information in this doc may not keep up to date\nwith reality, and the driver will be removed in a future version of Appium.\nTo begin iOS automation with Appium today, please use the  XCUITest\nDriver  instead.   Appium's former method for iOS app automation was based on  UIAutomation , an\nApple-provided framework that shipped with the iOS SDK until iOS 10, when it\nwas removed.  UIAutomation  was one of the tools included in Apple's\nInstruments profiling system, and provided a JavaScript API that ran\nsynchronously in the context of a single app. The Appium UIAutomation driver\nestablished an asynchronous, session-based WebDriver front end for this API.  Development of the UIAutomation driver is done at the appium-ios-driver  repo.",
            "title": "The UIAutomation Driver for iOS"
        },
        {
            "location": "/en/drivers/ios-uiautomation/#requirements-and-support",
            "text": "In addition to Appium's general requirements:   Xcode 7 or lower.  iOS simulators or devices with version 9.3 or lower.  All versions of Appium ship with this driver.  For correct functioning of the driver, see additional setup below.",
            "title": "Requirements and Support"
        },
        {
            "location": "/en/drivers/ios-uiautomation/#usage",
            "text": "The way to start a session using the UIAutomation driver is to set the platformName   capability  in your  new session request  to the\nvalue of  iOS . Of course, you must also include appropriate  platformVersion , deviceName , and  app  capabilities, at a minimum.",
            "title": "Usage"
        },
        {
            "location": "/en/drivers/ios-uiautomation/#capabilities",
            "text": "The UIAutomation driver supports a number of standard  Appium\ncapabilities , but has an additional\nset of capabilities that work for this driver only (see the  iOS\nsection  of the\naforementioned doc).  To automate Safari instead of your own application, leave the  app  capability\nempty and instead set the  browserName  capability to  Safari .",
            "title": "Capabilities"
        },
        {
            "location": "/en/drivers/ios-uiautomation/#commands",
            "text": "To see the various commands Appium supports, and specifically for information\non how the commands map to behaviors for the UIAutomation driver, see the  API\nReference .",
            "title": "Commands"
        },
        {
            "location": "/en/drivers/ios-uiautomation/#simulator-setup",
            "text": "(Note that due to limitations of Xcode and the iOS simulator, only one\nsimulator may be open, and automated, at any given time. For multiple simulator\nsupport, you will need to upgrade to the  XCUITest driver ).    To allow the iOS simulator to be automated by Instruments, you need to\n   modify the authorization database for the system. Appium provides an easy\n   way to do this by installing and running an authorization script:  npm install -g authorize-ios\nsudo authorize-ios    By default, Instruments-based automation is limited by the inclusion of\n   a 1-second hard-coded delay between commands, implemented for obscure\n   reasons by Apple's engineers. There is a way around this limitation called\n    instruments-without-delay \n   (IWD). IWD ships with Appium for Xcode versions < 7. For 7.x and up, IWD\n   must be installed manually by the user in advance of using Appium. The way\n   to do this is as follows:   Clone the  appium-ios-driver \n  repository.   Inside the repo, run the  xcode-iwd.sh  script included in the  bin  dir,\n  passing it several arguments: (1) the path to the Xcode app you are\n  using. (2) The path to the appium-instruments directory. For example:  sh ./bin/xcode-iwd.sh /Applications/Xcode.app /Users/me/appium-instruments/      For best results, launch each simulator you wish to use and ensure the following:   The soft keyboard is enabled (Command+K in the Simulator app)  UIAutomation is enabled in the Developer settings menu  There is not more than one simulator with the same name in Xcode's\n  \"Devices\" organizer",
            "title": "Simulator Setup"
        },
        {
            "location": "/en/drivers/ios-uiautomation/#real-device-setup",
            "text": "Running tests on real devices is considerably more complicated due to code\nsigning and additional workarounds to Apple limitations. The basic process for\na successful automation strategy using this driver are as follows:    Build your app with a Debug configuration, for the specific type of real\n   device you will run the test on, ensuring that the app is also signed for\n   running on your specific device. For example:  xcodebuild -sdk <iphoneos> -target <target_name> -configuration Debug \\\n    CODE_SIGN_IDENTITY=\"iPhone Developer: Mister Smith\" \\\n    PROVISIONING_PROFILE=\"XXXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXX\"    Install the built app (usually now located in a build directory specified in\n   Xcode) to your test device yourself, ensuring it exists on the device and\n   there are no signing issues. There are a number of methods for installing\n   apps onto devices. One is to just use Xcode itself. Another is to use the\n    ideviceinstaller  tool provided as part of the  libimobiledevice  suite.\n   A third is to use  ios-deploy .\n   Here's an example for  ideviceinstaller :  ```",
            "title": "Real Device Setup"
        },
        {
            "location": "/en/drivers/ios-uiautomation/#first-install-ideviceinstaller-using-homebrew-httpbrewsh",
            "text": "brew install libimobiledevice\nideviceinstaller -u   -i  \n```    Use the bundle ID of your application as the value of the  app  capability.   Use the UDID of your device as the  udid  capability.  As above, ensure that UI Automation is enabled in the Developer settings.   Following these steps should ensure your success! If you're using newer\nversions of Xcode (7.x, for example), you may wish to consult the  XCUITest\nDriver Real Device Docs  as they\nmay contain some pertinent information as well.",
            "title": "first install ideviceinstaller, using Homebrew (http://brew.sh)"
        },
        {
            "location": "/en/drivers/ios-uiautomation/#real-device-hybrid-web-testing",
            "text": "For hybrid and web testing, Appium requires the use of the Remote Debugging\nProtocol to send JavaScript to execute inside a web view. For real iOS devices,\nthis protocol is encrypted and access must be facilitated using a 3rd-party\ntool, provided by Google, called ios-webkit-debug-proxy \n(IWDP). For information on installing and using IWDP within Appium, check out\nthe  IWDP doc .  For web testing, i.e., tests that run in the Safari browser, we have another\nhurdle to jump. On real devices, apps that are not signed by the developer\ncannot be instrumented with UIAutomation. Safari is one such app. Thus we have\na helper app called  SafariLauncher , which  can  be signed by the developer.\nIts sole purpose upon launching is to turn around and launch Safari, which can\nthen be automated via the Remote Debugger in conjunction with IWDP. Unfortunately\nyou cannot, in this case, move into the native context and do any automation of\nthe browser itself.  For instructions on setting up  SafariLauncher , check out the  SafariLauncher\ndoc .",
            "title": "Real Device Hybrid / Web Testing"
        },
        {
            "location": "/en/drivers/ios-uiautomation/#files-generated-by-ios-test-runs",
            "text": "Testing on iOS generates files that can sometimes get large. These include\nlogs, temporary files, and derived data from Xcode runs. Generally the\nfollowing locations are where they are found, should they need to be deleted:  $HOME/Library/Logs/CoreSimulator/*\n/Library/Caches/com.apple.dt.instruments/*",
            "title": "Files generated by iOS test runs"
        },
        {
            "location": "/en/drivers/ios-uiautomation/#running-ios-tests-using-jenkins",
            "text": "First download the  jenkins-cli.jar  and verify that the Mac successfully\nconnects to Jenkins master. Ensure you've run the  authorize-ios  command\nmentioned above.  wget https://jenkins.ci.cloudbees.com/jnlpJars/jenkins-cli.jar\n\njava -jar jenkins-cli.jar \\\n -s https://team-appium.ci.cloudbees.com \\\n -i ~/.ssh/id_rsa \\\n on-premise-executor \\\n -fsroot ~/jenkins \\\n -labels osx \\\n -name mac_appium  Next define a LaunchAgent for Jenkins to launch automatically on login.\nA LaunchDaemon will not work because daemons don't have GUI access. Make sure\nthe plist doesn't contain the  SessionCreate  or  User  key as that may prevent\ntests from running. You'll see a  Failed to authorize rights  error if\nmisconfigured.  $ sudo nano /Library/LaunchAgents/com.jenkins.ci.plist\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>Label</key>\n    <string>com.jenkins.ci</string>\n    <key>ProgramArguments</key>\n    <array>\n        <string>java</string>\n        <string>-Djava.awt.headless=true</string>\n        <string>-jar</string>\n        <string>/Users/appium/jenkins/jenkins-cli.jar</string>\n        <string>-s</string>\n        <string>https://instructure.ci.cloudbees.com</string>\n        <string>on-premise-executor</string>\n        <string>-fsroot</string>\n        <string>/Users/appium/jenkins</string>\n        <string>-executors</string>\n        <string>1</string>\n        <string>-labels</string>\n        <string>mac</string>\n        <string>-name</string>\n        <string>mac_appium</string>\n        <string>-persistent</string>\n    </array>\n    <key>KeepAlive</key>\n    <true/>\n    <key>StandardOutPath</key>\n    <string>/Users/appium/jenkins/stdout.log</string>\n    <key>StandardErrorPath</key>\n    <string>/Users/appium/jenkins/error.log</string>\n</dict>\n</plist>  Finally set the owner, permissions, and then start the agent.  sudo chown root:wheel /Library/LaunchAgents/com.jenkins.ci.plist\nsudo chmod 644 /Library/LaunchAgents/com.jenkins.ci.plist\n\nlaunchctl load /Library/LaunchAgents/com.jenkins.ci.plist\nlaunchctl start com.jenkins.ci",
            "title": "Running iOS tests using Jenkins"
        },
        {
            "location": "/en/drivers/ios-xcuitest-real-devices/",
            "text": "Appium XCUITest Driver Real Device Setup\n\n\nInstalling dependencies\n\n\nAppium iOS real device support depends on a central third-party software suite,\n\nlibimobiledevice\n, which is easily installable\nwith \nHomebrew\n:\n\n\nbrew install libimobiledevice\n\n\n\n\nIn addition to the dependency on \nlibimobiledevice\n, Appium support for real\ndevices running iOS 9.3 and above using Xcode 8+ also depends on \nios-deploy\n,\nwhich is easily available through \nnpm\n or \nHomebrew\n:\n\n\nnpm install -g ios-deploy\n\n\n\n\nbrew install ios-deploy\n\n\n\n\n(For hybrid or web tests, you will also need to follow the\n\nios-webkit-debug-proxy\n\nsetup instructions)\n\n\nThe way that the XCUITest driver works is via the installation of a helper\napplication called \nWebDriverAgent-Runner\n onto the device, through which the\napplication under test is automated. While this is simple in theory, the hoops\nof code signing and provisioning applications for development and testing can\nmake this a bit of a headache.\n\n\nBasic (automatic) configuration\n\n\nThe easiest way to get up-and-running with Appium's XCUITest support on iOS\nreal devices is to use the automatic configuration strategy. There are two ways\nto do this:\n\n\n\n\nUse the \nxcodeOrgId\n and \nxcodeSigningId\n desired capabilities:\n\n\n\n\n    {\n      \"xcodeOrgId\": \"<Team ID>\",\n      \"xcodeSigningId\": \"iPhone Developer\"\n    }\n\n\n\n\n\n\nCreate a \n.xcconfig\n file somewhere on your file system and add the following to it:\n\n\n\n\n    DEVELOPMENT_TEAM = <Team ID>\n    CODE_SIGN_IDENTITY = iPhone Developer\n\n\n\n\nIn either case, the Team ID is a unique 10-character string generated by Apple\nthat is assigned to your team. You can find your Team ID using your developer\naccount. Sign in to \ndeveloper.apple.com/account\n,\nand click Membership in the sidebar. Your Team ID appears in the Membership\nInformation section under the team name. You can also find your team ID listed\nunder the \"Organizational Unit\" field in your iPhone Developer certificate in\nyour keychain.\n\n\nNote that these are mutually exclusive strategies; use \neither\n the\n\nxcodeConfigFile\n capability or the combination of \nxcodeOrgId\n and \nxcodeSigningId\n.\n\n\nOnce this configuration is done, it should just be a matter of starting your test\nspecifying a real device in your \nudid\n desired capability.\n\n\nIf this has not worked it will usually manifest itself in the Appium server logs\nas some error followed by \ninfo XCUITest xcodebuild exited with code '65' and\nsignal 'null'\n. This usually means that the necessary code signing is not set up\ncorrectly. Go on to the \nBasic (manual) configuration\n\nto fix.\n\n\nIf the \nWebDriverAgentRunner\n is successfully installed on the device, but in the\nAppium logs there is an error message something like:\n\n\n2017-01-24 09:02:18.358 xcodebuild[30385:339674] Error Domain=com.apple.platform.iphoneos Code=-12 \"Unable to launch com.apple.test.WebDriverAgentRunner-Runner\" UserInfo={NSLocalizedDescription=Unable to launch com.apple.test.WebDriverAgentRunner-Runner, NSUnderlyingError=0x7fa839cadc60 {Error Domain=DTXMessage Code=1 \"(null)\" UserInfo={DTXExceptionKey=The operation couldn\u2019t be completed. Unable to launch com.apple.test.WebDriverAgentRunner-Runner because it has an invalid code signature, inadequate entitlements or its profile has not been explicitly trusted by the user. : Failed to launch process with bundle identifier 'com.apple.test.WebDriverAgentRunner-Runner'}}}\n2017-01-24 09:02:18.358 xcodebuild[30385:339674] Error Domain=IDETestOperationsObserverErrorDomain Code=5 \"Early unexpected exit, operation never finished bootstrapping - no restart will be attempted\" UserInfo={NSLocalizedDescription=Early unexpected exit, operation never finished bootstrapping - no restart will be attempted}\n\nTesting failed:\n    Test target WebDriverAgentRunner encountered an error (Early unexpected exit, operation never finished bootstrapping - no restart will be attempted)\n\n\n\n\nThe problem is that the developer is not trusted on the device. If you manually\ntry to run the \nWebDriverAgentRunner\n app on the device, you will see a popup\nmessage:\n\n\n\n\nYou can go to Settings => General => Device Management on the device to trust\nthe developer and allow the \nWebDriverAgentRunner\n app to be run (see \nApple\ndocumentation for more information\n).\n\n\nBasic (manual) configuration\n\n\nThere are many cases in which the basic automatic configuration is not enough. This\nusually has to do with code signing and the configuration of the project to be\nable to be run on the real device under test. Often this happens when the\ndevelopment account being used is a \"Free\" one, in which case it is not possible\nto create a wildcard provisioning profile, and will often not create one for the\ndefault application bundle.\n\n\nThis will manifest as something like an error that Xcode \nfailed to create\nprovisioning profile\n:\n\n\n\n\nThe easiest way around this is to create a provisioning profile by opening\n\nXcode\n and creating a new project:\n\n\n\n\nThe type does not matter, other than it being \"iOS\". \"Single View Application\"\nis the easiest:\n\n\n\n\nThe important part is to use a unique \"Product Name\" and \"Organization Name\". Also,\nat this point, specify your \"Team\".\n\n\n\n\nYou can confirm that the provisioning profile was created by looking at the \"Project\"\ntab:\n\n\n\n\nOr by going into your account preferences and seeing the provisioning profile:\n\n\n\n\nAt this point you have a valid provisioning profile. Make note of the bundle id\nyou associated with it, and add that in the \nupdatedWDABundleId\n desired\ncapability for your tests. Then follow the \ninitial instructions for automatic\nconfiguration\n.\n\n\nFull manual configuration\n\n\nAlternatively, the provisioning profile can be manually associated with the\nproject (keep in mind that this will have to be done each time the\nWebDriverAgent is updated, which includes every time a new version of Appium is\ninstalled, and is \nnot\n recommended):\n\n\n\n\nFind out where your Appium installation is:\n\n\n\n\n    $ which appium\n    /path/where/installed/bin/appium\n\n\n\n\n\n\nGiven this installation location, \n/path/where/installed/bin/appium\n, \nWebDriverAgent\n\n    will be found in \n/path/where/installed/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent\n.\n    Open a terminal and go to that location, then run the following in order to\n    set the project up:\n\n\n\n\n    mkdir -p Resources/WebDriverAgent.bundle\n    ./Scripts/bootstrap.sh -d\n\n\n\n\n\n\n\n\nOpen \nWebDriverAgent.xcodeproj\n in Xcode. For \nboth\n the \nWebDriverAgentLib\n\n    and \nWebDriverAgentRunner\n targets, select \"Automatically manage signing\"\n    in the \"General\" tab, and then select your \nDevelopment Team\n. This\n    should also auto select \nSigning Ceritificate\n. The outcome should look as\n    shown below:\n\n\n\n\n\n\nXcode may fail to create a provisioning profile for the \nWebDriverAgentRunner\n\n  target:\n\n\n\n\n\n\n\n\nThis necessitates manually changing the bundle id for the target by going\n  into the \"Build Settings\" tab, and changing the \"Product Bundle Identifier\"\n  from \ncom.facebook.WebDriverAgentRunner\n to something that Xcode will accept:\n\n\n\n\n\n\n\n\nGoing back to the \"General\" tab for the \nWebDriverAgentRunner\n target, you\n  should now see that it has created a provisioning profile and all is well:\n\n\n\n\n\n\n\n\n\n\nFinally, you can verify that everything works. Build the project:\n\n\n\n\n\n\n    xcodebuild -project WebDriverAgent.xcodeproj -scheme WebDriverAgentRunner -destination 'id=<udid>' test\n\n\n\n\nIf this was successful, the output should end with something like:\n\n\n    Test Suite 'All tests' started at 2017-01-23 15:49:12.585\n    Test Suite 'WebDriverAgentRunner.xctest' started at 2017-01-23 15:49:12.586\n    Test Suite 'UITestingUITests' started at 2017-01-23 15:49:12.587\n    Test Case '-[UITestingUITests testRunner]' started.\n        t =     0.00s     Start Test at 2017-01-23 15:49:12.588\n        t =     0.00s     Set Up\n\n\n\n\n\n\nTo completely verify, you can try accessing the WebDriverAgent server status\n    (\nnote:\n you \nmust\n be on the same network as the device, and know its IP\n    address, from Settings => Wi-Fi => Current Network):\n\n\n\n\n    export DEVICE_URL='http://<device IP>:8100'\n    export JSON_HEADER='-H \"Content-Type: application/json;charset=UTF-8, accept: application/json\"'\n    curl -X GET $JSON_HEADER $DEVICE_URL/status\n\n\n\n\nYou ought to get back output something like this:\n\n\n\n    {\n      \"value\" : {\n        \"state\" : \"success\",\n        \"os\" : {\n          \"name\" : \"iOS\",\n          \"version\" : \"10.2\"\n        },\n        \"ios\" : {\n          \"simulatorVersion\" : \"10.2\",\n          \"ip\" : \"192.168.0.7\"\n        },\n        \"build\" : {\n          \"time\" : \"Jan 23 2017 14:59:57\"\n        }\n      },\n      \"sessionId\" : \"8951A6DD-F3AD-410E-A5DB-D042F42F68A7\",\n      \"status\" : 0\n    }\n\n\n\n\nConfiguring the app under test\n\n\nNot only does WebDriverAgent need to be configured to run on your device, but\nyour app must also be able to run on your device. The central requirements are\nthe same: to have a build of your app (an \n.ipa\n file) signed with\na development provisioning profile. A good overview of the process can be found\n\nhere\n\nand\n\nhere\n.\n\n\nIn a little more detail, to get started on a real device, you will need the following:\n\n\n\n\nAn \nApple Developer ID\n and a valid\nDeveloper Account with a configured development certificate and provisioning\nprofile.\n\n\nA valid iOS Development Certificate and Provisioning Profile are necessary to\ntest on a real device. Your app will also need to be signed. You can find\ninformation about this in the \nApple documentation\n.\n\n\nAn iPad or iPhone. Make sure this has been set up for development in Xcode.\n\n\nA signed \n.app\n or \n.ipa\n file of your app, or the source code to build one.\n\n\nA Mac with \nXcode\n and the Xcode Command\nLine Developer Tools.\n\n\n\n\nAppium handles installing the application to the device, using\n\nideviceinstaller\n (which is installed as part of \nlibimobiledevice\n), but it\nis sometimes easier to pre-install your app using Xcode to ensure there are no\nproblems (see again the \nApple\ndocumentation\n\nfor this).\n\n\nTroubleshooting ideas\n\n\n\n\nMake sure UDID is correct by checking it in Xcode Organizer or iTunes. It\n   is a long string (20+ chars).\n\n\nMake sure that you can run your tests against the Simulator.\n\n\nMake sure UI Automation is enabled on your device. Settings -> Developer ->\n   Enable UI Automation",
            "title": "Ios xcuitest real devices"
        },
        {
            "location": "/en/drivers/ios-xcuitest-real-devices/#appium-xcuitest-driver-real-device-setup",
            "text": "",
            "title": "Appium XCUITest Driver Real Device Setup"
        },
        {
            "location": "/en/drivers/ios-xcuitest-real-devices/#installing-dependencies",
            "text": "Appium iOS real device support depends on a central third-party software suite, libimobiledevice , which is easily installable\nwith  Homebrew :  brew install libimobiledevice  In addition to the dependency on  libimobiledevice , Appium support for real\ndevices running iOS 9.3 and above using Xcode 8+ also depends on  ios-deploy ,\nwhich is easily available through  npm  or  Homebrew :  npm install -g ios-deploy  brew install ios-deploy  (For hybrid or web tests, you will also need to follow the ios-webkit-debug-proxy \nsetup instructions)  The way that the XCUITest driver works is via the installation of a helper\napplication called  WebDriverAgent-Runner  onto the device, through which the\napplication under test is automated. While this is simple in theory, the hoops\nof code signing and provisioning applications for development and testing can\nmake this a bit of a headache.",
            "title": "Installing dependencies"
        },
        {
            "location": "/en/drivers/ios-xcuitest-real-devices/#basic-automatic-configuration",
            "text": "The easiest way to get up-and-running with Appium's XCUITest support on iOS\nreal devices is to use the automatic configuration strategy. There are two ways\nto do this:   Use the  xcodeOrgId  and  xcodeSigningId  desired capabilities:       {\n      \"xcodeOrgId\": \"<Team ID>\",\n      \"xcodeSigningId\": \"iPhone Developer\"\n    }   Create a  .xcconfig  file somewhere on your file system and add the following to it:       DEVELOPMENT_TEAM = <Team ID>\n    CODE_SIGN_IDENTITY = iPhone Developer  In either case, the Team ID is a unique 10-character string generated by Apple\nthat is assigned to your team. You can find your Team ID using your developer\naccount. Sign in to  developer.apple.com/account ,\nand click Membership in the sidebar. Your Team ID appears in the Membership\nInformation section under the team name. You can also find your team ID listed\nunder the \"Organizational Unit\" field in your iPhone Developer certificate in\nyour keychain.  Note that these are mutually exclusive strategies; use  either  the xcodeConfigFile  capability or the combination of  xcodeOrgId  and  xcodeSigningId .  Once this configuration is done, it should just be a matter of starting your test\nspecifying a real device in your  udid  desired capability.  If this has not worked it will usually manifest itself in the Appium server logs\nas some error followed by  info XCUITest xcodebuild exited with code '65' and\nsignal 'null' . This usually means that the necessary code signing is not set up\ncorrectly. Go on to the  Basic (manual) configuration \nto fix.  If the  WebDriverAgentRunner  is successfully installed on the device, but in the\nAppium logs there is an error message something like:  2017-01-24 09:02:18.358 xcodebuild[30385:339674] Error Domain=com.apple.platform.iphoneos Code=-12 \"Unable to launch com.apple.test.WebDriverAgentRunner-Runner\" UserInfo={NSLocalizedDescription=Unable to launch com.apple.test.WebDriverAgentRunner-Runner, NSUnderlyingError=0x7fa839cadc60 {Error Domain=DTXMessage Code=1 \"(null)\" UserInfo={DTXExceptionKey=The operation couldn\u2019t be completed. Unable to launch com.apple.test.WebDriverAgentRunner-Runner because it has an invalid code signature, inadequate entitlements or its profile has not been explicitly trusted by the user. : Failed to launch process with bundle identifier 'com.apple.test.WebDriverAgentRunner-Runner'}}}\n2017-01-24 09:02:18.358 xcodebuild[30385:339674] Error Domain=IDETestOperationsObserverErrorDomain Code=5 \"Early unexpected exit, operation never finished bootstrapping - no restart will be attempted\" UserInfo={NSLocalizedDescription=Early unexpected exit, operation never finished bootstrapping - no restart will be attempted}\n\nTesting failed:\n    Test target WebDriverAgentRunner encountered an error (Early unexpected exit, operation never finished bootstrapping - no restart will be attempted)  The problem is that the developer is not trusted on the device. If you manually\ntry to run the  WebDriverAgentRunner  app on the device, you will see a popup\nmessage:   You can go to Settings => General => Device Management on the device to trust\nthe developer and allow the  WebDriverAgentRunner  app to be run (see  Apple\ndocumentation for more information ).",
            "title": "Basic (automatic) configuration"
        },
        {
            "location": "/en/drivers/ios-xcuitest-real-devices/#basic-manual-configuration",
            "text": "There are many cases in which the basic automatic configuration is not enough. This\nusually has to do with code signing and the configuration of the project to be\nable to be run on the real device under test. Often this happens when the\ndevelopment account being used is a \"Free\" one, in which case it is not possible\nto create a wildcard provisioning profile, and will often not create one for the\ndefault application bundle.  This will manifest as something like an error that Xcode  failed to create\nprovisioning profile :   The easiest way around this is to create a provisioning profile by opening Xcode  and creating a new project:   The type does not matter, other than it being \"iOS\". \"Single View Application\"\nis the easiest:   The important part is to use a unique \"Product Name\" and \"Organization Name\". Also,\nat this point, specify your \"Team\".   You can confirm that the provisioning profile was created by looking at the \"Project\"\ntab:   Or by going into your account preferences and seeing the provisioning profile:   At this point you have a valid provisioning profile. Make note of the bundle id\nyou associated with it, and add that in the  updatedWDABundleId  desired\ncapability for your tests. Then follow the  initial instructions for automatic\nconfiguration .",
            "title": "Basic (manual) configuration"
        },
        {
            "location": "/en/drivers/ios-xcuitest-real-devices/#full-manual-configuration",
            "text": "Alternatively, the provisioning profile can be manually associated with the\nproject (keep in mind that this will have to be done each time the\nWebDriverAgent is updated, which includes every time a new version of Appium is\ninstalled, and is  not  recommended):   Find out where your Appium installation is:       $ which appium\n    /path/where/installed/bin/appium   Given this installation location,  /path/where/installed/bin/appium ,  WebDriverAgent \n    will be found in  /path/where/installed/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent .\n    Open a terminal and go to that location, then run the following in order to\n    set the project up:       mkdir -p Resources/WebDriverAgent.bundle\n    ./Scripts/bootstrap.sh -d    Open  WebDriverAgent.xcodeproj  in Xcode. For  both  the  WebDriverAgentLib \n    and  WebDriverAgentRunner  targets, select \"Automatically manage signing\"\n    in the \"General\" tab, and then select your  Development Team . This\n    should also auto select  Signing Ceritificate . The outcome should look as\n    shown below:    Xcode may fail to create a provisioning profile for the  WebDriverAgentRunner \n  target:     This necessitates manually changing the bundle id for the target by going\n  into the \"Build Settings\" tab, and changing the \"Product Bundle Identifier\"\n  from  com.facebook.WebDriverAgentRunner  to something that Xcode will accept:     Going back to the \"General\" tab for the  WebDriverAgentRunner  target, you\n  should now see that it has created a provisioning profile and all is well:      Finally, you can verify that everything works. Build the project:        xcodebuild -project WebDriverAgent.xcodeproj -scheme WebDriverAgentRunner -destination 'id=<udid>' test  If this was successful, the output should end with something like:      Test Suite 'All tests' started at 2017-01-23 15:49:12.585\n    Test Suite 'WebDriverAgentRunner.xctest' started at 2017-01-23 15:49:12.586\n    Test Suite 'UITestingUITests' started at 2017-01-23 15:49:12.587\n    Test Case '-[UITestingUITests testRunner]' started.\n        t =     0.00s     Start Test at 2017-01-23 15:49:12.588\n        t =     0.00s     Set Up   To completely verify, you can try accessing the WebDriverAgent server status\n    ( note:  you  must  be on the same network as the device, and know its IP\n    address, from Settings => Wi-Fi => Current Network):       export DEVICE_URL='http://<device IP>:8100'\n    export JSON_HEADER='-H \"Content-Type: application/json;charset=UTF-8, accept: application/json\"'\n    curl -X GET $JSON_HEADER $DEVICE_URL/status  You ought to get back output something like this:      {\n      \"value\" : {\n        \"state\" : \"success\",\n        \"os\" : {\n          \"name\" : \"iOS\",\n          \"version\" : \"10.2\"\n        },\n        \"ios\" : {\n          \"simulatorVersion\" : \"10.2\",\n          \"ip\" : \"192.168.0.7\"\n        },\n        \"build\" : {\n          \"time\" : \"Jan 23 2017 14:59:57\"\n        }\n      },\n      \"sessionId\" : \"8951A6DD-F3AD-410E-A5DB-D042F42F68A7\",\n      \"status\" : 0\n    }",
            "title": "Full manual configuration"
        },
        {
            "location": "/en/drivers/ios-xcuitest-real-devices/#configuring-the-app-under-test",
            "text": "Not only does WebDriverAgent need to be configured to run on your device, but\nyour app must also be able to run on your device. The central requirements are\nthe same: to have a build of your app (an  .ipa  file) signed with\na development provisioning profile. A good overview of the process can be found here \nand here .  In a little more detail, to get started on a real device, you will need the following:   An  Apple Developer ID  and a valid\nDeveloper Account with a configured development certificate and provisioning\nprofile.  A valid iOS Development Certificate and Provisioning Profile are necessary to\ntest on a real device. Your app will also need to be signed. You can find\ninformation about this in the  Apple documentation .  An iPad or iPhone. Make sure this has been set up for development in Xcode.  A signed  .app  or  .ipa  file of your app, or the source code to build one.  A Mac with  Xcode  and the Xcode Command\nLine Developer Tools.   Appium handles installing the application to the device, using ideviceinstaller  (which is installed as part of  libimobiledevice ), but it\nis sometimes easier to pre-install your app using Xcode to ensure there are no\nproblems (see again the  Apple\ndocumentation \nfor this).",
            "title": "Configuring the app under test"
        },
        {
            "location": "/en/drivers/ios-xcuitest-real-devices/#troubleshooting-ideas",
            "text": "Make sure UDID is correct by checking it in Xcode Organizer or iTunes. It\n   is a long string (20+ chars).  Make sure that you can run your tests against the Simulator.  Make sure UI Automation is enabled on your device. Settings -> Developer ->\n   Enable UI Automation",
            "title": "Troubleshooting ideas"
        },
        {
            "location": "/en/drivers/ios-xcuitest/",
            "text": "The XCUITest Driver for iOS\n\n\nAppium's primary support for automating iOS apps is via the \nXCUITest\n driver.\n\n(New to Appium? Read our \nintroduction to Appium drivers\n)\n. This driver\nleverages Apple's\n\nXCUITest\n\nlibraries under the hood in order to facilitate automation of your app . This\naccess to XCUITest is mediated by the\n\nWebDriverAgent\n server.\nWebDriverAgent (also referred to as \"WDA\") is a project managed by Facebook, to\nwhich the Appium core team contributes heavily. WDA is a WebDriver-compatible\nserver that runs in the context of an iOS simulator or device and exposes the\nXCUITest API. Appium's XCUITest driver manages WDA as a subprocess opaque to\nthe Appium user, proxies commands to/from WDA, and provides a host of\nadditional functionality (like simulator management and other methods, for\nexample).\n\n\nDevelopment of the XCUITest driver happens at the\n\nappium-xcuitest-driver\n\nrepo.\n\n\nRequirements and Support\n\n\nIn addition to Appium's general requirements:\n\n\n\n\nApple's XCUITest library is only available on iOS simulators and devices that\n  are running iOS 9.3 or higher.\n\n\nA Mac computer with macOS 10.11 or 10.12 is required.\n\n\nXcode 7 or higher is required.\n\n\nThe XCUITest driver was available in Appium starting with Appium 1.6.\n\n\nFor correct functioning of the driver, additional system libraries are\n  required (see the Setup sections below).\n\n\n\n\nMigrating from the UIAutomation Driver\n\n\nIf you are migrating to the XCUITest driver from Appium's old\n\nUIAutomation-based driver\n, you may wish\nto consult this \nmigration\nguide\n.\n\n\nUsage\n\n\nThe way to start a session using the XCUITest driver is to include the\n\nautomationName\n \ncapability\n in your \nnew session request\n, with\nthe value \nXCUITest\n. Of course, you must also include appropriate\n\nplatformName\n, \nplatformVersion\n, \ndeviceName\n, and \napp\n capabilities, at\na minimum.\n\n\nCapabilities\n\n\nThe XCUITest driver supports a number of standard \nAppium\ncapabilities\n, but has an additional\nset of capabilities that modulate the behavior of the driver. These can be\nfound currently at the \nappium-xcuitest-driver\nREADME\n.\n\n\nTo automate Safari instead of your own application, leave the \napp\n capability\nempty and instead set the \nbrowserName\n capability to \nSafari\n.\n\n\nCommands\n\n\nTo see the various commands Appium supports, and specifically for information\non how the commands map to behaviors for the XCUITest driver, see the \nAPI\nReference\n.\n\n\nBasic Setup\n\n\n(We recommend the use of \nHomebrew\n for installing system\ndependencies)\n\n\n\n\nEnsure that you have Appium's general dependencies (e.g., Node\n   & NPM) installed and configured.\n\n\n\n\nInstall the \nCarthage\n dependency\n   manager:\n\n\nbash\nbrew install carthage\n\n\n\n\n\n\nIf you don't need to automate real devices, you're done! To automate an app on\nthe simulator, the \napp\n capability should be set to an absolute path or url\npointing to your \n.app\n or \n.app.zip\n file, built for the sim.\n\n\nReal Device Setup\n\n\nAutomating a real device with XCUITest is considerably more complicated, due to\nApple's restrictions around running apps on real devices. Please refer to the\n\nXCUITest real device setup doc\n for\ninstructions.\n\n\nOnce set up, running a session on a real device is achieved by using the\nfollowing desired capabilities:\n\n\n\n\napp\n or \nbundleId\n - specifies the application (local path or url referencing\n   your signed \n.ipa\n file) , or, if it is already installed, simply the bundle\n   identifier of the app so that Appium can launch it.\n\n\nudid\n - the specific id of the device to test on. This can also be set to\n   \nauto\n if there is only a single device, in which case Appium will determine\n   the device id and use it.\n\n\n\n\nFiles generated by test runs\n\n\nTesting on iOS generates files that can sometimes get large. These include\nlogs, temporary files, and derived data from Xcode runs. Generally the\nfollowing locations are where they are found, should they need to be deleted:\n\n\n$HOME/Library/Logs/CoreSimulator/*\n$HOME/Library/Developer/Xcode/DerivedData/*",
            "title": "Ios xcuitest"
        },
        {
            "location": "/en/drivers/ios-xcuitest/#the-xcuitest-driver-for-ios",
            "text": "Appium's primary support for automating iOS apps is via the  XCUITest  driver. (New to Appium? Read our  introduction to Appium drivers ) . This driver\nleverages Apple's XCUITest \nlibraries under the hood in order to facilitate automation of your app . This\naccess to XCUITest is mediated by the WebDriverAgent  server.\nWebDriverAgent (also referred to as \"WDA\") is a project managed by Facebook, to\nwhich the Appium core team contributes heavily. WDA is a WebDriver-compatible\nserver that runs in the context of an iOS simulator or device and exposes the\nXCUITest API. Appium's XCUITest driver manages WDA as a subprocess opaque to\nthe Appium user, proxies commands to/from WDA, and provides a host of\nadditional functionality (like simulator management and other methods, for\nexample).  Development of the XCUITest driver happens at the appium-xcuitest-driver \nrepo.",
            "title": "The XCUITest Driver for iOS"
        },
        {
            "location": "/en/drivers/ios-xcuitest/#requirements-and-support",
            "text": "In addition to Appium's general requirements:   Apple's XCUITest library is only available on iOS simulators and devices that\n  are running iOS 9.3 or higher.  A Mac computer with macOS 10.11 or 10.12 is required.  Xcode 7 or higher is required.  The XCUITest driver was available in Appium starting with Appium 1.6.  For correct functioning of the driver, additional system libraries are\n  required (see the Setup sections below).",
            "title": "Requirements and Support"
        },
        {
            "location": "/en/drivers/ios-xcuitest/#migrating-from-the-uiautomation-driver",
            "text": "If you are migrating to the XCUITest driver from Appium's old UIAutomation-based driver , you may wish\nto consult this  migration\nguide .",
            "title": "Migrating from the UIAutomation Driver"
        },
        {
            "location": "/en/drivers/ios-xcuitest/#usage",
            "text": "The way to start a session using the XCUITest driver is to include the automationName   capability  in your  new session request , with\nthe value  XCUITest . Of course, you must also include appropriate platformName ,  platformVersion ,  deviceName , and  app  capabilities, at\na minimum.",
            "title": "Usage"
        },
        {
            "location": "/en/drivers/ios-xcuitest/#capabilities",
            "text": "The XCUITest driver supports a number of standard  Appium\ncapabilities , but has an additional\nset of capabilities that modulate the behavior of the driver. These can be\nfound currently at the  appium-xcuitest-driver\nREADME .  To automate Safari instead of your own application, leave the  app  capability\nempty and instead set the  browserName  capability to  Safari .",
            "title": "Capabilities"
        },
        {
            "location": "/en/drivers/ios-xcuitest/#commands",
            "text": "To see the various commands Appium supports, and specifically for information\non how the commands map to behaviors for the XCUITest driver, see the  API\nReference .",
            "title": "Commands"
        },
        {
            "location": "/en/drivers/ios-xcuitest/#basic-setup",
            "text": "(We recommend the use of  Homebrew  for installing system\ndependencies)   Ensure that you have Appium's general dependencies (e.g., Node\n   & NPM) installed and configured.   Install the  Carthage  dependency\n   manager:  bash\nbrew install carthage    If you don't need to automate real devices, you're done! To automate an app on\nthe simulator, the  app  capability should be set to an absolute path or url\npointing to your  .app  or  .app.zip  file, built for the sim.",
            "title": "Basic Setup"
        },
        {
            "location": "/en/drivers/ios-xcuitest/#real-device-setup",
            "text": "Automating a real device with XCUITest is considerably more complicated, due to\nApple's restrictions around running apps on real devices. Please refer to the XCUITest real device setup doc  for\ninstructions.  Once set up, running a session on a real device is achieved by using the\nfollowing desired capabilities:   app  or  bundleId  - specifies the application (local path or url referencing\n   your signed  .ipa  file) , or, if it is already installed, simply the bundle\n   identifier of the app so that Appium can launch it.  udid  - the specific id of the device to test on. This can also be set to\n    auto  if there is only a single device, in which case Appium will determine\n   the device id and use it.",
            "title": "Real Device Setup"
        },
        {
            "location": "/en/drivers/ios-xcuitest/#files-generated-by-test-runs",
            "text": "Testing on iOS generates files that can sometimes get large. These include\nlogs, temporary files, and derived data from Xcode runs. Generally the\nfollowing locations are where they are found, should they need to be deleted:  $HOME/Library/Logs/CoreSimulator/*\n$HOME/Library/Developer/Xcode/DerivedData/*",
            "title": "Files generated by test runs"
        },
        {
            "location": "/en/drivers/mac/",
            "text": "The Mac Driver for OS X\n\n\nAppium has beta support for automation of OS X desktop applications.\nDevelopment of this driver happens at the\n\nappium-mac-driver\n, and relies on\na native OS X binary called\n\nAppiumForMac\n.\n\n\nRequirements and Support\n\n\n(In addition to Appium's general requirements)\n\n\n\n\nMac OS X 10.7\n\n\nThe AppiumForMac helper application downloaded and installed (see below)\n\n\n\n\nUsage\n\n\nThe way to start a session using the Mac driver is to include the\n\nplatformName\n \ncapability\n in your \nnew session request\n, with\nthe value \nMac\n. Also, ensure that you set the \ndeviceName\n capability to \nMac\n\nas well.  Of course, you must also include appropriate \nplatformVersion\n and\n\napp\n capabilities, at a minimum.\n\n\nGetting AppiumForMac\n\n\nCurrently, this driver does not ship with the AppiumForMac binary, which means,\nin order to automate Mac apps you must manually install the AppiumForMac\napplication and grant it the appropriate OS X Accessibility permissions.\n\n\nTo Install Appium for Mac:\n1. \nDownload\n   a release\n and\n   unzip the application into your \n/Applications\n folder\n2. Follow the \nbrief supplemental installation\n   instructions\n to\n   enable Appium to have access to OS X's Accessibility APIs\n\n\n(For more information on using AppiumForMac, check out the\n\ndocs\n)",
            "title": "Mac"
        },
        {
            "location": "/en/drivers/mac/#the-mac-driver-for-os-x",
            "text": "Appium has beta support for automation of OS X desktop applications.\nDevelopment of this driver happens at the appium-mac-driver , and relies on\na native OS X binary called AppiumForMac .",
            "title": "The Mac Driver for OS X"
        },
        {
            "location": "/en/drivers/mac/#requirements-and-support",
            "text": "(In addition to Appium's general requirements)   Mac OS X 10.7  The AppiumForMac helper application downloaded and installed (see below)",
            "title": "Requirements and Support"
        },
        {
            "location": "/en/drivers/mac/#usage",
            "text": "The way to start a session using the Mac driver is to include the platformName   capability  in your  new session request , with\nthe value  Mac . Also, ensure that you set the  deviceName  capability to  Mac \nas well.  Of course, you must also include appropriate  platformVersion  and app  capabilities, at a minimum.",
            "title": "Usage"
        },
        {
            "location": "/en/drivers/mac/#getting-appiumformac",
            "text": "Currently, this driver does not ship with the AppiumForMac binary, which means,\nin order to automate Mac apps you must manually install the AppiumForMac\napplication and grant it the appropriate OS X Accessibility permissions.  To Install Appium for Mac:\n1.  Download\n   a release  and\n   unzip the application into your  /Applications  folder\n2. Follow the  brief supplemental installation\n   instructions  to\n   enable Appium to have access to OS X's Accessibility APIs  (For more information on using AppiumForMac, check out the docs )",
            "title": "Getting AppiumForMac"
        },
        {
            "location": "/en/drivers/windows/",
            "text": "The Windows Driver\n\n\nAppium has the ability to automate Windows PC Desktop apps. This driver relies\non a project from Microsoft called\n\nWinAppDriver\n, which is an\nAppium-compatible WebDriver server for Windows Desktop apps (and more in the\nfuture). WinAppDriver is often abbreviated \"WAD\". WAD is bundled with Appium\nand does not need to be installed separately.\n\n\nThe Windows Driver supports testing of \nUniversal Windows Platform (UWP)\n and\n\nClassic Windows (Win32)\n applications.\n\n\nIn addition to the WAD repo, development of the Appium driver takes place at\nthe \nappium-windows-driver\n\nrepo.\n\n\nRequirements and Support\n\n\nIn addition to Appium's general requirements:\n\n\n\n\nWindows PC with Windows 10 or up\n\n\nAbility to enter Administrator mode\n\n\n\n\nUsage\n\n\nThe way to start a session using the Windows driver is to include the\n\nplatformName\n \ncapability\n in your \nnew session request\n, with\nthe value \nWindows\n. Also, ensure that you set the \ndeviceName\n capability to\n\nWindowsPC\n as well.  Of course, you must also include an appropriate \napp\n\ncapability, at a minimum (see below).\n\n\nCapabilities\n\n\nThe Windows driver supports a number of standard \nAppium\ncapabilities\n. See below for how these\nshould be used specifically with the Windows driver.\n\n\nSetup\n\n\nTo test a Windows app, simply make sure you have turned \ndeveloper\nmode\n\non.\n\n\nWhen running Appium (whether Appium Desktop or from the command line), ensure\nthat you have started the app / cmd prompt as an administrator.\n\n\nWriting Tests for the Windows Driver\n\n\nYou could begin by taking a look at some existing samples:\n\n\nJava Samples\n\n1. Open the sample folder as an existing project in a Java IDE such as\n   IntelliJ. For example:\n   \nCalculatorTest\n\n2. In the Java IDE build and run the test\n\n\nC# Samples\n\n1. Pull and open \nCalculatorTest.sln\n under\n   \nCalculatorTest\n\n2. In Visual Studio 2015 with the test solution open build the test and select\n   \nTest > Run > All Tests\n\n\nIf you want to write tests from scratch, you can choose any programming\nlanguage or tools supported by Appium/Selenium to write your test scripts. In\nthe example below, we will author the test script in C# using Microsoft Visual\nStudio 2015.\n\n\nCreate Test Project\n\n\n\n\nOpen \nMicrosoft Visual Studio 2015\n\n\nCreate the test project and solution. I.e. select **New Project > Templates\n\n\nVisual C# > Test > Unit Test Project**\n\n\n\n\n\n\nOnce created, select \nProject > Manage NuGet Packages... > Browse\n and\n   search for \nAppium.WebDriver\n\n\nInstall the \nAppium.WebDriver\n NuGet packages for the test project\n\n\nStart writing your test (see sample code under [samples])\n\n\n\n\nUniversal Windows Platform App Testing\n\n\nTo test a UWP app, you can use any Selenium supported language and simply\nspecify the \nApplication Id\n for the app under test in the \napp\n\ncapabilities entry. Below is an example of creating a test session for Windows\n\nAlarms & Clock\n app written in C#:\n\n\n// Launch the AlarmClock app\nDesiredCapabilities appCapabilities = new DesiredCapabilities();\nappCapabilities.SetCapability(\"app\", \"Microsoft.WindowsAlarms_8wekyb3d8bbwe!App\");\nAlarmClockSession = new WindowsDriver<WindowsElement>(new Uri(\"http://127.0.0.1:4723\"), appCapabilities);\n// Control the AlarmClock app\nAlarmClockSession.FindElementByAccessibilityId(\"AddAlarmButton\").Click();\nAlarmClockSession.FindElementByAccessibilityId(\"AlarmNameTextBox\").Clear();\n\n\n\n\nWhen testing the application you authored yourself, you can find the \nApplication Id\n in the generetated \nAppX\\vs.appxrecipe\n file under \nRegisteredUserNmodeAppID\n node. E.g. \nc24c8163-548e-4b84-a466-530178fc0580_scyf5npe3hv32!App\n\n\nClassic Windows App Testing\n\n\nTo test a classic Windows app, you can also use any Selenium supported language\nand specify the \nfull executable path\n for the app under test in the \napp\n\ncapabilities entry. Below is an example of creating a test session for Windows\n\nNotepad\n app:\n\n\n// Launch Notepad\nDesiredCapabilities appCapabilities = new DesiredCapabilities();\nappCapabilities.SetCapability(\"app\", @\"C:\\Windows\\System32\\notepad.exe\");\nNotepadSession = new WindowsDriver<WindowsElement>(new Uri(\"http://127.0.0.1:4723\"), appCapabilities);\n// Control the AlarmClock app\nNotepadSession.FindElementByClassName(\"Edit\").SendKeys(\"This is some text\");\n\n\n\n\nStarting a Session\n\n\nAs mentioned above, you should additionally use these capabilities to ensure\nyou are getting a Windows App automation session:\n\n\nplatformName\n: \nWindows\n\n\ndeviceName\n: \nWindowsPC\n\n\napp\n: the appID of the Windows app for testing, or the path to the .exe file\n\n\nInspecting UI Elements\n\n\nMicrosoft Visual Studio 2015 by default includes Windows SDK that provides\ngreat tool to inspect the application you are testing. This tool allows you to\nsee every UI element/node that you can query using Windows Application Driver.\nThis \ninspect.exe\n tool can be found under the Windows SDK folder such as\n\nC:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86\n. The tool will show various\nelement attributes. The table below shows you witch Appium locator strategy you\nshould use to find elements with the corresponding attributes.\n\n\n\n\n\n\n\n\nLocator Strategy\n\n\nMatched Attribute\n\n\n\n\n\n\n\n\n\n\naccessibility id\n\n\nAutomationId\n\n\n\n\n\n\nclass name\n\n\nClassName\n\n\n\n\n\n\nname\n\n\nName",
            "title": "Windows"
        },
        {
            "location": "/en/drivers/windows/#the-windows-driver",
            "text": "Appium has the ability to automate Windows PC Desktop apps. This driver relies\non a project from Microsoft called WinAppDriver , which is an\nAppium-compatible WebDriver server for Windows Desktop apps (and more in the\nfuture). WinAppDriver is often abbreviated \"WAD\". WAD is bundled with Appium\nand does not need to be installed separately.  The Windows Driver supports testing of  Universal Windows Platform (UWP)  and Classic Windows (Win32)  applications.  In addition to the WAD repo, development of the Appium driver takes place at\nthe  appium-windows-driver \nrepo.",
            "title": "The Windows Driver"
        },
        {
            "location": "/en/drivers/windows/#requirements-and-support",
            "text": "In addition to Appium's general requirements:   Windows PC with Windows 10 or up  Ability to enter Administrator mode",
            "title": "Requirements and Support"
        },
        {
            "location": "/en/drivers/windows/#usage",
            "text": "The way to start a session using the Windows driver is to include the platformName   capability  in your  new session request , with\nthe value  Windows . Also, ensure that you set the  deviceName  capability to WindowsPC  as well.  Of course, you must also include an appropriate  app \ncapability, at a minimum (see below).",
            "title": "Usage"
        },
        {
            "location": "/en/drivers/windows/#capabilities",
            "text": "The Windows driver supports a number of standard  Appium\ncapabilities . See below for how these\nshould be used specifically with the Windows driver.",
            "title": "Capabilities"
        },
        {
            "location": "/en/drivers/windows/#setup",
            "text": "To test a Windows app, simply make sure you have turned  developer\nmode \non.  When running Appium (whether Appium Desktop or from the command line), ensure\nthat you have started the app / cmd prompt as an administrator.",
            "title": "Setup"
        },
        {
            "location": "/en/drivers/windows/#writing-tests-for-the-windows-driver",
            "text": "You could begin by taking a look at some existing samples:  Java Samples \n1. Open the sample folder as an existing project in a Java IDE such as\n   IntelliJ. For example:\n    CalculatorTest \n2. In the Java IDE build and run the test  C# Samples \n1. Pull and open  CalculatorTest.sln  under\n    CalculatorTest \n2. In Visual Studio 2015 with the test solution open build the test and select\n    Test > Run > All Tests  If you want to write tests from scratch, you can choose any programming\nlanguage or tools supported by Appium/Selenium to write your test scripts. In\nthe example below, we will author the test script in C# using Microsoft Visual\nStudio 2015.",
            "title": "Writing Tests for the Windows Driver"
        },
        {
            "location": "/en/drivers/windows/#create-test-project",
            "text": "Open  Microsoft Visual Studio 2015  Create the test project and solution. I.e. select **New Project > Templates  Visual C# > Test > Unit Test Project**    Once created, select  Project > Manage NuGet Packages... > Browse  and\n   search for  Appium.WebDriver  Install the  Appium.WebDriver  NuGet packages for the test project  Start writing your test (see sample code under [samples])",
            "title": "Create Test Project"
        },
        {
            "location": "/en/drivers/windows/#universal-windows-platform-app-testing",
            "text": "To test a UWP app, you can use any Selenium supported language and simply\nspecify the  Application Id  for the app under test in the  app \ncapabilities entry. Below is an example of creating a test session for Windows Alarms & Clock  app written in C#:  // Launch the AlarmClock app\nDesiredCapabilities appCapabilities = new DesiredCapabilities();\nappCapabilities.SetCapability(\"app\", \"Microsoft.WindowsAlarms_8wekyb3d8bbwe!App\");\nAlarmClockSession = new WindowsDriver<WindowsElement>(new Uri(\"http://127.0.0.1:4723\"), appCapabilities);\n// Control the AlarmClock app\nAlarmClockSession.FindElementByAccessibilityId(\"AddAlarmButton\").Click();\nAlarmClockSession.FindElementByAccessibilityId(\"AlarmNameTextBox\").Clear();  When testing the application you authored yourself, you can find the  Application Id  in the generetated  AppX\\vs.appxrecipe  file under  RegisteredUserNmodeAppID  node. E.g.  c24c8163-548e-4b84-a466-530178fc0580_scyf5npe3hv32!App",
            "title": "Universal Windows Platform App Testing"
        },
        {
            "location": "/en/drivers/windows/#classic-windows-app-testing",
            "text": "To test a classic Windows app, you can also use any Selenium supported language\nand specify the  full executable path  for the app under test in the  app \ncapabilities entry. Below is an example of creating a test session for Windows Notepad  app:  // Launch Notepad\nDesiredCapabilities appCapabilities = new DesiredCapabilities();\nappCapabilities.SetCapability(\"app\", @\"C:\\Windows\\System32\\notepad.exe\");\nNotepadSession = new WindowsDriver<WindowsElement>(new Uri(\"http://127.0.0.1:4723\"), appCapabilities);\n// Control the AlarmClock app\nNotepadSession.FindElementByClassName(\"Edit\").SendKeys(\"This is some text\");",
            "title": "Classic Windows App Testing"
        },
        {
            "location": "/en/drivers/windows/#starting-a-session",
            "text": "As mentioned above, you should additionally use these capabilities to ensure\nyou are getting a Windows App automation session:  platformName :  Windows  deviceName :  WindowsPC  app : the appID of the Windows app for testing, or the path to the .exe file",
            "title": "Starting a Session"
        },
        {
            "location": "/en/drivers/windows/#inspecting-ui-elements",
            "text": "Microsoft Visual Studio 2015 by default includes Windows SDK that provides\ngreat tool to inspect the application you are testing. This tool allows you to\nsee every UI element/node that you can query using Windows Application Driver.\nThis  inspect.exe  tool can be found under the Windows SDK folder such as C:\\Program Files (x86)\\Windows Kits\\10\\bin\\x86 . The tool will show various\nelement attributes. The table below shows you witch Appium locator strategy you\nshould use to find elements with the corresponding attributes.     Locator Strategy  Matched Attribute      accessibility id  AutomationId    class name  ClassName    name  Name",
            "title": "Inspecting UI Elements"
        },
        {
            "location": "/en/writing-running-appium/android_coverage/",
            "text": "Android Coverage Guide\n\n\nRequirement\n\n\n\n\nOnly Emulators or rooted phones are acceptable\n\n\nNeed to add UiAutomator2 support in your apps. That is to say, you need to implement a subclass of \nInstrumentation\n. \nInstrumentation\n will be responsible to collect your coverage. \n\n\nNeed to implement a BroadcastReceiver to export coverage to disk files. This is because \nInstrumentation\n only collects data into memory.\n\n\n\n\nProject Structure\n\n\nYou may need the following structure of files:\n\n\nsrc/main/java/com/example/pkg\n   |____ MainActivity.java    Your main activity\n   |____ InstrumentActivityListener.java     A customized interface for exporting coverage to files\n   |____ InstrumentActivity.java    Activity launched for coverage. But in most cases, this should be same as MainActivity. The only difference is that it will include a `InstrumentActivityListener` to export coverage data to disk files.\n   |____ JacocoInstrumentation.java    The instrument class created by you. Also it needs to implement `InstrumentActivitylistener`.\n   |____ EndEmmaBroadCast.java    A broadcast receiver which will be invoked by appium-uiautomator2-driver at the end of testing. You need implementing logic to invoke InstrumentActivityListener so as to export coverage to files.\n\n\n\n\nConfigure followings in your caps:\n\n * automationName \uff1a \nuiautomator2\n (case irrelevant)\n\n * androidCoverage \uff1a {package}/{instrumentation class}, in our example, \ncom.example.pkg/com.example.pkg.JacocoInstrumentation\n\n * appWaitActivity \uff1a the FQCN of the activity of InstrumentActivity, in our example, \ncom.example.pkg.InstrumentActivity\n\n * appWaitPackage \uff1a {package}\uff0cin our example, \ncom.example.pkg\n\n\nandroidCoverageEndIntent\n \uff1a The action of the broadcast receiver to invoke the exporting of coverage data to files, in our example \ncom.example.pkg.END_EMMA\n  \n\n\nMethodology\n\n Appium (appium-uiautomator2-driver) will launch app via command like\uff1a\nadb shell am instrument -e coverage true -w com.example.pkg/com.example.pkg.JacocoInstrumentation\n\n After testing is done, Appium (appium-uiautomator2-driver) will execute \nadb shell am broadcast -a com.example.pkg.END_EMMA\n to export coverage to files\uff08If you implement such export in the broadcast receiver\uff09\n\n\nExample\n\n\n[1] Appium Testing Project - Configure Caps\n\n\nPlease refer to \n \"Project Structure\" ->  \"Configure followings in your caps\" \n\n\n[2] Android Project\n\n\nDefine instrumentation class and broadcast receiver in \nAndroidManifest.xml\n:\n\n\n    <instrumentation\n        android:name=\"com.example.pkg.instrumentation.JacocoInstrumentation\"\n        android:targetPackage=\"com.example.pkg\" >\n    </instrumentation>\n\n    <!-- adb shell am broadcast -a com.example.pkg.END_EMMA -->\n    <receiver android:name=\"com.example.pkg.EndEmmaBroadcast\" >\n       <intent-filter>\n           <action android:name=\"com.example.pkg.END_EMMA\" />\n       </intent-filter>\n    </receiver>\n\n\n\n\nThen, \nEndEmmaBroadcast.java\n \uff1a\n\n\npackage com.example.pkg;\n\nimport android.content.BroadcastReceiver;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Process;\n\n// adb shell am broadcast -a com.example.pkg.END_EMMA\npublic class EndEmmaBroadcast extends BroadcastReceiver {\n    InstrumentActivityListener activityListener;\n\n    public void setInstrumentActivityListener(InstrumentActivityListener listener){\n        this.activityListener = listener;\n    }\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        if(this.activityListener!=null){\n          activityListener.onActivityEnd();\n        }\n        // once coverage is dumped, the processes is ended.\n        Process.killProcess(Process.myPid());\n    }\n}\n\n\n\n\nAfter that, \nJacocoInstrumentation.java\n\uff1a\n\n\npackage com.example.pkg;\n\nimport android.app.Activity;\nimport android.app.Instrumentation;\nimport android.content.Intent;\nimport android.content.IntentFilter;\nimport android.os.Bundle;\nimport android.os.Looper;\nimport android.util.Log;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\npublic class JacocoInstrumentation  extends Instrumentation implements InstrumentActivityListener {\n    public static String TAG = \"JacocoInstrumentation:\";\n    private static String DEFAULT_COVERAGE_FILE_PATH = null;\n    private final Bundle mResults = new Bundle();\n    private Intent mIntent;\n    private static final boolean LOGD = true;\n    private boolean mCoverage = true;\n    private String mCoverageFilePath;\n\n    public JacocoInstrumentation() {\n    }\n    @Override\n    public void onCreate(Bundle arguments) {\n        Log.d(TAG, \"onCreate(\" + arguments + \")\");\n        super.onCreate(arguments);\n        // bad notation, better use NAME+TimeSeed because you might generate more than 1 corage file\n        DEFAULT_COVERAGE_FILE_PATH = getContext().getFilesDir().getPath().toString() + \"/coverage.ec\";\n        File file = new File(DEFAULT_COVERAGE_FILE_PATH);\n        if(!file.exists()){\n            try{\n                file.createNewFile();\n            }catch (IOException e){\n                Log.d(TAG,\"File Exception \uff1a\"+e);\n                e.printStackTrace();}\n        }\n        if(arguments != null) {\n            mCoverageFilePath = arguments.getString(\"coverageFile\");\n        }\n        mIntent = new Intent(getTargetContext(), InstrumentActivity.class);\n        mIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        start();\n    }\n    @Override\n    public void onStart() {\n        super.onStart();\n        Looper.prepare();\n        // Register broadcast receiver and start InstrumentActivity\n        InstrumentActivity activity = (InstrumentActivity) startActivitySync(mIntent);\n        EndEmmaBroadcast broadcast = new EndEmmaBroadcast();\n        activity.setInstrumentActivityListener(this);\n        broadcast.setInstrumentActivityListener(this);\n        activity.registerReceiver(broadcast, new IntentFilter(\"com.example.pkg.END_EMMA\"));\n    }\n    private String getCoverageFilePath() {\n        if (mCoverageFilePath == null) {\n            return DEFAULT_COVERAGE_FILE_PATH;\n        } else {\n            return mCoverageFilePath;\n        }\n    }\n    private void generateCoverageReport() {\n        Log.d(TAG, \"generateCoverageReport():\" + getCoverageFilePath());\n        OutputStream out = null;\n        try {\n            out = new FileOutputStream(getCoverageFilePath(), false);\n            Object agent = Class.forName(\"org.jacoco.agent.rt.RT\")\n                    .getMethod(\"getAgent\")\n                    .invoke(null);\n            out.write((byte[]) agent.getClass().getMethod(\"getExecutionData\", boolean.class)\n                    .invoke(agent, false));\n        } catch (Exception e) {\n            Log.d(TAG, e.toString(), e);\n        } finally {\n            if (out != null) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n\n    @Override\n    public void onActivityEnd() {\n        if (LOGD)      Log.d(TAG, \"onActivityFinished()\");\n        if (mCoverage) {\n            generateCoverageReport();\n        }\n        finish(Activity.RESULT_OK, mResults);\n    }\n}\n\n\n\n\n\nThen, \nInstrumentActivityListener.java\n\n\npackage com.example.pkg;\n\npublic interface InstrumentActivityListener {\n    void onActivityEnd();\n}\n\n\n\n\nInstrumentActivity.java\n (This is optional, you can use MainActivity)\n\n\npackage com.example.pkg;\nimport android.app.Instrumentation;\nimport android.os.Bundle;\nimport android.util.Log;\n\n\npublic class InstrumentActivity extends MainActivity {\n    public static String TAG = \"IntrumentedActivity\";\n    private InstrumentActivityListener listener;\n\n    public void setInstrumentActivityListener(InstrumentActivityListener listener) {\n        this.listener = listener;\n    }\n\n    // Generate output report when the activity is destroyed\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        Log.d(TAG, \"onDestroy()\");\n        super.finish();\n        if (listener != null) {\n            listener.onActivityEnd();\n        }\n    }\n}\n\n\n\n\nFinally, the most important part is \ngradle\n:\n\n\n....\n\n\napply plugin: 'jacoco' // add plugin for jacoco\n\n...\n\nandroid {\n    ...\n    defaultConfig {\n        ...\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            ...\n        }\n        debug{\n            testCoverageEnabled = true\n        }\n    }\n}\n\ndependencies {\n    ...\n    //uiautomator\n    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.0'\n}\n\n\n\n\n\n[3] Now, build apk and run Appium tests!\n\n\nThe coverage.ec will be generated at /data/data/com.example.pkg/files. Pull it out.\n\n\n[4] About generating HTML reports\n\n\nTo get the HTML report of coverage.ec, you need following steps:\n\n [1] pull it into file system by \nadb pull\n \n\n [2] create the following task in your gradle file:\n\n\ndef coverageSourceDirs = [\n        './src/main/java'\n]\n\ntask jacocoTestReport(type: JacocoReport) {\n    group = \"Reporting\"\n    description = \"Generate Jacoco coverage reports after running tests.\"\n    reports {\n        xml.enabled = true\n        html.enabled = true\n    }\n    classDirectories = fileTree(\n            dir: './build/intermediates/classes/debug',\n            excludes: ['**/R*.class',\n                       '**/*$InjectAdapter.class',\n                       '**/*$ModuleAdapter.class',\n                       '**/*$ViewInjector*.class'\n            ])\n    sourceDirectories = files(coverageSourceDirs)\n    // NOTE: Put your ec file here\n    executionData = files(\"SOME PATH/coverage.ec\")\n\n    doFirst {\n        new File(\"$buildDir/intermediates/classes/\").eachFileRecurse { file ->\n            if (file.name.contains('$$')) {\n                file.renameTo(file.path.replace('$$', '$'))\n            }\n        }\n    }\n}",
            "title": "Android coverage"
        },
        {
            "location": "/en/writing-running-appium/android_coverage/#android-coverage-guide",
            "text": "",
            "title": "Android Coverage Guide"
        },
        {
            "location": "/en/writing-running-appium/android_coverage/#requirement",
            "text": "Only Emulators or rooted phones are acceptable  Need to add UiAutomator2 support in your apps. That is to say, you need to implement a subclass of  Instrumentation .  Instrumentation  will be responsible to collect your coverage.   Need to implement a BroadcastReceiver to export coverage to disk files. This is because  Instrumentation  only collects data into memory.",
            "title": "Requirement"
        },
        {
            "location": "/en/writing-running-appium/android_coverage/#project-structure",
            "text": "You may need the following structure of files:  src/main/java/com/example/pkg\n   |____ MainActivity.java    Your main activity\n   |____ InstrumentActivityListener.java     A customized interface for exporting coverage to files\n   |____ InstrumentActivity.java    Activity launched for coverage. But in most cases, this should be same as MainActivity. The only difference is that it will include a `InstrumentActivityListener` to export coverage data to disk files.\n   |____ JacocoInstrumentation.java    The instrument class created by you. Also it needs to implement `InstrumentActivitylistener`.\n   |____ EndEmmaBroadCast.java    A broadcast receiver which will be invoked by appium-uiautomator2-driver at the end of testing. You need implementing logic to invoke InstrumentActivityListener so as to export coverage to files.  Configure followings in your caps: \n * automationName \uff1a  uiautomator2  (case irrelevant) \n * androidCoverage \uff1a {package}/{instrumentation class}, in our example,  com.example.pkg/com.example.pkg.JacocoInstrumentation \n * appWaitActivity \uff1a the FQCN of the activity of InstrumentActivity, in our example,  com.example.pkg.InstrumentActivity \n * appWaitPackage \uff1a {package}\uff0cin our example,  com.example.pkg  androidCoverageEndIntent  \uff1a The action of the broadcast receiver to invoke the exporting of coverage data to files, in our example  com.example.pkg.END_EMMA     Methodology \n Appium (appium-uiautomator2-driver) will launch app via command like\uff1a adb shell am instrument -e coverage true -w com.example.pkg/com.example.pkg.JacocoInstrumentation \n After testing is done, Appium (appium-uiautomator2-driver) will execute  adb shell am broadcast -a com.example.pkg.END_EMMA  to export coverage to files\uff08If you implement such export in the broadcast receiver\uff09",
            "title": "Project Structure"
        },
        {
            "location": "/en/writing-running-appium/android_coverage/#example",
            "text": "",
            "title": "Example"
        },
        {
            "location": "/en/writing-running-appium/android_coverage/#1-appium-testing-project-configure-caps",
            "text": "Please refer to   \"Project Structure\" ->  \"Configure followings in your caps\"",
            "title": "[1] Appium Testing Project - Configure Caps"
        },
        {
            "location": "/en/writing-running-appium/android_coverage/#2-android-project",
            "text": "Define instrumentation class and broadcast receiver in  AndroidManifest.xml :      <instrumentation\n        android:name=\"com.example.pkg.instrumentation.JacocoInstrumentation\"\n        android:targetPackage=\"com.example.pkg\" >\n    </instrumentation>\n\n    <!-- adb shell am broadcast -a com.example.pkg.END_EMMA -->\n    <receiver android:name=\"com.example.pkg.EndEmmaBroadcast\" >\n       <intent-filter>\n           <action android:name=\"com.example.pkg.END_EMMA\" />\n       </intent-filter>\n    </receiver>  Then,  EndEmmaBroadcast.java  \uff1a  package com.example.pkg;\n\nimport android.content.BroadcastReceiver;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Process;\n\n// adb shell am broadcast -a com.example.pkg.END_EMMA\npublic class EndEmmaBroadcast extends BroadcastReceiver {\n    InstrumentActivityListener activityListener;\n\n    public void setInstrumentActivityListener(InstrumentActivityListener listener){\n        this.activityListener = listener;\n    }\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        if(this.activityListener!=null){\n          activityListener.onActivityEnd();\n        }\n        // once coverage is dumped, the processes is ended.\n        Process.killProcess(Process.myPid());\n    }\n}  After that,  JacocoInstrumentation.java \uff1a  package com.example.pkg;\n\nimport android.app.Activity;\nimport android.app.Instrumentation;\nimport android.content.Intent;\nimport android.content.IntentFilter;\nimport android.os.Bundle;\nimport android.os.Looper;\nimport android.util.Log;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStream;\n\npublic class JacocoInstrumentation  extends Instrumentation implements InstrumentActivityListener {\n    public static String TAG = \"JacocoInstrumentation:\";\n    private static String DEFAULT_COVERAGE_FILE_PATH = null;\n    private final Bundle mResults = new Bundle();\n    private Intent mIntent;\n    private static final boolean LOGD = true;\n    private boolean mCoverage = true;\n    private String mCoverageFilePath;\n\n    public JacocoInstrumentation() {\n    }\n    @Override\n    public void onCreate(Bundle arguments) {\n        Log.d(TAG, \"onCreate(\" + arguments + \")\");\n        super.onCreate(arguments);\n        // bad notation, better use NAME+TimeSeed because you might generate more than 1 corage file\n        DEFAULT_COVERAGE_FILE_PATH = getContext().getFilesDir().getPath().toString() + \"/coverage.ec\";\n        File file = new File(DEFAULT_COVERAGE_FILE_PATH);\n        if(!file.exists()){\n            try{\n                file.createNewFile();\n            }catch (IOException e){\n                Log.d(TAG,\"File Exception \uff1a\"+e);\n                e.printStackTrace();}\n        }\n        if(arguments != null) {\n            mCoverageFilePath = arguments.getString(\"coverageFile\");\n        }\n        mIntent = new Intent(getTargetContext(), InstrumentActivity.class);\n        mIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        start();\n    }\n    @Override\n    public void onStart() {\n        super.onStart();\n        Looper.prepare();\n        // Register broadcast receiver and start InstrumentActivity\n        InstrumentActivity activity = (InstrumentActivity) startActivitySync(mIntent);\n        EndEmmaBroadcast broadcast = new EndEmmaBroadcast();\n        activity.setInstrumentActivityListener(this);\n        broadcast.setInstrumentActivityListener(this);\n        activity.registerReceiver(broadcast, new IntentFilter(\"com.example.pkg.END_EMMA\"));\n    }\n    private String getCoverageFilePath() {\n        if (mCoverageFilePath == null) {\n            return DEFAULT_COVERAGE_FILE_PATH;\n        } else {\n            return mCoverageFilePath;\n        }\n    }\n    private void generateCoverageReport() {\n        Log.d(TAG, \"generateCoverageReport():\" + getCoverageFilePath());\n        OutputStream out = null;\n        try {\n            out = new FileOutputStream(getCoverageFilePath(), false);\n            Object agent = Class.forName(\"org.jacoco.agent.rt.RT\")\n                    .getMethod(\"getAgent\")\n                    .invoke(null);\n            out.write((byte[]) agent.getClass().getMethod(\"getExecutionData\", boolean.class)\n                    .invoke(agent, false));\n        } catch (Exception e) {\n            Log.d(TAG, e.toString(), e);\n        } finally {\n            if (out != null) {\n                try {\n                    out.close();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n\n    @Override\n    public void onActivityEnd() {\n        if (LOGD)      Log.d(TAG, \"onActivityFinished()\");\n        if (mCoverage) {\n            generateCoverageReport();\n        }\n        finish(Activity.RESULT_OK, mResults);\n    }\n}  Then,  InstrumentActivityListener.java  package com.example.pkg;\n\npublic interface InstrumentActivityListener {\n    void onActivityEnd();\n}  InstrumentActivity.java  (This is optional, you can use MainActivity)  package com.example.pkg;\nimport android.app.Instrumentation;\nimport android.os.Bundle;\nimport android.util.Log;\n\n\npublic class InstrumentActivity extends MainActivity {\n    public static String TAG = \"IntrumentedActivity\";\n    private InstrumentActivityListener listener;\n\n    public void setInstrumentActivityListener(InstrumentActivityListener listener) {\n        this.listener = listener;\n    }\n\n    // Generate output report when the activity is destroyed\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        Log.d(TAG, \"onDestroy()\");\n        super.finish();\n        if (listener != null) {\n            listener.onActivityEnd();\n        }\n    }\n}  Finally, the most important part is  gradle :  ....\n\n\napply plugin: 'jacoco' // add plugin for jacoco\n\n...\n\nandroid {\n    ...\n    defaultConfig {\n        ...\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            ...\n        }\n        debug{\n            testCoverageEnabled = true\n        }\n    }\n}\n\ndependencies {\n    ...\n    //uiautomator\n    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.0'\n}",
            "title": "[2] Android Project"
        },
        {
            "location": "/en/writing-running-appium/android_coverage/#3-now-build-apk-and-run-appium-tests",
            "text": "The coverage.ec will be generated at /data/data/com.example.pkg/files. Pull it out.",
            "title": "[3] Now, build apk and run Appium tests!"
        },
        {
            "location": "/en/writing-running-appium/android_coverage/#4-about-generating-html-reports",
            "text": "To get the HTML report of coverage.ec, you need following steps:  [1] pull it into file system by  adb pull    [2] create the following task in your gradle file:  def coverageSourceDirs = [\n        './src/main/java'\n]\n\ntask jacocoTestReport(type: JacocoReport) {\n    group = \"Reporting\"\n    description = \"Generate Jacoco coverage reports after running tests.\"\n    reports {\n        xml.enabled = true\n        html.enabled = true\n    }\n    classDirectories = fileTree(\n            dir: './build/intermediates/classes/debug',\n            excludes: ['**/R*.class',\n                       '**/*$InjectAdapter.class',\n                       '**/*$ModuleAdapter.class',\n                       '**/*$ViewInjector*.class'\n            ])\n    sourceDirectories = files(coverageSourceDirs)\n    // NOTE: Put your ec file here\n    executionData = files(\"SOME PATH/coverage.ec\")\n\n    doFirst {\n        new File(\"$buildDir/intermediates/classes/\").eachFileRecurse { file ->\n            if (file.name.contains('$$')) {\n                file.renameTo(file.path.replace('$$', '$'))\n            }\n        }\n    }\n}",
            "title": "[4] About generating HTML reports"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/",
            "text": "Appium Client Libraries\n\n\nAppium has libraries for:\n\n\n\n\n\n\n\n\nLanguage\n\n\nSource\n\n\n\n\n\n\n\n\n\n\nRuby\n\n\nGitHub\n\n\n\n\n\n\nPython\n\n\nGitHub\n\n\n\n\n\n\nJava\n\n\nGitHub\n\n\n\n\n\n\nJavaScript\n\n\nGitHub\n\n\n\n\n\n\nPHP\n\n\nGitHub\n\n\n\n\n\n\nC#\n\n\nGitHub\n\n\n\n\n\n\nObjective-C\n\n\nGitHub\n\n\n\n\n\n\n\n\nNote that some methods such as \nendTestCoverage()\n are\nnot generally useful. Proper coverage support will be added once \nthis issue\n\nis resolved. If you want to use them anyway, consult the documentation for the bindings on GitHub.\n\n\nLock\n\n\nLock the screen.\n\n\n# ruby\nlock 5\n\n\n\n\n# python\ndriver.lock(5)\n\n\n\n\n// java\ndriver.lockScreen(3);\n\n\n\n\n// javascript\ndriver.lock(3)\n\n\n\n\n// php\n$this->lock(3);\n\n\n\n\n// c#\ndriver.LockDevice(3);\n\n\n\n\n// objective c\n[driver lockDeviceScreen:3];\n\n\n\n\nBackground app\n\n\nSend the currently active app to the background, and either return after a certain amount of time, or leave the app deactivated.\n\n\nThere are 2 types of parameters which may be passed to this method:\n\n\n\n\nAn integer (in seconds): how long to background the app for. -1 means to deactivate the app entirely. This style of parameter is deprecated.\n\n\nAn object that looks like \n{\"timeout\": secs}\n, where \nsecs\n is again an integer with the semantics mentioned just above in 1, or \nnull\n (which means to deactivate entirely).\n\n\n\n\n# ruby\nbackground_app 5  # background app for 5 seconds\nbackground_app -1  # deactivate app\n\n\n\n\n# python\ndriver.background_app(5)  # background for 5 seconds\ndriver.background_app(-1) # deactivate app\ndriver.background_app({'timeout': None}) # deactivate app\n\n\n\n\n// java\ndriver.runAppInBackground(5);  // for 5 seconds\ndriver.runAppInBackground(-1);  // deactivate completely\n\n\n\n\n// javascript\ndriver.backgroundApp(5);  // for 5 seconds\ndriver.backgroundApp(-1); // deactivate app\ndriver.backgroundApp({timeout: null}); // deactivate app\n\n\n\n\n// php\n$this->backgroundApp(5);\n$this->backgroundApp(-1);\n\n\n\n\n// c#\ndriver.BackgroundApp(5);\ndriver.BackgroundApp(-1);\n\n\n\n\n// objective c\n[driver runAppInBackground:3];\n[driver runAppInBackground:-1];\n\n\n\n\nHide Keyboard\n\n\nHide the keyboard. \nNote\n: on iOS, this helper function is not guaranteed to\nwork. There is no automation hook for hiding the keyboard, and apps are free to\nallow the user to hide the keyboard using any of a variety of different\nstrategies, whether that is tapping outside the keyboard, swiping down, etc...\nWe encourage you, rather than using this method, to think about how a \nuser\n\nwould hide the keyboard in your app, and tell Appium to do that instead (swipe,\ntap on a certain coordinate, etc...). That being said, the default behavior\nhere might help you.\n\n\n# ruby\nhide_keyboard\n\n\n\n\n# python\ndriver.hide_keyboard()\n\n\n\n\n// java\ndriver.hideKeyboard();\n\n\n\n\n// javascript\ndriver.hideKeyboard()\n\n\n\n\n// php\n$this->hideKeyboard();\n$this->hideKeyboard(array('strategy' => 'pressKey', 'key' => 'Done'));\n\n\n\n\n// c#\ndriver.HideKeyboard(\"Done\");\n\n\n\n\n// objective c\n[driver hideKeyboard];\n\n\n\n\nStart Activity\n\n\nOpen an activity in the current app or start a new app and open an activity \nAndroid only\n\n\n// java\ndriver.startActivity(\"appPackage\",\"com.example.android.apis\", null, null);\n\n\n\n\n// javascript\ndriver.startActivity({appPackage: 'com.example.android.apis', appActivity: '.Foo'}, cb);\n\n\n\n\n# python\ndriver.start_activity('com.example.android.apis', '.Foo')\n\n\n\n\n# ruby\nstart_activity app_package: 'io.appium.android.apis', app_activity: '.accessibility.AccessibilityNodeProviderActivity'\n\n\n\n\n// c#\ndriver.StartActivity(\"com.example.android.apis\", \".Foo\");\n\n\n\n\n// php\n$this->startActivity(array(\"appPackage\" => \"com.example.android.apis\",\n                            \"appActivity\" => \".Foo\"));\n\n\n\n\n// objective c\n[driver startActivity:@\"com.example.android.apis\" package:@\".Foo\"];\n\n\n\n\nOpen Notifications\n\n\nOpen the notification shade \nAndroid only\n\n\n// java\ndriver.openNotifications();\n\n\n\n\n// javascript\ndriver.openNotifications(cb);\n\n\n\n\n# python\ndriver.open_notifications()\n\n\n\n\n# ruby\nopen_notifications\n\n\n\n\n// c#\ndriver.OpenNotifications();\n\n\n\n\n// php\n$this->openNotifications();\n\n\n\n\n// objective c\n[driver openNotifications];\n\n\n\n\nIs installed\n\n\nCheck if an app is installed\n\n\n# ruby\nis_installed? \"com.example.android.apis\"\n\n\n\n\n# python\ndriver.is_app_installed('com.example.android.apis')\n\n\n\n\n// java\ndriver.isAppInstalled(\"com.example.android.apis\")\n\n\n\n\n// javascript\ndriver.isAppInstalled(\"com.example.android.apis\")\n  .then(function (isAppInstalled) { /*...*/ })\n\n\n\n\n// php\n$this->isAppInstalled('com.example.android.apis');\n\n\n\n\n// c#\ndriver.IsAppInstalled(\"com.example.android.apis-\");\n\n\n\n\n// objective c\n[driver isAppInstalled:@\"com.example.android.apis-\"];\n\n\n\n\nInstall App\n\n\nInstall an app to the device.\n\n\n# ruby\ninstall 'path/to/my.apk'\n\n\n\n\n# python\ndriver.install_app('path/to/my.apk')\n\n\n\n\n// java\ndriver.installApp(\"path/to/my.apk\")\n\n\n\n\n// javascript\ndriver.installApp(\"path/to/my.apk\")\n\n\n\n\n// php\n$this->installApp('path/to/my.apk');\n\n\n\n\n// c#\ndriver.InstallApp(\"path/to/my.apk\");\n\n\n\n\n// objective c\n[driver installAppAtPath:@\"path/to/my.apk\"];\n\n\n\n\nRemove App\n\n\nRemove an app from the device.\n\n\n# ruby\nremove 'com.example.android.apis'\n\n\n\n\n# python\ndriver.remove_app('com.example.android.apis')\n\n\n\n\n// java\ndriver.removeApp(\"com.example.android.apis\")\n\n\n\n\n// javascript\ndriver.removeApp(\"com.example.android.apis\")\n\n\n\n\n// php\n$this->removeApp('com.example.android.apis');\n\n\n\n\n// c#\ndriver.RemoveApp(\"com.example.android.apis\");\n\n\n\n\n// objective c\n[driver removeApp:@\"com.example.android.apis\"];\n\n\n\n\nShake\n\n\nSimulate the device shaking.\n\n\n# ruby\nshake\n\n\n\n\n# python\ndriver.shake()\n\n\n\n\n// java\ndriver.shake()\n\n\n\n\n// javascript\ndriver.shake()\n\n\n\n\n// php\n$this->shake();\n\n\n\n\n// c#\ndriver.ShakeDevice();\n\n\n\n\n// objective c\n[driver shakeDevice];\n\n\n\n\nClose app\n\n\nClose the app\n\n\n# ruby\nclose_app\n\n\n\n\n# python\ndriver.close_app();\n\n\n\n\n// java\ndriver.closeApp()\n\n\n\n\n// javascript\ndriver.closeApp()\n\n\n\n\n// php\n$this->closeApp();\n\n\n\n\n// c#\ndriver.CloseApp();\n\n\n\n\n// objective c\n[driver closeApp];\n\n\n\n\nLaunch\n\n\nLaunch the session for the desired capabilities. Note that this is the\ncompanion to the autoLaunch=false capability. This is not for launching\narbitrary apps/activities---for that use \nstart_activity\n. This is for\ncontinuing the initialization (\"launch\") process if you have used\nautoLaunch=false.\n\n\n# ruby\nlaunch_app\n\n\n\n\n# python\ndriver.launch_app()\n\n\n\n\n// java\ndriver.launchApp()\n\n\n\n\n// javascript\ndriver.launchApp()\n\n\n\n\n// php\n$this->launchApp();\n\n\n\n\n// c#\ndriver.LaunchApp();\n\n\n\n\n// objective c\n[driver launchApp];\n\n\n\n\nReset\n\n\nReset the app.\n\n\n# ruby\ndriver.reset\n\n\n\n\n# python\ndriver.reset()\n\n\n\n\n// java\ndriver.resetApp()\n\n\n\n\n// javascript\ndriver.resetApp()\n\n\n\n\n// php\n$this->reset();\n\n\n\n\n// c#\ndriver.ResetApp();\n\n\n\n\n// objective c\n[driver resetApp];\n\n\n\n\nAvailable Contexts\n\n\nList all available contexts\n\n\n# ruby\ncontext_array = available_contexts\n\n\n\n\n# python\ndriver.contexts\n\n\n\n\n// java\ndriver.getContextHandles()\n\n\n\n\n// javascript\ndriver.contexts().then(function (contexts) { /*...*/ })\n\n\n\n\n// php\n$this->contexts();\n\n\n\n\n// c#\ndriver.GetContexts()\n\n\n\n\n// objective c\nNSArray *contexts = driver.allContexts;\n\n\n\n\nCurrent context\n\n\nList the current context\n\n\n# ruby\ncontext = current_context\n\n\n\n\n# python\ndriver.current_context\n\n\n\n\n// java\ndriver.getContext()\n\n\n\n\n// javascript\ndriver.currentContext().then(function (context) { /*...*/ })\n\n\n\n\n// php\n$this->context();\n\n\n\n\n// c#\ndriver.GetContext()\n\n\n\n\n// objective c\nNSString *context = driver.context;\n\n\n\n\nSwitch to default context\n\n\nChange the context to the default.\n\n\n# ruby\nswitch_to_default_context\n\n\n\n\n# python\ndriver.switch_to.context(None)\n\n\n\n\n// java\ndriver.context();\n\n\n\n\n// javascript\ndriver.context()\n\n\n\n\n// php\n$this->context(NULL);\n\n\n\n\n// c#\ndriver.SetContext();\n\n\n\n\n// objective c\n[driver setContext:nil];\n\n\n\n\nApp Strings\n\n\nGet the app's strings.\n\n\n# ruby\napp_strings\n\n\n\n\n# python\ndriver.app_strings\n\n\n\n\n// java\ndriver.getAppStrings();\n\n\n\n\n// javascript\ndriver.getAppStrings().then(function (appStrings) { /*...*/ })\n\n\n\n\n// php\n$this->appStrings();\n$this->appStrings('ru');\n\n\n\n\n// c#\ndriver.GetAppStrings();\n\n\n\n\n// objective c\n[driver appStrings];\n[driver appStringsForLanguage:\"@ru\"];\n\n\n\n\nKey Event\n\n\nSend a key event to the device.\n\n\n# ruby\nkey_event 176\n\n\n\n\n# python\ndriver.keyevent(176)\n\n\n\n\n// java\ndriver.sendKeyEvent(AndroidKeyCode.HOME);\n\n\n\n\n// javascript\ndriver.deviceKeyEvent(wd.SPECIAL_KEYS.Home)\n\n\n\n\n// php\n$this->keyEvent('176');\n\n\n\n\n// c#\ndriver.KeyEvent(\"176\");\n\n\n\n\n// objective c\nNSError *err;\n[driver triggerKeyEvent:176 metastate:0 error:&err];\n\n\n\n\nCurrent Activity\n\n\nAndroid only. Get the current activity.\n\n\n# ruby\ncurrent_activity\n\n\n\n\n# python\ndriver.current_activity\n\n\n\n\n// java\ndriver.currentActivity();\n\n\n\n\n// javascript\ndriver.getCurrentActivity().then(function (activity) { /*...*/ })\n\n\n\n\n// php\n$this->currentActivity();\n\n\n\n\n// c#\ndriver.GetCurrentActivity();\n\n\n\n\n// objective c\nNSError *err;\n[driver currentActivity];\n\n\n\n\nCurrent Package\n\n\nAndroid only. Get the current package.\n\n\n# ruby\ncurrent_package\n\n\n\n\n# python\ndriver.current_package\n\n\n\n\n// java\ndriver.getCurrentPackage();\n\n\n\n\n// javascript\ndriver.getCurrentPackage().then(function (package) { /*...*/ })\n\n\n\n\n// php\n$this->currentPackage();\n\n\n\n\n// c#\ndriver.GetCurrentPackage();\n\n\n\n\nTouchAction / MultiTouchAction\n\n\nAn API for generating touch actions. This section of the documentation will be\nexpanded upon soon.\n\n\n# ruby\ntouch_action = Appium::TouchAction.new\nelement  = find_element :accessibility_id, 'Buttons, Various uses of UIButton'\ntouch_action.press(element: element, x: 10, y: 10).perform\n\n\n\n\n# python\naction = TouchAction(driver)\naction.press(element=el, x=10, y=10).release().perform()\n\n\n\n\n// java\nTouchAction action = new TouchAction(driver)\n.press(mapview, 10, 10)\n.release().\nperform();\n\n\n\n\n// javascript\nvar action = new wd.TouchAction(driver);\naction\n  .tap({el: el, x: 10, y: 10})\n  .release();\nreturn action.perform(); // returns a promise\n\n\n\n\n// php\n$action = $this->initiateTouchAction();\n               ->press(array('element' => $el))\n               ->release()\n               ->perform();\n\n$action1 = $this->initiateTouchAction();\n$action1->press(array('element' => $els[0]))\n        ->moveTo(array('x' => 10, 'y' => 0))\n        ->moveTo(array('x' => 10, 'y' => -75))\n        ->moveTo(array('x' => 10, 'y' => -600))\n        ->release();\n\n$action2 = $this->initiateTouchAction();\n$action2->press(array('element' => $els[1]))\n        ->moveTo(array('x' => 10, 'y' => 10))\n        ->moveTo(array('x' => 10, 'y' => -300))\n        ->moveTo(array('x' => 10, 'y' => -600))\n        ->release();\n\n$multiAction = $this->initiateMultiAction();\n$multiAction->add($action1);\n$multiAction->add($action2);\n$multiAction->perform();\n\n\n\n\n// c#\nITouchAction action = new TouchAction(driver);\naction.Press(el, 10, 10).Release();\naction.Perform ();\n\n\n\n\nSwipe\n\n\nSimulate a user swipe.\n\n\n# ruby\nswipe start_x: 75, start_y: 500, end_x: 75, end_y: 0, duration: 0.8\n\n\n\n\n# python\ndriver.swipe(start_x=75, start_y=500, end_x=75, end_y=0, duration=800)\n\n\n\n\n// java\ndriver.swipe(75, 500, 75, 0, 0.8)\n\n\n\n\n// javascript\nfunction swipe(opts) {\n  var action = new wd.TouchAction(this);\n  action\n    .press({x: opts.startX, y: opts.startY})\n    .wait(opts.duration)\n    .moveTo({x: opts.endX, y: opts.endY})\n    .release();\n  return action.perform();\n}\nwd.addPromiseChainMethod('swipe', swipe);\n// ...\nreturn driver.swipe({ startX: 75, startY: 500,\n  endX: 75,  endY: 0, duration: 800 });\n\n\n\n\n// php\n$this->swipe(75, 500, 75, 0, 800);\n\n\n\n\n// c#\ntodo: c#\n\n\n\n\nPinch\n\n\nPinch the screen.\n\n\n# ruby\npinch 75\n\n\n\n\n# python\ndriver.pinch(element=el)\n\n\n\n\n// java\ndriver.pinch(element);\n\n\n\n\n// javascript\nfunction pinch(el) {\n  return Q.all([\n    el.getSize(),\n    el.getLocation(),\n  ]).then(function(res) {\n    var size = res[0];\n    var loc = res[1];\n    var center = {\n      x: loc.x + size.width / 2,\n      y: loc.y + size.height / 2\n    };\n    var a1 = new wd.TouchAction(this);\n    a1.press({el: el, x: center.x, y:center.y - 100}).moveTo({el: el}).release();\n    var a2 = new wd.TouchAction(this);\n    a2.press({el: el, x: center.x, y: center.y + 100}).moveTo({el: el}).release();\n    var m = new wd.MultiAction(this);\n    m.add(a1, a2);\n    return m.perform();\n  }.bind(this));\n};\nwd.addPromiseChainMethod('pinch', pinch);\nwd.addElementPromiseChainMethod('pinch', function() {\n  return this.browser.pinch(this);\n});\n// ...\nreturn driver.pinch(el);\n// ...\nreturn el.pinch();\n\n\n\n\n$this->pinch($el);\n\n\n\n\n// c#\ndriver.Pinch(25, 25)\n\n\n\n\nZoom\n\n\nZoom the screen.\n\n\n# ruby\nzoom 200\n\n\n\n\n# python\ndriver.zoom(element=el)\n\n\n\n\n// java\ndriver.zoom(element);\n\n\n\n\n// javascript\nfunction zoom(el) {\n  return Q.all([\n    this.getWindowSize(),\n    this.getLocation(el),\n  ]).then(function(res) {\n    var size = res[0];\n    var loc = res[1];\n    var center = {\n      x: loc.x + size.width / 2,\n      y: loc.y + size.height / 2\n    };\n    var a1 = new wd.TouchAction(this);\n    a1.press({el: el}).moveTo({el: el, x: center.x, y: center.y - 100}).release();\n    var a2 = new wd.TouchAction(this);\n    a2.press({el: el}).moveTo({el: el, x: center.x, y: center.y + 100}).release();\n    var m = new wd.MultiAction(this);\n    m.add(a1, a2);\n    return m.perform();\n  }.bind(this));\n};\nwd.addPromiseChainMethod('zoom', zoom);\nwd.addElementPromiseChainMethod('zoom', function() {\n  return this.browser.zoom(this);\n});\n// ...\nreturn driver.zoom(el);\n// ...\nreturn el.zoom();\n\n\n\n\n// php\n$this->zoom($el);\n\n\n\n\n// c#\ndriver.Zoom(100, 200);\n\n\n\n\nScroll To\n\n\nScroll to an element.\n\n\n# ruby\nelement = find_element :accessibility_id, \"Element ID\"\nexecute_script \"mobile: scroll\", direction: \"down\", element: element.ref\n\n\n\n\n# python\ndriver.execute_script(\"mobile: scroll\", {\"direction\": \"down\", \"element\": element.id})\n\n\n\n\n// java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nHashMap<String, String> scrollObject = new HashMap<String, String>();\nscrollObject.put(\"direction\", \"down\");\nscrollObject.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: scroll\", scrollObject);\n\n\n\n\n// javascript\nreturn driver.elementByAccessibilityId().then(function (el) {\n  driver.execute(\"mobile: scroll\", [{direction: \"down\", element: el.value}]);\n});\n\n\n\n\n// php\n$els = $this->elements($this->using('class name')->value('android.widget.TextView'));\n$this->scroll($els[count($els) - 1], $els[0]);\n\n\n\n\n// c#\nDictionary<string, string> scrollObject = new Dictionary<string, string>();\nscrollObject.Add(\"direction\", \"down\");\nscrollObject.Add(\"element\", <element_id>);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: scroll\", scrollObject));\n\n\n\n\nPull file\n\n\nPulls a file from the device.\n\n\n# ruby\npull_file 'Library/AddressBook/AddressBook.sqlitedb'\n\n\n\n\n# python\ndriver.pull_file('Library/AddressBook/AddressBook.sqlitedb')\n\n\n\n\n// java\ndriver.pullFile(\"Library/AddressBook/AddressBook.sqlitedb\");\n\n\n\n\n// javascript\ndriver.pullFile(\"Library/AddressBook/AddressBook.sqlitedb\")\n  .then(function (base64File) { /*...*/ })\n\n\n\n\n// php\n$this->pullFile('Library/AddressBook/AddressBook.sqlitedb');\n\n\n\n\n// c#\ndriver.PullFile(\"Library/AddressBook/AddressBook.sqlitedb\");\n\n\n\n\nPush File\n\n\nPushes a file to the device.\n\n\n# ruby\ndata = \"some data for the file\"\npath = \"/data/local/tmp/file.txt\"\npush_file path, data\n\n\n\n\n# python\ndata = \"some data for the file\"\npath = \"/data/local/tmp/file.txt\"\ndriver.push_file(path, data.encode('base64'))\n\n\n\n\n// java\nbyte[] data = Base64.encodeBase64(\"some data for the file\".getBytes());\nString path = \"/data/local/tmp/file.txt\";\ndriver.pushFile(path, data)\n\n\n\n\n// javascript\ndriver.pushFile(path, data)\n\n\n\n\n// php\n$path = 'data/local/tmp/test_push_file.txt';\n$data = 'This is the contents of the file to push to the device.';\n$this->pushFile($path, base64_encode($data));\n\n\n\n\n// c#\ndriver.PushFile(\"/data/local/tmp/file.txt\", \"some data for the file\");\n\n\n\n\nSettings\n\n\nHere you will find sample code for getting/setting appium serverSetting.\nFor more information on how they work, and which settings are supported, see\n\nthe settings docs\n.\n\n\n# ruby\ncurrent_settings = get_settings\nupdate_settings someSetting: true\n\n\n\n\n# python\ncurrent_settings = driver.get_settings()\ndriver.update_settings({\"someSetting\": true})\n\n\n\n\n// java\nJsonObject settings = driver.getSettings()\n// java-client doesn't support setting arbitrary settings, just settings which are already provided by appium.\n// So for the 'ignoreUnimportantViews' setting, the following method exists:\ndriver.ignoreUnimportantViews(true);\n\n\n\n\n// javascript\nvar settings = driver.settings();\nbrowser.updateSettings({'someSetting': true});\n\n\n\n\n// php\n$settings = $this->getSettings();\n$this->updateSettings(array('cyberdelia' => \"open\"));\n\n\n\n\n// c#\nDictionary<String, Object>settings = driver.GetSettings();\n// dotnet-driver doesn't support setting arbitrary settings, just settings which are already provided by appium.\n// So for the 'ignoreUnimportantViews' setting, the following method exists:\ndriver.IgnoreUnimportantViews(true);\n\n\n\n\nAppium Desktop Apps\n\n\nAppium's desktop app supports OS X, Windows and Linux.\n\n\n\n\nAppium Desktop",
            "title": "Appium bindings"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#appium-client-libraries",
            "text": "Appium has libraries for:     Language  Source      Ruby  GitHub    Python  GitHub    Java  GitHub    JavaScript  GitHub    PHP  GitHub    C#  GitHub    Objective-C  GitHub     Note that some methods such as  endTestCoverage()  are\nnot generally useful. Proper coverage support will be added once  this issue \nis resolved. If you want to use them anyway, consult the documentation for the bindings on GitHub.",
            "title": "Appium Client Libraries"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#lock",
            "text": "Lock the screen.  # ruby\nlock 5  # python\ndriver.lock(5)  // java\ndriver.lockScreen(3);  // javascript\ndriver.lock(3)  // php\n$this->lock(3);  // c#\ndriver.LockDevice(3);  // objective c\n[driver lockDeviceScreen:3];",
            "title": "Lock"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#background-app",
            "text": "Send the currently active app to the background, and either return after a certain amount of time, or leave the app deactivated.  There are 2 types of parameters which may be passed to this method:   An integer (in seconds): how long to background the app for. -1 means to deactivate the app entirely. This style of parameter is deprecated.  An object that looks like  {\"timeout\": secs} , where  secs  is again an integer with the semantics mentioned just above in 1, or  null  (which means to deactivate entirely).   # ruby\nbackground_app 5  # background app for 5 seconds\nbackground_app -1  # deactivate app  # python\ndriver.background_app(5)  # background for 5 seconds\ndriver.background_app(-1) # deactivate app\ndriver.background_app({'timeout': None}) # deactivate app  // java\ndriver.runAppInBackground(5);  // for 5 seconds\ndriver.runAppInBackground(-1);  // deactivate completely  // javascript\ndriver.backgroundApp(5);  // for 5 seconds\ndriver.backgroundApp(-1); // deactivate app\ndriver.backgroundApp({timeout: null}); // deactivate app  // php\n$this->backgroundApp(5);\n$this->backgroundApp(-1);  // c#\ndriver.BackgroundApp(5);\ndriver.BackgroundApp(-1);  // objective c\n[driver runAppInBackground:3];\n[driver runAppInBackground:-1];",
            "title": "Background app"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#hide-keyboard",
            "text": "Hide the keyboard.  Note : on iOS, this helper function is not guaranteed to\nwork. There is no automation hook for hiding the keyboard, and apps are free to\nallow the user to hide the keyboard using any of a variety of different\nstrategies, whether that is tapping outside the keyboard, swiping down, etc...\nWe encourage you, rather than using this method, to think about how a  user \nwould hide the keyboard in your app, and tell Appium to do that instead (swipe,\ntap on a certain coordinate, etc...). That being said, the default behavior\nhere might help you.  # ruby\nhide_keyboard  # python\ndriver.hide_keyboard()  // java\ndriver.hideKeyboard();  // javascript\ndriver.hideKeyboard()  // php\n$this->hideKeyboard();\n$this->hideKeyboard(array('strategy' => 'pressKey', 'key' => 'Done'));  // c#\ndriver.HideKeyboard(\"Done\");  // objective c\n[driver hideKeyboard];",
            "title": "Hide Keyboard"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#start-activity",
            "text": "Open an activity in the current app or start a new app and open an activity  Android only  // java\ndriver.startActivity(\"appPackage\",\"com.example.android.apis\", null, null);  // javascript\ndriver.startActivity({appPackage: 'com.example.android.apis', appActivity: '.Foo'}, cb);  # python\ndriver.start_activity('com.example.android.apis', '.Foo')  # ruby\nstart_activity app_package: 'io.appium.android.apis', app_activity: '.accessibility.AccessibilityNodeProviderActivity'  // c#\ndriver.StartActivity(\"com.example.android.apis\", \".Foo\");  // php\n$this->startActivity(array(\"appPackage\" => \"com.example.android.apis\",\n                            \"appActivity\" => \".Foo\"));  // objective c\n[driver startActivity:@\"com.example.android.apis\" package:@\".Foo\"];",
            "title": "Start Activity"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#open-notifications",
            "text": "Open the notification shade  Android only  // java\ndriver.openNotifications();  // javascript\ndriver.openNotifications(cb);  # python\ndriver.open_notifications()  # ruby\nopen_notifications  // c#\ndriver.OpenNotifications();  // php\n$this->openNotifications();  // objective c\n[driver openNotifications];",
            "title": "Open Notifications"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#is-installed",
            "text": "Check if an app is installed  # ruby\nis_installed? \"com.example.android.apis\"  # python\ndriver.is_app_installed('com.example.android.apis')  // java\ndriver.isAppInstalled(\"com.example.android.apis\")  // javascript\ndriver.isAppInstalled(\"com.example.android.apis\")\n  .then(function (isAppInstalled) { /*...*/ })  // php\n$this->isAppInstalled('com.example.android.apis');  // c#\ndriver.IsAppInstalled(\"com.example.android.apis-\");  // objective c\n[driver isAppInstalled:@\"com.example.android.apis-\"];",
            "title": "Is installed"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#install-app",
            "text": "Install an app to the device.  # ruby\ninstall 'path/to/my.apk'  # python\ndriver.install_app('path/to/my.apk')  // java\ndriver.installApp(\"path/to/my.apk\")  // javascript\ndriver.installApp(\"path/to/my.apk\")  // php\n$this->installApp('path/to/my.apk');  // c#\ndriver.InstallApp(\"path/to/my.apk\");  // objective c\n[driver installAppAtPath:@\"path/to/my.apk\"];",
            "title": "Install App"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#remove-app",
            "text": "Remove an app from the device.  # ruby\nremove 'com.example.android.apis'  # python\ndriver.remove_app('com.example.android.apis')  // java\ndriver.removeApp(\"com.example.android.apis\")  // javascript\ndriver.removeApp(\"com.example.android.apis\")  // php\n$this->removeApp('com.example.android.apis');  // c#\ndriver.RemoveApp(\"com.example.android.apis\");  // objective c\n[driver removeApp:@\"com.example.android.apis\"];",
            "title": "Remove App"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#shake",
            "text": "Simulate the device shaking.  # ruby\nshake  # python\ndriver.shake()  // java\ndriver.shake()  // javascript\ndriver.shake()  // php\n$this->shake();  // c#\ndriver.ShakeDevice();  // objective c\n[driver shakeDevice];",
            "title": "Shake"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#close-app",
            "text": "Close the app  # ruby\nclose_app  # python\ndriver.close_app();  // java\ndriver.closeApp()  // javascript\ndriver.closeApp()  // php\n$this->closeApp();  // c#\ndriver.CloseApp();  // objective c\n[driver closeApp];",
            "title": "Close app"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#launch",
            "text": "Launch the session for the desired capabilities. Note that this is the\ncompanion to the autoLaunch=false capability. This is not for launching\narbitrary apps/activities---for that use  start_activity . This is for\ncontinuing the initialization (\"launch\") process if you have used\nautoLaunch=false.  # ruby\nlaunch_app  # python\ndriver.launch_app()  // java\ndriver.launchApp()  // javascript\ndriver.launchApp()  // php\n$this->launchApp();  // c#\ndriver.LaunchApp();  // objective c\n[driver launchApp];",
            "title": "Launch"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#reset",
            "text": "Reset the app.  # ruby\ndriver.reset  # python\ndriver.reset()  // java\ndriver.resetApp()  // javascript\ndriver.resetApp()  // php\n$this->reset();  // c#\ndriver.ResetApp();  // objective c\n[driver resetApp];",
            "title": "Reset"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#available-contexts",
            "text": "List all available contexts  # ruby\ncontext_array = available_contexts  # python\ndriver.contexts  // java\ndriver.getContextHandles()  // javascript\ndriver.contexts().then(function (contexts) { /*...*/ })  // php\n$this->contexts();  // c#\ndriver.GetContexts()  // objective c\nNSArray *contexts = driver.allContexts;",
            "title": "Available Contexts"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#current-context",
            "text": "List the current context  # ruby\ncontext = current_context  # python\ndriver.current_context  // java\ndriver.getContext()  // javascript\ndriver.currentContext().then(function (context) { /*...*/ })  // php\n$this->context();  // c#\ndriver.GetContext()  // objective c\nNSString *context = driver.context;",
            "title": "Current context"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#switch-to-default-context",
            "text": "Change the context to the default.  # ruby\nswitch_to_default_context  # python\ndriver.switch_to.context(None)  // java\ndriver.context();  // javascript\ndriver.context()  // php\n$this->context(NULL);  // c#\ndriver.SetContext();  // objective c\n[driver setContext:nil];",
            "title": "Switch to default context"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#app-strings",
            "text": "Get the app's strings.  # ruby\napp_strings  # python\ndriver.app_strings  // java\ndriver.getAppStrings();  // javascript\ndriver.getAppStrings().then(function (appStrings) { /*...*/ })  // php\n$this->appStrings();\n$this->appStrings('ru');  // c#\ndriver.GetAppStrings();  // objective c\n[driver appStrings];\n[driver appStringsForLanguage:\"@ru\"];",
            "title": "App Strings"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#key-event",
            "text": "Send a key event to the device.  # ruby\nkey_event 176  # python\ndriver.keyevent(176)  // java\ndriver.sendKeyEvent(AndroidKeyCode.HOME);  // javascript\ndriver.deviceKeyEvent(wd.SPECIAL_KEYS.Home)  // php\n$this->keyEvent('176');  // c#\ndriver.KeyEvent(\"176\");  // objective c\nNSError *err;\n[driver triggerKeyEvent:176 metastate:0 error:&err];",
            "title": "Key Event"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#current-activity",
            "text": "Android only. Get the current activity.  # ruby\ncurrent_activity  # python\ndriver.current_activity  // java\ndriver.currentActivity();  // javascript\ndriver.getCurrentActivity().then(function (activity) { /*...*/ })  // php\n$this->currentActivity();  // c#\ndriver.GetCurrentActivity();  // objective c\nNSError *err;\n[driver currentActivity];",
            "title": "Current Activity"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#current-package",
            "text": "Android only. Get the current package.  # ruby\ncurrent_package  # python\ndriver.current_package  // java\ndriver.getCurrentPackage();  // javascript\ndriver.getCurrentPackage().then(function (package) { /*...*/ })  // php\n$this->currentPackage();  // c#\ndriver.GetCurrentPackage();",
            "title": "Current Package"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#touchaction-multitouchaction",
            "text": "An API for generating touch actions. This section of the documentation will be\nexpanded upon soon.  # ruby\ntouch_action = Appium::TouchAction.new\nelement  = find_element :accessibility_id, 'Buttons, Various uses of UIButton'\ntouch_action.press(element: element, x: 10, y: 10).perform  # python\naction = TouchAction(driver)\naction.press(element=el, x=10, y=10).release().perform()  // java\nTouchAction action = new TouchAction(driver)\n.press(mapview, 10, 10)\n.release().\nperform();  // javascript\nvar action = new wd.TouchAction(driver);\naction\n  .tap({el: el, x: 10, y: 10})\n  .release();\nreturn action.perform(); // returns a promise  // php\n$action = $this->initiateTouchAction();\n               ->press(array('element' => $el))\n               ->release()\n               ->perform();\n\n$action1 = $this->initiateTouchAction();\n$action1->press(array('element' => $els[0]))\n        ->moveTo(array('x' => 10, 'y' => 0))\n        ->moveTo(array('x' => 10, 'y' => -75))\n        ->moveTo(array('x' => 10, 'y' => -600))\n        ->release();\n\n$action2 = $this->initiateTouchAction();\n$action2->press(array('element' => $els[1]))\n        ->moveTo(array('x' => 10, 'y' => 10))\n        ->moveTo(array('x' => 10, 'y' => -300))\n        ->moveTo(array('x' => 10, 'y' => -600))\n        ->release();\n\n$multiAction = $this->initiateMultiAction();\n$multiAction->add($action1);\n$multiAction->add($action2);\n$multiAction->perform();  // c#\nITouchAction action = new TouchAction(driver);\naction.Press(el, 10, 10).Release();\naction.Perform ();",
            "title": "TouchAction / MultiTouchAction"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#swipe",
            "text": "Simulate a user swipe.  # ruby\nswipe start_x: 75, start_y: 500, end_x: 75, end_y: 0, duration: 0.8  # python\ndriver.swipe(start_x=75, start_y=500, end_x=75, end_y=0, duration=800)  // java\ndriver.swipe(75, 500, 75, 0, 0.8)  // javascript\nfunction swipe(opts) {\n  var action = new wd.TouchAction(this);\n  action\n    .press({x: opts.startX, y: opts.startY})\n    .wait(opts.duration)\n    .moveTo({x: opts.endX, y: opts.endY})\n    .release();\n  return action.perform();\n}\nwd.addPromiseChainMethod('swipe', swipe);\n// ...\nreturn driver.swipe({ startX: 75, startY: 500,\n  endX: 75,  endY: 0, duration: 800 });  // php\n$this->swipe(75, 500, 75, 0, 800);  // c#\ntodo: c#",
            "title": "Swipe"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#pinch",
            "text": "Pinch the screen.  # ruby\npinch 75  # python\ndriver.pinch(element=el)  // java\ndriver.pinch(element);  // javascript\nfunction pinch(el) {\n  return Q.all([\n    el.getSize(),\n    el.getLocation(),\n  ]).then(function(res) {\n    var size = res[0];\n    var loc = res[1];\n    var center = {\n      x: loc.x + size.width / 2,\n      y: loc.y + size.height / 2\n    };\n    var a1 = new wd.TouchAction(this);\n    a1.press({el: el, x: center.x, y:center.y - 100}).moveTo({el: el}).release();\n    var a2 = new wd.TouchAction(this);\n    a2.press({el: el, x: center.x, y: center.y + 100}).moveTo({el: el}).release();\n    var m = new wd.MultiAction(this);\n    m.add(a1, a2);\n    return m.perform();\n  }.bind(this));\n};\nwd.addPromiseChainMethod('pinch', pinch);\nwd.addElementPromiseChainMethod('pinch', function() {\n  return this.browser.pinch(this);\n});\n// ...\nreturn driver.pinch(el);\n// ...\nreturn el.pinch();  $this->pinch($el);  // c#\ndriver.Pinch(25, 25)",
            "title": "Pinch"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#zoom",
            "text": "Zoom the screen.  # ruby\nzoom 200  # python\ndriver.zoom(element=el)  // java\ndriver.zoom(element);  // javascript\nfunction zoom(el) {\n  return Q.all([\n    this.getWindowSize(),\n    this.getLocation(el),\n  ]).then(function(res) {\n    var size = res[0];\n    var loc = res[1];\n    var center = {\n      x: loc.x + size.width / 2,\n      y: loc.y + size.height / 2\n    };\n    var a1 = new wd.TouchAction(this);\n    a1.press({el: el}).moveTo({el: el, x: center.x, y: center.y - 100}).release();\n    var a2 = new wd.TouchAction(this);\n    a2.press({el: el}).moveTo({el: el, x: center.x, y: center.y + 100}).release();\n    var m = new wd.MultiAction(this);\n    m.add(a1, a2);\n    return m.perform();\n  }.bind(this));\n};\nwd.addPromiseChainMethod('zoom', zoom);\nwd.addElementPromiseChainMethod('zoom', function() {\n  return this.browser.zoom(this);\n});\n// ...\nreturn driver.zoom(el);\n// ...\nreturn el.zoom();  // php\n$this->zoom($el);  // c#\ndriver.Zoom(100, 200);",
            "title": "Zoom"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#scroll-to",
            "text": "Scroll to an element.  # ruby\nelement = find_element :accessibility_id, \"Element ID\"\nexecute_script \"mobile: scroll\", direction: \"down\", element: element.ref  # python\ndriver.execute_script(\"mobile: scroll\", {\"direction\": \"down\", \"element\": element.id})  // java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nHashMap<String, String> scrollObject = new HashMap<String, String>();\nscrollObject.put(\"direction\", \"down\");\nscrollObject.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: scroll\", scrollObject);  // javascript\nreturn driver.elementByAccessibilityId().then(function (el) {\n  driver.execute(\"mobile: scroll\", [{direction: \"down\", element: el.value}]);\n});  // php\n$els = $this->elements($this->using('class name')->value('android.widget.TextView'));\n$this->scroll($els[count($els) - 1], $els[0]);  // c#\nDictionary<string, string> scrollObject = new Dictionary<string, string>();\nscrollObject.Add(\"direction\", \"down\");\nscrollObject.Add(\"element\", <element_id>);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: scroll\", scrollObject));",
            "title": "Scroll To"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#pull-file",
            "text": "Pulls a file from the device.  # ruby\npull_file 'Library/AddressBook/AddressBook.sqlitedb'  # python\ndriver.pull_file('Library/AddressBook/AddressBook.sqlitedb')  // java\ndriver.pullFile(\"Library/AddressBook/AddressBook.sqlitedb\");  // javascript\ndriver.pullFile(\"Library/AddressBook/AddressBook.sqlitedb\")\n  .then(function (base64File) { /*...*/ })  // php\n$this->pullFile('Library/AddressBook/AddressBook.sqlitedb');  // c#\ndriver.PullFile(\"Library/AddressBook/AddressBook.sqlitedb\");",
            "title": "Pull file"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#push-file",
            "text": "Pushes a file to the device.  # ruby\ndata = \"some data for the file\"\npath = \"/data/local/tmp/file.txt\"\npush_file path, data  # python\ndata = \"some data for the file\"\npath = \"/data/local/tmp/file.txt\"\ndriver.push_file(path, data.encode('base64'))  // java\nbyte[] data = Base64.encodeBase64(\"some data for the file\".getBytes());\nString path = \"/data/local/tmp/file.txt\";\ndriver.pushFile(path, data)  // javascript\ndriver.pushFile(path, data)  // php\n$path = 'data/local/tmp/test_push_file.txt';\n$data = 'This is the contents of the file to push to the device.';\n$this->pushFile($path, base64_encode($data));  // c#\ndriver.PushFile(\"/data/local/tmp/file.txt\", \"some data for the file\");",
            "title": "Push File"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#settings",
            "text": "Here you will find sample code for getting/setting appium serverSetting.\nFor more information on how they work, and which settings are supported, see the settings docs .  # ruby\ncurrent_settings = get_settings\nupdate_settings someSetting: true  # python\ncurrent_settings = driver.get_settings()\ndriver.update_settings({\"someSetting\": true})  // java\nJsonObject settings = driver.getSettings()\n// java-client doesn't support setting arbitrary settings, just settings which are already provided by appium.\n// So for the 'ignoreUnimportantViews' setting, the following method exists:\ndriver.ignoreUnimportantViews(true);  // javascript\nvar settings = driver.settings();\nbrowser.updateSettings({'someSetting': true});  // php\n$settings = $this->getSettings();\n$this->updateSettings(array('cyberdelia' => \"open\"));  // c#\nDictionary<String, Object>settings = driver.GetSettings();\n// dotnet-driver doesn't support setting arbitrary settings, just settings which are already provided by appium.\n// So for the 'ignoreUnimportantViews' setting, the following method exists:\ndriver.IgnoreUnimportantViews(true);",
            "title": "Settings"
        },
        {
            "location": "/en/writing-running-appium/appium-bindings/#appium-desktop-apps",
            "text": "Appium's desktop app supports OS X, Windows and Linux.   Appium Desktop",
            "title": "Appium Desktop Apps"
        },
        {
            "location": "/en/writing-running-appium/caps/",
            "text": "Appium Desired Capabilities\n\n\nDesired Capabilities are keys and values encoded in a JSON object, sent by\nAppium clients to the server when a new automation session is requested. They\ntell the Appium drivers all kinds of important things about how you want your\ntest to work. Each Appium client builds capabilities in a way specific to the\nclient's language, but at the end of the day, they are sent over to Appium as\nJSON objects.\n\n\nSome important capabilities are demonstrated in the following example:\n\n\n{\n    \"platformName\": \"iOS\",\n    \"platformVersion\": \"11.0\",\n    \"deviceName\": \"iPhone 7\",\n    \"automationName\": \"XCUITest\",\n    \"app\": \"/path/to/my.app\"\n}\n\n\n\n\nThis set of Desired Capabilities expresses the desire for Appium to begin an\nautomation session on an iPhone 7 simulator with iOS 11, using the \nXCUITest\nDriver\n, with \n/path/to/my.app\n as the app\nunder test.\n\n\nThere are many, many Capabilities that Appium supports. Capabilities also\ndiffer by driver, though there are a standard set that most drivers pay\nattention to. What follows are a series of tables outlining the various Desired\nCapabilities available in general and for specific drivers.\n\n\nGeneral Capabilities\n\n\nThese Capabilities span multiple drivers.\n\n\n\n\n\n\n\n\nCapability\n\n\nDescription\n\n\nValues\n\n\n\n\n\n\n\n\n\n\nautomationName\n\n\nWhich automation engine to use\n\n\nAppium\n (default) or \nSelendroid\n or \nUiAutomator2\n or \nEspresso\n for Android or \nXCUITest\n for iOS or \nYouiEngine\n for application built with You.i Engine\n\n\n\n\n\n\nplatformName\n\n\nWhich mobile OS platform to use\n\n\niOS\n, \nAndroid\n, or \nFirefoxOS\n\n\n\n\n\n\nplatformVersion\n\n\nMobile OS version\n\n\ne.g., \n7.1\n, \n4.4\n\n\n\n\n\n\ndeviceName\n\n\nThe kind of mobile device or emulator to use\n\n\niPhone Simulator\n, \niPad Simulator\n, \niPhone Retina 4-inch\n, \nAndroid Emulator\n, \nGalaxy S4\n, etc.... On iOS, this should be one of the valid devices returned by instruments with \ninstruments -s devices\n. On Android this capability is currently ignored, though it remains required.\n\n\n\n\n\n\napp\n\n\nThe absolute local path \nor\n remote http URL to an \n.ipa\n or \n.apk\n file, or a \n.zip\n containing one of these. Appium will attempt to install this app binary on the appropriate device first. Note that this capability is not required for Android if you specify \nappPackage\n and \nappActivity\n capabilities (see below). Incompatible with \nbrowserName\n.\n\n\n/abs/path/to/my.apk\n or \nhttp://myapp.com/app.ipa\n\n\n\n\n\n\nbrowserName\n\n\nName of mobile web browser to automate. Should be an empty string if automating an app instead.\n\n\n'Safari' for iOS and 'Chrome', 'Chromium', or 'Browser' for Android\n\n\n\n\n\n\nnewCommandTimeout\n\n\nHow long (in seconds) Appium will wait for a new command from the client before assuming the client quit and ending the session\n\n\ne.g. \n60\n\n\n\n\n\n\nlanguage\n\n\n(Sim/Emu-only) Language to set for the simulator / emulator\n\n\ne.g. \nfr\n\n\n\n\n\n\nlocale\n\n\n(Sim/Emu-only) Locale to set for the simulator / emulator\n\n\ne.g. \nfr_CA\n\n\n\n\n\n\nudid\n\n\nUnique device identifier of the connected physical device\n\n\ne.g. \n1ae203187fc012g\n\n\n\n\n\n\norientation\n\n\n(Sim/Emu-only) start in a certain orientation\n\n\nLANDSCAPE\n or \nPORTRAIT\n\n\n\n\n\n\nautoWebview\n\n\nMove directly into Webview context. Default \nfalse\n\n\ntrue\n, \nfalse\n\n\n\n\n\n\nnoReset\n\n\nDon't reset app state before this session. See \nhere\n for more details\n\n\ntrue\n, \nfalse\n\n\n\n\n\n\nfullReset\n\n\nPerform a complete reset. See \nhere\n for more details\n\n\ntrue\n, \nfalse\n\n\n\n\n\n\neventTimings\n\n\nEnable or disable the reporting of the timings for various Appium-internal events (e.g., the start and end of each command, etc.). Defaults to \nfalse\n. To enable, use \ntrue\n. The timings are then reported as \nevents\n property on response to querying the current session. See the \nevent timing docs\n for the the structure of this response.\n\n\ne.g., \ntrue\n\n\n\n\n\n\nenablePerformanceLogging\n\n\n(Web and webview only) Enable Chromedriver's (on Android) or Safari's (on iOS) performance logging (default \nfalse\n)\n\n\ntrue\n, \nfalse\n\n\n\n\n\n\n\n\nAndroid Only\n\n\nThese Capabilities are available only on Android-based drivers (like\n\nUiAutomator2\n for example).\n\n\n\n\n\n\n\n\nCapability\n\n\nDescription\n\n\nValues\n\n\n\n\n\n\n\n\n\n\nappActivity\n\n\nActivity name for the Android activity you want to launch from your package. This often needs to be preceded by a \n.\n (e.g., \n.MainActivity\n instead of \nMainActivity\n)\n\n\nMainActivity\n, \n.Settings\n\n\n\n\n\n\nappPackage\n\n\nJava package of the Android app you want to run\n\n\ncom.example.android.myApp\n, \ncom.android.settings\n\n\n\n\n\n\nappWaitActivity\n\n\nActivity name/names, comma separated, for the Android activity you want to wait for\n\n\nSplashActivity\n, \nSplashActivity,OtherActivity\n, \n*\n, \n*.SplashActivity\n\n\n\n\n\n\nappWaitPackage\n\n\nJava package of the Android app you want to wait for\n\n\ncom.example.android.myApp\n, \ncom.android.settings\n\n\n\n\n\n\nappWaitDuration\n\n\nTimeout in milliseconds used to wait for the appWaitActivity to launch (default \n20000\n)\n\n\n30000\n\n\n\n\n\n\ndeviceReadyTimeout\n\n\nTimeout in seconds while waiting for device to become ready\n\n\n5\n\n\n\n\n\n\nandroidCoverage\n\n\nFully qualified instrumentation class. Passed to -w in adb shell am instrument -e coverage true -w\n\n\ncom.my.Pkg/com.my.Pkg.instrumentation.MyInstrumentation\n\n\n\n\n\n\nandroidCoverageEndIntent\n\n\nA broadcast action implemented by yourself which is used to dump coverage into file system. Passed to -a in adb shell am broadcast -a\n\n\ncom.example.pkg.END_EMMA\n\n\n\n\n\n\nandroidDeviceReadyTimeout\n\n\nTimeout in seconds used to wait for a device to become ready after booting\n\n\ne.g., \n30\n\n\n\n\n\n\nandroidInstallTimeout\n\n\nTimeout in milliseconds used to wait for an apk to install to the device. Defaults to \n90000\n\n\ne.g., \n90000\n\n\n\n\n\n\nandroidInstallPath\n\n\nThe name of the directory on the device in which the apk will be push before install. Defaults to \n/data/local/tmp\n\n\ne.g. \n/sdcard/Downloads/\n\n\n\n\n\n\nadbPort\n\n\nPort used to connect to the ADB server (default \n5037\n)\n\n\n5037\n\n\n\n\n\n\nremoteAdbHost\n\n\nOptional remote ADB server host\n\n\ne.g.: 192.168.0.101\n\n\n\n\n\n\nandroidDeviceSocket\n\n\nDevtools socket name. Needed only when tested app is a Chromium embedding browser. The socket is open by the browser and Chromedriver connects to it as a devtools client.\n\n\ne.g., \nchrome_devtools_remote\n\n\n\n\n\n\navd\n\n\nName of avd to launch\n\n\ne.g., \napi19\n\n\n\n\n\n\navdLaunchTimeout\n\n\nHow long to wait in milliseconds for an avd to launch and connect to ADB (default \n120000\n)\n\n\n300000\n\n\n\n\n\n\navdReadyTimeout\n\n\nHow long to wait in milliseconds for an avd to finish its boot animations (default \n120000\n)\n\n\n300000\n\n\n\n\n\n\navdArgs\n\n\nAdditional emulator arguments used when launching an avd\n\n\ne.g., \n-netfast\n\n\n\n\n\n\nuseKeystore\n\n\nUse a custom keystore to sign apks, default \nfalse\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nkeystorePath\n\n\nPath to custom keystore, default ~/.android/debug.keystore\n\n\ne.g., \n/path/to.keystore\n\n\n\n\n\n\nkeystorePassword\n\n\nPassword for custom keystore\n\n\ne.g., \nfoo\n\n\n\n\n\n\nkeyAlias\n\n\nAlias for key\n\n\ne.g., \nandroiddebugkey\n\n\n\n\n\n\nkeyPassword\n\n\nPassword for key\n\n\ne.g., \nfoo\n\n\n\n\n\n\nchromedriverExecutable\n\n\nThe absolute local path to webdriver executable (if Chromium embedder provides its own webdriver, it should be used instead of original chromedriver bundled with Appium)\n\n\n/abs/path/to/webdriver\n\n\n\n\n\n\nautoWebviewTimeout\n\n\nAmount of time to wait for Webview context to become active, in ms. Defaults to \n2000\n\n\ne.g. \n4\n\n\n\n\n\n\nintentAction\n\n\nIntent action which will be used to start activity (default \nandroid.intent.action.MAIN\n)\n\n\ne.g.\nandroid.intent.action.MAIN\n, \nandroid.intent.action.VIEW\n\n\n\n\n\n\nintentCategory\n\n\nIntent category which will be used to start activity (default \nandroid.intent.category.LAUNCHER\n)\n\n\ne.g. \nandroid.intent.category.LAUNCHER\n, \nandroid.intent.category.APP_CONTACTS\n\n\n\n\n\n\nintentFlags\n\n\nFlags that will be used to start activity (default \n0x10200000\n)\n\n\ne.g. \n0x10200000\n\n\n\n\n\n\noptionalIntentArguments\n\n\nAdditional intent arguments that will be used to start activity. See \nIntent arguments\n\n\ne.g. \n--esn <EXTRA_KEY>\n, \n--ez <EXTRA_KEY> <EXTRA_BOOLEAN_VALUE>\n, etc.\n\n\n\n\n\n\ndontStopAppOnReset\n\n\nDoesn't stop the process of the app under test, before starting the app using adb. If the app under test is created by another anchor app, setting this false, allows the process of the anchor app to be still alive, during the start of the test app using adb. In other words, with \ndontStopAppOnReset\n set to \ntrue\n, we will not include the \n-S\n flag in the \nadb shell am start\n call. With this capability omitted or set to \nfalse\n, we include the \n-S\n flag. Default \nfalse\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nunicodeKeyboard\n\n\nEnable Unicode input, default \nfalse\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nresetKeyboard\n\n\nReset keyboard to its original state, after running Unicode tests with \nunicodeKeyboard\n capability. Ignored if used alone. Default \nfalse\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nnoSign\n\n\nSkip checking and signing of app with debug keys, will work only with UiAutomator and not with selendroid, default \nfalse\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nignoreUnimportantViews\n\n\nCalls the \nsetCompressedLayoutHierarchy()\n uiautomator function. This capability can speed up test execution, since Accessibility commands will run faster ignoring some elements. The ignored elements will not be findable, which is why this capability has also been implemented as a toggle-able \nsetting\n as well as a capability. Defaults to \nfalse\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\ndisableAndroidWatchers\n\n\nDisables android watchers that watch for application not responding and application crash, this will reduce cpu usage on android device/emulator. This capability will work only with UiAutomator and not with selendroid, default \nfalse\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nchromeOptions\n\n\nAllows passing chromeOptions capability for ChromeDriver. For more information see \nchromeOptions\n\n\nchromeOptions: {args: ['--disable-popup-blocking']}\n\n\n\n\n\n\nrecreateChromeDriverSessions\n\n\nKill ChromeDriver session when moving to a non-ChromeDriver webview. Defaults to \nfalse\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nnativeWebScreenshot\n\n\nIn a web context, use native (adb) method for taking a screenshot, rather than proxying to ChromeDriver. Defaults to \nfalse\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nandroidScreenshotPath\n\n\nThe name of the directory on the device in which the screenshot will be put. Defaults to \n/data/local/tmp\n\n\ne.g. \n/sdcard/screenshots/\n\n\n\n\n\n\nautoGrantPermissions\n\n\nHave Appium automatically determine which permissions your app requires and grant them to the app on install. Defaults to \nfalse\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nnetworkSpeed\n\n\nSet the network speed emulation. Specify the maximum network upload and download speeds. Defaults to \nfull\n\n\n['full','gsm', 'edge', 'hscsd', 'gprs', 'umts', 'hsdpa', 'lte', 'evdo']\n Check \n-netspeed option\n more info about speed emulation for avds\n\n\n\n\n\n\ngpsEnabled\n\n\nToggle gps location provider for emulators before starting the session. By default the emulator will have this option enabled or not according to how it has been provisioned.\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nisHeadless\n\n\nSet this capability to \ntrue\n to run the Emulator headless when device display is not needed to be visible. \nfalse\n is the default value. \nisHeadless\n is also support for iOS, check XCUITest-specific capabilities.\n\n\ne.g., \ntrue\n\n\n\n\n\n\n\n\niOS Only\n\n\nThese Capabilities are available only on the \nXCUITest\nDriver\n and the deprecated \nUIAutomation\nDriver\n.\n\n\n\n\n\n\n\n\nCapability\n\n\nDescription\n\n\nValues\n\n\n\n\n\n\n\n\n\n\ncalendarFormat\n\n\n(Sim-only) Calendar format to set for the iOS Simulator\n\n\ne.g. \ngregorian\n\n\n\n\n\n\nbundleId\n\n\nBundle ID of the app under test. Useful for starting an app on a real device or for using other caps which require the bundle ID during test startup. To run a test on a real device using the bundle ID, you may omit the 'app' capability, but you must provide 'udid'.\n\n\ne.g. \nio.appium.TestApp\n\n\n\n\n\n\nudid\n\n\nUnique device identifier of the connected physical device\n\n\ne.g. \n1ae203187fc012g\n\n\n\n\n\n\nlaunchTimeout\n\n\nAmount of time in ms to wait for instruments before assuming it hung and failing the session\n\n\ne.g. \n20000\n\n\n\n\n\n\nlocationServicesEnabled\n\n\n(Sim-only) Force location services to be either on or off. Default is to keep current sim setting.\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nlocationServicesAuthorized\n\n\n(Sim-only) Set location services to be authorized or not authorized for app via plist, so that location services alert doesn't pop up. Default is to keep current sim setting. Note that if you use this setting you MUST also use the \nbundleId\n capability to send in your app's bundle ID.\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nautoAcceptAlerts\n\n\nAccept all iOS alerts automatically if they pop up. This includes privacy access permission alerts (e.g., location, contacts, photos). Default is false. Does not work on \nXCUITest\n-based tests.\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nautoDismissAlerts\n\n\nDismiss all iOS alerts automatically if they pop up. This includes privacy access permission alerts (e.g., location, contacts, photos). Default is false. Does not work on \nXCUITest\n-based tests.\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nnativeInstrumentsLib\n\n\nUse native intruments lib (ie disable instruments-without-delay).\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nnativeWebTap\n\n\n(Sim-only) Enable \"real\", non-javascript-based web taps in Safari. Default: \nfalse\n. Warning: depending on viewport size/ratio this might not accurately tap an element\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nsafariInitialUrl\n\n\n(Sim-only) (>= 8.1) Initial safari url, default is a local welcome page\n\n\ne.g. \nhttps://www.github.com\n\n\n\n\n\n\nsafariAllowPopups\n\n\n(Sim-only) Allow javascript to open new windows in Safari. Default keeps current sim setting\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nsafariIgnoreFraudWarning\n\n\n(Sim-only) Prevent Safari from showing a fraudulent website warning. Default keeps current sim setting.\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nsafariOpenLinksInBackground\n\n\n(Sim-only) Whether Safari should allow links to open in new windows. Default keeps current sim setting.\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nkeepKeyChains\n\n\n(Sim-only) Whether to keep keychains (Library/Keychains) when appium session is started/finished\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nlocalizableStringsDir\n\n\nWhere to look for localizable strings. Default \nen.lproj\n\n\nen.lproj\n\n\n\n\n\n\nprocessArguments\n\n\nArguments to pass to the AUT using instruments\n\n\ne.g., \n-myflag\n\n\n\n\n\n\ninterKeyDelay\n\n\nThe delay, in ms, between keystrokes sent to an element when typing.\n\n\ne.g., \n100\n\n\n\n\n\n\nshowIOSLog\n\n\nWhether to show any logs captured from a device in the appium logs. Default \nfalse\n\n\ntrue\n or \nfalse\n\n\n\n\n\n\nsendKeyStrategy\n\n\nstrategy to use to type test into a test field. Simulator default: \noneByOne\n. Real device default: \ngrouped\n\n\noneByOne\n, \ngrouped\n or \nsetValue\n\n\n\n\n\n\nscreenshotWaitTimeout\n\n\nMax timeout in sec to wait for a screenshot to be generated. default: 10\n\n\ne.g., \n5\n\n\n\n\n\n\nwaitForAppScript\n\n\nThe ios automation script used to determined if the app has been launched, by default the system wait for the page source not to be empty. The result must be a boolean\n\n\ne.g. \ntrue;\n, \ntarget.elements().length > 0;\n, \n$.delay(5000); true;\n\n\n\n\n\n\nwebviewConnectRetries\n\n\nNumber of times to send connection message to remote debugger, to get webview. Default: \n8\n\n\ne.g., \n12\n\n\n\n\n\n\nappName\n\n\nThe display name of the application under test. Used to automate backgrounding the app in iOS 9+.\n\n\ne.g., \nUICatalog\n\n\n\n\n\n\ncustomSSLCert\n\n\n(Sim/Emu-only) Add an SSL certificate to simulator.\n\n\ne.g. \n-----BEGIN CERTIFICATE-----MIIFWjCCBEKg...\n-----END CERTIFICATE-----\n\n\n\n\n\n\nwebkitResponseTimeout\n\n\n(Real device only) Set the time, in ms, to wait for a response from WebKit in a Safari session. Defaults to \n5000\n\n\ne.g., \n10000\n\n\n\n\n\n\n\n\niOS Only, using XCUITest\n\n\n(For XCUITest-specific capabilities, please refer to the documentation on the \nXCUITest Driver repo\n itself.)\n\n\nYou.i Engine Only\n\n\n(For You.i Engine-specific capabilities, please refer to the documentation on the \nYou.i Engine driver\n itself.)",
            "title": "Caps"
        },
        {
            "location": "/en/writing-running-appium/caps/#appium-desired-capabilities",
            "text": "Desired Capabilities are keys and values encoded in a JSON object, sent by\nAppium clients to the server when a new automation session is requested. They\ntell the Appium drivers all kinds of important things about how you want your\ntest to work. Each Appium client builds capabilities in a way specific to the\nclient's language, but at the end of the day, they are sent over to Appium as\nJSON objects.  Some important capabilities are demonstrated in the following example:  {\n    \"platformName\": \"iOS\",\n    \"platformVersion\": \"11.0\",\n    \"deviceName\": \"iPhone 7\",\n    \"automationName\": \"XCUITest\",\n    \"app\": \"/path/to/my.app\"\n}  This set of Desired Capabilities expresses the desire for Appium to begin an\nautomation session on an iPhone 7 simulator with iOS 11, using the  XCUITest\nDriver , with  /path/to/my.app  as the app\nunder test.  There are many, many Capabilities that Appium supports. Capabilities also\ndiffer by driver, though there are a standard set that most drivers pay\nattention to. What follows are a series of tables outlining the various Desired\nCapabilities available in general and for specific drivers.",
            "title": "Appium Desired Capabilities"
        },
        {
            "location": "/en/writing-running-appium/caps/#general-capabilities",
            "text": "These Capabilities span multiple drivers.     Capability  Description  Values      automationName  Which automation engine to use  Appium  (default) or  Selendroid  or  UiAutomator2  or  Espresso  for Android or  XCUITest  for iOS or  YouiEngine  for application built with You.i Engine    platformName  Which mobile OS platform to use  iOS ,  Android , or  FirefoxOS    platformVersion  Mobile OS version  e.g.,  7.1 ,  4.4    deviceName  The kind of mobile device or emulator to use  iPhone Simulator ,  iPad Simulator ,  iPhone Retina 4-inch ,  Android Emulator ,  Galaxy S4 , etc.... On iOS, this should be one of the valid devices returned by instruments with  instruments -s devices . On Android this capability is currently ignored, though it remains required.    app  The absolute local path  or  remote http URL to an  .ipa  or  .apk  file, or a  .zip  containing one of these. Appium will attempt to install this app binary on the appropriate device first. Note that this capability is not required for Android if you specify  appPackage  and  appActivity  capabilities (see below). Incompatible with  browserName .  /abs/path/to/my.apk  or  http://myapp.com/app.ipa    browserName  Name of mobile web browser to automate. Should be an empty string if automating an app instead.  'Safari' for iOS and 'Chrome', 'Chromium', or 'Browser' for Android    newCommandTimeout  How long (in seconds) Appium will wait for a new command from the client before assuming the client quit and ending the session  e.g.  60    language  (Sim/Emu-only) Language to set for the simulator / emulator  e.g.  fr    locale  (Sim/Emu-only) Locale to set for the simulator / emulator  e.g.  fr_CA    udid  Unique device identifier of the connected physical device  e.g.  1ae203187fc012g    orientation  (Sim/Emu-only) start in a certain orientation  LANDSCAPE  or  PORTRAIT    autoWebview  Move directly into Webview context. Default  false  true ,  false    noReset  Don't reset app state before this session. See  here  for more details  true ,  false    fullReset  Perform a complete reset. See  here  for more details  true ,  false    eventTimings  Enable or disable the reporting of the timings for various Appium-internal events (e.g., the start and end of each command, etc.). Defaults to  false . To enable, use  true . The timings are then reported as  events  property on response to querying the current session. See the  event timing docs  for the the structure of this response.  e.g.,  true    enablePerformanceLogging  (Web and webview only) Enable Chromedriver's (on Android) or Safari's (on iOS) performance logging (default  false )  true ,  false",
            "title": "General Capabilities"
        },
        {
            "location": "/en/writing-running-appium/caps/#android-only",
            "text": "These Capabilities are available only on Android-based drivers (like UiAutomator2  for example).     Capability  Description  Values      appActivity  Activity name for the Android activity you want to launch from your package. This often needs to be preceded by a  .  (e.g.,  .MainActivity  instead of  MainActivity )  MainActivity ,  .Settings    appPackage  Java package of the Android app you want to run  com.example.android.myApp ,  com.android.settings    appWaitActivity  Activity name/names, comma separated, for the Android activity you want to wait for  SplashActivity ,  SplashActivity,OtherActivity ,  * ,  *.SplashActivity    appWaitPackage  Java package of the Android app you want to wait for  com.example.android.myApp ,  com.android.settings    appWaitDuration  Timeout in milliseconds used to wait for the appWaitActivity to launch (default  20000 )  30000    deviceReadyTimeout  Timeout in seconds while waiting for device to become ready  5    androidCoverage  Fully qualified instrumentation class. Passed to -w in adb shell am instrument -e coverage true -w  com.my.Pkg/com.my.Pkg.instrumentation.MyInstrumentation    androidCoverageEndIntent  A broadcast action implemented by yourself which is used to dump coverage into file system. Passed to -a in adb shell am broadcast -a  com.example.pkg.END_EMMA    androidDeviceReadyTimeout  Timeout in seconds used to wait for a device to become ready after booting  e.g.,  30    androidInstallTimeout  Timeout in milliseconds used to wait for an apk to install to the device. Defaults to  90000  e.g.,  90000    androidInstallPath  The name of the directory on the device in which the apk will be push before install. Defaults to  /data/local/tmp  e.g.  /sdcard/Downloads/    adbPort  Port used to connect to the ADB server (default  5037 )  5037    remoteAdbHost  Optional remote ADB server host  e.g.: 192.168.0.101    androidDeviceSocket  Devtools socket name. Needed only when tested app is a Chromium embedding browser. The socket is open by the browser and Chromedriver connects to it as a devtools client.  e.g.,  chrome_devtools_remote    avd  Name of avd to launch  e.g.,  api19    avdLaunchTimeout  How long to wait in milliseconds for an avd to launch and connect to ADB (default  120000 )  300000    avdReadyTimeout  How long to wait in milliseconds for an avd to finish its boot animations (default  120000 )  300000    avdArgs  Additional emulator arguments used when launching an avd  e.g.,  -netfast    useKeystore  Use a custom keystore to sign apks, default  false  true  or  false    keystorePath  Path to custom keystore, default ~/.android/debug.keystore  e.g.,  /path/to.keystore    keystorePassword  Password for custom keystore  e.g.,  foo    keyAlias  Alias for key  e.g.,  androiddebugkey    keyPassword  Password for key  e.g.,  foo    chromedriverExecutable  The absolute local path to webdriver executable (if Chromium embedder provides its own webdriver, it should be used instead of original chromedriver bundled with Appium)  /abs/path/to/webdriver    autoWebviewTimeout  Amount of time to wait for Webview context to become active, in ms. Defaults to  2000  e.g.  4    intentAction  Intent action which will be used to start activity (default  android.intent.action.MAIN )  e.g. android.intent.action.MAIN ,  android.intent.action.VIEW    intentCategory  Intent category which will be used to start activity (default  android.intent.category.LAUNCHER )  e.g.  android.intent.category.LAUNCHER ,  android.intent.category.APP_CONTACTS    intentFlags  Flags that will be used to start activity (default  0x10200000 )  e.g.  0x10200000    optionalIntentArguments  Additional intent arguments that will be used to start activity. See  Intent arguments  e.g.  --esn <EXTRA_KEY> ,  --ez <EXTRA_KEY> <EXTRA_BOOLEAN_VALUE> , etc.    dontStopAppOnReset  Doesn't stop the process of the app under test, before starting the app using adb. If the app under test is created by another anchor app, setting this false, allows the process of the anchor app to be still alive, during the start of the test app using adb. In other words, with  dontStopAppOnReset  set to  true , we will not include the  -S  flag in the  adb shell am start  call. With this capability omitted or set to  false , we include the  -S  flag. Default  false  true  or  false    unicodeKeyboard  Enable Unicode input, default  false  true  or  false    resetKeyboard  Reset keyboard to its original state, after running Unicode tests with  unicodeKeyboard  capability. Ignored if used alone. Default  false  true  or  false    noSign  Skip checking and signing of app with debug keys, will work only with UiAutomator and not with selendroid, default  false  true  or  false    ignoreUnimportantViews  Calls the  setCompressedLayoutHierarchy()  uiautomator function. This capability can speed up test execution, since Accessibility commands will run faster ignoring some elements. The ignored elements will not be findable, which is why this capability has also been implemented as a toggle-able  setting  as well as a capability. Defaults to  false  true  or  false    disableAndroidWatchers  Disables android watchers that watch for application not responding and application crash, this will reduce cpu usage on android device/emulator. This capability will work only with UiAutomator and not with selendroid, default  false  true  or  false    chromeOptions  Allows passing chromeOptions capability for ChromeDriver. For more information see  chromeOptions  chromeOptions: {args: ['--disable-popup-blocking']}    recreateChromeDriverSessions  Kill ChromeDriver session when moving to a non-ChromeDriver webview. Defaults to  false  true  or  false    nativeWebScreenshot  In a web context, use native (adb) method for taking a screenshot, rather than proxying to ChromeDriver. Defaults to  false  true  or  false    androidScreenshotPath  The name of the directory on the device in which the screenshot will be put. Defaults to  /data/local/tmp  e.g.  /sdcard/screenshots/    autoGrantPermissions  Have Appium automatically determine which permissions your app requires and grant them to the app on install. Defaults to  false  true  or  false    networkSpeed  Set the network speed emulation. Specify the maximum network upload and download speeds. Defaults to  full  ['full','gsm', 'edge', 'hscsd', 'gprs', 'umts', 'hsdpa', 'lte', 'evdo']  Check  -netspeed option  more info about speed emulation for avds    gpsEnabled  Toggle gps location provider for emulators before starting the session. By default the emulator will have this option enabled or not according to how it has been provisioned.  true  or  false    isHeadless  Set this capability to  true  to run the Emulator headless when device display is not needed to be visible.  false  is the default value.  isHeadless  is also support for iOS, check XCUITest-specific capabilities.  e.g.,  true",
            "title": "Android Only"
        },
        {
            "location": "/en/writing-running-appium/caps/#ios-only",
            "text": "These Capabilities are available only on the  XCUITest\nDriver  and the deprecated  UIAutomation\nDriver .     Capability  Description  Values      calendarFormat  (Sim-only) Calendar format to set for the iOS Simulator  e.g.  gregorian    bundleId  Bundle ID of the app under test. Useful for starting an app on a real device or for using other caps which require the bundle ID during test startup. To run a test on a real device using the bundle ID, you may omit the 'app' capability, but you must provide 'udid'.  e.g.  io.appium.TestApp    udid  Unique device identifier of the connected physical device  e.g.  1ae203187fc012g    launchTimeout  Amount of time in ms to wait for instruments before assuming it hung and failing the session  e.g.  20000    locationServicesEnabled  (Sim-only) Force location services to be either on or off. Default is to keep current sim setting.  true  or  false    locationServicesAuthorized  (Sim-only) Set location services to be authorized or not authorized for app via plist, so that location services alert doesn't pop up. Default is to keep current sim setting. Note that if you use this setting you MUST also use the  bundleId  capability to send in your app's bundle ID.  true  or  false    autoAcceptAlerts  Accept all iOS alerts automatically if they pop up. This includes privacy access permission alerts (e.g., location, contacts, photos). Default is false. Does not work on  XCUITest -based tests.  true  or  false    autoDismissAlerts  Dismiss all iOS alerts automatically if they pop up. This includes privacy access permission alerts (e.g., location, contacts, photos). Default is false. Does not work on  XCUITest -based tests.  true  or  false    nativeInstrumentsLib  Use native intruments lib (ie disable instruments-without-delay).  true  or  false    nativeWebTap  (Sim-only) Enable \"real\", non-javascript-based web taps in Safari. Default:  false . Warning: depending on viewport size/ratio this might not accurately tap an element  true  or  false    safariInitialUrl  (Sim-only) (>= 8.1) Initial safari url, default is a local welcome page  e.g.  https://www.github.com    safariAllowPopups  (Sim-only) Allow javascript to open new windows in Safari. Default keeps current sim setting  true  or  false    safariIgnoreFraudWarning  (Sim-only) Prevent Safari from showing a fraudulent website warning. Default keeps current sim setting.  true  or  false    safariOpenLinksInBackground  (Sim-only) Whether Safari should allow links to open in new windows. Default keeps current sim setting.  true  or  false    keepKeyChains  (Sim-only) Whether to keep keychains (Library/Keychains) when appium session is started/finished  true  or  false    localizableStringsDir  Where to look for localizable strings. Default  en.lproj  en.lproj    processArguments  Arguments to pass to the AUT using instruments  e.g.,  -myflag    interKeyDelay  The delay, in ms, between keystrokes sent to an element when typing.  e.g.,  100    showIOSLog  Whether to show any logs captured from a device in the appium logs. Default  false  true  or  false    sendKeyStrategy  strategy to use to type test into a test field. Simulator default:  oneByOne . Real device default:  grouped  oneByOne ,  grouped  or  setValue    screenshotWaitTimeout  Max timeout in sec to wait for a screenshot to be generated. default: 10  e.g.,  5    waitForAppScript  The ios automation script used to determined if the app has been launched, by default the system wait for the page source not to be empty. The result must be a boolean  e.g.  true; ,  target.elements().length > 0; ,  $.delay(5000); true;    webviewConnectRetries  Number of times to send connection message to remote debugger, to get webview. Default:  8  e.g.,  12    appName  The display name of the application under test. Used to automate backgrounding the app in iOS 9+.  e.g.,  UICatalog    customSSLCert  (Sim/Emu-only) Add an SSL certificate to simulator.  e.g.  -----BEGIN CERTIFICATE-----MIIFWjCCBEKg... -----END CERTIFICATE-----    webkitResponseTimeout  (Real device only) Set the time, in ms, to wait for a response from WebKit in a Safari session. Defaults to  5000  e.g.,  10000",
            "title": "iOS Only"
        },
        {
            "location": "/en/writing-running-appium/caps/#ios-only-using-xcuitest",
            "text": "(For XCUITest-specific capabilities, please refer to the documentation on the  XCUITest Driver repo  itself.)",
            "title": "iOS Only, using XCUITest"
        },
        {
            "location": "/en/writing-running-appium/caps/#youi-engine-only",
            "text": "(For You.i Engine-specific capabilities, please refer to the documentation on the  You.i Engine driver  itself.)",
            "title": "You.i Engine Only"
        },
        {
            "location": "/en/writing-running-appium/default-capabilities-arg/",
            "text": "The --default-capabilities flag\n\n\nAppium 1.5 does away with most CLI flags that existed previously; the remainder can be converted into JSON and made part of the \n--default-capabilities\n flag. For example:\n\n\n# raw JSON as an argument\n--default-capabilities '{\"app\": \"myapp.app\", \"deviceName\": \"iPhone Simulator\"}'\n# or the name of a JSON file\n--default-capabilities /path/to/file.json\n\n\n\n\nWindows users\n will need to escape the quotes in JSON passed on the command line: \n--default-capabilities \"{\\\"app\\\": \\\"myapp.app\\\"}\"\n\n\n\n\n\n\n\n\nFlag\n\n\nJSON key\n\n\n\n\n\n\n\n\n\n\n--keep-artifacts\n\n\nkeepArtifacts\n\n\n\n\n\n\n--platform-name\n\n\nplatformName\n\n\n\n\n\n\n--platform-version\n\n\nplatformVersion\n\n\n\n\n\n\n--automation-name\n\n\nautomationName\n\n\n\n\n\n\n--device-name\n\n\ndeviceName\n\n\n\n\n\n\n--browser-name\n\n\nbrowserName\n\n\n\n\n\n\n--app\n\n\napp\n\n\n\n\n\n\n--launch-timeout\n\n\nlaunchTimeout\n\n\n\n\n\n\n--language\n\n\nlanguage\n\n\n\n\n\n\n--locale\n\n\nlocale\n\n\n\n\n\n\n--udid\n\n\nudid\n\n\n\n\n\n\n--orientation\n\n\norientation\n\n\n\n\n\n\n--no-reset\n\n\nnoReset\n\n\n\n\n\n\n--full-reset\n\n\nfullReset\n\n\n\n\n\n\n--app-pkg\n\n\nappPackage\n\n\n\n\n\n\n--app-activity\n\n\nappActivity\n\n\n\n\n\n\n--app-wait-package\n\n\nappWaitPackage\n\n\n\n\n\n\n--app-wait-activity\n\n\nappWaitActivity\n\n\n\n\n\n\n--device-ready-timeout\n\n\ndeviceReadyTimeout\n\n\n\n\n\n\n--android-coverage\n\n\nandroidCoverage\n\n\n\n\n\n\n--avd\n\n\navd\n\n\n\n\n\n\n--avd-args\n\n\navdArgs\n\n\n\n\n\n\n--use-keystore\n\n\nuseKeystore\n\n\n\n\n\n\n--keystore-path\n\n\nkeystorePath\n\n\n\n\n\n\n--keystore-password\n\n\nkeystorePassword\n\n\n\n\n\n\n--key-alias\n\n\nkeyAlias\n\n\n\n\n\n\n--key-password\n\n\nkeyPassword\n\n\n\n\n\n\n--intent-action\n\n\nintentAction\n\n\n\n\n\n\n--intent-category\n\n\nintentCategory\n\n\n\n\n\n\n--intent-flags\n\n\nintentFlags\n\n\n\n\n\n\n--intent-args\n\n\noptionalIntentArguments\n\n\n\n\n\n\n--dont-stop-app-on-reset\n\n\ndontStopAppOnReset\n\n\n\n\n\n\n--calendar-format\n\n\ncalendarFormat\n\n\n\n\n\n\n--native-instruments-lib\n\n\nnativeInstrumentsLib\n\n\n\n\n\n\n--keep-keychains\n\n\nkeepKeyChains\n\n\n\n\n\n\n--localizable-strings-dir\n\n\nlocalizableStringsDir\n\n\n\n\n\n\n--show-ios-log\n\n\nshowIOSLog\n\n\n\n\n\n\n--reboot\n\n\nreboot",
            "title": "Default capabilities arg"
        },
        {
            "location": "/en/writing-running-appium/default-capabilities-arg/#the-default-capabilities-flag",
            "text": "Appium 1.5 does away with most CLI flags that existed previously; the remainder can be converted into JSON and made part of the  --default-capabilities  flag. For example:  # raw JSON as an argument\n--default-capabilities '{\"app\": \"myapp.app\", \"deviceName\": \"iPhone Simulator\"}'\n# or the name of a JSON file\n--default-capabilities /path/to/file.json  Windows users  will need to escape the quotes in JSON passed on the command line:  --default-capabilities \"{\\\"app\\\": \\\"myapp.app\\\"}\"     Flag  JSON key      --keep-artifacts  keepArtifacts    --platform-name  platformName    --platform-version  platformVersion    --automation-name  automationName    --device-name  deviceName    --browser-name  browserName    --app  app    --launch-timeout  launchTimeout    --language  language    --locale  locale    --udid  udid    --orientation  orientation    --no-reset  noReset    --full-reset  fullReset    --app-pkg  appPackage    --app-activity  appActivity    --app-wait-package  appWaitPackage    --app-wait-activity  appWaitActivity    --device-ready-timeout  deviceReadyTimeout    --android-coverage  androidCoverage    --avd  avd    --avd-args  avdArgs    --use-keystore  useKeystore    --keystore-path  keystorePath    --keystore-password  keystorePassword    --key-alias  keyAlias    --key-password  keyPassword    --intent-action  intentAction    --intent-category  intentCategory    --intent-flags  intentFlags    --intent-args  optionalIntentArguments    --dont-stop-app-on-reset  dontStopAppOnReset    --calendar-format  calendarFormat    --native-instruments-lib  nativeInstrumentsLib    --keep-keychains  keepKeyChains    --localizable-strings-dir  localizableStringsDir    --show-ios-log  showIOSLog    --reboot  reboot",
            "title": "The --default-capabilities flag"
        },
        {
            "location": "/en/writing-running-appium/finding-elements/",
            "text": "Finding and interacting with elements\n\n\nAppium supports a subset of the WebDriver locator strategies:\n\n\n\n\nfind by \"class\" (i.e., ui component type)\n\n\nfind by \"xpath\" (i.e., an abstract representation of a path to an element,\nwith certain constraints)\n\n\n\n\nAppium additionally supports some of the \nMobile JSON Wire Protocol\n locator strategies\n\n\n\n\n-ios uiautomation\n: a string corresponding to a recursive element search\nusing the \nUIAutomation library\n (iOS 9.3 and below only)\n\n\n-android uiautomator\n: a string corresponding to a recursive element\nsearch using the \nUiAutomator Api\n (Android-only)\n\n\naccessibility id\n: a string corresponding to a recursive element search\nusing the Id/Name that the native Accessibility options utilize.\n\n\n\n\nIssues\n\n\nThere's a known issue with table cell elements becoming invalidated before\nthere's time to interact with them. We're working on a fix\n\n\nUsing Appium Desktop To Locate Elements\n\n\nAppium provides you with a neat tool that allows you to find the the elements\nyou're looking for. With \nAppium Desktop\n you \ncan find any element and its locators by either clicking the element on the screenshot \nimage, or locating it in the source tree.\n\n\nOverview\n\n\nAppium Desktop has a simple layout, complete with a source tree,\na screenshot, and record and refresh buttons, and interaction tools.\n\n\n\n\nExample\n\n\nAfter launching Appium Desktop and starting a session, you can locate any element in the\nsource. In this test, I'm looking for the accessibility id of the \"Compute Sum\" button.\n\n\nTo find the accessibility id of this button, I click the \"Compute Sum\" button in the\nscreenshot. The element is then highlighted in the source tree. In the panel on the right,\nI can see the accessibility id.",
            "title": "Finding elements"
        },
        {
            "location": "/en/writing-running-appium/finding-elements/#finding-and-interacting-with-elements",
            "text": "Appium supports a subset of the WebDriver locator strategies:   find by \"class\" (i.e., ui component type)  find by \"xpath\" (i.e., an abstract representation of a path to an element,\nwith certain constraints)   Appium additionally supports some of the  Mobile JSON Wire Protocol  locator strategies   -ios uiautomation : a string corresponding to a recursive element search\nusing the  UIAutomation library  (iOS 9.3 and below only)  -android uiautomator : a string corresponding to a recursive element\nsearch using the  UiAutomator Api  (Android-only)  accessibility id : a string corresponding to a recursive element search\nusing the Id/Name that the native Accessibility options utilize.",
            "title": "Finding and interacting with elements"
        },
        {
            "location": "/en/writing-running-appium/finding-elements/#issues",
            "text": "There's a known issue with table cell elements becoming invalidated before\nthere's time to interact with them. We're working on a fix",
            "title": "Issues"
        },
        {
            "location": "/en/writing-running-appium/finding-elements/#using-appium-desktop-to-locate-elements",
            "text": "Appium provides you with a neat tool that allows you to find the the elements\nyou're looking for. With  Appium Desktop  you \ncan find any element and its locators by either clicking the element on the screenshot \nimage, or locating it in the source tree.",
            "title": "Using Appium Desktop To Locate Elements"
        },
        {
            "location": "/en/writing-running-appium/finding-elements/#overview",
            "text": "Appium Desktop has a simple layout, complete with a source tree,\na screenshot, and record and refresh buttons, and interaction tools.",
            "title": "Overview"
        },
        {
            "location": "/en/writing-running-appium/finding-elements/#example",
            "text": "After launching Appium Desktop and starting a session, you can locate any element in the\nsource. In this test, I'm looking for the accessibility id of the \"Compute Sum\" button.  To find the accessibility id of this button, I click the \"Compute Sum\" button in the\nscreenshot. The element is then highlighted in the source tree. In the panel on the right,\nI can see the accessibility id.",
            "title": "Example"
        },
        {
            "location": "/en/writing-running-appium/ios-touch-id/",
            "text": "Touch ID\n\n\n(see \nhttps://github.com/appium/appium-xcuitest-driver/blob/master/docs/touch-id.md\n)",
            "title": "Ios touch id"
        },
        {
            "location": "/en/writing-running-appium/ios-touch-id/#touch-id",
            "text": "(see  https://github.com/appium/appium-xcuitest-driver/blob/master/docs/touch-id.md )",
            "title": "Touch ID"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/",
            "text": "Automating Mobile Gestures For iOS With WebDriverAgent/XCTest Backend\n\n\nUnfortunately Apple's XCTest framework does not natively support W3C standards for\nTouchAction interface implementation. Although, it provides rich set of gestures,\ninluding these, that are unique for iOS platform. It is possible to directly invoke these\ngestures in Appium starting from version 1.6.4-beta.\n\n\nIt is important to rememeber that XCTest and WDA are being constantly changed.\nThis means all \"mobile: *\" commands can be also subject of change in Appium\nwithout any preliminary notice.\n\n\nmobile: swipe\n\n\nThis gesture performs a simple \"swipe\" gesture on the particular screen element or\non the application element, which is usually the whole screen. This method does not\naccept coordnates and siply emulates single swipe with one finger. It might be\nuseful for such cases like album pagination, switching views, etc. More advanced\ncases may require to call \"mobile: dragFromToForDuration\", where one can supply\ncoordinates and duration.\n\n\nSupported arguments\n\n\n\n\ndirection\n: Either 'up', 'down', 'left' or 'right'. The parameter is mandatory\n\n\nelement\n: The internal element identifier (as hexadecimal hash string) to swipe on.\n Application element will be used instead if this parameter is not provided\n\n\n\n\nUsage examples\n\n\n// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> params = new HashMap<>();\nparams.put(\"direction\", \"down\");\nparams.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: swipe\", params);\n\n\n\n\nmobile: scroll\n\n\nScrolls the element or the whole screen. Different scrolling strategies are supported.\nArguments define the choosen strategy: either 'name', 'direction', 'predicateString' or\n'toVisible' in that order. All strategies are exclusive and only one strategy\ncan be applied at a single moment of time. Use \"mobile: scroll\" to emulate precise\nscrolling in tables or collection views, where it is already known to which element\nthe scrolling should be performed. Although, there is one known limitation there: in case\nit is necessary to perform too many scroll gestures on parent container to reach the\nnecessary child element (tens of them) then the method call may fail.\n\n\nSupported arguments\n\n\n\n\nelement\n: The internal element identifier (as hexadecimal hash string) to scroll on.\n Application element will be used if this argument is not set\n\n\nname\n: the accessibility id of the child element, to which scrolling is performed.\n The same result can be achieved by setting \npredicateString\n argument to\n 'name == accessibilityId'. Has no effect if \nelement\n is not a container\n\n\ndirection\n: Either 'up', 'down', 'left' or 'right'. The main difference from\n \nswipe\n call with the same argument is that \nscroll\n will try to move the current viewport\n exactly to the next/previous page (the term \"page\" means the content, which fits into\n a single device screen)\n\n\npredicateString\n: the NSPredicate locator of the child element, to which\n the scrolling should be performed. Has no effect if \nelement\n is not a container\n\n\ntoVisible\n: Boolean parameter. If set to \ntrue\n then asks to scroll to\n the first visible \nelement\n in the parent container. Has no effect if \nelement\n is\n not set\n\n\n\n\nUsage examples\n\n\n# Python\ndriver.execute_script('mobile: scroll', {'direction': 'down'});\n\n\n\n\nmobile: pinch\n\n\nPerforms pinch gesture on the given element or on the application element.\n\n\nSupported arguments\n\n\n\n\nelement\n: The internal element identifier (as hexadecimal hash string) to pinch on.\n Application element will be used instead if this parameter is not provided\n\n\nscale\n: Pinch scale of type float. Use a scale between 0 and 1 to \"pinch close\" or\n zoom out and a scale greater than 1 to \"pinch open\" or zoom in. Mandatory parameter\n\n\nvelocity\n: The velocity of the pinch in scale factor per second (float value). Mandatory parameter\n\n\n\n\nUsage examples\n\n\n# Ruby\nexecute_script 'mobile: pinch', scale: 0.5, velocity: 1.1, element: element.ref\n\n\n\n\nmobile: doubleTap\n\n\nPerforms double tap gesture on the given element or on the screen.\n\n\nSupported arguments\n\n\n\n\nelement\n: The internal element identifier (as hexadecimal hash string) to double tap on\n\n\nx\n: Screen x tap coordinate of type float. Mandatory parameter only if \nelement\n is not set\n\n\ny\n: Screen y tap coordinate of type float. Mandatory parameter only if \nelement\n is not set\n\n\n\n\nUsage examples\n\n\n// javascript\ndriver.execute('mobile: doubleTap', {element: element.value.ELEMENT});\n\n\n\n\nmobile: touchAndHold\n\n\nPerforms long press gesture on the given element or on the screen.\n\n\nSupported arguments\n\n\n\n\nelement\n: The internal element identifier (as hexadecimal hash string) to long tap on\n\n\nduration\n: The float duration of press action in seconds. Mandatory patameter\n\n\nx\n: Screen x long tap coordinate of type float. Mandatory parameter only if \nelement\n is not set\n\n\ny\n: Screen y long tap coordinate of type float. Mandatory parameter only if \nelement\n is not set\n\n\n\n\nUsage examples\n\n\n// c#\nDictionary<string, object> tfLongTap = new Dictionary<string, object>();\ntfLongTap.Add(\"element\", element.Id);\ntfLongTap.Add(\"duration\", 2.0);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: touchAndHold\", tfLongTap);\n\n\n\n\nmobile: twoFingerTap\n\n\nPerforms two finger tap gesture on the given element or on the application element.\n\n\nSupported arguments\n\n\n\n\nelement\n: The internal element identifier (as hexadecimal hash string) to double tap on.\n Application element will be used instead if this\n parameter is not provided\n\n\n\n\nUsage examples\n\n\n// c#\nDictionary<string, object> tfTap = new Dictionary<string, object>();\ntfTap.Add(\"element\", element.Id);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: twoFingerTap\", tfTap);\n\n\n\n\nmobile: tap\n\n\nPerforms tap gesture by coordinates on the given element or on the screen.\n\n\nSupported arguments\n\n\n\n\nelement\n: The internal element identifier (as hexadecimal hash string) to long tap on.\n \nx\n and \ny\n tap coordinates will be calulated relatively to the current element position on the\n screen if this argument is provided. Otherwise they should be calculated\n relatively to screen borders.\n\n\nx\n: x tap coordinate of type float. Mandatory parameter\n\n\ny\n: y tap coordinate of type float. Mandatory parameter\n\n\n\n\nUsage examples\n\n\n// PHP\n$params = array(array('x' => 100.0, 'y' => 50.0, 'element' => element.GetAttribute(\"id\")));\n$driver->executeScript(\"mobile: tap\", $params);\n\n\n\n\nmobile: dragFromToForDuration\n\n\nPerforms drag and drop gesture by coordinates. This can be done either on an element or\non the screen\n\n\nSupported arguments\n\n\n\n\nelement\n: The internal element identifier (as hexadecimal hash string) to perform drag on.\n All the coordinates will be calculated relatively this this element position on the screen.\n Absolute screen coordinates are expected if this argument is not set\n\n\nduration\n: Float number of seconds in range [0.5, 60]. How long the tap gesture at\n starting drag point should be before to start dragging. Mandatory parameter\n\n\nfromX\n: The x coordinate of starting drag point (type float). Mandatory parameter\n\n\nfromY\n: The y coordinate of starting drag point (type float). Mandatory parameter\n\n\ntoX\n: The x coordinate of ending drag point (type float). Mandatory parameter\n\n\ntoY\n: The y coordinate of ending drag point (type float). Mandatory parameter\n\n\n\n\nUsage examples\n\n\n// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> params = new HashMap<>();\nparams.put(\"duration\", 1.0);\nparams.put(\"fromX\", 100);\nparams.put(\"fromY\", 100);\nparams.put(\"toX\", 200);\nparams.put(\"toY\", 200);\nparams.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: dragFromToForDuration\", params);\n\n\n\n\nmobile: selectPickerWheelValue\n\n\nPerforms selection of the next or previous picker wheel value. This might\nbe useful if these values are populated dynamically, so you don't know which\none to select or value selection does not work because of XCTest bug.\n\n\nSupported arguments\n\n\n\n\nelement\n: PickerWheel's internal element id (as hexadecimal hash string) to perform\n value selection on. The element must be of type XCUIElementTypePickerWheel. Mandatory parameter\n\n\norder\n: Either \nnext\n to select the value next to the current one\n from the target picker wheel or \nprevious\n to select the previous one. Mandatory parameter\n\n\noffset\n: The value in range [0.01, 0.5]. It defines how far from picker\n wheel's center the click should happen. The actual distance is culculated by\n multiplying this value to the actual picker wheel height. Too small offset value\n may not change the picker wheel value and too high value may cause the wheel to switch\n two or more values at once. Usually the optimal value is located in range [0.15, 0.3]. \n0.2\n by default\n\n\n\n\nUsage examples\n\n\n// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> params = new HashMap<>();\nparams.put(\"order\", \"next\");\nparams.put(\"offset\", 0.15);\nparams.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: selectPickerWheelValue\", params);\n\n\n\n\nmobile: alert\n\n\nPerforms operations on NSAlert instance.\n\n\nSupported arguments\n\n\n\n\naction\n: The following actions are supported: \naccept\n, \ndismiss\n and \ngetButtons\n.\n Mandatory parameter\n\n\nbuttonLabel\n: The label text of an existing alert button to click on. This is an\n optional parameter and is only valid in combination with \naccept\n and \ndismiss\n\n actions.\n\n\n\n\nUsage examples\n\n\n# Python\ndriver.execute_script('mobile: alert', {'action': 'accept', 'buttonLabel': 'My Cool Alert Button'});\n\n\n\n\nAdvanced Topics\n\n\nCheck \nWDA Element Commands API\n\nto get the information about the gestures implemented in Facebook WebDriverAgent.\nCheck Apple XCTest documentation on \nXCUIElement\n and\n\nXCUICoordinate\n methods list to get the information\nabout all gestures available there.",
            "title": "Ios xctest mobile gestures"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#automating-mobile-gestures-for-ios-with-webdriveragentxctest-backend",
            "text": "Unfortunately Apple's XCTest framework does not natively support W3C standards for\nTouchAction interface implementation. Although, it provides rich set of gestures,\ninluding these, that are unique for iOS platform. It is possible to directly invoke these\ngestures in Appium starting from version 1.6.4-beta.  It is important to rememeber that XCTest and WDA are being constantly changed.\nThis means all \"mobile: *\" commands can be also subject of change in Appium\nwithout any preliminary notice.",
            "title": "Automating Mobile Gestures For iOS With WebDriverAgent/XCTest Backend"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#mobile-swipe",
            "text": "This gesture performs a simple \"swipe\" gesture on the particular screen element or\non the application element, which is usually the whole screen. This method does not\naccept coordnates and siply emulates single swipe with one finger. It might be\nuseful for such cases like album pagination, switching views, etc. More advanced\ncases may require to call \"mobile: dragFromToForDuration\", where one can supply\ncoordinates and duration.",
            "title": "mobile: swipe"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#supported-arguments",
            "text": "direction : Either 'up', 'down', 'left' or 'right'. The parameter is mandatory  element : The internal element identifier (as hexadecimal hash string) to swipe on.\n Application element will be used instead if this parameter is not provided",
            "title": "Supported arguments"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#usage-examples",
            "text": "// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> params = new HashMap<>();\nparams.put(\"direction\", \"down\");\nparams.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: swipe\", params);",
            "title": "Usage examples"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#mobile-scroll",
            "text": "Scrolls the element or the whole screen. Different scrolling strategies are supported.\nArguments define the choosen strategy: either 'name', 'direction', 'predicateString' or\n'toVisible' in that order. All strategies are exclusive and only one strategy\ncan be applied at a single moment of time. Use \"mobile: scroll\" to emulate precise\nscrolling in tables or collection views, where it is already known to which element\nthe scrolling should be performed. Although, there is one known limitation there: in case\nit is necessary to perform too many scroll gestures on parent container to reach the\nnecessary child element (tens of them) then the method call may fail.",
            "title": "mobile: scroll"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#supported-arguments_1",
            "text": "element : The internal element identifier (as hexadecimal hash string) to scroll on.\n Application element will be used if this argument is not set  name : the accessibility id of the child element, to which scrolling is performed.\n The same result can be achieved by setting  predicateString  argument to\n 'name == accessibilityId'. Has no effect if  element  is not a container  direction : Either 'up', 'down', 'left' or 'right'. The main difference from\n  swipe  call with the same argument is that  scroll  will try to move the current viewport\n exactly to the next/previous page (the term \"page\" means the content, which fits into\n a single device screen)  predicateString : the NSPredicate locator of the child element, to which\n the scrolling should be performed. Has no effect if  element  is not a container  toVisible : Boolean parameter. If set to  true  then asks to scroll to\n the first visible  element  in the parent container. Has no effect if  element  is\n not set",
            "title": "Supported arguments"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#usage-examples_1",
            "text": "# Python\ndriver.execute_script('mobile: scroll', {'direction': 'down'});",
            "title": "Usage examples"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#mobile-pinch",
            "text": "Performs pinch gesture on the given element or on the application element.",
            "title": "mobile: pinch"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#supported-arguments_2",
            "text": "element : The internal element identifier (as hexadecimal hash string) to pinch on.\n Application element will be used instead if this parameter is not provided  scale : Pinch scale of type float. Use a scale between 0 and 1 to \"pinch close\" or\n zoom out and a scale greater than 1 to \"pinch open\" or zoom in. Mandatory parameter  velocity : The velocity of the pinch in scale factor per second (float value). Mandatory parameter",
            "title": "Supported arguments"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#usage-examples_2",
            "text": "# Ruby\nexecute_script 'mobile: pinch', scale: 0.5, velocity: 1.1, element: element.ref",
            "title": "Usage examples"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#mobile-doubletap",
            "text": "Performs double tap gesture on the given element or on the screen.",
            "title": "mobile: doubleTap"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#supported-arguments_3",
            "text": "element : The internal element identifier (as hexadecimal hash string) to double tap on  x : Screen x tap coordinate of type float. Mandatory parameter only if  element  is not set  y : Screen y tap coordinate of type float. Mandatory parameter only if  element  is not set",
            "title": "Supported arguments"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#usage-examples_3",
            "text": "// javascript\ndriver.execute('mobile: doubleTap', {element: element.value.ELEMENT});",
            "title": "Usage examples"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#mobile-touchandhold",
            "text": "Performs long press gesture on the given element or on the screen.",
            "title": "mobile: touchAndHold"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#supported-arguments_4",
            "text": "element : The internal element identifier (as hexadecimal hash string) to long tap on  duration : The float duration of press action in seconds. Mandatory patameter  x : Screen x long tap coordinate of type float. Mandatory parameter only if  element  is not set  y : Screen y long tap coordinate of type float. Mandatory parameter only if  element  is not set",
            "title": "Supported arguments"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#usage-examples_4",
            "text": "// c#\nDictionary<string, object> tfLongTap = new Dictionary<string, object>();\ntfLongTap.Add(\"element\", element.Id);\ntfLongTap.Add(\"duration\", 2.0);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: touchAndHold\", tfLongTap);",
            "title": "Usage examples"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#mobile-twofingertap",
            "text": "Performs two finger tap gesture on the given element or on the application element.",
            "title": "mobile: twoFingerTap"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#supported-arguments_5",
            "text": "element : The internal element identifier (as hexadecimal hash string) to double tap on.\n Application element will be used instead if this\n parameter is not provided",
            "title": "Supported arguments"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#usage-examples_5",
            "text": "// c#\nDictionary<string, object> tfTap = new Dictionary<string, object>();\ntfTap.Add(\"element\", element.Id);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: twoFingerTap\", tfTap);",
            "title": "Usage examples"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#mobile-tap",
            "text": "Performs tap gesture by coordinates on the given element or on the screen.",
            "title": "mobile: tap"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#supported-arguments_6",
            "text": "element : The internal element identifier (as hexadecimal hash string) to long tap on.\n  x  and  y  tap coordinates will be calulated relatively to the current element position on the\n screen if this argument is provided. Otherwise they should be calculated\n relatively to screen borders.  x : x tap coordinate of type float. Mandatory parameter  y : y tap coordinate of type float. Mandatory parameter",
            "title": "Supported arguments"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#usage-examples_6",
            "text": "// PHP\n$params = array(array('x' => 100.0, 'y' => 50.0, 'element' => element.GetAttribute(\"id\")));\n$driver->executeScript(\"mobile: tap\", $params);",
            "title": "Usage examples"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#mobile-dragfromtoforduration",
            "text": "Performs drag and drop gesture by coordinates. This can be done either on an element or\non the screen",
            "title": "mobile: dragFromToForDuration"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#supported-arguments_7",
            "text": "element : The internal element identifier (as hexadecimal hash string) to perform drag on.\n All the coordinates will be calculated relatively this this element position on the screen.\n Absolute screen coordinates are expected if this argument is not set  duration : Float number of seconds in range [0.5, 60]. How long the tap gesture at\n starting drag point should be before to start dragging. Mandatory parameter  fromX : The x coordinate of starting drag point (type float). Mandatory parameter  fromY : The y coordinate of starting drag point (type float). Mandatory parameter  toX : The x coordinate of ending drag point (type float). Mandatory parameter  toY : The y coordinate of ending drag point (type float). Mandatory parameter",
            "title": "Supported arguments"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#usage-examples_7",
            "text": "// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> params = new HashMap<>();\nparams.put(\"duration\", 1.0);\nparams.put(\"fromX\", 100);\nparams.put(\"fromY\", 100);\nparams.put(\"toX\", 200);\nparams.put(\"toY\", 200);\nparams.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: dragFromToForDuration\", params);",
            "title": "Usage examples"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#mobile-selectpickerwheelvalue",
            "text": "Performs selection of the next or previous picker wheel value. This might\nbe useful if these values are populated dynamically, so you don't know which\none to select or value selection does not work because of XCTest bug.",
            "title": "mobile: selectPickerWheelValue"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#supported-arguments_8",
            "text": "element : PickerWheel's internal element id (as hexadecimal hash string) to perform\n value selection on. The element must be of type XCUIElementTypePickerWheel. Mandatory parameter  order : Either  next  to select the value next to the current one\n from the target picker wheel or  previous  to select the previous one. Mandatory parameter  offset : The value in range [0.01, 0.5]. It defines how far from picker\n wheel's center the click should happen. The actual distance is culculated by\n multiplying this value to the actual picker wheel height. Too small offset value\n may not change the picker wheel value and too high value may cause the wheel to switch\n two or more values at once. Usually the optimal value is located in range [0.15, 0.3].  0.2  by default",
            "title": "Supported arguments"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#usage-examples_8",
            "text": "// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> params = new HashMap<>();\nparams.put(\"order\", \"next\");\nparams.put(\"offset\", 0.15);\nparams.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: selectPickerWheelValue\", params);",
            "title": "Usage examples"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#mobile-alert",
            "text": "Performs operations on NSAlert instance.",
            "title": "mobile: alert"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#supported-arguments_9",
            "text": "action : The following actions are supported:  accept ,  dismiss  and  getButtons .\n Mandatory parameter  buttonLabel : The label text of an existing alert button to click on. This is an\n optional parameter and is only valid in combination with  accept  and  dismiss \n actions.",
            "title": "Supported arguments"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#usage-examples_9",
            "text": "# Python\ndriver.execute_script('mobile: alert', {'action': 'accept', 'buttonLabel': 'My Cool Alert Button'});",
            "title": "Usage examples"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-mobile-gestures/#advanced-topics",
            "text": "Check  WDA Element Commands API \nto get the information about the gestures implemented in Facebook WebDriverAgent.\nCheck Apple XCTest documentation on  XCUIElement  and XCUICoordinate  methods list to get the information\nabout all gestures available there.",
            "title": "Advanced Topics"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-pasteboard/",
            "text": "Automating Simulator Pasteboard Actions For iOS With WebDriverAgent/XCTest Backend\n\n\nThere is a possibility in Appium to set the content of the iOS Simulator pasteboard\nand read the content from there if needed. Each Simulator maintains its own pasteboard.\nThis feature is only available since Xcode SDK 8.1.\nUnfortunately, real devices don't provide such features.\n\n\nmobile: setPasteboard\n\n\nThis command sets the content of Simulator's pasteboard to the particular string\nprovided as an argument. Also, it is possible to customize the encoding of the given\nstring.\n\n\nSupported arguments\n\n\n\n\ncontent\n: The content of the pasteboard. The previous content is going\n to be overridden. The parameter is mandatory\n\n\nencoding\n: Encoding of the given content. UTF-8 by default.\n\n\n\n\nUsage examples\n\n\n// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> args = new HashMap<>();\nargs.put(\"content\", new String(Files.readAllBytes(new File(\"/etc/passwd\").toPath()), Charset.forName(\"latin-1\")));\njs.executeScript(\"mobile: setPasteboard\", args);\n\n\n\n\nmobile: getPasteboard\n\n\nThis command is used to get the current content of Simulator's pasteboard as\na string. Also, it is possible to customize the encoding of the received\nstring.\n\n\nSupported arguments\n\n\n\n\nencoding\n: Encoding of the received pasteboard content. UTF-8 by default.\n\n\n\n\nUsage examples\n\n\n# Python\ncontent = driver.execute_script('mobile: getPasteboard', {'encoding': 'shift-jis'});",
            "title": "Ios xctest pasteboard"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-pasteboard/#automating-simulator-pasteboard-actions-for-ios-with-webdriveragentxctest-backend",
            "text": "There is a possibility in Appium to set the content of the iOS Simulator pasteboard\nand read the content from there if needed. Each Simulator maintains its own pasteboard.\nThis feature is only available since Xcode SDK 8.1.\nUnfortunately, real devices don't provide such features.",
            "title": "Automating Simulator Pasteboard Actions For iOS With WebDriverAgent/XCTest Backend"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-pasteboard/#mobile-setpasteboard",
            "text": "This command sets the content of Simulator's pasteboard to the particular string\nprovided as an argument. Also, it is possible to customize the encoding of the given\nstring.",
            "title": "mobile: setPasteboard"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-pasteboard/#supported-arguments",
            "text": "content : The content of the pasteboard. The previous content is going\n to be overridden. The parameter is mandatory  encoding : Encoding of the given content. UTF-8 by default.",
            "title": "Supported arguments"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-pasteboard/#usage-examples",
            "text": "// Java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nMap<String, Object> args = new HashMap<>();\nargs.put(\"content\", new String(Files.readAllBytes(new File(\"/etc/passwd\").toPath()), Charset.forName(\"latin-1\")));\njs.executeScript(\"mobile: setPasteboard\", args);",
            "title": "Usage examples"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-pasteboard/#mobile-getpasteboard",
            "text": "This command is used to get the current content of Simulator's pasteboard as\na string. Also, it is possible to customize the encoding of the received\nstring.",
            "title": "mobile: getPasteboard"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-pasteboard/#supported-arguments_1",
            "text": "encoding : Encoding of the received pasteboard content. UTF-8 by default.",
            "title": "Supported arguments"
        },
        {
            "location": "/en/writing-running-appium/ios-xctest-pasteboard/#usage-examples_1",
            "text": "# Python\ncontent = driver.execute_script('mobile: getPasteboard', {'encoding': 'shift-jis'});",
            "title": "Usage examples"
        },
        {
            "location": "/en/writing-running-appium/ios_predicate/",
            "text": "iOS Predicate\n\n\nNOTE\n: iOS predicates are usable in iOS 9.3 and below using the \n-ios uiautomation\n locator strategy and they are usable in iOS 10 and above using the \n-ios predicate string\n locator strategy\n\n\nIt is worth looking at \n'-ios uiautomation'\n search strategy with \nPredicates\n.\n\nUIAutomation JavaScript API\n has following methods which can are very useful.\n\n\n(UIAElement) UIAElementArray.firstWithPredicate(PredicateString predicateString)\n(UIAElementArray) UIAElementArray.withPredicate(PredicateString predicateString)\n\n\n\n\nNative JS search strategy (powered by Apple) provides much more flexibility and is like Xpath.\n\nPredicates\n can be used to restrict an elements set to select only those ones for which some condition is true.\n\n\n'-ios uiautomation' example:\n\n\n// java\nappiumDriver.findElementsByIosUIAutomation(\"collectionViews()[0].cells().withPredicate(\\\"ANY staticTexts.isVisible == TRUE\\\")\");\n\n\n\n\n'-ios predicate string' example:\n\n\n// java\nappiumDriver.findElementsByIosNsPredicate(\"isWDVisible == 1\");\n\n\n\n\n-  will select only those  \nUIACollectionCell\n elements that have visible \nUIAStaticText\n child elements, and themselves are childs of 1st \nUIACollectionView\n element that should be located under the main app window.  Here \nstaticTexts()\n and \nisVisible()\n are methods available in \nUIAElementArray\n and \nUIAElement\n classes respectively. \nNote that \nUIAElementArray\n numbering begins with \n0\n unlike Xpath where indexes counting starts from \n1\n\n\nHere's a list of available Predicates (mostly taken from \nPredicates Programming Guide\n)\n\n\nBasic Comparisons\n\n\n= , ==\n- The left-hand expression is equal to the right-hand expression:\n\n\ntableViews()[1].cells().firstWithPredicate(\"label == 'Olivia' \")\n\nsame in Xpath: /UIATableView[2]/UIATableCell[@label = 'Olivia'][1]\n\n\n\n\n>= , =>\n- The left-hand expression is greater than or equal to the right-hand expression.\n\n\n<= , =<\n- The left-hand expression is less than or equal to the right-hand expression.\n\n\n>\n- The left-hand expression is greater than the right-hand expression.\n\n\n<\n- The left-hand expression is less than the right-hand expression.\n\n\n!= , <>\n- The left-hand expression is not equal to the right-hand expression.\n\n\nBETWEEN\n- The left-hand expression is between, or equal to either of, the values specified in the right-hand side. The right-hand side is a two value array (an array is required to specify order) giving upper and lower bounds. For example, \n1 BETWEEN { 0 , 33 }\n, or \n$INPUT BETWEEN { $LOWER, $UPPER }\n.\nIn Objective-C, you could create a BETWEEN predicate as shown in the following example:\n\n\nNSPredicate *betweenPredicate =\n    [NSPredicate predicateWithFormat: @\"attributeName BETWEEN %@\", @[@1, @10]];\n\n\n\n\nThis creates a predicate that matches \n( ( 1 <= attributeValue ) && ( attributeValue <= 10 ) )\n\n\nBoolean Value Predicates\n\n\nTRUEPREDICATE\n- A predicate that always evaluates to \nTRUE\n .\n\n\nFALSEPREDICATE\n- A predicate that always evaluates to \nFALSE\n.\n\n\nBasic Compound Predicates\n\n\nAND , &&\n- Logical AND.\n\n\nOR , ||\n- Logical OR.\n\n\nNOT , !\n- Logical NOT.\n\n\nString Comparisons\n\n\nString comparisons are by default case and diacritic sensitive. You can modify an operator using the key characters \nc\n and \nd\n within square braces to specify case and diacritic insensitivity respectively, for example \nfirstName BEGINSWITH[cd] $FIRST_NAME\n\n\nBEGINSWITH\n- The left-hand expression begins with the right-hand expression.\n\n\nscrollViews()[3].buttons().firstWithPredicate(\"name BEGINSWITH 'results toggle' \")\n\nsame in Xpath: /UIAScrollView[4]/UIAButton[starts-with(@name, 'results toggle')][1]\n\n\n\n\nCONTAINS\n- The left-hand expression contains the right-hand expression.\n\n\ntableViews()[1].cells().withPredicate(\"ANY collectionViews[0].buttons.name CONTAINS 'opera'\")\n\nsame in Xpath: /UIATableView[2]/UIATableCell[UIACollectionView[1]/UIAButton[contains(@name, 'opera')]]\n\n\n\n\nENDSWITH\n- The left-hand expression ends with the right-hand expression.\n\n\nLIKE\n- The left hand expression equals the right-hand expression: ? and * are allowed as wildcard characters, where ? matches 1 character and * matches 0 or more characters. In Mac OS X v10.4, wildcard characters do not match newline characters.\n\n\ntableViews()[0].cells().firstWithPredicate(\"name LIKE '*Total: $*' \")\n\nsame in Xpath: /UIATableView[1]/UIATableCell[matches(@name, '.*Total: \\$.*')][1]\n\n\n\n\nMATCHES\n- The left hand expression equals the right hand expression using a regex -style comparison according to ICU v3 (for more details see the ICU User Guide for \nRegular Expressions\n).\n\n\ntableViews().firstWithPredicate(\"value MATCHES '.*of 7' \")\n\nsame in Xpath: /UIATableView[matches(@value, '.*of 7')][1]\n\n\n\n\nAggregate Operations\n\n\nANY , SOME\n- Specifies any of the elements in the following expression. For example \nANY children.age < 18\n .\n\n\ntableViews()[0].cells().firstWithPredicate(\"SOME staticTexts.name = 'red'\").staticTexts().withName('red')\n\nsame in Xpath: /UIATableView[1]/UIATableCell[UIAStaticText/@name = 'red'][1]/UIAStaticText[@name = 'red']\n\n\n\n\nALL\n- Specifies all of the elements in the following expression. For example \nALL children.age < 18\n .\n\n\nNONE\n- Specifies none of the elements in the following expression. For example, \nNONE children.age < 18\n . This is logically equivalent to \nNOT (ANY ...)\n .\n\n\nIN\n- Equivalent to an SQL IN operation, the left-hand side must appear in the collection specified by the right-hand side. For example, \nname IN { 'Ben', 'Melissa', 'Matthew' }\n . The collection may be an array, a set, or a dictionary\u2014in the case of a dictionary, its values are used.\n\n\narray[index]\n- Specifies the element at the specified index in the array.\n\n\narray[FIRST]\n- Specifies the first element in the array.\n\n\narray[LAST]\n- Specifies the last element in the array.\n\n\narray[SIZE]\n- Specifies the size of the array\n\n\nelements()[0].tableViews()[0].cells().withPredicate(\"staticTexts[SIZE] > 2\")\nsame in Xpath: /*[1]/UIATableView[1]/UIATableCell[count(UIAStaticText) > 2]\n\n\n\n\nIdentifiers\n\n\nC style identifier\n\n- Any C style identifier that is not a reserved word.\n\n\n#symbol\n\n- Used to escape a reserved word into a user identifier.\n\n\n[\\]{octaldigit}{3}\n\n- Used to escape an octal number ( \n\\\n followed by 3 octal digits).\n\n\n[\\][xX]{hexdigit}{2}\n\n- Used to escape a hex number ( \n\\x\n or \n\\X\n followed by 2 hex digits).\n\n\n[\\][uU]{hexdigit}{4}\n\n- Used to escape a Unicode number ( \n\\u\n or \n\\U\n followed by 4 hex digits).\n\n\nLiterals\n\n\nSingle and double quotes produce the same result, but they do not terminate each other. For example, \n\"abc\"\n and \n'abc'\n are identical, whereas \n\"a'b'c\"\n is equivalent to a space-separated concatenation of \na, 'b', c\n.\n\n\nFALSE , NO\n- Logical false.\n\n\nTRUE , YES\n- Logical true.\n\n\nNULL , NIL\n- A null value.\n\n\nSELF\n- Represents the object being evaluated.\n\n\n\"text\"\n- A character string.\n\n\n'text'\n- A character string.\n\n\nComma-separated literal array\n\n- For example, \n{ 'comma', 'separated', 'literal', 'array' }\n .\n\n\nStandard integer and fixed-point notations\n\n- For example, \n1 , 27 , 2.71828 , 19.75\n .\n\n\nFloating-point notation with exponentiation\n\n- For example, \n9.2e-5\n .\n\n\n0x\n- Prefix used to denote a hexadecimal digit sequence.\n\n\n0o\n- Prefix used to denote an octal digit sequence.\n\n\n0b\n- Prefix used to denote a binary digit sequence.\n\n\nReserved Words\n\n\nThe following words are reserved:\n\n\nAND, OR, IN, NOT, ALL, ANY, SOME, NONE, LIKE, CASEINSENSITIVE, CI, MATCHES, CONTAINS, BEGINSWITH, ENDSWITH, BETWEEN, NULL, NIL, SELF, TRUE, YES, FALSE, NO, FIRST, LAST, SIZE, ANYKEY, SUBQUERY, CAST, TRUEPREDICATE, FALSEPREDICATE\n\n\nAppium predicate helpers\n\n\nAppium has \nhelpers for predicate search\n in app.js:\n\n\n\n\ngetFirstWithPredicate\n\n\ngetFirstWithPredicateWeighted\n\n\ngetAllWithPredicate\n\n\ngetNameContains\n\n\n\n\nHere's a Ruby example:\n\n\n# Ruby example\ntext = 'Various uses'\npredicate = \"name contains[c] '#{text}' || label contains[c] '#{text}' || value contains[c] '#{text}'\"\nelement = execute_script(%Q(au.mainApp().getFirstWithPredicate(\"#{predicate}\");))\n\nputs element.name # Buttons, Various uses of UIButton",
            "title": "Ios predicate"
        },
        {
            "location": "/en/writing-running-appium/ios_predicate/#ios-predicate",
            "text": "NOTE : iOS predicates are usable in iOS 9.3 and below using the  -ios uiautomation  locator strategy and they are usable in iOS 10 and above using the  -ios predicate string  locator strategy  It is worth looking at  '-ios uiautomation'  search strategy with  Predicates . UIAutomation JavaScript API  has following methods which can are very useful.  (UIAElement) UIAElementArray.firstWithPredicate(PredicateString predicateString)\n(UIAElementArray) UIAElementArray.withPredicate(PredicateString predicateString)  Native JS search strategy (powered by Apple) provides much more flexibility and is like Xpath. Predicates  can be used to restrict an elements set to select only those ones for which some condition is true.  '-ios uiautomation' example:  // java\nappiumDriver.findElementsByIosUIAutomation(\"collectionViews()[0].cells().withPredicate(\\\"ANY staticTexts.isVisible == TRUE\\\")\");  '-ios predicate string' example:  // java\nappiumDriver.findElementsByIosNsPredicate(\"isWDVisible == 1\");  -  will select only those   UIACollectionCell  elements that have visible  UIAStaticText  child elements, and themselves are childs of 1st  UIACollectionView  element that should be located under the main app window.  Here  staticTexts()  and  isVisible()  are methods available in  UIAElementArray  and  UIAElement  classes respectively.  Note that  UIAElementArray  numbering begins with  0  unlike Xpath where indexes counting starts from  1  Here's a list of available Predicates (mostly taken from  Predicates Programming Guide )",
            "title": "iOS Predicate"
        },
        {
            "location": "/en/writing-running-appium/ios_predicate/#basic-comparisons",
            "text": "= , ==\n- The left-hand expression is equal to the right-hand expression:  tableViews()[1].cells().firstWithPredicate(\"label == 'Olivia' \")\n\nsame in Xpath: /UIATableView[2]/UIATableCell[@label = 'Olivia'][1]  >= , =>\n- The left-hand expression is greater than or equal to the right-hand expression.  <= , =<\n- The left-hand expression is less than or equal to the right-hand expression.  >\n- The left-hand expression is greater than the right-hand expression.  <\n- The left-hand expression is less than the right-hand expression.  != , <>\n- The left-hand expression is not equal to the right-hand expression.  BETWEEN\n- The left-hand expression is between, or equal to either of, the values specified in the right-hand side. The right-hand side is a two value array (an array is required to specify order) giving upper and lower bounds. For example,  1 BETWEEN { 0 , 33 } , or  $INPUT BETWEEN { $LOWER, $UPPER } .\nIn Objective-C, you could create a BETWEEN predicate as shown in the following example:  NSPredicate *betweenPredicate =\n    [NSPredicate predicateWithFormat: @\"attributeName BETWEEN %@\", @[@1, @10]];  This creates a predicate that matches  ( ( 1 <= attributeValue ) && ( attributeValue <= 10 ) )",
            "title": "Basic Comparisons"
        },
        {
            "location": "/en/writing-running-appium/ios_predicate/#boolean-value-predicates",
            "text": "TRUEPREDICATE\n- A predicate that always evaluates to  TRUE  .  FALSEPREDICATE\n- A predicate that always evaluates to  FALSE .",
            "title": "Boolean Value Predicates"
        },
        {
            "location": "/en/writing-running-appium/ios_predicate/#basic-compound-predicates",
            "text": "AND , &&\n- Logical AND.  OR , ||\n- Logical OR.  NOT , !\n- Logical NOT.",
            "title": "Basic Compound Predicates"
        },
        {
            "location": "/en/writing-running-appium/ios_predicate/#string-comparisons",
            "text": "String comparisons are by default case and diacritic sensitive. You can modify an operator using the key characters  c  and  d  within square braces to specify case and diacritic insensitivity respectively, for example  firstName BEGINSWITH[cd] $FIRST_NAME  BEGINSWITH\n- The left-hand expression begins with the right-hand expression.  scrollViews()[3].buttons().firstWithPredicate(\"name BEGINSWITH 'results toggle' \")\n\nsame in Xpath: /UIAScrollView[4]/UIAButton[starts-with(@name, 'results toggle')][1]  CONTAINS\n- The left-hand expression contains the right-hand expression.  tableViews()[1].cells().withPredicate(\"ANY collectionViews[0].buttons.name CONTAINS 'opera'\")\n\nsame in Xpath: /UIATableView[2]/UIATableCell[UIACollectionView[1]/UIAButton[contains(@name, 'opera')]]  ENDSWITH\n- The left-hand expression ends with the right-hand expression.  LIKE\n- The left hand expression equals the right-hand expression: ? and * are allowed as wildcard characters, where ? matches 1 character and * matches 0 or more characters. In Mac OS X v10.4, wildcard characters do not match newline characters.  tableViews()[0].cells().firstWithPredicate(\"name LIKE '*Total: $*' \")\n\nsame in Xpath: /UIATableView[1]/UIATableCell[matches(@name, '.*Total: \\$.*')][1]  MATCHES\n- The left hand expression equals the right hand expression using a regex -style comparison according to ICU v3 (for more details see the ICU User Guide for  Regular Expressions ).  tableViews().firstWithPredicate(\"value MATCHES '.*of 7' \")\n\nsame in Xpath: /UIATableView[matches(@value, '.*of 7')][1]",
            "title": "String Comparisons"
        },
        {
            "location": "/en/writing-running-appium/ios_predicate/#aggregate-operations",
            "text": "ANY , SOME\n- Specifies any of the elements in the following expression. For example  ANY children.age < 18  .  tableViews()[0].cells().firstWithPredicate(\"SOME staticTexts.name = 'red'\").staticTexts().withName('red')\n\nsame in Xpath: /UIATableView[1]/UIATableCell[UIAStaticText/@name = 'red'][1]/UIAStaticText[@name = 'red']  ALL\n- Specifies all of the elements in the following expression. For example  ALL children.age < 18  .  NONE\n- Specifies none of the elements in the following expression. For example,  NONE children.age < 18  . This is logically equivalent to  NOT (ANY ...)  .  IN\n- Equivalent to an SQL IN operation, the left-hand side must appear in the collection specified by the right-hand side. For example,  name IN { 'Ben', 'Melissa', 'Matthew' }  . The collection may be an array, a set, or a dictionary\u2014in the case of a dictionary, its values are used.  array[index]\n- Specifies the element at the specified index in the array.  array[FIRST]\n- Specifies the first element in the array.  array[LAST]\n- Specifies the last element in the array.  array[SIZE]\n- Specifies the size of the array  elements()[0].tableViews()[0].cells().withPredicate(\"staticTexts[SIZE] > 2\")\nsame in Xpath: /*[1]/UIATableView[1]/UIATableCell[count(UIAStaticText) > 2]",
            "title": "Aggregate Operations"
        },
        {
            "location": "/en/writing-running-appium/ios_predicate/#identifiers",
            "text": "C style identifier \n- Any C style identifier that is not a reserved word.  #symbol \n- Used to escape a reserved word into a user identifier.  [\\]{octaldigit}{3} \n- Used to escape an octal number (  \\  followed by 3 octal digits).  [\\][xX]{hexdigit}{2} \n- Used to escape a hex number (  \\x  or  \\X  followed by 2 hex digits).  [\\][uU]{hexdigit}{4} \n- Used to escape a Unicode number (  \\u  or  \\U  followed by 4 hex digits).",
            "title": "Identifiers"
        },
        {
            "location": "/en/writing-running-appium/ios_predicate/#literals",
            "text": "Single and double quotes produce the same result, but they do not terminate each other. For example,  \"abc\"  and  'abc'  are identical, whereas  \"a'b'c\"  is equivalent to a space-separated concatenation of  a, 'b', c .  FALSE , NO\n- Logical false.  TRUE , YES\n- Logical true.  NULL , NIL\n- A null value.  SELF\n- Represents the object being evaluated.  \"text\"\n- A character string.  'text'\n- A character string.  Comma-separated literal array \n- For example,  { 'comma', 'separated', 'literal', 'array' }  .  Standard integer and fixed-point notations \n- For example,  1 , 27 , 2.71828 , 19.75  .  Floating-point notation with exponentiation \n- For example,  9.2e-5  .  0x\n- Prefix used to denote a hexadecimal digit sequence.  0o\n- Prefix used to denote an octal digit sequence.  0b\n- Prefix used to denote a binary digit sequence.",
            "title": "Literals"
        },
        {
            "location": "/en/writing-running-appium/ios_predicate/#reserved-words",
            "text": "The following words are reserved:  AND, OR, IN, NOT, ALL, ANY, SOME, NONE, LIKE, CASEINSENSITIVE, CI, MATCHES, CONTAINS, BEGINSWITH, ENDSWITH, BETWEEN, NULL, NIL, SELF, TRUE, YES, FALSE, NO, FIRST, LAST, SIZE, ANYKEY, SUBQUERY, CAST, TRUEPREDICATE, FALSEPREDICATE",
            "title": "Reserved Words"
        },
        {
            "location": "/en/writing-running-appium/ios_predicate/#appium-predicate-helpers",
            "text": "Appium has  helpers for predicate search  in app.js:   getFirstWithPredicate  getFirstWithPredicateWeighted  getAllWithPredicate  getNameContains   Here's a Ruby example:  # Ruby example\ntext = 'Various uses'\npredicate = \"name contains[c] '#{text}' || label contains[c] '#{text}' || value contains[c] '#{text}'\"\nelement = execute_script(%Q(au.mainApp().getFirstWithPredicate(\"#{predicate}\");))\n\nputs element.name # Buttons, Various uses of UIButton",
            "title": "Appium predicate helpers"
        },
        {
            "location": "/en/writing-running-appium/network_connection/",
            "text": "Adjusting Network Connection\n\n\nThe Selenium \nMobile JSON Wire Protocol Specification\n supports an \nAPI\n for getting and setting the network connection for a device. The API works through a bitmask, assigning an integer to each possible state:\n\n\n\n\n\n\n\n\nValue (Alias)\n\n\nData\n\n\nWifi\n\n\nAirplane Mode\n\n\n\n\n\n\n\n\n\n\n0 (None)\n\n\n0\n\n\n0\n\n\n0\n\n\n\n\n\n\n1 (Airplane Mode)\n\n\n0\n\n\n0\n\n\n1\n\n\n\n\n\n\n2 (Wifi only)\n\n\n0\n\n\n1\n\n\n0\n\n\n\n\n\n\n4 (Data only)\n\n\n1\n\n\n0\n\n\n0\n\n\n\n\n\n\n6 (All network on)\n\n\n1\n\n\n1\n\n\n0\n\n\n\n\n\n\n\n\niOS\n\n\nUnfortunately, at the moment Appium does not support the Selenium network\nconnection API for iOS.\n\n\nAndroid\n\n\nThere are the following limitations:\n\n\nReal Devices\n\n\n\n\nChanging Airplane Mode state only works for Android 6 and older\n\n\nChaning data connection state works for Android 4.4 and older. Newer OS releases (5.0+) must be rooted in order to make the feature working (e. g. \nsu\n binary should available)\n\n\nChanging Wi-Fi connection state should work for all Android versions\n\n\n\n\nEmulators\n\n\n\n\nChanging Airplane Mode state only works for Android 6 and older\n\n\nChaning data connection state should work for all Android versions\n\n\nChanging Wi-Fi connection state should work for all Android versions\n\n\n\n\nWindows\n\n\nUnfortunately, at the moment Appium does not support the Selenium network\nconnection API for Windows.\n\n\n// javascript\n// set airplane mode\ndriver.setNetworkConnection(1)\n\n// set wifi only\ndriver.setNetworkConnection(2)\n\n// set data only\ndriver.setNetworkConnection(4)\n\n// set wifi and data\ndriver.setNetworkConnection(6)\n\n\n\n\nRetrieving the network connection settings returns the same bitmask, from which\nthe status can be decoded.\n\n\n// javascript\ndriver.getNetworkConnection().then(function (connectionType) {\n  switch (connectionType) {\n    case 0:\n      // no network connection\n      break;\n    case 1:\n      // airplane mode\n      break;\n    case 2:\n      // wifi\n      break;\n    case 4:\n      // data\n      break;\n    case 6:\n      // wifi and data\n      break;\n  }\n});",
            "title": "Network connection"
        },
        {
            "location": "/en/writing-running-appium/network_connection/#adjusting-network-connection",
            "text": "The Selenium  Mobile JSON Wire Protocol Specification  supports an  API  for getting and setting the network connection for a device. The API works through a bitmask, assigning an integer to each possible state:     Value (Alias)  Data  Wifi  Airplane Mode      0 (None)  0  0  0    1 (Airplane Mode)  0  0  1    2 (Wifi only)  0  1  0    4 (Data only)  1  0  0    6 (All network on)  1  1  0",
            "title": "Adjusting Network Connection"
        },
        {
            "location": "/en/writing-running-appium/network_connection/#ios",
            "text": "Unfortunately, at the moment Appium does not support the Selenium network\nconnection API for iOS.",
            "title": "iOS"
        },
        {
            "location": "/en/writing-running-appium/network_connection/#android",
            "text": "There are the following limitations:",
            "title": "Android"
        },
        {
            "location": "/en/writing-running-appium/network_connection/#real-devices",
            "text": "Changing Airplane Mode state only works for Android 6 and older  Chaning data connection state works for Android 4.4 and older. Newer OS releases (5.0+) must be rooted in order to make the feature working (e. g.  su  binary should available)  Changing Wi-Fi connection state should work for all Android versions",
            "title": "Real Devices"
        },
        {
            "location": "/en/writing-running-appium/network_connection/#emulators",
            "text": "Changing Airplane Mode state only works for Android 6 and older  Chaning data connection state should work for all Android versions  Changing Wi-Fi connection state should work for all Android versions",
            "title": "Emulators"
        },
        {
            "location": "/en/writing-running-appium/network_connection/#windows",
            "text": "Unfortunately, at the moment Appium does not support the Selenium network\nconnection API for Windows.  // javascript\n// set airplane mode\ndriver.setNetworkConnection(1)\n\n// set wifi only\ndriver.setNetworkConnection(2)\n\n// set data only\ndriver.setNetworkConnection(4)\n\n// set wifi and data\ndriver.setNetworkConnection(6)  Retrieving the network connection settings returns the same bitmask, from which\nthe status can be decoded.  // javascript\ndriver.getNetworkConnection().then(function (connectionType) {\n  switch (connectionType) {\n    case 0:\n      // no network connection\n      break;\n    case 1:\n      // airplane mode\n      break;\n    case 2:\n      // wifi\n      break;\n    case 4:\n      // data\n      break;\n    case 6:\n      // wifi and data\n      break;\n  }\n});",
            "title": "Windows"
        },
        {
            "location": "/en/writing-running-appium/reset-strategies/",
            "text": "Reset Strategies\n\n\n\n\n\n\n\n\nAutomation Name\n\n\ndefault\n\n\nfullReset\n\n\nnoReset\n\n\n\n\n\n\n\n\n\n\niOS (including XCUITest)\n\n\nShut down sim after test. Do not destroy sim. Do not uninstall app from real device.\n\n\nUninstall app after real device test, destroy Simulator after sim test\n\n\nDo not destroy or shut down sim after test. Start tests running on whichever sim is running, or device is plugged in\n\n\n\n\n\n\nAndroid\n\n\nStop and clear app data after test. Do not uninstall apk\n\n\nStop app, clear app data and uninstall apk after test\n\n\nDo not stop app, do not clear app data, and do not uninstall apk.",
            "title": "Reset strategies"
        },
        {
            "location": "/en/writing-running-appium/reset-strategies/#reset-strategies",
            "text": "Automation Name  default  fullReset  noReset      iOS (including XCUITest)  Shut down sim after test. Do not destroy sim. Do not uninstall app from real device.  Uninstall app after real device test, destroy Simulator after sim test  Do not destroy or shut down sim after test. Start tests running on whichever sim is running, or device is plugged in    Android  Stop and clear app data after test. Do not uninstall apk  Stop app, clear app data and uninstall apk after test  Do not stop app, do not clear app data, and do not uninstall apk.",
            "title": "Reset Strategies"
        },
        {
            "location": "/en/writing-running-appium/running-tests/",
            "text": "Running Tests\n\n\nPreparing your app for test (iOS)\n\n\nTest apps run on the simulator have to be compiled specifically for the\nsimulator, for example by executing the following command in the Xcode project (you can use \nxcodebuild -showsdks\n to see the list of available SDKs):\n\n\n> xcodebuild -sdk iphonesimulator6.0\n\n\n\nThis creates a \nbuild/Release-iphonesimulator\n directory in your Xcode project\nthat contains the \n.app\n package that you'll need to communicate with the\nAppium server.\n\n\nIf you want, you can zip up the .app directory into a .zip file! Appium will\nunpack it for you. Nice if you're not using Appium locally.\n\n\nPreparing your app for test (Android)\n\n\nNothing in particular needs to be done to run your .apk using Appium. If you\nwant to zip it up, you can.\n\n\nPreparing your app for test (Windows)\n\n\nNothing in particular needs to be done to run your test.\n\n\nRunning your test app with Appium (iOS)\n\n\nThe best way to see what to do currently is to look at the example tests:\n\n\nNode.js\n | \nPython\n | \nPHP\n | \nRuby\n | \nJava\n\n\nBasically, first make sure Appium is running:\n\n\nnode .\n\n\n\nThen script your WebDriver test, sending in the following desired capabilities:\n\n\n// javascript\n{\n    platformName: 'iOS',\n    platformVersion: '7.1',\n    deviceName: 'iPhone Simulator',\n    app: myApp\n}\n\n\n\n\n# python\n{\n    'platformName': 'iOS',\n    'platformVersion': '7.1',\n    'deviceName': 'iPhone Simulator',\n    'app': myApp\n}\n\n\n\n\n// php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'iOS',\n            'platformVersion' => '7.1',\n            'deviceName' => 'iPhone Simulator',\n            'app' => $myApp\n        )\n    )\n);\n\n\n\n\n// java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"iOS\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"7.1\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"iPhone Simulator\");\ncapabilities.setCapability(MobileCapabilityType.APP, myApp);\n\n\n\n\nIn this set of capabilities, \nmyApp\n must be either:\n\n\n\n\nA local absolute path to your simulator-compiled .app directory or .zip\n\n\nA url of a zip file containing your .app package\n\n\nA path to one of the sample app relative to the appium install root\n\n\n\n\nUsing your WebDriver library of choice, set the remote session to use these\ncapabilities and connect to the server running at port 4723 of localhost (or\nwhatever host and port you specified when you started Appium). You should be\nall set now!\n\n\nRunning your test app with Appium (Android)\n\n\nFirst, make sure you have one and only one Android emulator or device\nconnected. If you run \nadb devices\n, for example, you should see one device\nconnected. This is the device Appium will use for tests. Of course, to have\na device connected, you'll need to have made an Android AVD. If the Android SDK\ntools are on your path, you can simply run:\n\n\nemulator -avd <MyAvdName>\n\n\n\nAnd wait for the android emulator to finish launching. Sometimes, for various\nreasons, \nadb\n gets stuck. If it's not showing any connected devices or\notherwise failing, you can restart it by running:\n\n\nadb kill-server && adb devices\n\n\n\nNow, make sure Appium is running:\n\n\nnode .\n\n\n\nThere are several ways to start an Appium application (it works exactly\nthe same as when the application is started via adb):\n\n\n\n\napk or zip only, the default activity will be launched ('app' capability)\n\n\napk + activity ('app' + 'appActivity' capabilities)\n\n\napk + activity + intent ('app' + 'appActivity' + 'appIntent' capabilities)\n\n\n...\n\n\n\n\nActivities may be specified in the following way:\n\n\n\n\nabsolute (e.g. appActivity: 'com.helloworld.SayHello').\n\n\nrelative to appPackage (e.g. appPackage: 'com.helloworld', appActivity='.SayHello')\n\n\n\n\nIf the 'appWaitPackage' and 'appWaitActivity' caps are specified, Appium\nautomatically spins until those activities are launched. You may specify\nmultiple wait activities for instance:\n\n\n\n\nappActivity: 'com.splash.SplashScreen'\n\n\nappPackage: 'com.splash' appActivity: '.SplashScreen'\n\n\nappPackage: 'com.splash' appActivity: '.SplashScreen,.LandingPage,com.why.GoThere'\n\n\n\n\nIf you are not sure what activity are configured in your apk, you can\nproceed in one of the following ways:\n\n\n\n\nMac/Linux: 'adb shell dumpsys window windows | grep mFocusedApp'\n\n\nIn the Ruby console: 'adb shell dumpsys window windows`.each_line.grep(/mFocusedApp/).first.strip'\n\n\nIn Windows terminal run 'adb shell dumpsys window windows' and manually look for the mFocusedApp line.\n\n\n\n\nThen script your WebDriver test, sending in the following desired capabilities:\n\n\n// javascript\n{\n    platformName: 'Android',\n    platformVersion: '4.4',\n    deviceName: 'Android Emulator',\n    app: myApp\n}\n\n\n\n\n# python\n{\n    'platformName': 'Android',\n    'platformVersion': '4.4',\n    'deviceName': 'Android Emulator',\n    'app': myApp\n}\n\n\n\n\n// php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'Android',\n            'platformVersion' => '4.4',\n            'deviceName' => 'Android Emulator',\n            'app' => $myApp\n        )\n    )\n);\n\n\n\n\n// java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"Android\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"4.4\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"Android Emulator\");\ncapabilities.setCapability(MobileCapabilityType.APP, myApp);\n\n\n\n\nIn this set of capabilities, \nmyApp\n must be either:\n\n\n\n\nA local absolute path to your .apk or a .zip of it\n\n\nA url of a zip file containing your .apk\n\n\nA path to one of the sample app relative to the appium install root\n\n\n\n\nUsing your WebDriver library of choice, set the remote session to use these\ncapabilities and connect to the server running at port 4723 of localhost (or\nwhatever host and port you specified when you started Appium). You should be\nall set now!\n\n\nRunning your test app with Appium (Android devices < 4.2, and hybrid tests)\n\n\nAndroid devices before version 4.2 (API Level 17) do not have Google's\n\nUiAutomator framework\n\ninstalled. This is what Appium uses to perform the automation behaviors on\nthe device. For earlier devices or tests of hybrid (webview-based) apps,\nAppium comes bundled with another automation backend called [Selendroid]\n(http://selendroid.io/).\n\n\nTo use Selendroid, all that is required is to slightly change the set of\ndesired capabilities mentioned above, by adding the \nautomationName\n capability\nand specifying the Selendroid automation backend. It is usually the case that you\nalso need to use a \n.\n before your activity name (e.g., \n.MainActivity\n instead\nof \nMainActivity\n for your \nappActivity\n capability).\n\n\n// javascript\n{\n    automationName: 'Selendroid',\n    platformName: 'Android',\n    platformVersion: '2.3',\n    deviceName: 'Android Emulator',\n    app: myApp,\n    appPackage: 'com.mycompany.package',\n    appActivity: '.MainActivity'\n}\n\n\n\n\n# python\n{\n    'automationName': 'Selendroid',\n    'platformName': 'Android',\n    'platformVersion': '2.3',\n    'deviceName': 'Android Emulator',\n    'app': myApp,\n    'appPackage': 'com.mycompany.package',\n    'appActivity': '.MainActivity'\n}\n\n\n\n\n// php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'automationName' => 'Selendroid',\n            'platformName' => 'Android',\n            'platformVersion' => '2.3',\n            'deviceName' => 'Android Emulator',\n            'app' => $myApp,\n            'appPackage' => 'com.mycompany.package',\n            'appActivity'=> '.MainActivity'\n        )\n    )\n);\n\n\n\n\n// java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.AUTOMATION_NAME, \"Selendroid\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"Android\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"2.3\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"Android Emulator\");\ncapabilities.setCapability(MobileCapabilityType.APP, myApp);\ncapabilities.setCapability(MobileCapabilityType.APP_PACKAGE: \"com.mycompany.package\");\ncapabilities.setCapability(MobileCapabilityType.APP_ACTIVITY: \".MainActivity\");\n\n\n\n\nNow Appium will start up a Selendroid test session instead of the default test\nsession. One of the downsides to using Selendroid is that its API differs\nsometimes significantly with Appium's. Therefore we recommend you thoroughly\nread \nSelendroid's documentation\n before\nwriting your scripts for older devices or hybrid apps.\n\n\nRunning your test app with Appium (Windows)\n\n\nSimply ensure that Appium is listening, and run your test with your test runner of choice.\n\n\nSee our \nsamples\n for details.",
            "title": "Running tests"
        },
        {
            "location": "/en/writing-running-appium/running-tests/#running-tests",
            "text": "",
            "title": "Running Tests"
        },
        {
            "location": "/en/writing-running-appium/running-tests/#preparing-your-app-for-test-ios",
            "text": "Test apps run on the simulator have to be compiled specifically for the\nsimulator, for example by executing the following command in the Xcode project (you can use  xcodebuild -showsdks  to see the list of available SDKs):  > xcodebuild -sdk iphonesimulator6.0  This creates a  build/Release-iphonesimulator  directory in your Xcode project\nthat contains the  .app  package that you'll need to communicate with the\nAppium server.  If you want, you can zip up the .app directory into a .zip file! Appium will\nunpack it for you. Nice if you're not using Appium locally.",
            "title": "Preparing your app for test (iOS)"
        },
        {
            "location": "/en/writing-running-appium/running-tests/#preparing-your-app-for-test-android",
            "text": "Nothing in particular needs to be done to run your .apk using Appium. If you\nwant to zip it up, you can.",
            "title": "Preparing your app for test (Android)"
        },
        {
            "location": "/en/writing-running-appium/running-tests/#preparing-your-app-for-test-windows",
            "text": "Nothing in particular needs to be done to run your test.",
            "title": "Preparing your app for test (Windows)"
        },
        {
            "location": "/en/writing-running-appium/running-tests/#running-your-test-app-with-appium-ios",
            "text": "The best way to see what to do currently is to look at the example tests:  Node.js  |  Python  |  PHP  |  Ruby  |  Java  Basically, first make sure Appium is running:  node .  Then script your WebDriver test, sending in the following desired capabilities:  // javascript\n{\n    platformName: 'iOS',\n    platformVersion: '7.1',\n    deviceName: 'iPhone Simulator',\n    app: myApp\n}  # python\n{\n    'platformName': 'iOS',\n    'platformVersion': '7.1',\n    'deviceName': 'iPhone Simulator',\n    'app': myApp\n}  // php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'iOS',\n            'platformVersion' => '7.1',\n            'deviceName' => 'iPhone Simulator',\n            'app' => $myApp\n        )\n    )\n);  // java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"iOS\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"7.1\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"iPhone Simulator\");\ncapabilities.setCapability(MobileCapabilityType.APP, myApp);  In this set of capabilities,  myApp  must be either:   A local absolute path to your simulator-compiled .app directory or .zip  A url of a zip file containing your .app package  A path to one of the sample app relative to the appium install root   Using your WebDriver library of choice, set the remote session to use these\ncapabilities and connect to the server running at port 4723 of localhost (or\nwhatever host and port you specified when you started Appium). You should be\nall set now!",
            "title": "Running your test app with Appium (iOS)"
        },
        {
            "location": "/en/writing-running-appium/running-tests/#running-your-test-app-with-appium-android",
            "text": "First, make sure you have one and only one Android emulator or device\nconnected. If you run  adb devices , for example, you should see one device\nconnected. This is the device Appium will use for tests. Of course, to have\na device connected, you'll need to have made an Android AVD. If the Android SDK\ntools are on your path, you can simply run:  emulator -avd <MyAvdName>  And wait for the android emulator to finish launching. Sometimes, for various\nreasons,  adb  gets stuck. If it's not showing any connected devices or\notherwise failing, you can restart it by running:  adb kill-server && adb devices  Now, make sure Appium is running:  node .  There are several ways to start an Appium application (it works exactly\nthe same as when the application is started via adb):   apk or zip only, the default activity will be launched ('app' capability)  apk + activity ('app' + 'appActivity' capabilities)  apk + activity + intent ('app' + 'appActivity' + 'appIntent' capabilities)  ...   Activities may be specified in the following way:   absolute (e.g. appActivity: 'com.helloworld.SayHello').  relative to appPackage (e.g. appPackage: 'com.helloworld', appActivity='.SayHello')   If the 'appWaitPackage' and 'appWaitActivity' caps are specified, Appium\nautomatically spins until those activities are launched. You may specify\nmultiple wait activities for instance:   appActivity: 'com.splash.SplashScreen'  appPackage: 'com.splash' appActivity: '.SplashScreen'  appPackage: 'com.splash' appActivity: '.SplashScreen,.LandingPage,com.why.GoThere'   If you are not sure what activity are configured in your apk, you can\nproceed in one of the following ways:   Mac/Linux: 'adb shell dumpsys window windows | grep mFocusedApp'  In the Ruby console: 'adb shell dumpsys window windows`.each_line.grep(/mFocusedApp/).first.strip'  In Windows terminal run 'adb shell dumpsys window windows' and manually look for the mFocusedApp line.   Then script your WebDriver test, sending in the following desired capabilities:  // javascript\n{\n    platformName: 'Android',\n    platformVersion: '4.4',\n    deviceName: 'Android Emulator',\n    app: myApp\n}  # python\n{\n    'platformName': 'Android',\n    'platformVersion': '4.4',\n    'deviceName': 'Android Emulator',\n    'app': myApp\n}  // php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'Android',\n            'platformVersion' => '4.4',\n            'deviceName' => 'Android Emulator',\n            'app' => $myApp\n        )\n    )\n);  // java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"Android\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"4.4\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"Android Emulator\");\ncapabilities.setCapability(MobileCapabilityType.APP, myApp);  In this set of capabilities,  myApp  must be either:   A local absolute path to your .apk or a .zip of it  A url of a zip file containing your .apk  A path to one of the sample app relative to the appium install root   Using your WebDriver library of choice, set the remote session to use these\ncapabilities and connect to the server running at port 4723 of localhost (or\nwhatever host and port you specified when you started Appium). You should be\nall set now!",
            "title": "Running your test app with Appium (Android)"
        },
        {
            "location": "/en/writing-running-appium/running-tests/#running-your-test-app-with-appium-android-devices-42-and-hybrid-tests",
            "text": "Android devices before version 4.2 (API Level 17) do not have Google's UiAutomator framework \ninstalled. This is what Appium uses to perform the automation behaviors on\nthe device. For earlier devices or tests of hybrid (webview-based) apps,\nAppium comes bundled with another automation backend called [Selendroid]\n(http://selendroid.io/).  To use Selendroid, all that is required is to slightly change the set of\ndesired capabilities mentioned above, by adding the  automationName  capability\nand specifying the Selendroid automation backend. It is usually the case that you\nalso need to use a  .  before your activity name (e.g.,  .MainActivity  instead\nof  MainActivity  for your  appActivity  capability).  // javascript\n{\n    automationName: 'Selendroid',\n    platformName: 'Android',\n    platformVersion: '2.3',\n    deviceName: 'Android Emulator',\n    app: myApp,\n    appPackage: 'com.mycompany.package',\n    appActivity: '.MainActivity'\n}  # python\n{\n    'automationName': 'Selendroid',\n    'platformName': 'Android',\n    'platformVersion': '2.3',\n    'deviceName': 'Android Emulator',\n    'app': myApp,\n    'appPackage': 'com.mycompany.package',\n    'appActivity': '.MainActivity'\n}  // php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'automationName' => 'Selendroid',\n            'platformName' => 'Android',\n            'platformVersion' => '2.3',\n            'deviceName' => 'Android Emulator',\n            'app' => $myApp,\n            'appPackage' => 'com.mycompany.package',\n            'appActivity'=> '.MainActivity'\n        )\n    )\n);  // java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.AUTOMATION_NAME, \"Selendroid\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"Android\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"2.3\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"Android Emulator\");\ncapabilities.setCapability(MobileCapabilityType.APP, myApp);\ncapabilities.setCapability(MobileCapabilityType.APP_PACKAGE: \"com.mycompany.package\");\ncapabilities.setCapability(MobileCapabilityType.APP_ACTIVITY: \".MainActivity\");  Now Appium will start up a Selendroid test session instead of the default test\nsession. One of the downsides to using Selendroid is that its API differs\nsometimes significantly with Appium's. Therefore we recommend you thoroughly\nread  Selendroid's documentation  before\nwriting your scripts for older devices or hybrid apps.",
            "title": "Running your test app with Appium (Android devices &lt; 4.2, and hybrid tests)"
        },
        {
            "location": "/en/writing-running-appium/running-tests/#running-your-test-app-with-appium-windows",
            "text": "Simply ensure that Appium is listening, and run your test with your test runner of choice.  See our  samples  for details.",
            "title": "Running your test app with Appium (Windows)"
        },
        {
            "location": "/en/writing-running-appium/server-args/",
            "text": "Appium server arguments\n\n\nMany Appium 1.5 server arguments have been deprecated in favor of the \n--default-capabilities flag\n.\n\n\nUsage: \nnode . [flags]\n\n\nServer flags\n\n\nAll flags are optional, but some are required in conjunction with certain others.\n\n\n\n\n\n\n\n\n\n\nFlag\n\n\nDefault\n\n\nDescription\n\n\nExample\n\n\n\n\n\n\n\n\n\n\n--shell\n\n\nnull\n\n\nEnter REPL mode\n\n\n\n\n\n\n\n\n--ipa\n\n\nnull\n\n\n(IOS-only) abs path to compiled .ipa file\n\n\n--ipa /abs/path/to/my.ipa\n\n\n\n\n\n\n-a\n, \n--address\n\n\n0.0.0.0\n\n\nIP Address to listen on\n\n\n--address 0.0.0.0\n\n\n\n\n\n\n-p\n, \n--port\n\n\n4723\n\n\nport to listen on\n\n\n--port 4723\n\n\n\n\n\n\n-ca\n, \n--callback-address\n\n\nnull\n\n\ncallback IP Address (default: same as --address)\n\n\n--callback-address 127.0.0.1\n\n\n\n\n\n\n-cp\n, \n--callback-port\n\n\nnull\n\n\ncallback port (default: same as port)\n\n\n--callback-port 4723\n\n\n\n\n\n\n-bp\n, \n--bootstrap-port\n\n\n4724\n\n\n(Android-only) port to use on device to talk to Appium\n\n\n--bootstrap-port 4724\n\n\n\n\n\n\n-r\n, \n--backend-retries\n\n\n3\n\n\n(iOS-only) How many times to retry launching Instruments before saying it crashed or timed out\n\n\n--backend-retries 3\n\n\n\n\n\n\n--session-override\n\n\nfalse\n\n\nEnables session override (clobbering)\n\n\n\n\n\n\n\n\n-l\n, \n--pre-launch\n\n\nfalse\n\n\nPre-launch the application before allowing the first session (Requires --app and, for Android, --app-pkg and --app-activity)\n\n\n\n\n\n\n\n\n-g\n, \n--log\n\n\nnull\n\n\nAlso send log output to this file\n\n\n--log /path/to/appium.log\n\n\n\n\n\n\n--log-level\n\n\ndebug\n\n\nlog level; default (console[:file]): debug[:debug]\n\n\n--log-level debug\n\n\n\n\n\n\n--log-timestamp\n\n\nfalse\n\n\nShow timestamps in console output\n\n\n\n\n\n\n\n\n--local-timezone\n\n\nfalse\n\n\nUse local timezone for timestamps\n\n\n\n\n\n\n\n\n--log-no-colors\n\n\nfalse\n\n\nDo not use colors in console output\n\n\n\n\n\n\n\n\n-G\n, \n--webhook\n\n\nnull\n\n\nAlso send log output to this HTTP listener\n\n\n--webhook localhost:9876\n\n\n\n\n\n\n--safari\n\n\nfalse\n\n\n(IOS-Only) Use the safari app\n\n\n\n\n\n\n\n\n--default-device\n, \n-dd\n\n\nfalse\n\n\n(IOS-Simulator-only) use the default simulator that instruments launches on its own\n\n\n\n\n\n\n\n\n--force-iphone\n\n\nfalse\n\n\n(IOS-only) Use the iPhone Simulator no matter what the app wants\n\n\n\n\n\n\n\n\n--force-ipad\n\n\nfalse\n\n\n(IOS-only) Use the iPad Simulator no matter what the app wants\n\n\n\n\n\n\n\n\n--tracetemplate\n\n\nnull\n\n\n(IOS-only) .tracetemplate file to use with Instruments\n\n\n--tracetemplate /Users/me/Automation.tracetemplate\n\n\n\n\n\n\n--instruments\n\n\nnull\n\n\n(IOS-only) path to instruments binary\n\n\n--instruments /path/to/instruments\n\n\n\n\n\n\n--nodeconfig\n\n\nnull\n\n\nConfiguration JSON file to register appium with selenium grid\n\n\n--nodeconfig /abs/path/to/nodeconfig.json\n\n\n\n\n\n\n-ra\n, \n--robot-address\n\n\n0.0.0.0\n\n\nIP Address of robot\n\n\n--robot-address 0.0.0.0\n\n\n\n\n\n\n-rp\n, \n--robot-port\n\n\n-1\n\n\nport for robot\n\n\n--robot-port 4242\n\n\n\n\n\n\n--selendroid-port\n\n\n8080\n\n\nLocal port used for communication with Selendroid\n\n\n--selendroid-port 8080\n\n\n\n\n\n\n--chromedriver-port\n\n\n9515\n\n\nPort upon which ChromeDriver will run\n\n\n--chromedriver-port 9515\n\n\n\n\n\n\n--chromedriver-executable\n\n\nnull\n\n\nChromeDriver executable full path\n\n\n\n\n\n\n\n\n--show-config\n\n\nfalse\n\n\nShow info about the appium server configuration and exit\n\n\n\n\n\n\n\n\n--no-perms-check\n\n\nfalse\n\n\nBypass Appium's checks to ensure we can read/write necessary files\n\n\n\n\n\n\n\n\n--strict-caps\n\n\nfalse\n\n\nCause sessions to fail if desired caps are sent in that Appium does not recognize as valid for the selected device\n\n\n\n\n\n\n\n\n--isolate-sim-device\n\n\nfalse\n\n\nXcode 6 has a bug on some platforms where a certain simulator can only be launched without error if all other simulator devices are first deleted. This option causes Appium to delete all devices other than the one being used by Appium. Note that this is a permanent deletion, and you are responsible for using simctl or xcode to manage the categories of devices used with Appium.\n\n\n\n\n\n\n\n\n--tmp\n\n\nnull\n\n\nAbsolute path to directory Appium can use to manage temporary files, like built-in iOS apps it needs to move around. On *nix/Mac defaults to /tmp, on Windows defaults to C:\\Windows\\Temp\n\n\n\n\n\n\n\n\n--trace-dir\n\n\nnull\n\n\nAbsolute path to directory Appium use to save ios instruments traces, defaults to \n/appium-instruments\n\n\n\n\n\n\n\n\n--debug-log-spacing\n\n\nfalse\n\n\nAdd exaggerated spacing in logs to help with visual inspection\n\n\n\n\n\n\n\n\n--suppress-adb-kill-server\n\n\nfalse\n\n\n(Android-only) If set, prevents Appium from killing the adb server instance\n\n\n\n\n\n\n\n\n--async-trace\n\n\nfalse\n\n\nAdd long stack traces to log entries. Recommended for debugging only.\n\n\n\n\n\n\n\n\n--webkit-debug-proxy-port\n\n\n27753\n\n\n(IOS-only) Local port used for communication with ios-webkit-debug-proxy\n\n\n--webkit-debug-proxy-port 27753\n\n\n\n\n\n\n-dc\n, \n--default-capabilities\n\n\n{}\n\n\nSet the default desired capabilities, which will be set on each session unless overridden by received capabilities.\n\n\n--default-capabilities [ '{\"app\": \"myapp.app\", \"deviceName\": \"iPhone Simulator\"}' | /path/to/caps.json ]\n\n\n\n\n\n\n--reboot\n\n\nfalse\n\n\n- (Android-only) reboot emulator after each session and kill it at the end\n\n\n\n\n\n\n\n\n--command-timeout\n\n\n60\n\n\n[DEPRECATED] No effect. This used to be the default command timeout for the server to use for all sessions (in seconds and should be less than 2147483). Use newCommandTimeout cap instead\n\n\n\n\n\n\n\n\n-k\n, \n--keep-artifacts\n\n\nfalse\n\n\n[DEPRECATED] - no effect, trace is now in tmp dir by default and is cleared before each run. Please also refer to the --trace-dir flag.\n\n\n\n\n\n\n\n\n--platform-name\n\n\nnull\n\n\n[DEPRECATED] - Name of the mobile platform: iOS, Android, or FirefoxOS\n\n\n--platform-name iOS\n\n\n\n\n\n\n--platform-version\n\n\nnull\n\n\n[DEPRECATED] - Version of the mobile platform\n\n\n--platform-version 7.1\n\n\n\n\n\n\n--automation-name\n\n\nnull\n\n\n[DEPRECATED] - Name of the automation tool: Appium or Selendroid\n\n\n--automation-name Appium\n\n\n\n\n\n\n--device-name\n\n\nnull\n\n\n[DEPRECATED] - Name of the mobile device to use\n\n\n--device-name iPhone Retina (4-inch), Android Emulator\n\n\n\n\n\n\n--browser-name\n\n\nnull\n\n\n[DEPRECATED] - Name of the mobile browser: Safari or Chrome\n\n\n--browser-name Safari\n\n\n\n\n\n\n--app\n\n\nnull\n\n\n[DEPRECATED] - IOS: abs path to simulator-compiled .app file or the bundle_id of the desired target on device; Android: abs path to .apk file\n\n\n--app /abs/path/to/my.app\n\n\n\n\n\n\n-lt\n, \n--launch-timeout\n\n\n90000\n\n\n[DEPRECATED] - (iOS-only) how long in ms to wait for Instruments to launch\n\n\n\n\n\n\n\n\n--language\n\n\nnull\n\n\n[DEPRECATED] - Language for the iOS simulator / Android Emulator\n\n\n--language en\n\n\n\n\n\n\n--locale\n\n\nnull\n\n\n[DEPRECATED] - Locale for the iOS simulator / Android Emulator\n\n\n--locale en_US\n\n\n\n\n\n\n-U\n, \n--udid\n\n\nnull\n\n\n[DEPRECATED] - Unique device identifier of the connected physical device\n\n\n--udid 1adsf-sdfas-asdf-123sdf\n\n\n\n\n\n\n--orientation\n\n\nnull\n\n\n[DEPRECATED] - (IOS-only) use LANDSCAPE or PORTRAIT to initialize all requests to this orientation\n\n\n--orientation LANDSCAPE\n\n\n\n\n\n\n--no-reset\n\n\nfalse\n\n\n[DEPRECATED] - Do not reset app state between sessions (IOS: do not delete app plist files; Android: do not uninstall app before new session)\n\n\n\n\n\n\n\n\n--full-reset\n\n\nfalse\n\n\n[DEPRECATED] - (iOS) Delete the entire simulator folder. (Android) Reset app state by uninstalling app instead of clearing app data. On Android, this will also remove the app after the session is complete.\n\n\n\n\n\n\n\n\n--app-pkg\n\n\nnull\n\n\n[DEPRECATED] - (Android-only) Java package of the Android app you want to run (e.g., com.example.android.myApp)\n\n\n--app-pkg com.example.android.myApp\n\n\n\n\n\n\n--app-activity\n\n\nnull\n\n\n[DEPRECATED] - (Android-only) Activity name for the Android activity you want to launch from your package (e.g., MainActivity)\n\n\n--app-activity MainActivity\n\n\n\n\n\n\n--app-wait-package\n\n\nfalse\n\n\n[DEPRECATED] - (Android-only) Package name for the Android activity you want to wait for (e.g., com.example.android.myApp)\n\n\n--app-wait-package com.example.android.myApp\n\n\n\n\n\n\n--app-wait-activity\n\n\nfalse\n\n\n[DEPRECATED] - (Android-only) Activity name for the Android activity you want to wait for (e.g., SplashActivity)\n\n\n--app-wait-activity SplashActivity\n\n\n\n\n\n\n--device-ready-timeout\n\n\n5\n\n\n[DEPRECATED] - (Android-only) Timeout in seconds while waiting for device to become ready\n\n\n--device-ready-timeout 5\n\n\n\n\n\n\n--android-coverage\n\n\nfalse\n\n\n[DEPRECATED] - (Android-only) Fully qualified instrumentation class. Passed to -w in adb shell am instrument -e coverage true -w\n\n\n--android-coverage com.my.Pkg/com.my.Pkg.instrumentation.MyInstrumentation\n\n\n\n\n\n\n--avd\n\n\nnull\n\n\n[DEPRECATED] - (Android-only) Name of the avd to launch\n\n\n--avd @default\n\n\n\n\n\n\n--avd-args\n\n\nnull\n\n\n[DEPRECATED] - (Android-only) Additional emulator arguments to launch the avd\n\n\n--avd-args -no-snapshot-load\n\n\n\n\n\n\n--use-keystore\n\n\nfalse\n\n\n[DEPRECATED] - (Android-only) When set the keystore will be used to sign apks.\n\n\n\n\n\n\n\n\n--keystore-path\n\n\n<user>/.android/debug.keystore\n\n\n[DEPRECATED] - (Android-only) Path to keystore\n\n\n\n\n\n\n\n\n--keystore-password\n\n\nandroid\n\n\n[DEPRECATED] - (Android-only) Password to keystore\n\n\n\n\n\n\n\n\n--key-alias\n\n\nandroiddebugkey\n\n\n[DEPRECATED] - (Android-only) Key alias\n\n\n\n\n\n\n\n\n--key-password\n\n\nandroid\n\n\n[DEPRECATED] - (Android-only) Key password\n\n\n\n\n\n\n\n\n--intent-action\n\n\nandroid.intent.action.MAIN\n\n\n[DEPRECATED] - (Android-only) Intent action which will be used to start activity\n\n\n--intent-action android.intent.action.MAIN\n\n\n\n\n\n\n--intent-category\n\n\nandroid.intent.category.LAUNCHER\n\n\n[DEPRECATED] - (Android-only) Intent category which will be used to start activity\n\n\n--intent-category android.intent.category.APP_CONTACTS\n\n\n\n\n\n\n--intent-flags\n\n\n0x10200000\n\n\n[DEPRECATED] - (Android-only) Flags that will be used to start activity\n\n\n--intent-flags 0x10200000\n\n\n\n\n\n\n--intent-args\n\n\nnull\n\n\n[DEPRECATED] - (Android-only) Additional intent arguments that will be used to start activity\n\n\n--intent-args 0x10200000\n\n\n\n\n\n\n--dont-stop-app-on-reset\n\n\nfalse\n\n\n[DEPRECATED] - (Android-only) When included, refrains from stopping the app before restart\n\n\n\n\n\n\n\n\n--calendar-format\n\n\nnull\n\n\n[DEPRECATED] - (IOS-only) calendar format for the iOS simulator\n\n\n--calendar-format gregorian\n\n\n\n\n\n\n--native-instruments-lib\n\n\nfalse\n\n\n[DEPRECATED] - (IOS-only) IOS has a weird built-in unavoidable delay. We patch this in appium. If you do not want it patched, pass in this flag.\n\n\n\n\n\n\n\n\n--keep-keychains\n\n\nfalse\n\n\n[DEPRECATED] - (iOS-only) Whether to keep keychains (Library/Keychains) when reset app between sessions\n\n\n\n\n\n\n\n\n--localizable-strings-dir\n\n\nen.lproj\n\n\n[DEPRECATED] - (IOS-only) the relative path of the dir where Localizable.strings file resides\n\n\n--localizable-strings-dir en.lproj\n\n\n\n\n\n\n--show-ios-log\n\n\nfalse\n\n\n[DEPRECATED] - (IOS-only) if set, the iOS system log will be written to the console\n\n\n\n\n\n\n\n\n--enable-heapdump\n\n\nfalse\n\n\nEnables NodeJS memory dumps collection feature. This feature is extremely useful for finding memory leaks. Use the 'kill -SIGUSR2 <PID>' command to create a dump of memory heap for \nnode\n process with the particular PID (this works for \nnix systems only). The dump file will be created in the same folder, where main Appium script was executed and will have \n.heapsnapshot extension. These snapshot can be then loaded to Chrome Inspector for further investigation. Read the \nRising Stack article\n for more details.",
            "title": "Server args"
        },
        {
            "location": "/en/writing-running-appium/server-args/#appium-server-arguments",
            "text": "Many Appium 1.5 server arguments have been deprecated in favor of the  --default-capabilities flag .  Usage:  node . [flags]",
            "title": "Appium server arguments"
        },
        {
            "location": "/en/writing-running-appium/server-args/#server-flags",
            "text": "All flags are optional, but some are required in conjunction with certain others.      Flag  Default  Description  Example      --shell  null  Enter REPL mode     --ipa  null  (IOS-only) abs path to compiled .ipa file  --ipa /abs/path/to/my.ipa    -a ,  --address  0.0.0.0  IP Address to listen on  --address 0.0.0.0    -p ,  --port  4723  port to listen on  --port 4723    -ca ,  --callback-address  null  callback IP Address (default: same as --address)  --callback-address 127.0.0.1    -cp ,  --callback-port  null  callback port (default: same as port)  --callback-port 4723    -bp ,  --bootstrap-port  4724  (Android-only) port to use on device to talk to Appium  --bootstrap-port 4724    -r ,  --backend-retries  3  (iOS-only) How many times to retry launching Instruments before saying it crashed or timed out  --backend-retries 3    --session-override  false  Enables session override (clobbering)     -l ,  --pre-launch  false  Pre-launch the application before allowing the first session (Requires --app and, for Android, --app-pkg and --app-activity)     -g ,  --log  null  Also send log output to this file  --log /path/to/appium.log    --log-level  debug  log level; default (console[:file]): debug[:debug]  --log-level debug    --log-timestamp  false  Show timestamps in console output     --local-timezone  false  Use local timezone for timestamps     --log-no-colors  false  Do not use colors in console output     -G ,  --webhook  null  Also send log output to this HTTP listener  --webhook localhost:9876    --safari  false  (IOS-Only) Use the safari app     --default-device ,  -dd  false  (IOS-Simulator-only) use the default simulator that instruments launches on its own     --force-iphone  false  (IOS-only) Use the iPhone Simulator no matter what the app wants     --force-ipad  false  (IOS-only) Use the iPad Simulator no matter what the app wants     --tracetemplate  null  (IOS-only) .tracetemplate file to use with Instruments  --tracetemplate /Users/me/Automation.tracetemplate    --instruments  null  (IOS-only) path to instruments binary  --instruments /path/to/instruments    --nodeconfig  null  Configuration JSON file to register appium with selenium grid  --nodeconfig /abs/path/to/nodeconfig.json    -ra ,  --robot-address  0.0.0.0  IP Address of robot  --robot-address 0.0.0.0    -rp ,  --robot-port  -1  port for robot  --robot-port 4242    --selendroid-port  8080  Local port used for communication with Selendroid  --selendroid-port 8080    --chromedriver-port  9515  Port upon which ChromeDriver will run  --chromedriver-port 9515    --chromedriver-executable  null  ChromeDriver executable full path     --show-config  false  Show info about the appium server configuration and exit     --no-perms-check  false  Bypass Appium's checks to ensure we can read/write necessary files     --strict-caps  false  Cause sessions to fail if desired caps are sent in that Appium does not recognize as valid for the selected device     --isolate-sim-device  false  Xcode 6 has a bug on some platforms where a certain simulator can only be launched without error if all other simulator devices are first deleted. This option causes Appium to delete all devices other than the one being used by Appium. Note that this is a permanent deletion, and you are responsible for using simctl or xcode to manage the categories of devices used with Appium.     --tmp  null  Absolute path to directory Appium can use to manage temporary files, like built-in iOS apps it needs to move around. On *nix/Mac defaults to /tmp, on Windows defaults to C:\\Windows\\Temp     --trace-dir  null  Absolute path to directory Appium use to save ios instruments traces, defaults to  /appium-instruments     --debug-log-spacing  false  Add exaggerated spacing in logs to help with visual inspection     --suppress-adb-kill-server  false  (Android-only) If set, prevents Appium from killing the adb server instance     --async-trace  false  Add long stack traces to log entries. Recommended for debugging only.     --webkit-debug-proxy-port  27753  (IOS-only) Local port used for communication with ios-webkit-debug-proxy  --webkit-debug-proxy-port 27753    -dc ,  --default-capabilities  {}  Set the default desired capabilities, which will be set on each session unless overridden by received capabilities.  --default-capabilities [ '{\"app\": \"myapp.app\", \"deviceName\": \"iPhone Simulator\"}' | /path/to/caps.json ]    --reboot  false  - (Android-only) reboot emulator after each session and kill it at the end     --command-timeout  60  [DEPRECATED] No effect. This used to be the default command timeout for the server to use for all sessions (in seconds and should be less than 2147483). Use newCommandTimeout cap instead     -k ,  --keep-artifacts  false  [DEPRECATED] - no effect, trace is now in tmp dir by default and is cleared before each run. Please also refer to the --trace-dir flag.     --platform-name  null  [DEPRECATED] - Name of the mobile platform: iOS, Android, or FirefoxOS  --platform-name iOS    --platform-version  null  [DEPRECATED] - Version of the mobile platform  --platform-version 7.1    --automation-name  null  [DEPRECATED] - Name of the automation tool: Appium or Selendroid  --automation-name Appium    --device-name  null  [DEPRECATED] - Name of the mobile device to use  --device-name iPhone Retina (4-inch), Android Emulator    --browser-name  null  [DEPRECATED] - Name of the mobile browser: Safari or Chrome  --browser-name Safari    --app  null  [DEPRECATED] - IOS: abs path to simulator-compiled .app file or the bundle_id of the desired target on device; Android: abs path to .apk file  --app /abs/path/to/my.app    -lt ,  --launch-timeout  90000  [DEPRECATED] - (iOS-only) how long in ms to wait for Instruments to launch     --language  null  [DEPRECATED] - Language for the iOS simulator / Android Emulator  --language en    --locale  null  [DEPRECATED] - Locale for the iOS simulator / Android Emulator  --locale en_US    -U ,  --udid  null  [DEPRECATED] - Unique device identifier of the connected physical device  --udid 1adsf-sdfas-asdf-123sdf    --orientation  null  [DEPRECATED] - (IOS-only) use LANDSCAPE or PORTRAIT to initialize all requests to this orientation  --orientation LANDSCAPE    --no-reset  false  [DEPRECATED] - Do not reset app state between sessions (IOS: do not delete app plist files; Android: do not uninstall app before new session)     --full-reset  false  [DEPRECATED] - (iOS) Delete the entire simulator folder. (Android) Reset app state by uninstalling app instead of clearing app data. On Android, this will also remove the app after the session is complete.     --app-pkg  null  [DEPRECATED] - (Android-only) Java package of the Android app you want to run (e.g., com.example.android.myApp)  --app-pkg com.example.android.myApp    --app-activity  null  [DEPRECATED] - (Android-only) Activity name for the Android activity you want to launch from your package (e.g., MainActivity)  --app-activity MainActivity    --app-wait-package  false  [DEPRECATED] - (Android-only) Package name for the Android activity you want to wait for (e.g., com.example.android.myApp)  --app-wait-package com.example.android.myApp    --app-wait-activity  false  [DEPRECATED] - (Android-only) Activity name for the Android activity you want to wait for (e.g., SplashActivity)  --app-wait-activity SplashActivity    --device-ready-timeout  5  [DEPRECATED] - (Android-only) Timeout in seconds while waiting for device to become ready  --device-ready-timeout 5    --android-coverage  false  [DEPRECATED] - (Android-only) Fully qualified instrumentation class. Passed to -w in adb shell am instrument -e coverage true -w  --android-coverage com.my.Pkg/com.my.Pkg.instrumentation.MyInstrumentation    --avd  null  [DEPRECATED] - (Android-only) Name of the avd to launch  --avd @default    --avd-args  null  [DEPRECATED] - (Android-only) Additional emulator arguments to launch the avd  --avd-args -no-snapshot-load    --use-keystore  false  [DEPRECATED] - (Android-only) When set the keystore will be used to sign apks.     --keystore-path  <user>/.android/debug.keystore  [DEPRECATED] - (Android-only) Path to keystore     --keystore-password  android  [DEPRECATED] - (Android-only) Password to keystore     --key-alias  androiddebugkey  [DEPRECATED] - (Android-only) Key alias     --key-password  android  [DEPRECATED] - (Android-only) Key password     --intent-action  android.intent.action.MAIN  [DEPRECATED] - (Android-only) Intent action which will be used to start activity  --intent-action android.intent.action.MAIN    --intent-category  android.intent.category.LAUNCHER  [DEPRECATED] - (Android-only) Intent category which will be used to start activity  --intent-category android.intent.category.APP_CONTACTS    --intent-flags  0x10200000  [DEPRECATED] - (Android-only) Flags that will be used to start activity  --intent-flags 0x10200000    --intent-args  null  [DEPRECATED] - (Android-only) Additional intent arguments that will be used to start activity  --intent-args 0x10200000    --dont-stop-app-on-reset  false  [DEPRECATED] - (Android-only) When included, refrains from stopping the app before restart     --calendar-format  null  [DEPRECATED] - (IOS-only) calendar format for the iOS simulator  --calendar-format gregorian    --native-instruments-lib  false  [DEPRECATED] - (IOS-only) IOS has a weird built-in unavoidable delay. We patch this in appium. If you do not want it patched, pass in this flag.     --keep-keychains  false  [DEPRECATED] - (iOS-only) Whether to keep keychains (Library/Keychains) when reset app between sessions     --localizable-strings-dir  en.lproj  [DEPRECATED] - (IOS-only) the relative path of the dir where Localizable.strings file resides  --localizable-strings-dir en.lproj    --show-ios-log  false  [DEPRECATED] - (IOS-only) if set, the iOS system log will be written to the console     --enable-heapdump  false  Enables NodeJS memory dumps collection feature. This feature is extremely useful for finding memory leaks. Use the 'kill -SIGUSR2 <PID>' command to create a dump of memory heap for  node  process with the particular PID (this works for  nix systems only). The dump file will be created in the same folder, where main Appium script was executed and will have  .heapsnapshot extension. These snapshot can be then loaded to Chrome Inspector for further investigation. Read the  Rising Stack article  for more details.",
            "title": "Server flags"
        },
        {
            "location": "/en/writing-running-appium/touch-actions/",
            "text": "Automating mobile gestures\n\n\nWhile the Selenium WebDriver spec has support for certain kinds of mobile\ninteraction, its parameters are not always easily mappable to the functionality\nthat the underlying device automation (like UIAutomation in the case of iOS)\nprovides. To that end, Appium implements the new TouchAction / MultiAction API\ndefined in the newest version of the spec\n(\nhttps://dvcs.w3.org/hg/webdriver/raw-file/tip/webdriver-spec.html#multiactions-1\n).\nNote that this is different from the earlier version of the TouchAction API in\nthe original JSON Wire Protocol.\n\n\nThese APIs allow you to build up arbitrary gestures with multiple actuators.\nPlease see the Appium client docs for your language in order to find examples\nof using this API.\n\n\nAn Overview of the TouchAction / MultiAction API\n\n\nTouchAction\n\n\nTouchAction\n objects contain a chain of events.\n\n\nIn all the appium client libraries, touch objects are created and are given a\nchain of events.\n\n\nThe available events from the spec are:\n * press\n * release\n * moveTo\n * tap\n * wait\n * longPress\n * cancel\n * perform\n\n\nHere's an example of creating an action in pseudocode:\n\n\nTouchAction().press(el0).moveTo(el1).release()\n\n\n\n\nThe above simulates a user pressing down on an element, sliding their finger\nto another position, and removing their finger from the screen.\n\n\nAppium performs the events in sequence. You can add a \nwait\n event to control\nthe timing of the gesture.\n\n\nmoveTo\n coordinates are \nrelative\n to the current position. For example, dragging from\n100,100 to 200,200 can be achieved by:\n\n\n.press(100,100) // Start at 100,100\n.moveTo(100,100) // Increase X & Y by 100 each, ending up at 200,200\n\n\n\n\n\nThe appium client libraries have different ways of implementing this, for example:\nyou can pass in coordinates or an element to a \nmoveTo\n event. Passing both\ncoordinates \nand\n an element will treat the coordinates as relative to the\nelement's position, rather than relative to the current position.\n\n\nCalling the \nperform\n event sends the entire sequence of events to appium,\nand the touch gesture is run on your device.\n\n\nAppium clients also allow one to directly execute a TouchAction through the\ndriver object, rather than calling the \nperform\n event on the TouchAction\nobject.\n\n\nIn pseudocode, both of the following are equivalent:\n\n\nTouchAction().tap(el).perform()\n\ndriver.perform(TouchAction().tap(el))\n\n\n\n\nMultiTouch\n\n\nMultiTouch\n objects are collections of TouchActions.\n\n\nMultiTouch gestures only have two methods, \nadd\n, and \nperform\n.\n\n\nadd\n is used to add another TouchAction to this MultiTouch.\n\n\nWhen \nperform\n is called, all the TouchActions which were added to the\nMultiTouch are sent to appium and performed as if they happened at the\nsame time. Appium first performs the first event of all TouchActions together,\nthen the second, etc.\n\n\nPseudocode example of tapping with two fingers:\n\n\naction0 = TouchAction().tap(el)\naction1 = TouchAction().tap(el)\nMultiAction().add(action0).add(action1).perform()\n\n\n\n\nBugs and Workarounds\n\n\nAn unfortunate bug exists in the iOS 7.0 - 8.x Simulators where ScrollViews,\nCollectionViews, and TableViews don't recognize gestures initiated by\nUIAutomation (which Appium uses under the hood for iOS). To work around this,\nwe have provided access to a different function, \nscroll\n, which in many cases\nallows you to do what you wanted to do with one of these views, namely, scroll\nit!\n\n\nScrolling\n\n\nTo allow access to this special feature, we override the \nexecute\n or\n\nexecuteScript\n methods in the driver, and prefix the command with \nmobile:\n.\nSee examples below:\n\n\nTo scroll, pass direction in which you intend to scroll as parameter.\n\n\n// javascript\ndriver.execute('mobile: scroll', {direction: 'down'})\n\n\n\n\n// java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nHashMap<String, String> scrollObject = new HashMap<String, String>();\nscrollObject.put(\"direction\", \"down\");\njs.executeScript(\"mobile: scroll\", scrollObject);\n\n\n\n\n# ruby\nexecute_script 'mobile: scroll', direction: 'down'\n\n\n\n\n# python\ndriver.execute_script(\"mobile: scroll\", {\"direction\": \"down\"})\n\n\n\n\n// c#\nDictionary<string, string> scrollObject = new Dictionary<string, string>();\nscrollObject.Add(\"direction\", \"down\");\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: scroll\", scrollObject));\n\n\n\n\n$params = array(array('direction' => 'down'));\n$driver->executeScript(\"mobile: scroll\", $params);\n\n\n\n\nSample to scroll using direction and element.\n\n\n// javascript\ndriver.execute('mobile: scroll', {direction: 'down', element: element.value.ELEMENT});\n\n\n\n\n// java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nHashMap<String, String> scrollObject = new HashMap<String, String>();\nscrollObject.put(\"direction\", \"down\");\nscrollObject.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: scroll\", scrollObject);\n\n\n\n\n# ruby\nexecute_script 'mobile: scroll', direction: 'down', element: element.ref\n\n\n\n\n# python\ndriver.execute_script(\"mobile: scroll\", {\"direction\": \"down\", element: element.getAttribute(\"id\")})\n\n\n\n\n// c#\nDictionary<string, string> scrollObject = new Dictionary<string, string>();\nscrollObject.Add(\"direction\", \"down\");\nscrollObject.Add(\"element\", <element_id>);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: scroll\", scrollObject));\n\n\n\n\n$params = array(array('direction' => 'down', 'element' => element.GetAttribute(\"id\")));\n$driver->executeScript(\"mobile: scroll\", $params);\n\n\n\n\nSwiping\n\n\nThis is an XCUITest driver specific method that is similar to scrolling (for reference, see \nhttps://developer.apple.com/reference/xctest/xcuielement). \n\n\nThis method has the same API as \nScrolling\n, just replace \"mobile: scroll\"\nwith \"mobile: swipe\"\n\n\nAutomating Sliders\n\n\niOS\n\n\n\n\nJava\n\n\n\n\n// java\n// slider values can be string representations of numbers between 0 and 1\n// e.g., \"0.1\" is 10%, \"1.0\" is 100%\nWebElement slider =  driver.findElement(By.xpath(\"//window[1]/slider[1]\"));\nslider.sendKeys(\"0.1\");\n\n\n\n\nAndroid\n\n\nThe best way to interact with the slider on Android is with TouchActions.",
            "title": "Touch actions"
        },
        {
            "location": "/en/writing-running-appium/touch-actions/#automating-mobile-gestures",
            "text": "While the Selenium WebDriver spec has support for certain kinds of mobile\ninteraction, its parameters are not always easily mappable to the functionality\nthat the underlying device automation (like UIAutomation in the case of iOS)\nprovides. To that end, Appium implements the new TouchAction / MultiAction API\ndefined in the newest version of the spec\n( https://dvcs.w3.org/hg/webdriver/raw-file/tip/webdriver-spec.html#multiactions-1 ).\nNote that this is different from the earlier version of the TouchAction API in\nthe original JSON Wire Protocol.  These APIs allow you to build up arbitrary gestures with multiple actuators.\nPlease see the Appium client docs for your language in order to find examples\nof using this API.",
            "title": "Automating mobile gestures"
        },
        {
            "location": "/en/writing-running-appium/touch-actions/#an-overview-of-the-touchaction-multiaction-api",
            "text": "",
            "title": "An Overview of the TouchAction / MultiAction API"
        },
        {
            "location": "/en/writing-running-appium/touch-actions/#touchaction",
            "text": "TouchAction  objects contain a chain of events.  In all the appium client libraries, touch objects are created and are given a\nchain of events.  The available events from the spec are:\n * press\n * release\n * moveTo\n * tap\n * wait\n * longPress\n * cancel\n * perform  Here's an example of creating an action in pseudocode:  TouchAction().press(el0).moveTo(el1).release()  The above simulates a user pressing down on an element, sliding their finger\nto another position, and removing their finger from the screen.  Appium performs the events in sequence. You can add a  wait  event to control\nthe timing of the gesture.  moveTo  coordinates are  relative  to the current position. For example, dragging from\n100,100 to 200,200 can be achieved by:  .press(100,100) // Start at 100,100\n.moveTo(100,100) // Increase X & Y by 100 each, ending up at 200,200  The appium client libraries have different ways of implementing this, for example:\nyou can pass in coordinates or an element to a  moveTo  event. Passing both\ncoordinates  and  an element will treat the coordinates as relative to the\nelement's position, rather than relative to the current position.  Calling the  perform  event sends the entire sequence of events to appium,\nand the touch gesture is run on your device.  Appium clients also allow one to directly execute a TouchAction through the\ndriver object, rather than calling the  perform  event on the TouchAction\nobject.  In pseudocode, both of the following are equivalent:  TouchAction().tap(el).perform()\n\ndriver.perform(TouchAction().tap(el))",
            "title": "TouchAction"
        },
        {
            "location": "/en/writing-running-appium/touch-actions/#multitouch",
            "text": "MultiTouch  objects are collections of TouchActions.  MultiTouch gestures only have two methods,  add , and  perform .  add  is used to add another TouchAction to this MultiTouch.  When  perform  is called, all the TouchActions which were added to the\nMultiTouch are sent to appium and performed as if they happened at the\nsame time. Appium first performs the first event of all TouchActions together,\nthen the second, etc.  Pseudocode example of tapping with two fingers:  action0 = TouchAction().tap(el)\naction1 = TouchAction().tap(el)\nMultiAction().add(action0).add(action1).perform()",
            "title": "MultiTouch"
        },
        {
            "location": "/en/writing-running-appium/touch-actions/#bugs-and-workarounds",
            "text": "An unfortunate bug exists in the iOS 7.0 - 8.x Simulators where ScrollViews,\nCollectionViews, and TableViews don't recognize gestures initiated by\nUIAutomation (which Appium uses under the hood for iOS). To work around this,\nwe have provided access to a different function,  scroll , which in many cases\nallows you to do what you wanted to do with one of these views, namely, scroll\nit!  Scrolling  To allow access to this special feature, we override the  execute  or executeScript  methods in the driver, and prefix the command with  mobile: .\nSee examples below:  To scroll, pass direction in which you intend to scroll as parameter.  // javascript\ndriver.execute('mobile: scroll', {direction: 'down'})  // java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nHashMap<String, String> scrollObject = new HashMap<String, String>();\nscrollObject.put(\"direction\", \"down\");\njs.executeScript(\"mobile: scroll\", scrollObject);  # ruby\nexecute_script 'mobile: scroll', direction: 'down'  # python\ndriver.execute_script(\"mobile: scroll\", {\"direction\": \"down\"})  // c#\nDictionary<string, string> scrollObject = new Dictionary<string, string>();\nscrollObject.Add(\"direction\", \"down\");\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: scroll\", scrollObject));  $params = array(array('direction' => 'down'));\n$driver->executeScript(\"mobile: scroll\", $params);  Sample to scroll using direction and element.  // javascript\ndriver.execute('mobile: scroll', {direction: 'down', element: element.value.ELEMENT});  // java\nJavascriptExecutor js = (JavascriptExecutor) driver;\nHashMap<String, String> scrollObject = new HashMap<String, String>();\nscrollObject.put(\"direction\", \"down\");\nscrollObject.put(\"element\", ((RemoteWebElement) element).getId());\njs.executeScript(\"mobile: scroll\", scrollObject);  # ruby\nexecute_script 'mobile: scroll', direction: 'down', element: element.ref  # python\ndriver.execute_script(\"mobile: scroll\", {\"direction\": \"down\", element: element.getAttribute(\"id\")})  // c#\nDictionary<string, string> scrollObject = new Dictionary<string, string>();\nscrollObject.Add(\"direction\", \"down\");\nscrollObject.Add(\"element\", <element_id>);\n((IJavaScriptExecutor)driver).ExecuteScript(\"mobile: scroll\", scrollObject));  $params = array(array('direction' => 'down', 'element' => element.GetAttribute(\"id\")));\n$driver->executeScript(\"mobile: scroll\", $params);  Swiping  This is an XCUITest driver specific method that is similar to scrolling (for reference, see \nhttps://developer.apple.com/reference/xctest/xcuielement).   This method has the same API as  Scrolling , just replace \"mobile: scroll\"\nwith \"mobile: swipe\"  Automating Sliders  iOS   Java   // java\n// slider values can be string representations of numbers between 0 and 1\n// e.g., \"0.1\" is 10%, \"1.0\" is 100%\nWebElement slider =  driver.findElement(By.xpath(\"//window[1]/slider[1]\"));\nslider.sendKeys(\"0.1\");  Android  The best way to interact with the slider on Android is with TouchActions.",
            "title": "Bugs and Workarounds"
        },
        {
            "location": "/en/writing-running-appium/troubleshooting/",
            "text": "Troubleshooting Appium\n\n\nHere's what to do if you're experiencing problems, before you submit a ticket\nto github or write to the \nappium-discuss discussion group\n.\n\n\nGeneral\n\n\n\n\nMake sure you've followed the getting started steps in the \nREADME\n\n\nMake sure your system is set up appropriately (i.e., XCode is updated,\n  Android SDK is installed and \nANDROID_HOME\n is set.\n\n\nMake sure the paths to your applications are correct\n\n\nOn windows run appium.app as administrator or when running from source you need to run cmd as administrator.\n\n\n\n\nIf you're running Appium.app\n\n\n\n\nUpdate the app and restart. If you get a message saying the app can't be updated,\n  re-download it from \nappium.io\n.\n\n\n\n\nIf you're running Appium from source\n\n\n\n\ngit pull\n to make sure you're running the latest code\n\n\nRemove old dependencies: \nrm -rf node_modules\n\n\nRe-install dependencies: \nnpm install\n\n\n\n\nRe-transpile the code: \ngulp transpile\n\n\n\n\n\n\nYou can also use \nAppium Doctor\n to determine whether your system is configured correctly for Appium.\n\n\n\n\nIf you get this error after upgrading to Android SDK 22:\n  \n{ANDROID_HOME}/tools/ant/uibuild.xml:155: SDK does not have any Build Tools installed.\n\nIn the Android SDK 22, the platform and build tools are split up into their\nown items in the SDK manager. Make sure you install the build-tools and platform-tools.\n\n\n\n\nAndroid\n\n\n\n\nMake sure the Android emulator is up and running.\n\n\nIt's sometimes useful to run \nadb kill-server && adb devices\n. This can\n  reset the connection to the Android device.\n\n\nMake sure you set ANDROID_HOME pointing to the Android SDK directory\n\n\n\n\nWindows\n\n\n\n\nMake sure developer mode is on\n\n\nMake sure command prompt is Admin\n\n\nCheck that the URL Appium server is listening to matches the one specified in test script\n\n\n\n\nIOS\n\n\n\n\nMake sure Instruments.app is not open\n\n\nIf you're running the simulator, make sure your actual device is not\n  plugged in\n\n\nMake sure the accessibility helper is turned off in your Settings app\n\n\nMake sure the app is compiled for the version of the simulator that's being\n  run\n\n\nMake sure the app is compiled for the simulator (or real device) as\n  appropriate (e.g., in debug mode for the simulator), or you might get\n  a \nposix spawn\n error.\n\n\nIf you've ever run Appium with sudo, you might need to \nsudo rm\n  /tmp/instruments_sock\n and try again as not-sudo.\n\n\nIf this is the first time you've run Appium, make sure to authorize the use\n  of Instruments. See the \nUIAutomation Driver\n doc.\n\n\nIf Instruments is crashing when running against a physical device (\"exited with code 253\"), ensure Xcode has downloaded device symbols. Go to Window -> Devices, and it should start automatically. This is needed after iOS version upgrades.\n\n\nIf you see \niOS Simulator failed to install the application.\n and the\n  paths are correct, try restarting the computer.\n\n\nMake sure your macOS keychain that holds the certificate(s) needed for building your app and the WebDriverAgent is unlocked. Especialy if you are using ssh. General symptom to look for is \ncodesign\n failure.\n\n\nIf you have custom elements in your app, they will not be automatable by\n  UIAutomation (and therefore Appium) by default. You need to set the\n  accessibility status to 'enabled' on them. The way to do this in code is:\n\n\n\n\ncenter\n  [myCustomView setAccessibilityEnabled:YES];\n\n\n\n\nTests on iOS may exhibit symptoms similar to a memory leak including sluggish\n  performance or hangs. If you experience this problem, it's likely due to a\n  known issue with NSLog. One option is to remove NSLog from your code.\n  However, there are several more nuanced approaches that may also help without\n  requiring that you refactor.\n\n\n\n\n### Workaround 1\n  NSLog is a macro and can be redefined. E.g.,\n  ```objectivec\n  // \nYou'll need to define TEST or TEST2 and then recompile.\n\n\n#ifdef TEST\n    #define NSLog(...) _BlackHoleTestLogger(\nVA_ARGS\n);\n  #endif // TEST\n  #ifdef TEST2\n    #define NSLog(...) _StdoutTestLogger(\nVA_ARGS\n);\n  #endif // TEST2\n\n\nvoid _BlackHoleTestLogger(NSString *format, ...) {\n      //\n  }\n\n\nvoid _StdoutTestLogger(NSString *format, ...) {\n      va_list argumentList;\n      va_start(argumentList, format);\n      NSMutableString * message = [[NSMutableString alloc] initWithFormat:format\n                                                  arguments:argumentList];\n\n\n  printf(message);\n\n  va_end(argumentList);\n  [message release];\n\n\n\n}\n  ```\n\n\n### Workaround 2\n  Manually replace the underlying function that NSLog wraps. This method was recommended by\n  \nApple in a similar context.\n\n\n```objectivec\n  extern void _NSSetLogCStringFunction(void(\n)(const char \n, unsigned, BOOL));\n\n\nstatic void _GarbageFreeLogCString(const char *message, unsigned length, BOOL withSyslogBanner) {\n     fprintf(stderr, \"%s\\n\", message);\n  }\n\n\nint main (int argc, const char \nargv[]) {\n     NSAutoreleasePool \npool = [[NSAutoreleasePool alloc] init];\n     int exitCode;\n\n\n setbuf(stderr, NULL);\n\n _NSSetLogCStringFunction(_GarbageFreeLogCString);\n exitCode = WOApplicationMain(@\"Application\", argc, argv);\n [pool release];\n return exitCode;\n\n\n\n}\n```\n\n\nWebview/Hybrid/Safari app support\n\n\n\n\nMake Sure you enable the 'Web Inspector' on the real device.\n\n\nMake Sure you enable the Safari - Advance Preferences- Developer menu for\n  simulators.\n\n\nMake sure you are properly switching contexts using the \ncontext\n appium commands provided by your client library.\n\n\nIf you getting this error: select_port() failed, when trying to open the\n  proxy, see this \ndiscussion\n\n\nIn a Safari session, if the logs indicate that the initial url cannot be entered, make sure that\n  you have the software keyboard enabled. See this \ndiscussion\n.\n\n\n\n\nLet the community know\n\n\nOnce you've tried the above steps and your issue still isn't resolved,\nhere's what you can do:\n\n\nIf you're having trouble getting Appium working and the error messages Appium\nprovides are not clear, join the \ndiscussion group\n\nand send a message. Please include the following:\n\n\n\n\nHow you're running Appium (Appium.app, npm, source)\n\n\nWhat operating system you are using\n\n\nWhat device and version you are testing against (i.e. Android 4.4, or iOS 7.1)\n\n\nWhether you are running against a real device or a simulator/emulator\n\n\nThe client-side and server-side errors you're getting (i.e.,\n\"In Python this is the exception I get in my test script,\nand here's a link to a paste of the Appium server output)\n\n\nPer above, it's very important to include a paste of the Appium server\noutput when it's run in verbose mode so that we can diagnose what's going on.\n\n\n\n\nIf you've found what you believe is a bug, go straight to the \nissue tracker\n\nand submit an issue describing the bug and a repro case.\n\n\nKnown Issues\n\n\n\n\nIf you've installed Node from the Node website, it requires that you use sudo\n  for \nnpm\n. This is not ideal. Try to get node with \nnvm\n,\n  \nn\n or \nbrew install node\n instead!\n\n\nWebview support works on real iOS devices with a proxy, see \ndiscussion\n.\n\n\nSometimes iOS UI elements become invalidated milliseconds after they are\n  found. This results in an error that looks like \n(null) cannot be tapped\n.\n  Sometimes the only solution is to put the finding-and-clicking code in a retry\n  block.\n\n\nAppium may have difficulties finding the \nnode\n executable if you've\n  installed Node and npm via MacPorts. You must make sure that the MacPorts bin\n  folder (\n/opt/local/bin\n by default) is added to \nPATH\n somewhere in your\n  \n~/.profile\n, \n~/.bash_profile\n or \n~/.bashrc\n.\n\n\n\n\nSpecific Errors\n\n\n\n\n\n\n\n\nAction\n\n\nError\n\n\nResolution\n\n\n\n\n\n\n\n\n\n\nRunning ios test\n\n\n[INST STDERR] posix spawn failure; aborting launch\n\n\nYour app is not compiled correctly for the simulator or device.\n\n\n\n\n\n\nRunning mobile safari test\n\n\nerror: Could not prepare mobile safari with version '7.1'\n\n\nYou probably need to run the authorize script again to make the iOS SDK files writeable. See the \nUIAutomation Driver",
            "title": "Troubleshooting"
        },
        {
            "location": "/en/writing-running-appium/troubleshooting/#troubleshooting-appium",
            "text": "Here's what to do if you're experiencing problems, before you submit a ticket\nto github or write to the  appium-discuss discussion group .",
            "title": "Troubleshooting Appium"
        },
        {
            "location": "/en/writing-running-appium/troubleshooting/#general",
            "text": "Make sure you've followed the getting started steps in the  README  Make sure your system is set up appropriately (i.e., XCode is updated,\n  Android SDK is installed and  ANDROID_HOME  is set.  Make sure the paths to your applications are correct  On windows run appium.app as administrator or when running from source you need to run cmd as administrator.",
            "title": "General"
        },
        {
            "location": "/en/writing-running-appium/troubleshooting/#if-youre-running-appiumapp",
            "text": "Update the app and restart. If you get a message saying the app can't be updated,\n  re-download it from  appium.io .",
            "title": "If you're running Appium.app"
        },
        {
            "location": "/en/writing-running-appium/troubleshooting/#if-youre-running-appium-from-source",
            "text": "git pull  to make sure you're running the latest code  Remove old dependencies:  rm -rf node_modules  Re-install dependencies:  npm install   Re-transpile the code:  gulp transpile    You can also use  Appium Doctor  to determine whether your system is configured correctly for Appium.   If you get this error after upgrading to Android SDK 22:\n   {ANDROID_HOME}/tools/ant/uibuild.xml:155: SDK does not have any Build Tools installed. \nIn the Android SDK 22, the platform and build tools are split up into their\nown items in the SDK manager. Make sure you install the build-tools and platform-tools.",
            "title": "If you're running Appium from source"
        },
        {
            "location": "/en/writing-running-appium/troubleshooting/#android",
            "text": "Make sure the Android emulator is up and running.  It's sometimes useful to run  adb kill-server && adb devices . This can\n  reset the connection to the Android device.  Make sure you set ANDROID_HOME pointing to the Android SDK directory",
            "title": "Android"
        },
        {
            "location": "/en/writing-running-appium/troubleshooting/#windows",
            "text": "Make sure developer mode is on  Make sure command prompt is Admin  Check that the URL Appium server is listening to matches the one specified in test script",
            "title": "Windows"
        },
        {
            "location": "/en/writing-running-appium/troubleshooting/#ios",
            "text": "Make sure Instruments.app is not open  If you're running the simulator, make sure your actual device is not\n  plugged in  Make sure the accessibility helper is turned off in your Settings app  Make sure the app is compiled for the version of the simulator that's being\n  run  Make sure the app is compiled for the simulator (or real device) as\n  appropriate (e.g., in debug mode for the simulator), or you might get\n  a  posix spawn  error.  If you've ever run Appium with sudo, you might need to  sudo rm\n  /tmp/instruments_sock  and try again as not-sudo.  If this is the first time you've run Appium, make sure to authorize the use\n  of Instruments. See the  UIAutomation Driver  doc.  If Instruments is crashing when running against a physical device (\"exited with code 253\"), ensure Xcode has downloaded device symbols. Go to Window -> Devices, and it should start automatically. This is needed after iOS version upgrades.  If you see  iOS Simulator failed to install the application.  and the\n  paths are correct, try restarting the computer.  Make sure your macOS keychain that holds the certificate(s) needed for building your app and the WebDriverAgent is unlocked. Especialy if you are using ssh. General symptom to look for is  codesign  failure.  If you have custom elements in your app, they will not be automatable by\n  UIAutomation (and therefore Appium) by default. You need to set the\n  accessibility status to 'enabled' on them. The way to do this in code is:   center\n  [myCustomView setAccessibilityEnabled:YES];   Tests on iOS may exhibit symptoms similar to a memory leak including sluggish\n  performance or hangs. If you experience this problem, it's likely due to a\n  known issue with NSLog. One option is to remove NSLog from your code.\n  However, there are several more nuanced approaches that may also help without\n  requiring that you refactor.   ### Workaround 1\n  NSLog is a macro and can be redefined. E.g.,\n  ```objectivec\n  //  You'll need to define TEST or TEST2 and then recompile.  #ifdef TEST\n    #define NSLog(...) _BlackHoleTestLogger( VA_ARGS );\n  #endif // TEST\n  #ifdef TEST2\n    #define NSLog(...) _StdoutTestLogger( VA_ARGS );\n  #endif // TEST2  void _BlackHoleTestLogger(NSString *format, ...) {\n      //\n  }  void _StdoutTestLogger(NSString *format, ...) {\n      va_list argumentList;\n      va_start(argumentList, format);\n      NSMutableString * message = [[NSMutableString alloc] initWithFormat:format\n                                                  arguments:argumentList];    printf(message);\n\n  va_end(argumentList);\n  [message release];  }\n  ```  ### Workaround 2\n  Manually replace the underlying function that NSLog wraps. This method was recommended by\n   Apple in a similar context.  ```objectivec\n  extern void _NSSetLogCStringFunction(void( )(const char  , unsigned, BOOL));  static void _GarbageFreeLogCString(const char *message, unsigned length, BOOL withSyslogBanner) {\n     fprintf(stderr, \"%s\\n\", message);\n  }  int main (int argc, const char  argv[]) {\n     NSAutoreleasePool  pool = [[NSAutoreleasePool alloc] init];\n     int exitCode;   setbuf(stderr, NULL);\n\n _NSSetLogCStringFunction(_GarbageFreeLogCString);\n exitCode = WOApplicationMain(@\"Application\", argc, argv);\n [pool release];\n return exitCode;  }\n```",
            "title": "IOS"
        },
        {
            "location": "/en/writing-running-appium/troubleshooting/#webviewhybridsafari-app-support",
            "text": "Make Sure you enable the 'Web Inspector' on the real device.  Make Sure you enable the Safari - Advance Preferences- Developer menu for\n  simulators.  Make sure you are properly switching contexts using the  context  appium commands provided by your client library.  If you getting this error: select_port() failed, when trying to open the\n  proxy, see this  discussion  In a Safari session, if the logs indicate that the initial url cannot be entered, make sure that\n  you have the software keyboard enabled. See this  discussion .",
            "title": "Webview/Hybrid/Safari app support"
        },
        {
            "location": "/en/writing-running-appium/troubleshooting/#let-the-community-know",
            "text": "Once you've tried the above steps and your issue still isn't resolved,\nhere's what you can do:  If you're having trouble getting Appium working and the error messages Appium\nprovides are not clear, join the  discussion group \nand send a message. Please include the following:   How you're running Appium (Appium.app, npm, source)  What operating system you are using  What device and version you are testing against (i.e. Android 4.4, or iOS 7.1)  Whether you are running against a real device or a simulator/emulator  The client-side and server-side errors you're getting (i.e.,\n\"In Python this is the exception I get in my test script,\nand here's a link to a paste of the Appium server output)  Per above, it's very important to include a paste of the Appium server\noutput when it's run in verbose mode so that we can diagnose what's going on.   If you've found what you believe is a bug, go straight to the  issue tracker \nand submit an issue describing the bug and a repro case.",
            "title": "Let the community know"
        },
        {
            "location": "/en/writing-running-appium/troubleshooting/#known-issues",
            "text": "If you've installed Node from the Node website, it requires that you use sudo\n  for  npm . This is not ideal. Try to get node with  nvm ,\n   n  or  brew install node  instead!  Webview support works on real iOS devices with a proxy, see  discussion .  Sometimes iOS UI elements become invalidated milliseconds after they are\n  found. This results in an error that looks like  (null) cannot be tapped .\n  Sometimes the only solution is to put the finding-and-clicking code in a retry\n  block.  Appium may have difficulties finding the  node  executable if you've\n  installed Node and npm via MacPorts. You must make sure that the MacPorts bin\n  folder ( /opt/local/bin  by default) is added to  PATH  somewhere in your\n   ~/.profile ,  ~/.bash_profile  or  ~/.bashrc .",
            "title": "Known Issues"
        },
        {
            "location": "/en/writing-running-appium/troubleshooting/#specific-errors",
            "text": "Action  Error  Resolution      Running ios test  [INST STDERR] posix spawn failure; aborting launch  Your app is not compiled correctly for the simulator or device.    Running mobile safari test  error: Could not prepare mobile safari with version '7.1'  You probably need to run the authorize script again to make the iOS SDK files writeable. See the  UIAutomation Driver",
            "title": "Specific Errors"
        },
        {
            "location": "/en/writing-running-appium/uiautomator_uiselector/",
            "text": "uiautomator UiSelector\n\n\nAppium enables searching using \nUiSelectors\n.\n\nUiScrollable\n\nis also supported.\n\n\nNote that the index selector is unreliable so prefer instance instead. The\nfollowing examples are written against the api demos apk using Ruby.\n\n\nFind the first textview.\n\n\n# ruby\nfirst_textview = find_element(:uiautomator, 'new UiSelector().className(\"android.widget.TextView\").instance(0)');\n\n\n\n\nFind the first element by text.\n\n\n# ruby\nfirst_text = find_element(:uiautomator, 'new UiSelector().text(\"Animation\")')\nfirst_text.text # \"Animation\"\n\n\n\n\nFind the first scrollable element, then find a TextView with the text \"Tabs\".\nThe \"Tabs\" element will be scrolled into view.\n\n\n# ruby\nelement = find_element(:uiautomator, 'new UiScrollable(new UiSelector().scrollable(true).instance(0)).getChildByText(new UiSelector().className(\"android.widget.TextView\"), \"Tabs\")')\n\n\n\n\nAs a special case, scrollIntoView returns the element that is scrolled into view.\nscrollIntoView allows scrolling to any UiSelector.\n\n\n# ruby\nelement = find_element(:uiautomator, 'new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().text(\"WebView\").instance(0));')\nelement.text # \"WebView\"",
            "title": "Uiautomator uiselector"
        },
        {
            "location": "/en/writing-running-appium/uiautomator_uiselector/#uiautomator-uiselector",
            "text": "Appium enables searching using  UiSelectors . UiScrollable \nis also supported.  Note that the index selector is unreliable so prefer instance instead. The\nfollowing examples are written against the api demos apk using Ruby.  Find the first textview.  # ruby\nfirst_textview = find_element(:uiautomator, 'new UiSelector().className(\"android.widget.TextView\").instance(0)');  Find the first element by text.  # ruby\nfirst_text = find_element(:uiautomator, 'new UiSelector().text(\"Animation\")')\nfirst_text.text # \"Animation\"  Find the first scrollable element, then find a TextView with the text \"Tabs\".\nThe \"Tabs\" element will be scrolled into view.  # ruby\nelement = find_element(:uiautomator, 'new UiScrollable(new UiSelector().scrollable(true).instance(0)).getChildByText(new UiSelector().className(\"android.widget.TextView\"), \"Tabs\")')  As a special case, scrollIntoView returns the element that is scrolled into view.\nscrollIntoView allows scrolling to any UiSelector.  # ruby\nelement = find_element(:uiautomator, 'new UiScrollable(new UiSelector().scrollable(true).instance(0)).scrollIntoView(new UiSelector().text(\"WebView\").instance(0));')\nelement.text # \"WebView\"",
            "title": "uiautomator UiSelector"
        },
        {
            "location": "/en/writing-running-appium/unicode/",
            "text": "Multi-lingual Support\n\n\nOne problem with dealing with non-Latin characters programmatically is that, for characters\nwith accents, there can be multiple ways of encoding the form. So, for the letter\n\n\u00e9\n, there are two encodings: a single combining character \n\u00e9\n (Unicode's\n\nLATIN SMALL LETTER E WITH ACUTE\n), and the combination of the letter \ne\n followed\nby the accent, \n\u0301\n (\nCOMBINING ACUTE ACCENT\n). In order to deal with this, there\nis \nnormalization\n, an operation that makes \n\"equivalent strings have a unique\nbinary representation\"\n.\n\n\nLuckily, normalizing ASCII text (i.e., text that doesn't need to be normalized)\ndoes not cause any changes, and performing\nthe operation multiple times does not have an effect. Thus a normalization\nfunction can be called on text without risking adverse effects.\n\n\n// javascript\nvar unorm = require('unorm');\n\n'some ASCII text' === unorm.nfd('some ASCII text');\nunorm.nfd('Ad\u00e9la\u00efde Herv\u00e9') === unorm.nfd(unorm.nfd('Ad\u00e9la\u00efde Herv\u00e9'));\n\n\n\n\nSo, when dealing with unicode text within a test, you need to normalize, preferably\non both the text expected and that received from Appium. There are a number of\nways to do the normalization, so be sure to perform the same operation on both\nstrings!\n\n\n// javascript\nvar unorm = require('unorm');\ndriver\n  .elementByAccessibilityId('find')\n    .text()\n    .then(function (txt) {\n      unorm.nfd(txt).should.be(unorm.nfd(\"\u00e9 \u0152 \u00f9 \u1e0d\"));\n    });\n\n\n\n\nOne tell-tale sign that the problem is with the encoding of the unicode text is\nan assertion that fails but reports what look to be the same string:\n\n\nAssertionError: expected 'Fran\u00e7ois G\u00e9rard' to deeply equal 'Fran\u00e7ois G\u00e9rard'\n      + expected - actual\n\n      +\"Fran\u00e7ois G\u00e9rard\"\n      -\"Fran\u00e7ois G\u00e9rard\"\n\n\n\n\nSince the error is just encoding, the output \nlooks\n the same. Normalized, these\nshould equal programmatically as well as visually.\n\n\nFinders\n\n\nFinding by text can also require normalization. For instance, if you have a button\nin an iOS app with the name \n\u041d\u0430\u0439\u0442\u0438\n you may need to normalize the text within the\nfind command.\n\n\n// javascript\nvar unorm = require('unorm');\ndriver\n  .findElementByXPath(unorm.nfd(\"//UIAButton[@name='\u041d\u0430\u0439\u0442\u0438']\"))\n    .should.eventually.exist;\n\n\n\n\nOtherwise the elements may not be found.\n\n\nText Fields\n\n\nBy default the automation tools for both iOS and Android do not support non-ASCII\ncharacters sent to editable fields through the keyboard.\n\n\niOS\n\n\nAppium sends non-ASCII characters to iOS editable fields directly, bypassing the\nkeyboard altogether. While this allows the text to be inputted in tests, it should\nbe kept in mind that any business logic triggered by keyboard input will therefore\nnot be tested.\n\n\nAs above, the text received may need to be normalized before asserting on it.\n\n\n// javascript\nvar unorm = require('unorm');\nvar testText = unorm.nfd(\"\u00e9 \u0152 \u00f9 \u1e0d\");\ndriver\n  .elementsByClassName('UIATextField').at(1)\n    .sendKeys(testText)\n    .text()\n    .should.become(testText)\n  .nodeify(done);\n\n\n\n\nAndroid\n\n\nAndroid tests allow for Unicode input by installing and using a \nspecialized\nkeyboard\n that allows the text\nto be passed as ASCII text between Appium and the application being tested.\n\n\nIn order to utilize this functionality, set the \nunicodeKeyboard\n desired capability\nis set to \ntrue\n. If the keyboard should be returned to its original state, the\n\nresetKeyboard\n desired capability should also be set to \ntrue\n. Otherwise Appium's\nUnicode keyboard will remain enabled on the device after the tests are completed.\n\n\nThen tests can pass Unicode text to editable fields using \nsend_keys\n.\n\n\n// javascript\nvar desired = {\n  app: '/path/to/app',\n  deviceName: 'Android Emulator',\n  deviceVersion: '4.4',\n  platformName: 'Android',\n  unicodeKeyboard: true,\n  resetKeyboard: true\n};\nvar testText = '\u00e9 \u0152 \u00f9 \u1e0d';\ndriver\n  .elementByClassName('android.widget.EditText')\n  .sendKeys(testText)\n  .text()\n  .should.eventually.become(testText)\n  .nodeify(done);",
            "title": "Unicode"
        },
        {
            "location": "/en/writing-running-appium/unicode/#multi-lingual-support",
            "text": "One problem with dealing with non-Latin characters programmatically is that, for characters\nwith accents, there can be multiple ways of encoding the form. So, for the letter \u00e9 , there are two encodings: a single combining character  \u00e9  (Unicode's LATIN SMALL LETTER E WITH ACUTE ), and the combination of the letter  e  followed\nby the accent,  \u0301  ( COMBINING ACUTE ACCENT ). In order to deal with this, there\nis  normalization , an operation that makes  \"equivalent strings have a unique\nbinary representation\" .  Luckily, normalizing ASCII text (i.e., text that doesn't need to be normalized)\ndoes not cause any changes, and performing\nthe operation multiple times does not have an effect. Thus a normalization\nfunction can be called on text without risking adverse effects.  // javascript\nvar unorm = require('unorm');\n\n'some ASCII text' === unorm.nfd('some ASCII text');\nunorm.nfd('Ad\u00e9la\u00efde Herv\u00e9') === unorm.nfd(unorm.nfd('Ad\u00e9la\u00efde Herv\u00e9'));  So, when dealing with unicode text within a test, you need to normalize, preferably\non both the text expected and that received from Appium. There are a number of\nways to do the normalization, so be sure to perform the same operation on both\nstrings!  // javascript\nvar unorm = require('unorm');\ndriver\n  .elementByAccessibilityId('find')\n    .text()\n    .then(function (txt) {\n      unorm.nfd(txt).should.be(unorm.nfd(\"\u00e9 \u0152 \u00f9 \u1e0d\"));\n    });  One tell-tale sign that the problem is with the encoding of the unicode text is\nan assertion that fails but reports what look to be the same string:  AssertionError: expected 'Fran\u00e7ois G\u00e9rard' to deeply equal 'Fran\u00e7ois G\u00e9rard'\n      + expected - actual\n\n      +\"Fran\u00e7ois G\u00e9rard\"\n      -\"Fran\u00e7ois G\u00e9rard\"  Since the error is just encoding, the output  looks  the same. Normalized, these\nshould equal programmatically as well as visually.",
            "title": "Multi-lingual Support"
        },
        {
            "location": "/en/writing-running-appium/unicode/#finders",
            "text": "Finding by text can also require normalization. For instance, if you have a button\nin an iOS app with the name  \u041d\u0430\u0439\u0442\u0438  you may need to normalize the text within the\nfind command.  // javascript\nvar unorm = require('unorm');\ndriver\n  .findElementByXPath(unorm.nfd(\"//UIAButton[@name='\u041d\u0430\u0439\u0442\u0438']\"))\n    .should.eventually.exist;  Otherwise the elements may not be found.",
            "title": "Finders"
        },
        {
            "location": "/en/writing-running-appium/unicode/#text-fields",
            "text": "By default the automation tools for both iOS and Android do not support non-ASCII\ncharacters sent to editable fields through the keyboard.",
            "title": "Text Fields"
        },
        {
            "location": "/en/writing-running-appium/unicode/#ios",
            "text": "Appium sends non-ASCII characters to iOS editable fields directly, bypassing the\nkeyboard altogether. While this allows the text to be inputted in tests, it should\nbe kept in mind that any business logic triggered by keyboard input will therefore\nnot be tested.  As above, the text received may need to be normalized before asserting on it.  // javascript\nvar unorm = require('unorm');\nvar testText = unorm.nfd(\"\u00e9 \u0152 \u00f9 \u1e0d\");\ndriver\n  .elementsByClassName('UIATextField').at(1)\n    .sendKeys(testText)\n    .text()\n    .should.become(testText)\n  .nodeify(done);",
            "title": "iOS"
        },
        {
            "location": "/en/writing-running-appium/unicode/#android",
            "text": "Android tests allow for Unicode input by installing and using a  specialized\nkeyboard  that allows the text\nto be passed as ASCII text between Appium and the application being tested.  In order to utilize this functionality, set the  unicodeKeyboard  desired capability\nis set to  true . If the keyboard should be returned to its original state, the resetKeyboard  desired capability should also be set to  true . Otherwise Appium's\nUnicode keyboard will remain enabled on the device after the tests are completed.  Then tests can pass Unicode text to editable fields using  send_keys .  // javascript\nvar desired = {\n  app: '/path/to/app',\n  deviceName: 'Android Emulator',\n  deviceVersion: '4.4',\n  platformName: 'Android',\n  unicodeKeyboard: true,\n  resetKeyboard: true\n};\nvar testText = '\u00e9 \u0152 \u00f9 \u1e0d';\ndriver\n  .elementByClassName('android.widget.EditText')\n  .sendKeys(testText)\n  .text()\n  .should.eventually.become(testText)\n  .nodeify(done);",
            "title": "Android"
        },
        {
            "location": "/en/writing-running-appium/web/chromedriver/",
            "text": "Chromedriver\n\n\nAppium supports automating Android web pages (in Chrome and the built-in Browser) and\nhybrid apps that are Chrome-backed, by managing a \nChromedriver\n\ninstance and proxying commands to it when necessary. It comes bundled with the\n\nlatest version of Chromedriver\n, installed through the\nnpm package \nappium-chromedriver\n\n(Github: \nappium-chromedriver\n).\n\n\nUnfortunately, with each update to Chromedriver there is an increase in the minimum\nsupported version of Chrome, such that older devices are often unable to be automated\nwith the bundled version. In the Appium server logs there will be an error like:\n\n\nAn unknown server-side error occurred while processing the command.\nOriginal error: unknown error: Chrome version must be >= 55.0.2883.0\n\n\n\n\nTo get around this, Appium can be configured to use a particular Chromedriver\nversion, either at install time, by either passing the \n--chromedriver_version\n\nconfig property, e.g.,\n\n\nnpm install appium --chromedriver_version=\"2.16\"\n\n\n\n\nOr specifying the version in the \nCHROMEDRIVER_VERSION\n environment variable,\ne.g,\n\n\nCHROMEDRIVER_VERSION=2.20 npm install appium\n\n\n\n\nThis can also be set to \nLATEST\n to get the most recent version.\n\n\nFinally, a version can be specified at runtime, by specifying the\n\n--chromedriver-executable\n server flag, along with the full path to the\nChromedriver executable which was manually downloaded, e.g.,\n\n\nappium --chromedriver-executable /path/to/my/chromedriver\n\n\n\n\nChromedriver/Chrome compatibility\n\n\nThe following is a list of Chromedriver versions and their corresponding minimum\nChrome version that is automatable:\n\n\n\n\n\n\n\n\nVersion\n\n\nMinimum Chrome Version\n\n\nLink to Chromedriver\n\n\n\n\n\n\n\n\n\n\n2.32\n\n\n59.0.3071.0\n\n\nv2.32 (link)\n\n\n\n\n\n\n2.31\n\n\n58.0.3029.0\n\n\nv2.31 (link)\n\n\n\n\n\n\n2.30\n\n\n58.0.3029.0\n\n\nv2.30 (link)\n\n\n\n\n\n\n2.29\n\n\n57.0.2987.0\n\n\nv2.29 (link)\n\n\n\n\n\n\n2.28\n\n\n55.0.2883.0\n\n\nv2.28 (link)\n\n\n\n\n\n\n2.27\n\n\n54.0.2840.0\n\n\nv2.27 (link)\n\n\n\n\n\n\n2.26\n\n\n53.0.2785.0\n\n\nv2.26 (link)\n\n\n\n\n\n\n2.25\n\n\n53.0.2785.0\n\n\nv2.25 (link)\n\n\n\n\n\n\n2.24\n\n\n52.0.2743.0\n\n\nv2.24 (link)\n\n\n\n\n\n\n2.23\n\n\n51.0.2704.0\n\n\nv2.23 (link)\n\n\n\n\n\n\n2.22\n\n\n49.0.2623.0\n\n\nv2.22 (link)\n\n\n\n\n\n\n2.21\n\n\n46.0.2490.0\n\n\nv2.21 (link)\n\n\n\n\n\n\n2.20\n\n\n43.0.2357.0\n\n\nv2.20 (link)\n\n\n\n\n\n\n2.19\n\n\n43.0.2357.0\n\n\nv2.19 (link)\n\n\n\n\n\n\n2.18\n\n\n43.0.2357.0\n\n\nv2.18 (link)\n\n\n\n\n\n\n2.17\n\n\n42.0.2311.0\n\n\nv2.17 (link)\n\n\n\n\n\n\n2.16\n\n\n42.0.2311.0\n\n\nv2.16 (link)\n\n\n\n\n\n\n2.15\n\n\n40.0.2214.0\n\n\nv2.15 (link)\n\n\n\n\n\n\n2.14\n\n\n39.0.2171.0\n\n\nv2.14 (link)\n\n\n\n\n\n\n2.13\n\n\n38.0.2125.0\n\n\nv2.13 (link)\n\n\n\n\n\n\n2.12\n\n\n36.0.1985.0\n\n\nv2.12 (link)\n\n\n\n\n\n\n2.11\n\n\n36.0.1985.0\n\n\nv2.11 (link)\n\n\n\n\n\n\n2.10\n\n\n33.0.1751.0\n\n\nv2.10 (link)\n\n\n\n\n\n\n2.9\n\n\n31.0.1650.59\n\n\nv2.9 (link)\n\n\n\n\n\n\n2.8\n\n\n30.0.1573.2\n\n\nv2.8 (link)\n\n\n\n\n\n\n2.7\n\n\n30.0.1573.2\n\n\nv2.7 (link)\n\n\n\n\n\n\n2.6\n\n\n\n\nv2.6 (link)\n\n\n\n\n\n\n2.5\n\n\n\n\nv2.5 (link)\n\n\n\n\n\n\n2.4\n\n\n29.0.1545.0\n\n\nv2.4 (link)\n\n\n\n\n\n\n2.3\n\n\n28.0.1500.0\n\n\nv2.3 (link)\n\n\n\n\n\n\n2.2\n\n\n27.0.1453.0\n\n\nv2.2 (link)\n\n\n\n\n\n\n2.1\n\n\n27.0.1453.0\n\n\nv2.1 (link)\n\n\n\n\n\n\n2.0\n\n\n27.0.1453.0\n\n\nv2.0 (link)\n\n\n\n\n\n\n\n\nThe complete list of available Chromedriver releases is \nhere\n. To find\nthe minimum supported version for any particular version, get the \nChromium\n\n\nsource code\n,\ncheck out the release commit, and check the variable \nkMinimumSupportedChromeVersion\n\nin the file \nsrc/chrome/test/chromedriver/chrome/version.cc\n. (To find the\nrelease commits, you can use \ngit log --pretty=format:'%h | %s%d' | grep -i \"Release Chromedriver version\"\n.)\n\n\nInstalling an network issues\n\n\nWhen Appium is installed it needs to download Chromedriver, so there is the possibility\nthat there could be network problems that make the install fail.\n\n\nBy default Chromedriver is retrieved from \nhttps://chromedriver.storage.googleapis.com/\n.\nTo use a mirror of the ChromeDriver binaries use npm config property \nchromedriver_cdnurl\n.\n\n\nnpm install appium-chromedriver --chromedriver_cdnurl=http://npm.taobao.org/mirrors/chromedriver\n\n\n\n\nOr add the property into your \n.npmrc\n file.\n\n\nchromedriver_cdnurl=http://npm.taobao.org/mirrors/chromedriver\n\n\n\n\nAnother option is to use PATH variable \nCHROMEDRIVER_CDNURL\n.\n\n\nCHROMEDRIVER_CDNURL=http://npm.taobao.org/mirrors/chromedriver npm install appium-chromedriver\n\n\n\n\nIt may also be necessary to adjust network proxy and firewall settings to allow\nthe download to occur.",
            "title": "Chromedriver"
        },
        {
            "location": "/en/writing-running-appium/web/chromedriver/#chromedriver",
            "text": "Appium supports automating Android web pages (in Chrome and the built-in Browser) and\nhybrid apps that are Chrome-backed, by managing a  Chromedriver \ninstance and proxying commands to it when necessary. It comes bundled with the latest version of Chromedriver , installed through the\nnpm package  appium-chromedriver \n(Github:  appium-chromedriver ).  Unfortunately, with each update to Chromedriver there is an increase in the minimum\nsupported version of Chrome, such that older devices are often unable to be automated\nwith the bundled version. In the Appium server logs there will be an error like:  An unknown server-side error occurred while processing the command.\nOriginal error: unknown error: Chrome version must be >= 55.0.2883.0  To get around this, Appium can be configured to use a particular Chromedriver\nversion, either at install time, by either passing the  --chromedriver_version \nconfig property, e.g.,  npm install appium --chromedriver_version=\"2.16\"  Or specifying the version in the  CHROMEDRIVER_VERSION  environment variable,\ne.g,  CHROMEDRIVER_VERSION=2.20 npm install appium  This can also be set to  LATEST  to get the most recent version.  Finally, a version can be specified at runtime, by specifying the --chromedriver-executable  server flag, along with the full path to the\nChromedriver executable which was manually downloaded, e.g.,  appium --chromedriver-executable /path/to/my/chromedriver",
            "title": "Chromedriver"
        },
        {
            "location": "/en/writing-running-appium/web/chromedriver/#chromedriverchrome-compatibility",
            "text": "The following is a list of Chromedriver versions and their corresponding minimum\nChrome version that is automatable:     Version  Minimum Chrome Version  Link to Chromedriver      2.32  59.0.3071.0  v2.32 (link)    2.31  58.0.3029.0  v2.31 (link)    2.30  58.0.3029.0  v2.30 (link)    2.29  57.0.2987.0  v2.29 (link)    2.28  55.0.2883.0  v2.28 (link)    2.27  54.0.2840.0  v2.27 (link)    2.26  53.0.2785.0  v2.26 (link)    2.25  53.0.2785.0  v2.25 (link)    2.24  52.0.2743.0  v2.24 (link)    2.23  51.0.2704.0  v2.23 (link)    2.22  49.0.2623.0  v2.22 (link)    2.21  46.0.2490.0  v2.21 (link)    2.20  43.0.2357.0  v2.20 (link)    2.19  43.0.2357.0  v2.19 (link)    2.18  43.0.2357.0  v2.18 (link)    2.17  42.0.2311.0  v2.17 (link)    2.16  42.0.2311.0  v2.16 (link)    2.15  40.0.2214.0  v2.15 (link)    2.14  39.0.2171.0  v2.14 (link)    2.13  38.0.2125.0  v2.13 (link)    2.12  36.0.1985.0  v2.12 (link)    2.11  36.0.1985.0  v2.11 (link)    2.10  33.0.1751.0  v2.10 (link)    2.9  31.0.1650.59  v2.9 (link)    2.8  30.0.1573.2  v2.8 (link)    2.7  30.0.1573.2  v2.7 (link)    2.6   v2.6 (link)    2.5   v2.5 (link)    2.4  29.0.1545.0  v2.4 (link)    2.3  28.0.1500.0  v2.3 (link)    2.2  27.0.1453.0  v2.2 (link)    2.1  27.0.1453.0  v2.1 (link)    2.0  27.0.1453.0  v2.0 (link)     The complete list of available Chromedriver releases is  here . To find\nthe minimum supported version for any particular version, get the  Chromium  source code ,\ncheck out the release commit, and check the variable  kMinimumSupportedChromeVersion \nin the file  src/chrome/test/chromedriver/chrome/version.cc . (To find the\nrelease commits, you can use  git log --pretty=format:'%h | %s%d' | grep -i \"Release Chromedriver version\" .)",
            "title": "Chromedriver/Chrome compatibility"
        },
        {
            "location": "/en/writing-running-appium/web/chromedriver/#installing-an-network-issues",
            "text": "When Appium is installed it needs to download Chromedriver, so there is the possibility\nthat there could be network problems that make the install fail.  By default Chromedriver is retrieved from  https://chromedriver.storage.googleapis.com/ .\nTo use a mirror of the ChromeDriver binaries use npm config property  chromedriver_cdnurl .  npm install appium-chromedriver --chromedriver_cdnurl=http://npm.taobao.org/mirrors/chromedriver  Or add the property into your  .npmrc  file.  chromedriver_cdnurl=http://npm.taobao.org/mirrors/chromedriver  Another option is to use PATH variable  CHROMEDRIVER_CDNURL .  CHROMEDRIVER_CDNURL=http://npm.taobao.org/mirrors/chromedriver npm install appium-chromedriver  It may also be necessary to adjust network proxy and firewall settings to allow\nthe download to occur.",
            "title": "Installing an network issues"
        },
        {
            "location": "/en/writing-running-appium/web/hybrid/",
            "text": "Automating hybrid apps\n\n\nOne of the core principles of Appium is that you shouldn't have to change your\napp to test it. In line with that methodology, it is possible to test hybrid\napps the same way you can with Selenium for web apps. There is a bit of technical\ncomplexity required so that Appium knows whether you want to automate the native\naspects of the app or the web views. But, thankfully, we can stay within the\nSelenium WebDriver protocol for everything.\n\n\nOnce the test is in a web view context the command set that is available is the\nfull \nSelenium\n \nWebDriver API\n.\n\n\nEntering the web view context\n\n\nHere are the steps required to talk to a web view in your Appium test:\n\n\n\n\nNavigate to a portion of your app where a web view is active\n\n\nRetrieve the currently available contexts\n\n\nThis returns a list of contexts we can access, like \n'NATIVE_APP'\n or \n'WEBVIEW_1'\n\n\n\n\n\n\nSet the context\n with the id of\n  the context you want to access\n\n\nThis puts your Appium session into a mode where all commands are\n  interpreted as being intended for automating the web view, rather than the\n  native portion of the app. For example, if you run \ngetElementByTagName\n, it\n  will operate on the DOM of the web view, rather than return native elements.\n  Of course, certain WebDriver methods only make sense in one context or\n  another, so in the wrong context you will receive an error message.\n\n\n\n\n\n\nTo stop automating in the web view context and go back to automating the\n   native portion of the app, simply \nset the context\n\n   again with the native context id (generally \n'NATIVE_APP'\n) to leave the web\n   context and once again access the native commands.\n\n\n\n\nAutomatically entering the web view context on session start\n\n\nIf your application begins in a web view, and you do not want to automate the\nnative application before entering it, you can have Appium automatically enter\nthe web view context on session initialization by setting the \nautoWebview\n\n\ndesired capability\n to \ntrue\n.\n\n\nExamples\n\n\n// javascript\n// assuming we have an initialized `driver` object for an app\ndriver\n    .contexts().then(function (contexts) { // get list of available views. Returns array: [\"NATIVE_APP\",\"WEBVIEW_1\"]\n        return driver.context(contexts[1]); // choose the webview context\n    })\n\n    // do some web testing\n    .elementsByCss('.green_button').click()\n\n    .context('NATIVE_APP') // leave webview context\n\n    // do more native stuff here if we want\n\n    .quit() // stop webdrivage\n\n\n\n\n// java\n// assuming we have a set of capabilities\ndriver = new AppiumDriver(new URL(\"http://127.0.0.1:4723/wd/hub\"), capabilities);\n\nSet<String> contextNames = driver.getContextHandles();\nfor (String contextName : contextNames) {\n    System.out.println(contextNames); //prints out something like NATIVE_APP \\n WEBVIEW_1\n}\ndriver.context(contextNames.toArray()[1]); // set context to WEBVIEW_1\n\n//do some web testing\nString myText = driver.findElement(By.cssSelector(\".green_button\")).click();\n\ndriver.context(\"NATIVE_APP\");\n\n// do more native testing if we want\n\ndriver.quit();\n\n\n\n\n# ruby\n# assuming we have a set of capabilities\n@driver = Selenium::WebDriver.for(:remote, :desired_capabilities => capabilities, :url => SERVER_URL)\n\n# I switch to the last context because its always the webview in our case, in other cases you may need to specify a context\n# View the appium logs while running @driver.contexts to figure out which context is the one you want and find the associated ID\n# Then switch to it using @driver.switch_to.context(\"WEBVIEW_6\")\n\nGiven(/^I switch to webview$/) do\n    webview = @driver.available_contexts.last\n    @driver.switch_to.context(webview)\nend\n\nGiven(/^I switch out of webview$/) do\n    @driver.switch_to.context(@driver.contexts.first)\nend\n\n# Now you can use CSS to select an element inside your webview\n\nAnd(/^I click a webview button $/) do\n    @driver.find_element(:css, \".green_button\").click\nend\n\n\n\n\n# python\n# assuming we have an initialized `driver` object for an app\n\n# switch to webview\nwebview = driver.contexts.last\ndriver.switch_to.context(webview)\n\n# do some webby stuff\ndriver.find_element(:css, \".green_button\").click\n\n# switch back to native view\ndriver.switch_to.context(driver.contexts.first)\n\n# do more native testing if we want\n\ndriver.quit()\n\n\n\n\n// php\n// assuming we have an initialized `driver` object in an AppiumTestCase\n\npublic function testThings()\n{\n        $expected_contexts = array(\n                0 => 'NATIVE_APP',\n                1 => 'WEBVIEW_1'\n        );\n\n        $contexts = $this->contexts();\n        $this->assertEquals($expected_contexts, $contexts);\n\n        $this->context($contexts[1]);\n        $context = $this->context();\n        $this->assertEquals('WEBVIEW_1', $context);\n\n        // do webby stuff\n\n        $this->context('NATIVE_APP');\n\n        // do mobile stuff\n}\n\n\n\n\nAutomating hybrid Android apps\n\n\nAppium comes with \nbuilt-in hybrid support via Chromedriver\n,\nwhich allow the automation of any Chrome-backed Android web views. Appium also\nuses \nSelendroid\n under the hood for webview support on\ndevices older than 4.4. (in which case you will need to specify\n\n\"automationName\": \"selendroid\"\n as a desired capability).\n\n\nThere is an additional step necessary within your app build, unfortunately. As\ndescribed in the Android \nremote debugging docs\n\nit is necessary to set to \ntrue\n the \nsetWebContentsDebuggingEnabled\n\nproperty on the \nandroid.webkit.WebView\n\nelement.\n\n\nOnce you have set your \ndesired capabilities\n\nand started an Appium session, follow the generalized instructions above.\n\n\nAutomating hybrid iOS apps\n\n\nTo interact with a web view Appium establishes a connection using a custom\nremote debugger. When executing against a simulator this connection is\nestablished directly as the simulator and the Appium server are on the same\nmachine. Appium can automate \nWkWebView\n\nand \nUIWebView\n\nelements. Unfortunately, it is not currently able to handle\n\nSafariViewController\n\nelements.\n\n\nOnce you've set your \ndesired capabilities\n\nand started an Appium session, follow the generalized instructions above.\n\n\nExecution against an iOS real device\n\n\nWhen executing against an iOS real device Appium is unable to access the web view\ndirectly. Therefore the connection has to be established through the USB cable.\nTo establish this connection we use the \nios-webkit-debugger-proxy\n.\n\n\nFor instruction on how to install and run \nios-webkit-debugger-proxy\n see the\n\niOS webkit debug proxy\n\ndocumentation.\n\n\nNow you can start an Appium test session and follow the generalized instructions\nabove.",
            "title": "Hybrid"
        },
        {
            "location": "/en/writing-running-appium/web/hybrid/#automating-hybrid-apps",
            "text": "One of the core principles of Appium is that you shouldn't have to change your\napp to test it. In line with that methodology, it is possible to test hybrid\napps the same way you can with Selenium for web apps. There is a bit of technical\ncomplexity required so that Appium knows whether you want to automate the native\naspects of the app or the web views. But, thankfully, we can stay within the\nSelenium WebDriver protocol for everything.  Once the test is in a web view context the command set that is available is the\nfull  Selenium   WebDriver API .",
            "title": "Automating hybrid apps"
        },
        {
            "location": "/en/writing-running-appium/web/hybrid/#entering-the-web-view-context",
            "text": "Here are the steps required to talk to a web view in your Appium test:   Navigate to a portion of your app where a web view is active  Retrieve the currently available contexts  This returns a list of contexts we can access, like  'NATIVE_APP'  or  'WEBVIEW_1'    Set the context  with the id of\n  the context you want to access  This puts your Appium session into a mode where all commands are\n  interpreted as being intended for automating the web view, rather than the\n  native portion of the app. For example, if you run  getElementByTagName , it\n  will operate on the DOM of the web view, rather than return native elements.\n  Of course, certain WebDriver methods only make sense in one context or\n  another, so in the wrong context you will receive an error message.    To stop automating in the web view context and go back to automating the\n   native portion of the app, simply  set the context \n   again with the native context id (generally  'NATIVE_APP' ) to leave the web\n   context and once again access the native commands.",
            "title": "Entering the web view context"
        },
        {
            "location": "/en/writing-running-appium/web/hybrid/#automatically-entering-the-web-view-context-on-session-start",
            "text": "If your application begins in a web view, and you do not want to automate the\nnative application before entering it, you can have Appium automatically enter\nthe web view context on session initialization by setting the  autoWebview  desired capability  to  true .",
            "title": "Automatically entering the web view context on session start"
        },
        {
            "location": "/en/writing-running-appium/web/hybrid/#examples",
            "text": "// javascript\n// assuming we have an initialized `driver` object for an app\ndriver\n    .contexts().then(function (contexts) { // get list of available views. Returns array: [\"NATIVE_APP\",\"WEBVIEW_1\"]\n        return driver.context(contexts[1]); // choose the webview context\n    })\n\n    // do some web testing\n    .elementsByCss('.green_button').click()\n\n    .context('NATIVE_APP') // leave webview context\n\n    // do more native stuff here if we want\n\n    .quit() // stop webdrivage  // java\n// assuming we have a set of capabilities\ndriver = new AppiumDriver(new URL(\"http://127.0.0.1:4723/wd/hub\"), capabilities);\n\nSet<String> contextNames = driver.getContextHandles();\nfor (String contextName : contextNames) {\n    System.out.println(contextNames); //prints out something like NATIVE_APP \\n WEBVIEW_1\n}\ndriver.context(contextNames.toArray()[1]); // set context to WEBVIEW_1\n\n//do some web testing\nString myText = driver.findElement(By.cssSelector(\".green_button\")).click();\n\ndriver.context(\"NATIVE_APP\");\n\n// do more native testing if we want\n\ndriver.quit();  # ruby\n# assuming we have a set of capabilities\n@driver = Selenium::WebDriver.for(:remote, :desired_capabilities => capabilities, :url => SERVER_URL)\n\n# I switch to the last context because its always the webview in our case, in other cases you may need to specify a context\n# View the appium logs while running @driver.contexts to figure out which context is the one you want and find the associated ID\n# Then switch to it using @driver.switch_to.context(\"WEBVIEW_6\")\n\nGiven(/^I switch to webview$/) do\n    webview = @driver.available_contexts.last\n    @driver.switch_to.context(webview)\nend\n\nGiven(/^I switch out of webview$/) do\n    @driver.switch_to.context(@driver.contexts.first)\nend\n\n# Now you can use CSS to select an element inside your webview\n\nAnd(/^I click a webview button $/) do\n    @driver.find_element(:css, \".green_button\").click\nend  # python\n# assuming we have an initialized `driver` object for an app\n\n# switch to webview\nwebview = driver.contexts.last\ndriver.switch_to.context(webview)\n\n# do some webby stuff\ndriver.find_element(:css, \".green_button\").click\n\n# switch back to native view\ndriver.switch_to.context(driver.contexts.first)\n\n# do more native testing if we want\n\ndriver.quit()  // php\n// assuming we have an initialized `driver` object in an AppiumTestCase\n\npublic function testThings()\n{\n        $expected_contexts = array(\n                0 => 'NATIVE_APP',\n                1 => 'WEBVIEW_1'\n        );\n\n        $contexts = $this->contexts();\n        $this->assertEquals($expected_contexts, $contexts);\n\n        $this->context($contexts[1]);\n        $context = $this->context();\n        $this->assertEquals('WEBVIEW_1', $context);\n\n        // do webby stuff\n\n        $this->context('NATIVE_APP');\n\n        // do mobile stuff\n}",
            "title": "Examples"
        },
        {
            "location": "/en/writing-running-appium/web/hybrid/#automating-hybrid-android-apps",
            "text": "Appium comes with  built-in hybrid support via Chromedriver ,\nwhich allow the automation of any Chrome-backed Android web views. Appium also\nuses  Selendroid  under the hood for webview support on\ndevices older than 4.4. (in which case you will need to specify \"automationName\": \"selendroid\"  as a desired capability).  There is an additional step necessary within your app build, unfortunately. As\ndescribed in the Android  remote debugging docs \nit is necessary to set to  true  the  setWebContentsDebuggingEnabled \nproperty on the  android.webkit.WebView \nelement.  Once you have set your  desired capabilities \nand started an Appium session, follow the generalized instructions above.",
            "title": "Automating hybrid Android apps"
        },
        {
            "location": "/en/writing-running-appium/web/hybrid/#automating-hybrid-ios-apps",
            "text": "To interact with a web view Appium establishes a connection using a custom\nremote debugger. When executing against a simulator this connection is\nestablished directly as the simulator and the Appium server are on the same\nmachine. Appium can automate  WkWebView \nand  UIWebView \nelements. Unfortunately, it is not currently able to handle SafariViewController \nelements.  Once you've set your  desired capabilities \nand started an Appium session, follow the generalized instructions above.",
            "title": "Automating hybrid iOS apps"
        },
        {
            "location": "/en/writing-running-appium/web/hybrid/#execution-against-an-ios-real-device",
            "text": "When executing against an iOS real device Appium is unable to access the web view\ndirectly. Therefore the connection has to be established through the USB cable.\nTo establish this connection we use the  ios-webkit-debugger-proxy .  For instruction on how to install and run  ios-webkit-debugger-proxy  see the iOS webkit debug proxy \ndocumentation.  Now you can start an Appium test session and follow the generalized instructions\nabove.",
            "title": "Execution against an iOS real device"
        },
        {
            "location": "/en/writing-running-appium/web/ios-webkit-debug-proxy/",
            "text": "iOS WebKit Debug Proxy\n\n\nFor accessing web views on real iOS device appium uses \nios_webkit_debug_proxy\n.\n\n\nInstallation\n\n\nUsing Homebrew\n\n\nTo install the latest tagged version of the ios-webkit-debug-proxy using\nHomebrew, run the following commands in the terminal:\n\n\n``` center\n # The first command is only required if you don't have brew installed.\n\n\n\n\nruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\nbrew update\nbrew install ios-webkit-debug-proxy\n ```\n\n\n\n\nBuilding ios-webkit-debug-proxy from source\n\n\nOpen the command terminal on your mac. You can find instructions on how to open the\nterminal via your favorite search engine. Once that is open, verify you have\n\nHomebew\n installed:\n\n\n$ brew -v\n\n\n\n\nWhen you're certain you have Homebrew, do the following (the $ indicates the command\nline prompt, do not enter it):\n\n\n$ cd  ~\n$ sudo apt-get install autoconf automake libusb-dev libusb-1.0-0-dev libplist-dev libplist++-dev usbmuxd libtool libimobiledevice-dev\n$ git clone https://github.com/google/ios-webkit-debug-proxy.git\n$ cd ios-webkit-debug-proxy\n$ ./autogen.sh\n$ make\n$ sudo make install\n\n\n\n\nRunning ios-webkit-debug-proxy\n\n\nOnce installed you can start the proxy with the following command:\n\n\n# Change the udid to be the udid of the attached device and make sure to set the port to 27753\n# as that is the port the remote-debugger uses. You can learn how to retrieve the UDID from\n# Apple's developer resources.\n> ios_webkit_debug_proxy -c 0e4b2f612b65e98c1d07d22ee08678130d345429:27753 -d\n\n\n\n\nYou can also set the desired capability called \nstartIWDP\n to \ntrue\n (see the \ndesired capabilities docs\n). This will run the above command as a subprocess from within Appium and will set the udid, so you don't have to run \nios_webkit_debug_proxy\n yourself anymore. It monitors the proxy for crashes and relaunches when needed.\n\n\n// example desired capabilities\n{\n  \"browserName\": \"Safari\",\n  \"platformName\": \"iOS\",\n  \"deviceName\": \"iPhone 7\",\n  \"automationName\": \"XCUITest\",\n  \"startIWDP\": true,\n  \"udid\": \"auto\"\n}\n\n\n\n\nYou may also use \nios-webkit-debug-proxy-launcher\n, a small script included with the Appium codebase, to launch the\nproxy. It monitors the proxy log for errors, and relaunch the proxy\nwhere needed. This is also optional and may help with recent devices:\n\n\n# change the udid\n# note, this is run from an Appium repository\n> ./bin/ios-webkit-debug-proxy-launcher.js -c 0e4b2f612b65e98c1d07d22ee08678130d345429:27753 -d\n\n\n\n\nNOTE:\n the proxy requires the \n\"web inspector\"\n to be turned on to\nallow a connection to be established. Turn it on by going to \nsettings >\nsafari > advanced\n.",
            "title": "Ios webkit debug proxy"
        },
        {
            "location": "/en/writing-running-appium/web/ios-webkit-debug-proxy/#ios-webkit-debug-proxy",
            "text": "For accessing web views on real iOS device appium uses  ios_webkit_debug_proxy .",
            "title": "iOS WebKit Debug Proxy"
        },
        {
            "location": "/en/writing-running-appium/web/ios-webkit-debug-proxy/#installation",
            "text": "",
            "title": "Installation"
        },
        {
            "location": "/en/writing-running-appium/web/ios-webkit-debug-proxy/#using-homebrew",
            "text": "To install the latest tagged version of the ios-webkit-debug-proxy using\nHomebrew, run the following commands in the terminal:  ``` center\n # The first command is only required if you don't have brew installed.   ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\nbrew update\nbrew install ios-webkit-debug-proxy\n ```",
            "title": "Using Homebrew"
        },
        {
            "location": "/en/writing-running-appium/web/ios-webkit-debug-proxy/#building-ios-webkit-debug-proxy-from-source",
            "text": "Open the command terminal on your mac. You can find instructions on how to open the\nterminal via your favorite search engine. Once that is open, verify you have Homebew  installed:  $ brew -v  When you're certain you have Homebrew, do the following (the $ indicates the command\nline prompt, do not enter it):  $ cd  ~\n$ sudo apt-get install autoconf automake libusb-dev libusb-1.0-0-dev libplist-dev libplist++-dev usbmuxd libtool libimobiledevice-dev\n$ git clone https://github.com/google/ios-webkit-debug-proxy.git\n$ cd ios-webkit-debug-proxy\n$ ./autogen.sh\n$ make\n$ sudo make install",
            "title": "Building ios-webkit-debug-proxy from source"
        },
        {
            "location": "/en/writing-running-appium/web/ios-webkit-debug-proxy/#running-ios-webkit-debug-proxy",
            "text": "Once installed you can start the proxy with the following command:  # Change the udid to be the udid of the attached device and make sure to set the port to 27753\n# as that is the port the remote-debugger uses. You can learn how to retrieve the UDID from\n# Apple's developer resources.\n> ios_webkit_debug_proxy -c 0e4b2f612b65e98c1d07d22ee08678130d345429:27753 -d  You can also set the desired capability called  startIWDP  to  true  (see the  desired capabilities docs ). This will run the above command as a subprocess from within Appium and will set the udid, so you don't have to run  ios_webkit_debug_proxy  yourself anymore. It monitors the proxy for crashes and relaunches when needed.  // example desired capabilities\n{\n  \"browserName\": \"Safari\",\n  \"platformName\": \"iOS\",\n  \"deviceName\": \"iPhone 7\",\n  \"automationName\": \"XCUITest\",\n  \"startIWDP\": true,\n  \"udid\": \"auto\"\n}  You may also use  ios-webkit-debug-proxy-launcher , a small script included with the Appium codebase, to launch the\nproxy. It monitors the proxy log for errors, and relaunch the proxy\nwhere needed. This is also optional and may help with recent devices:  # change the udid\n# note, this is run from an Appium repository\n> ./bin/ios-webkit-debug-proxy-launcher.js -c 0e4b2f612b65e98c1d07d22ee08678130d345429:27753 -d  NOTE:  the proxy requires the  \"web inspector\"  to be turned on to\nallow a connection to be established. Turn it on by going to  settings >\nsafari > advanced .",
            "title": "Running ios-webkit-debug-proxy"
        },
        {
            "location": "/en/writing-running-appium/web/mobile-web/",
            "text": "Automating mobile web apps\n\n\nIf you're interested in automating your web app in Mobile Safari on iOS or\nChrome on Android, Appium can help you. Basically, you write a normal WebDriver\ntest, and use Appium as the Selenium server with a special set of desired\ncapabilities.\n\n\niOS mobile web automation\n\n\nAppium can automate the Safari browser on real and simulated iOS devices. It is\naccessed by setting the \nbrowserName\n \ndesired capabilty\n\nto \n\"Safari\"\n while leaving the \napp\n capability empty.\n\n\nYou \nmust\n run Safari on the device before attempting to use Appium, in order\nfor the correct preferences to have been set.\n\n\nThen, use desired capabilities like these to run your test in mobile Safari:\n\n\n// javascript\n{\n  platformName: 'iOS'\n  , platformVersion: '11.10'\n  , browserName: 'Safari'\n  , deviceName: 'iPhone 8'\n}\n\n\n\n\n# python\n{\n  'platformName': 'iOS',\n  'platformVersion': '11.0',\n  'browserName': 'Safari',\n  'deviceName': 'iPhone 8'\n}\n\n\n\n\n// php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'iOS',\n            'platformVersion' => '11.0',\n            'browserName' => 'Safari',\n            'deviceName' => 'iPhone 8'\n        )\n    )\n);\n\n\n\n\n// java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"iOS\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"11.0\");\ncapabilities.setCapability(MobileCapabilityType.BROWSER_NAME, \"Safari\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"iPhone 8\");\n\n\n\n\n# TODO: ruby example of these caps\n\n\n\n\nMobile Safari on Simulator\n\n\nFirst of all, make sure developer mode is turned on in your Safari\npreferences so that the remote debugger port is open.\n\n\nMobile Safari on a Real iOS Device\n\n\nFor \niOS 9.3 and below\n (pre-XCUITest), we\nuse the \nSafariLauncher App\n app\nto launch Safari and run tests against mobile Safari. This is because Safari is\nan app that is owned by Apple, and Instruments cannot launch it on real devices.\nOnce Safari has been launched by \nSafariLauncher\n, the Remote Debugger\nautomatically connects using the \nios-webkit-debug-proxy\n.\nWhen working with \nios-webkit-debug-proxy\n, you have to trust the machine before\nyou can can run tests against your iOS device.\n\n\nFor instruction on how to install and run \nios-webkit-debugger-proxy\n see\n\niOS WebKit debug proxy\n\ndocumentation.\n\n\nSetup for an iOS real device\n\n\nBefore you can run your tests against Safari on a real device you will need to:\n\n\n\n\nHave the \nios-webkit-debug-proxy\n installed, running and listening on port\n  27753 (see the \nhybrid docs\n\n  for instructions)\n\n\nTurn on \nweb inspector\n on iOS device (\nsettings > safari > advanced\n)\n\n\nMake sure that \nSafariLauncher\n will work (see the \nSafariLauncher docs\n\n  for instructions)\n\n\n\n\nRunning your test\n\n\nTo configure you test to run against safari simply set the \n\"browserName\"\n to be\n\n\"Safari\"\n.\n\n\n// java\n//setup the web driver and launch the webview app.\nDesiredCapabilities desiredCapabilities = new DesiredCapabilities();\ndesiredCapabilities.setCapability(MobileCapabilityType.BROWSER_NAME, \"Safari\");\nURL url = new URL(\"http://127.0.0.1:4723/wd/hub\");\nAppiumDriver driver = new AppiumDriver(url, desiredCapabilities);\n\n// Navigate to the page and interact with the elements on the guinea-pig page using id.\ndriver.get(\"http://saucelabs.com/test/guinea-pig\");\nWebElement div = driver.findElement(By.id(\"i_am_an_id\"));\nAssert.assertEquals(\"I am a div\", div.getText()); //check the text retrieved matches expected value\ndriver.findElement(By.id(\"comments\")).sendKeys(\"My comment\"); //populate the comments field by id.\n\n//close the app.\ndriver.quit();\n\n\n\n\n# python\n# setup the web driver and launch the webview app.\ncapabilities = { 'browserName': 'Safari' }\ndriver = webdriver.Remote('http://localhost:4723/wd/hub', capabilities)\n\n# Navigate to the page and interact with the elements on the guinea-pig page using id.\ndriver.get('http://saucelabs.com/test/guinea-pig');\ndiv = driver.find_element_by_id('i_am_an_id')\n# check the text retrieved matches expected value\nassertEqual('I am a div', div.text)\n\n# populate the comments field by id\ndriver.find_element_by_id('comments').send_keys('My comment')\n\n# close the driver\ndriver.quit()\n\n\n\n\n// php\nclass ContextTests extends PHPUnit_Extensions_AppiumTestCase\n{\n    public static $browsers = array(\n        array(\n            'desiredCapabilities' => array(\n                'platformName' => 'iOS',\n                'platformVersion' => '7.1',\n                'browserName' => 'Safari',\n                'deviceName' => 'iPhone Simulator'\n            )\n        )\n    );\n\n    public function testThings()\n    {\n        $this->get('http://saucelabs.com/test/guinea-pig');\n\n        $div = $this->byId('i_am_an_id');\n        $this->assertEquals('I am a div', $div->text());\n\n        $this->byId('comments')->sendKeys('My comment');\n    }\n}\n\n\n\n\nAndroid mobile web automation\n\n\nAppium supports automating the Chrome browser both real and emulated Android\ndevices.\n\n\nPre-requisites:\n\n\n\n\nMake sure Chrome is installed on your device or emulator.\n\n\nChromedriver needs to be installed (a default version comes with Appium) and\n  configured for automating the specific version of Chrome available on the\n  device. See \nhere\n for more\n  information and details about compatibility.\n\n\n\n\nThen, use \ndesired capabilties\n like\nthese to run your test in Chrome:\n\n\n// javascript\n{\n  platformName: 'Android'\n  , platformVersion: '4.4'\n  , deviceName: 'Android Emulator'\n  , browserName: 'Chrome'\n};\n\n\n\n\n# python\n{\n  'platformName': 'Android',\n  'platformVersion': '4.4',\n  'deviceName': 'Android Emulator',\n  'browserName': 'Chrome'\n}\n\n\n\n\n// php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'Android',\n            'platformVersion' => '4.4',\n            'browserName' => 'Chrome',\n            'deviceName' => 'Android Emulator'\n        )\n    )\n);\n\n\n\n\n// java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"Android\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"4.4\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"Android Emulator\");\ncapabilities.setCapability(MobileCapabilityType.BROWSER_NAME, \"Chrome\");\n\n\n\n\n# TODO: Ruby exmaple\n\n\n\n\nNote that on 4.4+ devices, you can also use the 'Browser' \nbrowserName\n cap to\nautomate the built-in browser. On all devices you can use the 'Chromium'\n\nbrowserName\n cap to automate a build of Chromium which you have installed.\n\n\nTroubleshooting Chromedriver\n\n\nAs of Chrome version 33, a rooted device is no longer required. If running tests\non older versions of Chrome, devices needed to be rooted as Chromedriver\nrequired write access to the \n/data/local\n directory to set Chrome's command\nline arguments.\n\n\nIf testing on Chrome app prior to version 33, ensure \nadb shell\n has read/write\naccess to \n/data/local\n directory on the device:\n\n\n$ adb shell su -c chmod 777 /data/local\n\n\n\n\nThere is a desired capability \nshowChromedriverLog\n which, when set to \ntrue\n,\nwrites the Chromedriver logs inline with the Appium logs. This can be helpful\nfor debugging.\n\n\nFor more Chromedriver specific documentation see \nChromeDriver documentation\n.",
            "title": "Mobile web"
        },
        {
            "location": "/en/writing-running-appium/web/mobile-web/#automating-mobile-web-apps",
            "text": "If you're interested in automating your web app in Mobile Safari on iOS or\nChrome on Android, Appium can help you. Basically, you write a normal WebDriver\ntest, and use Appium as the Selenium server with a special set of desired\ncapabilities.",
            "title": "Automating mobile web apps"
        },
        {
            "location": "/en/writing-running-appium/web/mobile-web/#ios-mobile-web-automation",
            "text": "Appium can automate the Safari browser on real and simulated iOS devices. It is\naccessed by setting the  browserName   desired capabilty \nto  \"Safari\"  while leaving the  app  capability empty.  You  must  run Safari on the device before attempting to use Appium, in order\nfor the correct preferences to have been set.  Then, use desired capabilities like these to run your test in mobile Safari:  // javascript\n{\n  platformName: 'iOS'\n  , platformVersion: '11.10'\n  , browserName: 'Safari'\n  , deviceName: 'iPhone 8'\n}  # python\n{\n  'platformName': 'iOS',\n  'platformVersion': '11.0',\n  'browserName': 'Safari',\n  'deviceName': 'iPhone 8'\n}  // php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'iOS',\n            'platformVersion' => '11.0',\n            'browserName' => 'Safari',\n            'deviceName' => 'iPhone 8'\n        )\n    )\n);  // java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"iOS\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"11.0\");\ncapabilities.setCapability(MobileCapabilityType.BROWSER_NAME, \"Safari\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"iPhone 8\");  # TODO: ruby example of these caps",
            "title": "iOS mobile web automation"
        },
        {
            "location": "/en/writing-running-appium/web/mobile-web/#mobile-safari-on-simulator",
            "text": "First of all, make sure developer mode is turned on in your Safari\npreferences so that the remote debugger port is open.",
            "title": "Mobile Safari on Simulator"
        },
        {
            "location": "/en/writing-running-appium/web/mobile-web/#mobile-safari-on-a-real-ios-device",
            "text": "For  iOS 9.3 and below  (pre-XCUITest), we\nuse the  SafariLauncher App  app\nto launch Safari and run tests against mobile Safari. This is because Safari is\nan app that is owned by Apple, and Instruments cannot launch it on real devices.\nOnce Safari has been launched by  SafariLauncher , the Remote Debugger\nautomatically connects using the  ios-webkit-debug-proxy .\nWhen working with  ios-webkit-debug-proxy , you have to trust the machine before\nyou can can run tests against your iOS device.  For instruction on how to install and run  ios-webkit-debugger-proxy  see iOS WebKit debug proxy \ndocumentation.",
            "title": "Mobile Safari on a Real iOS Device"
        },
        {
            "location": "/en/writing-running-appium/web/mobile-web/#setup-for-an-ios-real-device",
            "text": "Before you can run your tests against Safari on a real device you will need to:   Have the  ios-webkit-debug-proxy  installed, running and listening on port\n  27753 (see the  hybrid docs \n  for instructions)  Turn on  web inspector  on iOS device ( settings > safari > advanced )  Make sure that  SafariLauncher  will work (see the  SafariLauncher docs \n  for instructions)",
            "title": "Setup for an iOS real device"
        },
        {
            "location": "/en/writing-running-appium/web/mobile-web/#running-your-test",
            "text": "To configure you test to run against safari simply set the  \"browserName\"  to be \"Safari\" .  // java\n//setup the web driver and launch the webview app.\nDesiredCapabilities desiredCapabilities = new DesiredCapabilities();\ndesiredCapabilities.setCapability(MobileCapabilityType.BROWSER_NAME, \"Safari\");\nURL url = new URL(\"http://127.0.0.1:4723/wd/hub\");\nAppiumDriver driver = new AppiumDriver(url, desiredCapabilities);\n\n// Navigate to the page and interact with the elements on the guinea-pig page using id.\ndriver.get(\"http://saucelabs.com/test/guinea-pig\");\nWebElement div = driver.findElement(By.id(\"i_am_an_id\"));\nAssert.assertEquals(\"I am a div\", div.getText()); //check the text retrieved matches expected value\ndriver.findElement(By.id(\"comments\")).sendKeys(\"My comment\"); //populate the comments field by id.\n\n//close the app.\ndriver.quit();  # python\n# setup the web driver and launch the webview app.\ncapabilities = { 'browserName': 'Safari' }\ndriver = webdriver.Remote('http://localhost:4723/wd/hub', capabilities)\n\n# Navigate to the page and interact with the elements on the guinea-pig page using id.\ndriver.get('http://saucelabs.com/test/guinea-pig');\ndiv = driver.find_element_by_id('i_am_an_id')\n# check the text retrieved matches expected value\nassertEqual('I am a div', div.text)\n\n# populate the comments field by id\ndriver.find_element_by_id('comments').send_keys('My comment')\n\n# close the driver\ndriver.quit()  // php\nclass ContextTests extends PHPUnit_Extensions_AppiumTestCase\n{\n    public static $browsers = array(\n        array(\n            'desiredCapabilities' => array(\n                'platformName' => 'iOS',\n                'platformVersion' => '7.1',\n                'browserName' => 'Safari',\n                'deviceName' => 'iPhone Simulator'\n            )\n        )\n    );\n\n    public function testThings()\n    {\n        $this->get('http://saucelabs.com/test/guinea-pig');\n\n        $div = $this->byId('i_am_an_id');\n        $this->assertEquals('I am a div', $div->text());\n\n        $this->byId('comments')->sendKeys('My comment');\n    }\n}",
            "title": "Running your test"
        },
        {
            "location": "/en/writing-running-appium/web/mobile-web/#android-mobile-web-automation",
            "text": "Appium supports automating the Chrome browser both real and emulated Android\ndevices.  Pre-requisites:   Make sure Chrome is installed on your device or emulator.  Chromedriver needs to be installed (a default version comes with Appium) and\n  configured for automating the specific version of Chrome available on the\n  device. See  here  for more\n  information and details about compatibility.   Then, use  desired capabilties  like\nthese to run your test in Chrome:  // javascript\n{\n  platformName: 'Android'\n  , platformVersion: '4.4'\n  , deviceName: 'Android Emulator'\n  , browserName: 'Chrome'\n};  # python\n{\n  'platformName': 'Android',\n  'platformVersion': '4.4',\n  'deviceName': 'Android Emulator',\n  'browserName': 'Chrome'\n}  // php\npublic static $browsers = array(\n    array(\n        'desiredCapabilities' => array(\n            'platformName' => 'Android',\n            'platformVersion' => '4.4',\n            'browserName' => 'Chrome',\n            'deviceName' => 'Android Emulator'\n        )\n    )\n);  // java\nDesiredCapabilities capabilities = new DesiredCapabilities();\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_NAME, \"Android\");\ncapabilities.setCapability(MobileCapabilityType.PLATFORM_VERSION, \"4.4\");\ncapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, \"Android Emulator\");\ncapabilities.setCapability(MobileCapabilityType.BROWSER_NAME, \"Chrome\");  # TODO: Ruby exmaple  Note that on 4.4+ devices, you can also use the 'Browser'  browserName  cap to\nautomate the built-in browser. On all devices you can use the 'Chromium' browserName  cap to automate a build of Chromium which you have installed.",
            "title": "Android mobile web automation"
        },
        {
            "location": "/en/writing-running-appium/web/mobile-web/#troubleshooting-chromedriver",
            "text": "As of Chrome version 33, a rooted device is no longer required. If running tests\non older versions of Chrome, devices needed to be rooted as Chromedriver\nrequired write access to the  /data/local  directory to set Chrome's command\nline arguments.  If testing on Chrome app prior to version 33, ensure  adb shell  has read/write\naccess to  /data/local  directory on the device:  $ adb shell su -c chmod 777 /data/local  There is a desired capability  showChromedriverLog  which, when set to  true ,\nwrites the Chromedriver logs inline with the Appium logs. This can be helpful\nfor debugging.  For more Chromedriver specific documentation see  ChromeDriver documentation .",
            "title": "Troubleshooting Chromedriver"
        }
    ]
}